
application.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001a66  2**0
                  ALLOC, LOAD, DATA
  1 .text         000001c8  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800100  00800100  00001a66  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00001a66  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000148  00000000  00000000  00001ac1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001e13  00000000  00000000  00001c09  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b35  00000000  00000000  00003a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b3a  00000000  00000000  00004551  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003a0  00000000  00000000  0000508c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000032d  00000000  00000000  0000542c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ad3  00000000  00000000  00005759  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e8  00000000  00000000  0000622c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00001988  00001988  00001a5c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006314  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.encoder_init 0000002e  000017b8  000017b8  0000188c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.encoder_read_tick 0000001e  000018a4  000018a4  00001978  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.encoder_get_accumulated_ticks_left 0000003c  000015fc  000015fc  000016d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.encoder_get_accumulated_ticks_right 0000003c  00001638  00001638  0000170c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_1 00000076  00001372  00001372  00001446  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_2 00000076  000013e8  000013e8  000014bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.encoder_ticks_right 00000002  00800110  00800110  00001a66  2**0
                  ALLOC
 21 .bss.encoder_ticks_left 00000002  00800112  00800112  00001a66  2**0
                  ALLOC
 22 .text.motor_init 0000001e  000018c2  000018c2  00001996  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.set_left_motor_dir 00000020  00001884  00001884  00001958  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.abs     00000030  00001788  00001788  0000185c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.motor_left 00000042  000015ba  000015ba  0000168e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.pwm_init 0000001a  000018e0  000018e0  000019b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.pwm_set_duty_cycle_left 0000002c  00001814  00001814  000018e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.speed_estimator_init 00000072  0000145e  0000145e  00001532  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .progmemx.data 0000002a  000001c8  000001c8  0000029c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 30 .text.speed_estimator_left_rad_per_s 000000e8  00000d48  00000d48  00000e1c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__vector_11 0000007c  00001204  00001204  000012d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .bss.prev_ticks_left 00000002  00800114  00800114  00001a66  2**0
                  ALLOC
 33 .bss.prev_ticks_right 00000002  00800116  00800116  00001a66  2**0
                  ALLOC
 34 .bss.ticks_left 00000002  00800118  00800118  00001a66  2**0
                  ALLOC
 35 .bss.ticks_right 00000002  0080011a  0080011a  00001a66  2**0
                  ALLOC
 36 .text.usart_tx 0000000e  000018fa  000018fa  000019ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.usart_rx 0000000e  00001908  00001908  000019dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.usart_init 00000022  00001840  00001840  00001914  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .progmemx.data 00000017  000001f2  000001f2  000002c6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 40 .text.main    00000038  00001674  00001674  00001748  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.avrlibc.fplib 0000000e  00001916  00001916  000019ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.avrlibc.fplib 000000ce  00000fe2  00000fe2  000010b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.avrlibc.fplib 0000000a  00001968  00001968  00001a3c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.avrlibc.fplib 00000008  00001972  00001972  00001a46  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.avrlibc.fplib 000000de  00000e30  00000e30  00000f04  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.avrlibc.fplib 0000005e  000014d0  000014d0  000015a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.avrlibc.fplib 0000007a  00001280  00001280  00001354  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.avrlibc.fplib 00000048  0000152e  0000152e  00001602  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.avrlibc.fplib 0000000c  0000195c  0000195c  00001a30  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.avrlibc.fplib 00000006  00001982  00001982  00001a56  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.avrlibc.fplib 0000000e  00001924  00001924  000019f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.avrlibc.fplib 0000000e  00001932  00001932  00001a06  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.avrlibc.fplib 00000022  00001862  00001862  00001936  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.avrlibc.fplib 00000044  00001576  00001576  0000164a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.avrlibc.fplib 0000000e  00001940  00001940  00001a14  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.avrlibc.fplib 00000008  0000197a  0000197a  00001a4e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.avrlibc.fplib 000000d4  00000f0e  00000f0e  00000fe2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .progmemx.data 00000008  00000209  00000209  000002dd  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 59 .text.avrlibc 00000744  00000212  00000212  000002e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.libgcc.prologue 00000038  000016ac  000016ac  00001780  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.libgcc.prologue 00000036  0000171c  0000171c  000017f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.avrlibc 000001b0  00000b98  00000b98  00000c6c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.avrlibc 00000036  00001752  00001752  00001826  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.avrlibc 00000098  0000116c  0000116c  00001240  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.avrlibc 00000078  000012fa  000012fa  000013ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.avrlibc 0000002e  000017e6  000017e6  000018ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.avrlibc 000000bc  000010b0  000010b0  00001184  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.avrlibc 00000038  000016e4  000016e4  000017b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .data         00000006  0080010a  0000198c  00001a60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 70 .text.avrlibc 00000242  00000956  00000956  00000a2a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.avrlibc 0000000e  0000194e  0000194e  00001a22  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 ba 00 	jmp	0x174	; 0x174 <__ctors_end>
   4:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <__vector_1>
   8:	0c 94 f4 09 	jmp	0x13e8	; 0x13e8 <__vector_2>
   c:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  10:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  14:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  18:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  1c:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  20:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  24:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  28:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  2c:	0c 94 02 09 	jmp	0x1204	; 0x1204 <__vector_11>
  30:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  34:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  38:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  3c:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  40:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  44:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  48:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  4c:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  50:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  54:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  58:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  5c:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  60:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>
  64:	0c 94 c4 0c 	jmp	0x1988	; 0x1988 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 0a       	sbc	r0, r17
  6c:	80 01       	movw	r16, r0
  6e:	0a 01       	movw	r0, r20
  70:	10 00       	.word	0x0010	; ????
  72:	19 8c       	ldd	r1, Y+25	; 0x19
  74:	01 10       	cpse	r0, r1
  76:	01 1c       	adc	r0, r1
  78:	80 00       	.word	0x0080	; ????

0000007a <__trampolines_end>:
  7a:	00 40       	sbci	r16, 0x00	; 0
  7c:	7a 10       	cpse	r7, r10
  7e:	f3 5a       	subi	r31, 0xA3	; 163
  80:	00 a0       	ldd	r0, Z+32	; 0x20
  82:	72 4e       	sbci	r23, 0xE2	; 226
  84:	18 09       	sbc	r17, r8
  86:	00 10       	cpse	r0, r0
  88:	a5 d4       	rcall	.+2378   	; 0x9d4 <malloc+0x7e>
  8a:	e8 00       	.word	0x00e8	; ????
  8c:	00 e8       	ldi	r16, 0x80	; 128
  8e:	76 48       	sbci	r23, 0x86	; 134
  90:	17 00       	.word	0x0017	; ????
  92:	00 e4       	ldi	r16, 0x40	; 64
  94:	0b 54       	subi	r16, 0x4B	; 75
  96:	02 00       	.word	0x0002	; ????
  98:	00 ca       	rjmp	.-3072   	; 0xfffff49a <__eeprom_end+0xff7ef49a>
  9a:	9a 3b       	cpi	r25, 0xBA	; 186
  9c:	00 00       	nop
  9e:	00 e1       	ldi	r16, 0x10	; 16
  a0:	f5 05       	cpc	r31, r5
  a2:	00 00       	nop
  a4:	80 96       	adiw	r24, 0x20	; 32
  a6:	98 00       	.word	0x0098	; ????
  a8:	00 00       	nop
  aa:	40 42       	sbci	r20, 0x20	; 32
  ac:	0f 00       	.word	0x000f	; ????
  ae:	00 00       	nop
  b0:	a0 86       	std	Z+8, r10	; 0x08
  b2:	01 00       	.word	0x0001	; ????
  b4:	00 00       	nop
  b6:	10 27       	eor	r17, r16
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	e8 03       	fmulsu	r22, r16
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	64 00       	.word	0x0064	; ????
  c4:	00 00       	nop
  c6:	00 00       	nop
  c8:	0a 00       	.word	0x000a	; ????
  ca:	00 00       	nop
  cc:	00 00       	nop
  ce:	01 00       	.word	0x0001	; ????
  d0:	00 00       	nop
  d2:	00 00       	nop
  d4:	2c 76       	andi	r18, 0x6C	; 108
  d6:	d8 88       	ldd	r13, Y+16	; 0x10
  d8:	dc 67       	ori	r29, 0x7C	; 124
  da:	4f 08       	sbc	r4, r15
  dc:	23 df       	rcall	.-442    	; 0xffffff24 <__eeprom_end+0xff7eff24>
  de:	c1 df       	rcall	.-126    	; 0x62 <__SREG__+0x23>
  e0:	ae 59       	subi	r26, 0x9E	; 158
  e2:	e1 b1       	in	r30, 0x01	; 1
  e4:	b7 96       	adiw	r30, 0x27	; 39
  e6:	e5 e3       	ldi	r30, 0x35	; 53
  e8:	e4 53       	subi	r30, 0x34	; 52
  ea:	c6 3a       	cpi	r28, 0xA6	; 166
  ec:	e6 51       	subi	r30, 0x16	; 22
  ee:	99 76       	andi	r25, 0x69	; 105
  f0:	96 e8       	ldi	r25, 0x86	; 134
  f2:	e6 c2       	rjmp	.+1484   	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
  f4:	84 26       	eor	r8, r20
  f6:	eb 89       	ldd	r30, Y+19	; 0x13
  f8:	8c 9b       	sbis	0x11, 4	; 17
  fa:	62 ed       	ldi	r22, 0xD2	; 210
  fc:	40 7c       	andi	r20, 0xC0	; 192
  fe:	6f fc       	.word	0xfc6f	; ????
 100:	ef bc       	out	0x2f, r14	; 47
 102:	9c 9f       	mul	r25, r28
 104:	40 f2       	brcs	.-112    	; 0x96 <__trampolines_end+0x1c>
 106:	ba a5       	ldd	r27, Y+42	; 0x2a
 108:	6f a5       	ldd	r22, Y+47	; 0x2f
 10a:	f4 90       	lpm	r15, Z
 10c:	05 5a       	subi	r16, 0xA5	; 165
 10e:	2a f7       	brpl	.-54     	; 0xda <__trampolines_end+0x60>
 110:	5c 93       	st	X, r21
 112:	6b 6c       	ori	r22, 0xCB	; 203
 114:	f9 67       	ori	r31, 0x79	; 121
 116:	6d c1       	rjmp	.+730    	; 0x3f2 <vfprintf+0x1e0>
 118:	1b fc       	.word	0xfc1b	; ????
 11a:	e0 e4       	ldi	r30, 0x40	; 64
 11c:	0d 47       	sbci	r16, 0x7D	; 125
 11e:	fe f5       	brtc	.+126    	; 0x19e <__do_copy_data+0x1e>
 120:	20 e6       	ldi	r18, 0x60	; 96
 122:	b5 00       	.word	0x00b5	; ????
 124:	d0 ed       	ldi	r29, 0xD0	; 208
 126:	90 2e       	mov	r9, r16
 128:	03 00       	.word	0x0003	; ????
 12a:	94 35       	cpi	r25, 0x54	; 84
 12c:	77 05       	cpc	r23, r7
 12e:	00 80       	ld	r0, Z
 130:	84 1e       	adc	r8, r20
 132:	08 00       	.word	0x0008	; ????
 134:	00 20       	and	r0, r0
 136:	4e 0a       	sbc	r4, r30
 138:	00 00       	nop
 13a:	00 c8       	rjmp	.-4096   	; 0xfffff13c <__eeprom_end+0xff7ef13c>
 13c:	0c 33       	cpi	r16, 0x3C	; 60
 13e:	33 33       	cpi	r19, 0x33	; 51
 140:	33 0f       	add	r19, r19
 142:	98 6e       	ori	r25, 0xE8	; 232
 144:	12 83       	std	Z+2, r17	; 0x02
 146:	11 41       	sbci	r17, 0x11	; 17
 148:	ef 8d       	ldd	r30, Y+31	; 0x1f
 14a:	21 14       	cp	r2, r1
 14c:	89 3b       	cpi	r24, 0xB9	; 185
 14e:	e6 55       	subi	r30, 0x56	; 86
 150:	16 cf       	rjmp	.-468    	; 0xffffff7e <__eeprom_end+0xff7eff7e>
 152:	fe e6       	ldi	r31, 0x6E	; 110
 154:	db 18       	sub	r13, r11
 156:	d1 84       	ldd	r13, Z+9	; 0x09
 158:	4b 38       	cpi	r20, 0x8B	; 139
 15a:	1b f7       	brvc	.-58     	; 0x122 <__trampolines_end+0xa8>
 15c:	7c 1d       	adc	r23, r12
 15e:	90 1d       	adc	r25, r0
 160:	a4 bb       	out	0x14, r26	; 20
 162:	e4 24       	eor	r14, r4
 164:	20 32       	cpi	r18, 0x20	; 32
 166:	84 72       	andi	r24, 0x24	; 36
 168:	5e 22       	and	r5, r30
 16a:	81 00       	.word	0x0081	; ????
 16c:	c9 f1       	breq	.+114    	; 0x1e0 <_etext+0x18>
 16e:	24 ec       	ldi	r18, 0xC4	; 196
 170:	a1 e5       	ldi	r26, 0x51	; 81
 172:	3d 27       	eor	r19, r29

00000174 <__ctors_end>:
 174:	11 24       	eor	r1, r1
 176:	1f be       	out	0x3f, r1	; 63
 178:	cf ef       	ldi	r28, 0xFF	; 255
 17a:	d8 e0       	ldi	r29, 0x08	; 8
 17c:	de bf       	out	0x3e, r29	; 62
 17e:	cd bf       	out	0x3d, r28	; 61

00000180 <__do_copy_data>:
 180:	e8 e6       	ldi	r30, 0x68	; 104
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	40 e0       	ldi	r20, 0x00	; 0
 186:	17 c0       	rjmp	.+46     	; 0x1b6 <__do_clear_bss+0x8>
 188:	b5 91       	lpm	r27, Z+
 18a:	a5 91       	lpm	r26, Z+
 18c:	35 91       	lpm	r19, Z+
 18e:	25 91       	lpm	r18, Z+
 190:	05 91       	lpm	r16, Z+
 192:	07 fd       	sbrc	r16, 7
 194:	0c c0       	rjmp	.+24     	; 0x1ae <__do_clear_bss>
 196:	95 91       	lpm	r25, Z+
 198:	85 91       	lpm	r24, Z+
 19a:	ef 01       	movw	r28, r30
 19c:	f9 2f       	mov	r31, r25
 19e:	e8 2f       	mov	r30, r24
 1a0:	05 90       	lpm	r0, Z+
 1a2:	0d 92       	st	X+, r0
 1a4:	a2 17       	cp	r26, r18
 1a6:	b3 07       	cpc	r27, r19
 1a8:	d9 f7       	brne	.-10     	; 0x1a0 <__do_copy_data+0x20>
 1aa:	fe 01       	movw	r30, r28
 1ac:	04 c0       	rjmp	.+8      	; 0x1b6 <__do_clear_bss+0x8>

000001ae <__do_clear_bss>:
 1ae:	1d 92       	st	X+, r1
 1b0:	a2 17       	cp	r26, r18
 1b2:	b3 07       	cpc	r27, r19
 1b4:	e1 f7       	brne	.-8      	; 0x1ae <__do_clear_bss>
 1b6:	e9 37       	cpi	r30, 0x79	; 121
 1b8:	f4 07       	cpc	r31, r20
 1ba:	31 f7       	brne	.-52     	; 0x188 <__do_copy_data+0x8>
 1bc:	0e 94 3a 0b 	call	0x1674	; 0x1674 <main>
 1c0:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <_exit>

000001c4 <_exit>:
 1c4:	f8 94       	cli

000001c6 <__stop_program>:
 1c6:	ff cf       	rjmp	.-2      	; 0x1c6 <__stop_program>

Disassembly of section .text:

00001988 <__bad_interrupt>:
    1988:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.encoder_init:

000017b8 <encoder_init>:
static volatile int encoder_ticks_left = 0;
static volatile int encoder_ticks_right = 0;

void encoder_init(void) {
	
	cli();
    17b8:	f8 94       	cli
	
	// Set digital inputs with internal pull-up (unsure if internal pull-up should be used)
	DDRD &= ~(1 << ENCA1);
    17ba:	8a b1       	in	r24, 0x0a	; 10
    17bc:	8b 7f       	andi	r24, 0xFB	; 251
    17be:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA1);
    17c0:	8b b1       	in	r24, 0x0b	; 11
    17c2:	84 60       	ori	r24, 0x04	; 4
    17c4:	8b b9       	out	0x0b, r24	; 11
	
	DDRD &= ~(1 << ENCA2);
    17c6:	8a b1       	in	r24, 0x0a	; 10
    17c8:	87 7f       	andi	r24, 0xF7	; 247
    17ca:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA2);
    17cc:	8b b1       	in	r24, 0x0b	; 11
    17ce:	88 60       	ori	r24, 0x08	; 8
    17d0:	8b b9       	out	0x0b, r24	; 11
	
	// Rising edge of INT0 and INT1 will generate an interrupt request
	EICRA |= (1 << ISC00) | (1 << ISC01) | (1 << ISC10) | (1 << ISC11);
    17d2:	e9 e6       	ldi	r30, 0x69	; 105
    17d4:	f0 e0       	ldi	r31, 0x00	; 0
    17d6:	80 81       	ld	r24, Z
    17d8:	8f 60       	ori	r24, 0x0F	; 15
    17da:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0) | (1 << INT1);
    17dc:	8d b3       	in	r24, 0x1d	; 29
    17de:	83 60       	ori	r24, 0x03	; 3
    17e0:	8d bb       	out	0x1d, r24	; 29
	
	// Enable global interrupts
	sei();
    17e2:	78 94       	sei
    17e4:	08 95       	ret

Disassembly of section .text.encoder_read_tick:

000018a4 <encoder_read_tick>:
	
	
}

int encoder_read_tick(int encoder_pin) {
	if (PIND & (1<<encoder_pin)) {
    18a4:	29 b1       	in	r18, 0x09	; 9
    18a6:	30 e0       	ldi	r19, 0x00	; 0
    18a8:	02 c0       	rjmp	.+4      	; 0x18ae <encoder_read_tick+0xa>
    18aa:	35 95       	asr	r19
    18ac:	27 95       	ror	r18
    18ae:	8a 95       	dec	r24
    18b0:	e2 f7       	brpl	.-8      	; 0x18aa <encoder_read_tick+0x6>
    18b2:	c9 01       	movw	r24, r18
    18b4:	81 70       	andi	r24, 0x01	; 1
    18b6:	99 27       	eor	r25, r25
    18b8:	20 ff       	sbrs	r18, 0
    18ba:	02 c0       	rjmp	.+4      	; 0x18c0 <encoder_read_tick+0x1c>
		return 1;
    18bc:	81 e0       	ldi	r24, 0x01	; 1
    18be:	90 e0       	ldi	r25, 0x00	; 0
	}
	return 0;
}
    18c0:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_left:

000015fc <encoder_get_accumulated_ticks_left>:

int encoder_get_accumulated_ticks_left(void) {
    15fc:	cf 93       	push	r28
    15fe:	df 93       	push	r29
    1600:	1f 92       	push	r1
    1602:	cd b7       	in	r28, 0x3d	; 61
    1604:	de b7       	in	r29, 0x3e	; 62
	int ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1606:	8f b7       	in	r24, 0x3f	; 63
    1608:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    160a:	f8 94       	cli
    160c:	91 e0       	ldi	r25, 0x01	; 1
    160e:	05 c0       	rjmp	.+10     	; 0x161a <encoder_get_accumulated_ticks_left+0x1e>
		ticks = encoder_ticks_left;
    1610:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <encoder_ticks_left>
    1614:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <encoder_ticks_left+0x1>
	return 0;
}

int encoder_get_accumulated_ticks_left(void) {
	int ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	91 11       	cpse	r25, r1
    161c:	f9 cf       	rjmp	.-14     	; 0x1610 <encoder_get_accumulated_ticks_left+0x14>
    161e:	ce 01       	movw	r24, r28
    1620:	01 96       	adiw	r24, 0x01	; 1
    1622:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1624:	fc 01       	movw	r30, r24
    1626:	84 91       	lpm	r24, Z
    1628:	a7 fd       	sbrc	r26, 7
    162a:	80 81       	ld	r24, Z
    162c:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_left;
	}
	return ticks;
}
    162e:	c9 01       	movw	r24, r18
    1630:	0f 90       	pop	r0
    1632:	df 91       	pop	r29
    1634:	cf 91       	pop	r28
    1636:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_right:

00001638 <encoder_get_accumulated_ticks_right>:

int encoder_get_accumulated_ticks_right(void) {
    1638:	cf 93       	push	r28
    163a:	df 93       	push	r29
    163c:	1f 92       	push	r1
    163e:	cd b7       	in	r28, 0x3d	; 61
    1640:	de b7       	in	r29, 0x3e	; 62
	int ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1642:	8f b7       	in	r24, 0x3f	; 63
    1644:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1646:	f8 94       	cli
    1648:	91 e0       	ldi	r25, 0x01	; 1
    164a:	05 c0       	rjmp	.+10     	; 0x1656 <encoder_get_accumulated_ticks_right+0x1e>
		ticks = encoder_ticks_right;
    164c:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <encoder_ticks_right>
    1650:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <encoder_ticks_right+0x1>
	return ticks;
}

int encoder_get_accumulated_ticks_right(void) {
	int ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	91 11       	cpse	r25, r1
    1658:	f9 cf       	rjmp	.-14     	; 0x164c <encoder_get_accumulated_ticks_right+0x14>
    165a:	ce 01       	movw	r24, r28
    165c:	01 96       	adiw	r24, 0x01	; 1
    165e:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1660:	fc 01       	movw	r30, r24
    1662:	84 91       	lpm	r24, Z
    1664:	a7 fd       	sbrc	r26, 7
    1666:	80 81       	ld	r24, Z
    1668:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_right;
	}
	return ticks;
}
    166a:	c9 01       	movw	r24, r18
    166c:	0f 90       	pop	r0
    166e:	df 91       	pop	r29
    1670:	cf 91       	pop	r28
    1672:	08 95       	ret

Disassembly of section .text.__vector_1:

00001372 <__vector_1>:



// Interrupt service routine for INT0
// Triggered on rising edge of channel A encoder signal for left wheel
ISR(INT0_vect) {
    1372:	1f 92       	push	r1
    1374:	0f 92       	push	r0
    1376:	0f b6       	in	r0, 0x3f	; 63
    1378:	0f 92       	push	r0
    137a:	11 24       	eor	r1, r1
    137c:	2f 93       	push	r18
    137e:	3f 93       	push	r19
    1380:	4f 93       	push	r20
    1382:	5f 93       	push	r21
    1384:	6f 93       	push	r22
    1386:	7f 93       	push	r23
    1388:	8f 93       	push	r24
    138a:	9f 93       	push	r25
    138c:	af 93       	push	r26
    138e:	bf 93       	push	r27
    1390:	ef 93       	push	r30
    1392:	ff 93       	push	r31
	int encb1 = encoder_read_tick(ENCB1);
    1394:	84 e0       	ldi	r24, 0x04	; 4
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <encoder_read_tick>
	if (encb1) {
    139c:	89 2b       	or	r24, r25
    139e:	51 f0       	breq	.+20     	; 0x13b4 <__vector_1+0x42>
		encoder_ticks_left++;
    13a0:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_left>
    13a4:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_left+0x1>
    13a8:	01 96       	adiw	r24, 0x01	; 1
    13aa:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <encoder_ticks_left+0x1>
    13ae:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <encoder_ticks_left>
    13b2:	09 c0       	rjmp	.+18     	; 0x13c6 <__vector_1+0x54>
	} else {
		encoder_ticks_left--;
    13b4:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_left>
    13b8:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_left+0x1>
    13bc:	01 97       	sbiw	r24, 0x01	; 1
    13be:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <encoder_ticks_left+0x1>
    13c2:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <encoder_ticks_left>
	}
}
    13c6:	ff 91       	pop	r31
    13c8:	ef 91       	pop	r30
    13ca:	bf 91       	pop	r27
    13cc:	af 91       	pop	r26
    13ce:	9f 91       	pop	r25
    13d0:	8f 91       	pop	r24
    13d2:	7f 91       	pop	r23
    13d4:	6f 91       	pop	r22
    13d6:	5f 91       	pop	r21
    13d8:	4f 91       	pop	r20
    13da:	3f 91       	pop	r19
    13dc:	2f 91       	pop	r18
    13de:	0f 90       	pop	r0
    13e0:	0f be       	out	0x3f, r0	; 63
    13e2:	0f 90       	pop	r0
    13e4:	1f 90       	pop	r1
    13e6:	18 95       	reti

Disassembly of section .text.__vector_2:

000013e8 <__vector_2>:

// Interrupt service routine for INT1
// Triggered on rising edge of channel A encoder signal for right wheel
ISR(INT1_vect) {
    13e8:	1f 92       	push	r1
    13ea:	0f 92       	push	r0
    13ec:	0f b6       	in	r0, 0x3f	; 63
    13ee:	0f 92       	push	r0
    13f0:	11 24       	eor	r1, r1
    13f2:	2f 93       	push	r18
    13f4:	3f 93       	push	r19
    13f6:	4f 93       	push	r20
    13f8:	5f 93       	push	r21
    13fa:	6f 93       	push	r22
    13fc:	7f 93       	push	r23
    13fe:	8f 93       	push	r24
    1400:	9f 93       	push	r25
    1402:	af 93       	push	r26
    1404:	bf 93       	push	r27
    1406:	ef 93       	push	r30
    1408:	ff 93       	push	r31
	int encb2 = encoder_read_tick(ENCB2);
    140a:	87 e0       	ldi	r24, 0x07	; 7
    140c:	90 e0       	ldi	r25, 0x00	; 0
    140e:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <encoder_read_tick>
	if (encb2) {
    1412:	89 2b       	or	r24, r25
    1414:	51 f0       	breq	.+20     	; 0x142a <__vector_2+0x42>
		encoder_ticks_right++;
    1416:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <encoder_ticks_right>
    141a:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <encoder_ticks_right+0x1>
    141e:	01 96       	adiw	r24, 0x01	; 1
    1420:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <encoder_ticks_right+0x1>
    1424:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <encoder_ticks_right>
    1428:	09 c0       	rjmp	.+18     	; 0x143c <__vector_2+0x54>
		} 
	else {
		encoder_ticks_right--;
    142a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <encoder_ticks_right>
    142e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <encoder_ticks_right+0x1>
    1432:	01 97       	sbiw	r24, 0x01	; 1
    1434:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <encoder_ticks_right+0x1>
    1438:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <encoder_ticks_right>
	}
    143c:	ff 91       	pop	r31
    143e:	ef 91       	pop	r30
    1440:	bf 91       	pop	r27
    1442:	af 91       	pop	r26
    1444:	9f 91       	pop	r25
    1446:	8f 91       	pop	r24
    1448:	7f 91       	pop	r23
    144a:	6f 91       	pop	r22
    144c:	5f 91       	pop	r21
    144e:	4f 91       	pop	r20
    1450:	3f 91       	pop	r19
    1452:	2f 91       	pop	r18
    1454:	0f 90       	pop	r0
    1456:	0f be       	out	0x3f, r0	; 63
    1458:	0f 90       	pop	r0
    145a:	1f 90       	pop	r1
    145c:	18 95       	reti

Disassembly of section .text.motor_init:

000018c2 <motor_init>:


void motor_init(void) {
	
	// For motor control
	pwm_init();
    18c2:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <pwm_init>
	
	// Set direction control pins to L298N as outputs
	DDRC |= (1 << OUT1);
    18c6:	87 b1       	in	r24, 0x07	; 7
    18c8:	81 60       	ori	r24, 0x01	; 1
    18ca:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT2);
    18cc:	87 b1       	in	r24, 0x07	; 7
    18ce:	82 60       	ori	r24, 0x02	; 2
    18d0:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT3);
    18d2:	87 b1       	in	r24, 0x07	; 7
    18d4:	84 60       	ori	r24, 0x04	; 4
    18d6:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT4);
    18d8:	87 b1       	in	r24, 0x07	; 7
    18da:	80 61       	ori	r24, 0x10	; 16
    18dc:	87 b9       	out	0x07, r24	; 7
    18de:	08 95       	ret

Disassembly of section .text.set_left_motor_dir:

00001884 <set_left_motor_dir>:
}

void set_left_motor_dir(int dir) {
	if (dir == FORWARD) {
    1884:	01 97       	sbiw	r24, 0x01	; 1
    1886:	39 f4       	brne	.+14     	; 0x1896 <set_left_motor_dir+0x12>
		PORTC |= (1 << OUT1);
    1888:	88 b1       	in	r24, 0x08	; 8
    188a:	81 60       	ori	r24, 0x01	; 1
    188c:	88 b9       	out	0x08, r24	; 8
		PORTC &= ~(1 << OUT2);
    188e:	88 b1       	in	r24, 0x08	; 8
    1890:	8d 7f       	andi	r24, 0xFD	; 253
    1892:	88 b9       	out	0x08, r24	; 8
    1894:	08 95       	ret
	} else {
		PORTC &= ~(1 << OUT1);
    1896:	88 b1       	in	r24, 0x08	; 8
    1898:	8e 7f       	andi	r24, 0xFE	; 254
    189a:	88 b9       	out	0x08, r24	; 8
		PORTC |= (1 << OUT2);
    189c:	88 b1       	in	r24, 0x08	; 8
    189e:	82 60       	ori	r24, 0x02	; 2
    18a0:	88 b9       	out	0x08, r24	; 8
    18a2:	08 95       	ret

Disassembly of section .text.abs:

00001788 <abs>:
		PORTC |= (1 << OUT4);
	}
}


float abs(float val) {
    1788:	cf 92       	push	r12
    178a:	df 92       	push	r13
    178c:	ef 92       	push	r14
    178e:	ff 92       	push	r15
    1790:	6b 01       	movw	r12, r22
    1792:	7c 01       	movw	r14, r24
	if (val < 0) {
    1794:	20 e0       	ldi	r18, 0x00	; 0
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	a9 01       	movw	r20, r18
    179a:	0e 94 b4 0c 	call	0x1968	; 0x1968 <__cmpsf2>
    179e:	88 23       	and	r24, r24
    17a0:	24 f4       	brge	.+8      	; 0x17aa <abs+0x22>
		return val*(-1.0);
    17a2:	c7 01       	movw	r24, r14
    17a4:	b6 01       	movw	r22, r12
    17a6:	90 58       	subi	r25, 0x80	; 128
    17a8:	02 c0       	rjmp	.+4      	; 0x17ae <abs+0x26>
	}
	return val;
    17aa:	c7 01       	movw	r24, r14
    17ac:	b6 01       	movw	r22, r12
}
    17ae:	ff 90       	pop	r15
    17b0:	ef 90       	pop	r14
    17b2:	df 90       	pop	r13
    17b4:	cf 90       	pop	r12
    17b6:	08 95       	ret

Disassembly of section .text.motor_left:

000015ba <motor_left>:
	if (dir == FORWARD) {
		PORTC |= (1 << OUT3);
		PORTC &= ~(1 << OUT4);
	} else {
		PORTC &= ~(1 << OUT3);
		PORTC |= (1 << OUT4);
    15ba:	cf 92       	push	r12
    15bc:	df 92       	push	r13
    15be:	ef 92       	push	r14
    15c0:	ff 92       	push	r15
    15c2:	6b 01       	movw	r12, r22
    15c4:	7c 01       	movw	r14, r24
    15c6:	20 e0       	ldi	r18, 0x00	; 0
    15c8:	30 e0       	ldi	r19, 0x00	; 0
    15ca:	a9 01       	movw	r20, r18
    15cc:	0e 94 b4 0c 	call	0x1968	; 0x1968 <__cmpsf2>
    15d0:	88 23       	and	r24, r24
    15d2:	2c f4       	brge	.+10     	; 0x15de <motor_left+0x24>
    15d4:	80 e0       	ldi	r24, 0x00	; 0
    15d6:	90 e0       	ldi	r25, 0x00	; 0
    15d8:	0e 94 42 0c 	call	0x1884	; 0x1884 <set_left_motor_dir>
    15dc:	04 c0       	rjmp	.+8      	; 0x15e6 <motor_left+0x2c>
    15de:	81 e0       	ldi	r24, 0x01	; 1
    15e0:	90 e0       	ldi	r25, 0x00	; 0
    15e2:	0e 94 42 0c 	call	0x1884	; 0x1884 <set_left_motor_dir>
    15e6:	c7 01       	movw	r24, r14
    15e8:	b6 01       	movw	r22, r12
    15ea:	0e 94 c4 0b 	call	0x1788	; 0x1788 <abs>
    15ee:	0e 94 0a 0c 	call	0x1814	; 0x1814 <pwm_set_duty_cycle_left>
    15f2:	ff 90       	pop	r15
    15f4:	ef 90       	pop	r14
    15f6:	df 90       	pop	r13
    15f8:	cf 90       	pop	r12
    15fa:	08 95       	ret

Disassembly of section .text.pwm_init:

000018e0 <pwm_init>:
#include "pwm.h"

void pwm_init(void) {
	
	// Set as output (one for each wheel)
	DDRD |= (1 << PWM1);
    18e0:	8a b1       	in	r24, 0x0a	; 10
    18e2:	80 64       	ori	r24, 0x40	; 64
    18e4:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << PWM2);
    18e6:	8a b1       	in	r24, 0x0a	; 10
    18e8:	80 62       	ori	r24, 0x20	; 32
    18ea:	8a b9       	out	0x0a, r24	; 10
	TCCR0B |= (1 << CS02) | (1 << CS00); // 1024 prescalar
	*/
	
	// Phase correct PWM mode
	// PWM frequency will be (with no prescaler) 31kHz (outside audible spectrum)
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00);
    18ec:	84 b5       	in	r24, 0x24	; 36
    18ee:	81 6a       	ori	r24, 0xA1	; 161
    18f0:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS00); // no pre-scaling
    18f2:	85 b5       	in	r24, 0x25	; 37
    18f4:	81 60       	ori	r24, 0x01	; 1
    18f6:	85 bd       	out	0x25, r24	; 37
    18f8:	08 95       	ret

Disassembly of section .text.pwm_set_duty_cycle_left:

00001814 <pwm_set_duty_cycle_left>:
	
}

void pwm_set_duty_cycle_left(float d) {
	// value should be between 0-255
	float value = d / 100.0 * (255 - MIN_PWM_DUTY_LEFT) + MIN_PWM_DUTY_LEFT;
    1814:	20 e0       	ldi	r18, 0x00	; 0
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	48 ec       	ldi	r20, 0xC8	; 200
    181a:	52 e4       	ldi	r21, 0x42	; 66
    181c:	0e 94 b9 0c 	call	0x1972	; 0x1972 <__divsf3>
    1820:	20 e0       	ldi	r18, 0x00	; 0
    1822:	30 e0       	ldi	r19, 0x00	; 0
    1824:	40 ef       	ldi	r20, 0xF0	; 240
    1826:	52 e4       	ldi	r21, 0x42	; 66
    1828:	0e 94 bd 0c 	call	0x197a	; 0x197a <__mulsf3>
    182c:	20 e0       	ldi	r18, 0x00	; 0
    182e:	30 e0       	ldi	r19, 0x00	; 0
    1830:	47 e0       	ldi	r20, 0x07	; 7
    1832:	53 e4       	ldi	r21, 0x43	; 67
    1834:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__addsf3>
	OCR0A = (uint8_t)value;
    1838:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <__fixunssfsi>
    183c:	67 bd       	out	0x27, r22	; 39
    183e:	08 95       	ret

Disassembly of section .text.speed_estimator_init:

0000145e <speed_estimator_init>:


// Should be updated if timer is adjusted!
const float encoder_measurement_period = 0.01; //0.05;

void speed_estimator_init(void) {
    145e:	cf 93       	push	r28
    1460:	df 93       	push	r29
    1462:	1f 92       	push	r1
    1464:	cd b7       	in	r28, 0x3d	; 61
    1466:	de b7       	in	r29, 0x3e	; 62
	
	encoder_init();
    1468:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <encoder_init>
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    146c:	8f b7       	in	r24, 0x3f	; 63
    146e:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1470:	f8 94       	cli
    1472:	81 e0       	ldi	r24, 0x01	; 1
    1474:	0d c0       	rjmp	.+26     	; 0x1490 <speed_estimator_init+0x32>
		ticks_right = encoder_get_accumulated_ticks_right();
    1476:	0e 94 1c 0b 	call	0x1638	; 0x1638 <encoder_get_accumulated_ticks_right>
    147a:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <ticks_right+0x1>
    147e:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <ticks_right>
		ticks_left = encoder_get_accumulated_ticks_left();	
    1482:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <encoder_get_accumulated_ticks_left>
    1486:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <ticks_left+0x1>
    148a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <ticks_left>
const float encoder_measurement_period = 0.01; //0.05;

void speed_estimator_init(void) {
	
	encoder_init();
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    148e:	80 e0       	ldi	r24, 0x00	; 0
    1490:	81 11       	cpse	r24, r1
    1492:	f1 cf       	rjmp	.-30     	; 0x1476 <speed_estimator_init+0x18>
    1494:	ce 01       	movw	r24, r28
    1496:	01 96       	adiw	r24, 0x01	; 1
    1498:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    149a:	fc 01       	movw	r30, r24
    149c:	84 91       	lpm	r24, Z
    149e:	a7 fd       	sbrc	r26, 7
    14a0:	80 81       	ld	r24, Z
    14a2:	8f bf       	out	0x3f, r24	; 63
	(2^8*1024) / (16000000) * 255/255 = 0.016384
	
	OCR1A = measurement_period * F_CPU * (2^16-1) / (2^16*prescalar)
	
	*/
	cli();
    14a4:	f8 94       	cli
	// Enable interrupt
	TIMSK2 |= (1 << OCIE2A);
	*/
	
	// 16-bit Timer1
	OCR1AH = 0x02;
    14a6:	82 e0       	ldi	r24, 0x02	; 2
    14a8:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0x71;
    14ac:	81 e7       	ldi	r24, 0x71	; 113
    14ae:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	//OCR1A = 15999;
	TCCR1B |= (1 << WGM12) | (1 << CS12); // CTC mode (clear on match with OCR1A), 256 prescalar
    14b2:	e1 e8       	ldi	r30, 0x81	; 129
    14b4:	f0 e0       	ldi	r31, 0x00	; 0
    14b6:	80 81       	ld	r24, Z
    14b8:	8c 60       	ori	r24, 0x0C	; 12
    14ba:	80 83       	st	Z, r24
	
	// Enable interrupt
	TIMSK1 |= (1 << OCIE1A);
    14bc:	ef e6       	ldi	r30, 0x6F	; 111
    14be:	f0 e0       	ldi	r31, 0x00	; 0
    14c0:	80 81       	ld	r24, Z
    14c2:	82 60       	ori	r24, 0x02	; 2
    14c4:	80 83       	st	Z, r24
	
	sei();
    14c6:	78 94       	sei
}
    14c8:	0f 90       	pop	r0
    14ca:	df 91       	pop	r29
    14cc:	cf 91       	pop	r28
    14ce:	08 95       	ret

Disassembly of section .text.speed_estimator_left_rad_per_s:

00000d48 <speed_estimator_left_rad_per_s>:
	}
	rad_per_s = 2.0*PI*((float)ticks - (float)prev_ticks) / ((float)TICKS_PER_ROT*encoder_measurement_period); 
	return rad_per_s;
}

float speed_estimator_left_rad_per_s() {
 d48:	8f 92       	push	r8
 d4a:	9f 92       	push	r9
 d4c:	af 92       	push	r10
 d4e:	bf 92       	push	r11
 d50:	cf 92       	push	r12
 d52:	df 92       	push	r13
 d54:	ef 92       	push	r14
 d56:	ff 92       	push	r15
 d58:	0f 93       	push	r16
 d5a:	1f 93       	push	r17
 d5c:	cf 93       	push	r28
 d5e:	df 93       	push	r29
 d60:	1f 92       	push	r1
 d62:	cd b7       	in	r28, 0x3d	; 61
 d64:	de b7       	in	r29, 0x3e	; 62
	int ticks;
	int prev_ticks;
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 d66:	8f b7       	in	r24, 0x3f	; 63
 d68:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
 d6a:	f8 94       	cli
 d6c:	81 e0       	ldi	r24, 0x01	; 1
 d6e:	09 c0       	rjmp	.+18     	; 0xd82 <speed_estimator_left_rad_per_s+0x3a>
		ticks = ticks_left;
 d70:	00 91 18 01 	lds	r16, 0x0118	; 0x800118 <ticks_left>
 d74:	10 91 19 01 	lds	r17, 0x0119	; 0x800119 <ticks_left+0x1>
		prev_ticks = prev_ticks_left;
 d78:	e0 90 14 01 	lds	r14, 0x0114	; 0x800114 <prev_ticks_left>
 d7c:	f0 90 15 01 	lds	r15, 0x0115	; 0x800115 <prev_ticks_left+0x1>

float speed_estimator_left_rad_per_s() {
	int ticks;
	int prev_ticks;
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 d80:	80 e0       	ldi	r24, 0x00	; 0
 d82:	81 11       	cpse	r24, r1
 d84:	f5 cf       	rjmp	.-22     	; 0xd70 <speed_estimator_left_rad_per_s+0x28>
 d86:	ce 01       	movw	r24, r28
 d88:	01 96       	adiw	r24, 0x01	; 1
 d8a:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
 d8c:	fc 01       	movw	r30, r24
 d8e:	84 91       	lpm	r24, Z
 d90:	a7 fd       	sbrc	r26, 7
 d92:	80 81       	ld	r24, Z
 d94:	8f bf       	out	0x3f, r24	; 63
		ticks = ticks_left;
		prev_ticks = prev_ticks_left;
	}
	rad_per_s = 2.0*PI*((float)ticks - (float)prev_ticks) / ((float)TICKS_PER_ROT*encoder_measurement_period);
 d96:	b8 01       	movw	r22, r16
 d98:	01 2e       	mov	r0, r17
 d9a:	00 0c       	add	r0, r0
 d9c:	88 0b       	sbc	r24, r24
 d9e:	99 0b       	sbc	r25, r25
 da0:	0e 94 42 09 	call	0x1284	; 0x1284 <__floatsisf>
 da4:	4b 01       	movw	r8, r22
 da6:	5c 01       	movw	r10, r24
 da8:	b7 01       	movw	r22, r14
 daa:	0f 2c       	mov	r0, r15
 dac:	00 0c       	add	r0, r0
 dae:	88 0b       	sbc	r24, r24
 db0:	99 0b       	sbc	r25, r25
 db2:	0e 94 42 09 	call	0x1284	; 0x1284 <__floatsisf>
 db6:	9b 01       	movw	r18, r22
 db8:	ac 01       	movw	r20, r24
 dba:	c5 01       	movw	r24, r10
 dbc:	b4 01       	movw	r22, r8
 dbe:	0e 94 8b 0c 	call	0x1916	; 0x1916 <__subsf3>
 dc2:	2b ed       	ldi	r18, 0xDB	; 219
 dc4:	3f e0       	ldi	r19, 0x0F	; 15
 dc6:	49 ec       	ldi	r20, 0xC9	; 201
 dc8:	50 e4       	ldi	r21, 0x40	; 64
 dca:	0e 94 bd 0c 	call	0x197a	; 0x197a <__mulsf3>
 dce:	20 e0       	ldi	r18, 0x00	; 0
 dd0:	30 e0       	ldi	r19, 0x00	; 0
 dd2:	48 e0       	ldi	r20, 0x08	; 8
 dd4:	51 e4       	ldi	r21, 0x41	; 65
 dd6:	0e 94 b9 0c 	call	0x1972	; 0x1972 <__divsf3>
 dda:	a6 2e       	mov	r10, r22
 ddc:	b7 2e       	mov	r11, r23
 dde:	c8 2e       	mov	r12, r24
 de0:	d9 2e       	mov	r13, r25
	printf("rad_per_s=%f | ticks=%d | prev_ticks=%d\n\r", rad_per_s, ticks, prev_ticks);
 de2:	ff 92       	push	r15
 de4:	ef 92       	push	r14
 de6:	1f 93       	push	r17
 de8:	0f 93       	push	r16
 dea:	9f 93       	push	r25
 dec:	8f 93       	push	r24
 dee:	7f 93       	push	r23
 df0:	6f 93       	push	r22
 df2:	88 ec       	ldi	r24, 0xC8	; 200
 df4:	91 e0       	ldi	r25, 0x01	; 1
 df6:	a0 e0       	ldi	r26, 0x00	; 0
 df8:	af 93       	push	r26
 dfa:	9f 93       	push	r25
 dfc:	8f 93       	push	r24
 dfe:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <printf>
	return rad_per_s;
 e02:	0f b6       	in	r0, 0x3f	; 63
 e04:	f8 94       	cli
 e06:	de bf       	out	0x3e, r29	; 62
 e08:	0f be       	out	0x3f, r0	; 63
 e0a:	cd bf       	out	0x3d, r28	; 61
}
 e0c:	6a 2d       	mov	r22, r10
 e0e:	7b 2d       	mov	r23, r11
 e10:	8c 2d       	mov	r24, r12
 e12:	9d 2d       	mov	r25, r13
 e14:	0f 90       	pop	r0
 e16:	df 91       	pop	r29
 e18:	cf 91       	pop	r28
 e1a:	1f 91       	pop	r17
 e1c:	0f 91       	pop	r16
 e1e:	ff 90       	pop	r15
 e20:	ef 90       	pop	r14
 e22:	df 90       	pop	r13
 e24:	cf 90       	pop	r12
 e26:	bf 90       	pop	r11
 e28:	af 90       	pop	r10
 e2a:	9f 90       	pop	r9
 e2c:	8f 90       	pop	r8
 e2e:	08 95       	ret

Disassembly of section .text.__vector_11:

00001204 <__vector_11>:
	prev_ticks_left = ticks_left;
	left_rad_per_s = 2.0*PI*((float)ticks_left - (float)prev_ticks_left) / ((float)TICKS_PER_ROT*encoder_measurement_period);
	
}*/

ISR(TIMER1_COMPA_vect) {
    1204:	1f 92       	push	r1
    1206:	0f 92       	push	r0
    1208:	0f b6       	in	r0, 0x3f	; 63
    120a:	0f 92       	push	r0
    120c:	11 24       	eor	r1, r1
    120e:	2f 93       	push	r18
    1210:	3f 93       	push	r19
    1212:	4f 93       	push	r20
    1214:	5f 93       	push	r21
    1216:	6f 93       	push	r22
    1218:	7f 93       	push	r23
    121a:	8f 93       	push	r24
    121c:	9f 93       	push	r25
    121e:	af 93       	push	r26
    1220:	bf 93       	push	r27
    1222:	ef 93       	push	r30
    1224:	ff 93       	push	r31
	prev_ticks_right = ticks_right;
    1226:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <ticks_right>
    122a:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <ticks_right+0x1>
    122e:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <prev_ticks_right+0x1>
    1232:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <prev_ticks_right>
	ticks_right = encoder_get_accumulated_ticks_right();
    1236:	0e 94 1c 0b 	call	0x1638	; 0x1638 <encoder_get_accumulated_ticks_right>
    123a:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <ticks_right+0x1>
    123e:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <ticks_right>
	
	prev_ticks_left = ticks_left;
    1242:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <ticks_left>
    1246:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <ticks_left+0x1>
    124a:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <prev_ticks_left+0x1>
    124e:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <prev_ticks_left>
	ticks_left = encoder_get_accumulated_ticks_left();
    1252:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <encoder_get_accumulated_ticks_left>
    1256:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <ticks_left+0x1>
    125a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <ticks_left>
	//printf("ISR: %d | %d\n\r", ticks_left, prev_ticks_left);
}
    125e:	ff 91       	pop	r31
    1260:	ef 91       	pop	r30
    1262:	bf 91       	pop	r27
    1264:	af 91       	pop	r26
    1266:	9f 91       	pop	r25
    1268:	8f 91       	pop	r24
    126a:	7f 91       	pop	r23
    126c:	6f 91       	pop	r22
    126e:	5f 91       	pop	r21
    1270:	4f 91       	pop	r20
    1272:	3f 91       	pop	r19
    1274:	2f 91       	pop	r18
    1276:	0f 90       	pop	r0
    1278:	0f be       	out	0x3f, r0	; 63
    127a:	0f 90       	pop	r0
    127c:	1f 90       	pop	r1
    127e:	18 95       	reti

Disassembly of section .text.usart_tx:

000018fa <usart_tx>:

#include <avr/io.h>
#include "usart.h"

void usart_tx(unsigned char data) {
	while (! (UCSR0A & (1 << UDRE0))) {
    18fa:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    18fe:	95 ff       	sbrs	r25, 5
    1900:	fc cf       	rjmp	.-8      	; 0x18fa <usart_tx>
		// wait for buffer to empty
	}
	// Place data in buffer
	UDR0 = data;
    1902:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    1906:	08 95       	ret

Disassembly of section .text.usart_rx:

00001908 <usart_rx>:
}

unsigned char usart_rx(void) {
	while(!(UCSR0A & (1 << RXC0))) {
    1908:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    190c:	88 23       	and	r24, r24
    190e:	e4 f7       	brge	.-8      	; 0x1908 <usart_rx>
		// Wait for data to be received
	}
	return UDR0;
    1910:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
    1914:	08 95       	ret

Disassembly of section .text.usart_init:

00001840 <usart_init>:

void usart_init(unsigned int ubrr) {
	// Set baud rate
	UBRR0H = ubrr>>8;
    1840:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = ubrr;
    1844:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	// Enable rx and tx
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
    1848:	88 e1       	ldi	r24, 0x18	; 24
    184a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	
	// Set frame format: 8data 2stop bit
	UCSR0C = (1 << USBS0) | (3 << UCSZ00);
    184e:	8e e0       	ldi	r24, 0x0E	; 14
    1850:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	
	// Use printf for serial communication
	fdevopen(usart_tx, usart_rx);
    1854:	64 e8       	ldi	r22, 0x84	; 132
    1856:	7c e0       	ldi	r23, 0x0C	; 12
    1858:	8d e7       	ldi	r24, 0x7D	; 125
    185a:	9c e0       	ldi	r25, 0x0C	; 12
    185c:	0e 94 b6 08 	call	0x116c	; 0x116c <fdevopen>
    1860:	08 95       	ret

Disassembly of section .text.main:

00001674 <main>:
//#include "drivers/timer/timer.h"
#include "drivers/speed_estimator/speed_estimator.h"

int main(void)
{
	usart_init(UBRR);
    1674:	87 e6       	ldi	r24, 0x67	; 103
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	0e 94 20 0c 	call	0x1840	; 0x1840 <usart_init>
	motor_init();
    167c:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <motor_init>
	//timer_init();
	speed_estimator_init();
    1680:	0e 94 2f 0a 	call	0x145e	; 0x145e <speed_estimator_init>
	//encoder_init();
	
	printf("Starting application\n\r");
    1684:	82 ef       	ldi	r24, 0xF2	; 242
    1686:	91 e0       	ldi	r25, 0x01	; 1
    1688:	a0 e0       	ldi	r26, 0x00	; 0
    168a:	af 93       	push	r26
    168c:	9f 93       	push	r25
    168e:	8f 93       	push	r24
    1690:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <printf>
	
	//DDRB = (1<<BUILTIN_LED); //PB7 is digital pin 13 (LED), set as output
	//PORTB = (1<<BUILTIN_LED); //Set PB7 high to turn on LED
	motor_left(100);
    1694:	60 e0       	ldi	r22, 0x00	; 0
    1696:	70 e0       	ldi	r23, 0x00	; 0
    1698:	88 ec       	ldi	r24, 0xC8	; 200
    169a:	92 e4       	ldi	r25, 0x42	; 66
    169c:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <motor_left>
    16a0:	0f 90       	pop	r0
    16a2:	0f 90       	pop	r0
    16a4:	0f 90       	pop	r0
		//motor_left(100);
		//_delay_ms(2000);
		//motor_left(-60);
		//_delay_ms(2000);
		
		float l = speed_estimator_left_rad_per_s();
    16a6:	0e 94 a4 06 	call	0xd48	; 0xd48 <speed_estimator_left_rad_per_s>
    16aa:	fd cf       	rjmp	.-6      	; 0x16a6 <main+0x32>

Disassembly of section .text.avrlibc.fplib:

00001916 <__subsf3>:
    1916:	50 58       	subi	r21, 0x80	; 128

00001918 <__addsf3>:
    1918:	bb 27       	eor	r27, r27
    191a:	aa 27       	eor	r26, r26
    191c:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__addsf3x>
    1920:	0c 94 31 0c 	jmp	0x1862	; 0x1862 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000fe2 <__addsf3x>:
     fe2:	11 c0       	rjmp	.+34     	; 0x1006 <__addsf3x+0x24>
     fe4:	0e 94 92 0c 	call	0x1924	; 0x1924 <__fp_pscA>
     fe8:	38 f0       	brcs	.+14     	; 0xff8 <__addsf3x+0x16>
     fea:	0e 94 99 0c 	call	0x1932	; 0x1932 <__fp_pscB>
     fee:	20 f0       	brcs	.+8      	; 0xff8 <__addsf3x+0x16>
     ff0:	39 f4       	brne	.+14     	; 0x1000 <__addsf3x+0x1e>
     ff2:	9f 3f       	cpi	r25, 0xFF	; 255
     ff4:	19 f4       	brne	.+6      	; 0xffc <__addsf3x+0x1a>
     ff6:	26 f4       	brtc	.+8      	; 0x1000 <__addsf3x+0x1e>
     ff8:	0c 94 c1 0c 	jmp	0x1982	; 0x1982 <__fp_nan>
     ffc:	0e f4       	brtc	.+2      	; 0x1000 <__addsf3x+0x1e>
     ffe:	e0 95       	com	r30
    1000:	e7 fb       	bst	r30, 7
    1002:	0c 94 ae 0c 	jmp	0x195c	; 0x195c <__fp_inf>
    1006:	e9 2f       	mov	r30, r25
    1008:	0e 94 bb 0a 	call	0x1576	; 0x1576 <__fp_split3>
    100c:	58 f3       	brcs	.-42     	; 0xfe4 <__addsf3x+0x2>
    100e:	ba 17       	cp	r27, r26
    1010:	62 07       	cpc	r22, r18
    1012:	73 07       	cpc	r23, r19
    1014:	84 07       	cpc	r24, r20
    1016:	95 07       	cpc	r25, r21
    1018:	20 f0       	brcs	.+8      	; 0x1022 <__addsf3x+0x40>
    101a:	79 f4       	brne	.+30     	; 0x103a <__addsf3x+0x58>
    101c:	a6 f5       	brtc	.+104    	; 0x1086 <__addsf3x+0xa4>
    101e:	0c 94 a0 0c 	jmp	0x1940	; 0x1940 <__fp_zero>
    1022:	0e f4       	brtc	.+2      	; 0x1026 <__addsf3x+0x44>
    1024:	e0 95       	com	r30
    1026:	0b 2e       	mov	r0, r27
    1028:	ba 2f       	mov	r27, r26
    102a:	a0 2d       	mov	r26, r0
    102c:	0b 01       	movw	r0, r22
    102e:	b9 01       	movw	r22, r18
    1030:	90 01       	movw	r18, r0
    1032:	0c 01       	movw	r0, r24
    1034:	ca 01       	movw	r24, r20
    1036:	a0 01       	movw	r20, r0
    1038:	11 24       	eor	r1, r1
    103a:	ff 27       	eor	r31, r31
    103c:	59 1b       	sub	r21, r25
    103e:	99 f0       	breq	.+38     	; 0x1066 <__addsf3x+0x84>
    1040:	59 3f       	cpi	r21, 0xF9	; 249
    1042:	50 f4       	brcc	.+20     	; 0x1058 <__addsf3x+0x76>
    1044:	50 3e       	cpi	r21, 0xE0	; 224
    1046:	68 f1       	brcs	.+90     	; 0x10a2 <__addsf3x+0xc0>
    1048:	1a 16       	cp	r1, r26
    104a:	f0 40       	sbci	r31, 0x00	; 0
    104c:	a2 2f       	mov	r26, r18
    104e:	23 2f       	mov	r18, r19
    1050:	34 2f       	mov	r19, r20
    1052:	44 27       	eor	r20, r20
    1054:	58 5f       	subi	r21, 0xF8	; 248
    1056:	f3 cf       	rjmp	.-26     	; 0x103e <__addsf3x+0x5c>
    1058:	46 95       	lsr	r20
    105a:	37 95       	ror	r19
    105c:	27 95       	ror	r18
    105e:	a7 95       	ror	r26
    1060:	f0 40       	sbci	r31, 0x00	; 0
    1062:	53 95       	inc	r21
    1064:	c9 f7       	brne	.-14     	; 0x1058 <__addsf3x+0x76>
    1066:	7e f4       	brtc	.+30     	; 0x1086 <__addsf3x+0xa4>
    1068:	1f 16       	cp	r1, r31
    106a:	ba 0b       	sbc	r27, r26
    106c:	62 0b       	sbc	r22, r18
    106e:	73 0b       	sbc	r23, r19
    1070:	84 0b       	sbc	r24, r20
    1072:	ba f0       	brmi	.+46     	; 0x10a2 <__addsf3x+0xc0>
    1074:	91 50       	subi	r25, 0x01	; 1
    1076:	a1 f0       	breq	.+40     	; 0x10a0 <__addsf3x+0xbe>
    1078:	ff 0f       	add	r31, r31
    107a:	bb 1f       	adc	r27, r27
    107c:	66 1f       	adc	r22, r22
    107e:	77 1f       	adc	r23, r23
    1080:	88 1f       	adc	r24, r24
    1082:	c2 f7       	brpl	.-16     	; 0x1074 <__addsf3x+0x92>
    1084:	0e c0       	rjmp	.+28     	; 0x10a2 <__addsf3x+0xc0>
    1086:	ba 0f       	add	r27, r26
    1088:	62 1f       	adc	r22, r18
    108a:	73 1f       	adc	r23, r19
    108c:	84 1f       	adc	r24, r20
    108e:	48 f4       	brcc	.+18     	; 0x10a2 <__addsf3x+0xc0>
    1090:	87 95       	ror	r24
    1092:	77 95       	ror	r23
    1094:	67 95       	ror	r22
    1096:	b7 95       	ror	r27
    1098:	f7 95       	ror	r31
    109a:	9e 3f       	cpi	r25, 0xFE	; 254
    109c:	08 f0       	brcs	.+2      	; 0x10a0 <__addsf3x+0xbe>
    109e:	b0 cf       	rjmp	.-160    	; 0x1000 <__addsf3x+0x1e>
    10a0:	93 95       	inc	r25
    10a2:	88 0f       	add	r24, r24
    10a4:	08 f0       	brcs	.+2      	; 0x10a8 <__addsf3x+0xc6>
    10a6:	99 27       	eor	r25, r25
    10a8:	ee 0f       	add	r30, r30
    10aa:	97 95       	ror	r25
    10ac:	87 95       	ror	r24
    10ae:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001968 <__cmpsf2>:
    1968:	0e 94 97 0a 	call	0x152e	; 0x152e <__fp_cmp>
    196c:	08 f4       	brcc	.+2      	; 0x1970 <__cmpsf2+0x8>
    196e:	81 e0       	ldi	r24, 0x01	; 1
    1970:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001972 <__divsf3>:
    1972:	0e 94 18 07 	call	0xe30	; 0xe30 <__divsf3x>
    1976:	0c 94 31 0c 	jmp	0x1862	; 0x1862 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000e30 <__divsf3x>:
 e30:	10 c0       	rjmp	.+32     	; 0xe52 <__divsf3x+0x22>
 e32:	0e 94 99 0c 	call	0x1932	; 0x1932 <__fp_pscB>
 e36:	58 f0       	brcs	.+22     	; 0xe4e <__divsf3x+0x1e>
 e38:	0e 94 92 0c 	call	0x1924	; 0x1924 <__fp_pscA>
 e3c:	40 f0       	brcs	.+16     	; 0xe4e <__divsf3x+0x1e>
 e3e:	29 f4       	brne	.+10     	; 0xe4a <__divsf3x+0x1a>
 e40:	5f 3f       	cpi	r21, 0xFF	; 255
 e42:	29 f0       	breq	.+10     	; 0xe4e <__divsf3x+0x1e>
 e44:	0c 94 ae 0c 	jmp	0x195c	; 0x195c <__fp_inf>
 e48:	51 11       	cpse	r21, r1
 e4a:	0c 94 a1 0c 	jmp	0x1942	; 0x1942 <__fp_szero>
 e4e:	0c 94 c1 0c 	jmp	0x1982	; 0x1982 <__fp_nan>
 e52:	0e 94 bb 0a 	call	0x1576	; 0x1576 <__fp_split3>
 e56:	68 f3       	brcs	.-38     	; 0xe32 <__divsf3x+0x2>

00000e58 <__divsf3_pse>:
 e58:	99 23       	and	r25, r25
 e5a:	b1 f3       	breq	.-20     	; 0xe48 <__divsf3x+0x18>
 e5c:	55 23       	and	r21, r21
 e5e:	91 f3       	breq	.-28     	; 0xe44 <__divsf3x+0x14>
 e60:	95 1b       	sub	r25, r21
 e62:	55 0b       	sbc	r21, r21
 e64:	bb 27       	eor	r27, r27
 e66:	aa 27       	eor	r26, r26
 e68:	62 17       	cp	r22, r18
 e6a:	73 07       	cpc	r23, r19
 e6c:	84 07       	cpc	r24, r20
 e6e:	38 f0       	brcs	.+14     	; 0xe7e <__divsf3_pse+0x26>
 e70:	9f 5f       	subi	r25, 0xFF	; 255
 e72:	5f 4f       	sbci	r21, 0xFF	; 255
 e74:	22 0f       	add	r18, r18
 e76:	33 1f       	adc	r19, r19
 e78:	44 1f       	adc	r20, r20
 e7a:	aa 1f       	adc	r26, r26
 e7c:	a9 f3       	breq	.-22     	; 0xe68 <__divsf3_pse+0x10>
 e7e:	35 d0       	rcall	.+106    	; 0xeea <__divsf3_pse+0x92>
 e80:	0e 2e       	mov	r0, r30
 e82:	3a f0       	brmi	.+14     	; 0xe92 <__divsf3_pse+0x3a>
 e84:	e0 e8       	ldi	r30, 0x80	; 128
 e86:	32 d0       	rcall	.+100    	; 0xeec <__divsf3_pse+0x94>
 e88:	91 50       	subi	r25, 0x01	; 1
 e8a:	50 40       	sbci	r21, 0x00	; 0
 e8c:	e6 95       	lsr	r30
 e8e:	00 1c       	adc	r0, r0
 e90:	ca f7       	brpl	.-14     	; 0xe84 <__divsf3_pse+0x2c>
 e92:	2b d0       	rcall	.+86     	; 0xeea <__divsf3_pse+0x92>
 e94:	fe 2f       	mov	r31, r30
 e96:	29 d0       	rcall	.+82     	; 0xeea <__divsf3_pse+0x92>
 e98:	66 0f       	add	r22, r22
 e9a:	77 1f       	adc	r23, r23
 e9c:	88 1f       	adc	r24, r24
 e9e:	bb 1f       	adc	r27, r27
 ea0:	26 17       	cp	r18, r22
 ea2:	37 07       	cpc	r19, r23
 ea4:	48 07       	cpc	r20, r24
 ea6:	ab 07       	cpc	r26, r27
 ea8:	b0 e8       	ldi	r27, 0x80	; 128
 eaa:	09 f0       	breq	.+2      	; 0xeae <__divsf3_pse+0x56>
 eac:	bb 0b       	sbc	r27, r27
 eae:	80 2d       	mov	r24, r0
 eb0:	bf 01       	movw	r22, r30
 eb2:	ff 27       	eor	r31, r31
 eb4:	93 58       	subi	r25, 0x83	; 131
 eb6:	5f 4f       	sbci	r21, 0xFF	; 255
 eb8:	3a f0       	brmi	.+14     	; 0xec8 <__divsf3_pse+0x70>
 eba:	9e 3f       	cpi	r25, 0xFE	; 254
 ebc:	51 05       	cpc	r21, r1
 ebe:	78 f0       	brcs	.+30     	; 0xede <__divsf3_pse+0x86>
 ec0:	0c 94 ae 0c 	jmp	0x195c	; 0x195c <__fp_inf>
 ec4:	0c 94 a1 0c 	jmp	0x1942	; 0x1942 <__fp_szero>
 ec8:	5f 3f       	cpi	r21, 0xFF	; 255
 eca:	e4 f3       	brlt	.-8      	; 0xec4 <__divsf3_pse+0x6c>
 ecc:	98 3e       	cpi	r25, 0xE8	; 232
 ece:	d4 f3       	brlt	.-12     	; 0xec4 <__divsf3_pse+0x6c>
 ed0:	86 95       	lsr	r24
 ed2:	77 95       	ror	r23
 ed4:	67 95       	ror	r22
 ed6:	b7 95       	ror	r27
 ed8:	f7 95       	ror	r31
 eda:	9f 5f       	subi	r25, 0xFF	; 255
 edc:	c9 f7       	brne	.-14     	; 0xed0 <__divsf3_pse+0x78>
 ede:	88 0f       	add	r24, r24
 ee0:	91 1d       	adc	r25, r1
 ee2:	96 95       	lsr	r25
 ee4:	87 95       	ror	r24
 ee6:	97 f9       	bld	r25, 7
 ee8:	08 95       	ret
 eea:	e1 e0       	ldi	r30, 0x01	; 1
 eec:	66 0f       	add	r22, r22
 eee:	77 1f       	adc	r23, r23
 ef0:	88 1f       	adc	r24, r24
 ef2:	bb 1f       	adc	r27, r27
 ef4:	62 17       	cp	r22, r18
 ef6:	73 07       	cpc	r23, r19
 ef8:	84 07       	cpc	r24, r20
 efa:	ba 07       	cpc	r27, r26
 efc:	20 f0       	brcs	.+8      	; 0xf06 <__divsf3_pse+0xae>
 efe:	62 1b       	sub	r22, r18
 f00:	73 0b       	sbc	r23, r19
 f02:	84 0b       	sbc	r24, r20
 f04:	ba 0b       	sbc	r27, r26
 f06:	ee 1f       	adc	r30, r30
 f08:	88 f7       	brcc	.-30     	; 0xeec <__divsf3_pse+0x94>
 f0a:	e0 95       	com	r30
 f0c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000014d0 <__fixunssfsi>:
    14d0:	0e 94 c3 0a 	call	0x1586	; 0x1586 <__fp_splitA>
    14d4:	88 f0       	brcs	.+34     	; 0x14f8 <__fixunssfsi+0x28>
    14d6:	9f 57       	subi	r25, 0x7F	; 127
    14d8:	98 f0       	brcs	.+38     	; 0x1500 <__fixunssfsi+0x30>
    14da:	b9 2f       	mov	r27, r25
    14dc:	99 27       	eor	r25, r25
    14de:	b7 51       	subi	r27, 0x17	; 23
    14e0:	b0 f0       	brcs	.+44     	; 0x150e <__fixunssfsi+0x3e>
    14e2:	e1 f0       	breq	.+56     	; 0x151c <__fixunssfsi+0x4c>
    14e4:	66 0f       	add	r22, r22
    14e6:	77 1f       	adc	r23, r23
    14e8:	88 1f       	adc	r24, r24
    14ea:	99 1f       	adc	r25, r25
    14ec:	1a f0       	brmi	.+6      	; 0x14f4 <__fixunssfsi+0x24>
    14ee:	ba 95       	dec	r27
    14f0:	c9 f7       	brne	.-14     	; 0x14e4 <__fixunssfsi+0x14>
    14f2:	14 c0       	rjmp	.+40     	; 0x151c <__fixunssfsi+0x4c>
    14f4:	b1 30       	cpi	r27, 0x01	; 1
    14f6:	91 f0       	breq	.+36     	; 0x151c <__fixunssfsi+0x4c>
    14f8:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__fp_zero>
    14fc:	b1 e0       	ldi	r27, 0x01	; 1
    14fe:	08 95       	ret
    1500:	0c 94 a0 0c 	jmp	0x1940	; 0x1940 <__fp_zero>
    1504:	67 2f       	mov	r22, r23
    1506:	78 2f       	mov	r23, r24
    1508:	88 27       	eor	r24, r24
    150a:	b8 5f       	subi	r27, 0xF8	; 248
    150c:	39 f0       	breq	.+14     	; 0x151c <__fixunssfsi+0x4c>
    150e:	b9 3f       	cpi	r27, 0xF9	; 249
    1510:	cc f3       	brlt	.-14     	; 0x1504 <__fixunssfsi+0x34>
    1512:	86 95       	lsr	r24
    1514:	77 95       	ror	r23
    1516:	67 95       	ror	r22
    1518:	b3 95       	inc	r27
    151a:	d9 f7       	brne	.-10     	; 0x1512 <__fixunssfsi+0x42>
    151c:	3e f4       	brtc	.+14     	; 0x152c <__fixunssfsi+0x5c>
    151e:	90 95       	com	r25
    1520:	80 95       	com	r24
    1522:	70 95       	com	r23
    1524:	61 95       	neg	r22
    1526:	7f 4f       	sbci	r23, 0xFF	; 255
    1528:	8f 4f       	sbci	r24, 0xFF	; 255
    152a:	9f 4f       	sbci	r25, 0xFF	; 255
    152c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001280 <__floatunsisf>:
    1280:	e8 94       	clt
    1282:	09 c0       	rjmp	.+18     	; 0x1296 <__floatsisf+0x12>

00001284 <__floatsisf>:
    1284:	97 fb       	bst	r25, 7
    1286:	3e f4       	brtc	.+14     	; 0x1296 <__floatsisf+0x12>
    1288:	90 95       	com	r25
    128a:	80 95       	com	r24
    128c:	70 95       	com	r23
    128e:	61 95       	neg	r22
    1290:	7f 4f       	sbci	r23, 0xFF	; 255
    1292:	8f 4f       	sbci	r24, 0xFF	; 255
    1294:	9f 4f       	sbci	r25, 0xFF	; 255
    1296:	99 23       	and	r25, r25
    1298:	a9 f0       	breq	.+42     	; 0x12c4 <__floatsisf+0x40>
    129a:	f9 2f       	mov	r31, r25
    129c:	96 e9       	ldi	r25, 0x96	; 150
    129e:	bb 27       	eor	r27, r27
    12a0:	93 95       	inc	r25
    12a2:	f6 95       	lsr	r31
    12a4:	87 95       	ror	r24
    12a6:	77 95       	ror	r23
    12a8:	67 95       	ror	r22
    12aa:	b7 95       	ror	r27
    12ac:	f1 11       	cpse	r31, r1
    12ae:	f8 cf       	rjmp	.-16     	; 0x12a0 <__floatsisf+0x1c>
    12b0:	fa f4       	brpl	.+62     	; 0x12f0 <__floatsisf+0x6c>
    12b2:	bb 0f       	add	r27, r27
    12b4:	11 f4       	brne	.+4      	; 0x12ba <__floatsisf+0x36>
    12b6:	60 ff       	sbrs	r22, 0
    12b8:	1b c0       	rjmp	.+54     	; 0x12f0 <__floatsisf+0x6c>
    12ba:	6f 5f       	subi	r22, 0xFF	; 255
    12bc:	7f 4f       	sbci	r23, 0xFF	; 255
    12be:	8f 4f       	sbci	r24, 0xFF	; 255
    12c0:	9f 4f       	sbci	r25, 0xFF	; 255
    12c2:	16 c0       	rjmp	.+44     	; 0x12f0 <__floatsisf+0x6c>
    12c4:	88 23       	and	r24, r24
    12c6:	11 f0       	breq	.+4      	; 0x12cc <__floatsisf+0x48>
    12c8:	96 e9       	ldi	r25, 0x96	; 150
    12ca:	11 c0       	rjmp	.+34     	; 0x12ee <__floatsisf+0x6a>
    12cc:	77 23       	and	r23, r23
    12ce:	21 f0       	breq	.+8      	; 0x12d8 <__floatsisf+0x54>
    12d0:	9e e8       	ldi	r25, 0x8E	; 142
    12d2:	87 2f       	mov	r24, r23
    12d4:	76 2f       	mov	r23, r22
    12d6:	05 c0       	rjmp	.+10     	; 0x12e2 <__floatsisf+0x5e>
    12d8:	66 23       	and	r22, r22
    12da:	71 f0       	breq	.+28     	; 0x12f8 <__floatsisf+0x74>
    12dc:	96 e8       	ldi	r25, 0x86	; 134
    12de:	86 2f       	mov	r24, r22
    12e0:	70 e0       	ldi	r23, 0x00	; 0
    12e2:	60 e0       	ldi	r22, 0x00	; 0
    12e4:	2a f0       	brmi	.+10     	; 0x12f0 <__floatsisf+0x6c>
    12e6:	9a 95       	dec	r25
    12e8:	66 0f       	add	r22, r22
    12ea:	77 1f       	adc	r23, r23
    12ec:	88 1f       	adc	r24, r24
    12ee:	da f7       	brpl	.-10     	; 0x12e6 <__floatsisf+0x62>
    12f0:	88 0f       	add	r24, r24
    12f2:	96 95       	lsr	r25
    12f4:	87 95       	ror	r24
    12f6:	97 f9       	bld	r25, 7
    12f8:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000152e <__fp_cmp>:
    152e:	99 0f       	add	r25, r25
    1530:	00 08       	sbc	r0, r0
    1532:	55 0f       	add	r21, r21
    1534:	aa 0b       	sbc	r26, r26
    1536:	e0 e8       	ldi	r30, 0x80	; 128
    1538:	fe ef       	ldi	r31, 0xFE	; 254
    153a:	16 16       	cp	r1, r22
    153c:	17 06       	cpc	r1, r23
    153e:	e8 07       	cpc	r30, r24
    1540:	f9 07       	cpc	r31, r25
    1542:	c0 f0       	brcs	.+48     	; 0x1574 <__fp_cmp+0x46>
    1544:	12 16       	cp	r1, r18
    1546:	13 06       	cpc	r1, r19
    1548:	e4 07       	cpc	r30, r20
    154a:	f5 07       	cpc	r31, r21
    154c:	98 f0       	brcs	.+38     	; 0x1574 <__fp_cmp+0x46>
    154e:	62 1b       	sub	r22, r18
    1550:	73 0b       	sbc	r23, r19
    1552:	84 0b       	sbc	r24, r20
    1554:	95 0b       	sbc	r25, r21
    1556:	39 f4       	brne	.+14     	; 0x1566 <__fp_cmp+0x38>
    1558:	0a 26       	eor	r0, r26
    155a:	61 f0       	breq	.+24     	; 0x1574 <__fp_cmp+0x46>
    155c:	23 2b       	or	r18, r19
    155e:	24 2b       	or	r18, r20
    1560:	25 2b       	or	r18, r21
    1562:	21 f4       	brne	.+8      	; 0x156c <__fp_cmp+0x3e>
    1564:	08 95       	ret
    1566:	0a 26       	eor	r0, r26
    1568:	09 f4       	brne	.+2      	; 0x156c <__fp_cmp+0x3e>
    156a:	a1 40       	sbci	r26, 0x01	; 1
    156c:	a6 95       	lsr	r26
    156e:	8f ef       	ldi	r24, 0xFF	; 255
    1570:	81 1d       	adc	r24, r1
    1572:	81 1d       	adc	r24, r1
    1574:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000195c <__fp_inf>:
    195c:	97 f9       	bld	r25, 7
    195e:	9f 67       	ori	r25, 0x7F	; 127
    1960:	80 e8       	ldi	r24, 0x80	; 128
    1962:	70 e0       	ldi	r23, 0x00	; 0
    1964:	60 e0       	ldi	r22, 0x00	; 0
    1966:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001982 <__fp_nan>:
    1982:	9f ef       	ldi	r25, 0xFF	; 255
    1984:	80 ec       	ldi	r24, 0xC0	; 192
    1986:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001924 <__fp_pscA>:
    1924:	00 24       	eor	r0, r0
    1926:	0a 94       	dec	r0
    1928:	16 16       	cp	r1, r22
    192a:	17 06       	cpc	r1, r23
    192c:	18 06       	cpc	r1, r24
    192e:	09 06       	cpc	r0, r25
    1930:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001932 <__fp_pscB>:
    1932:	00 24       	eor	r0, r0
    1934:	0a 94       	dec	r0
    1936:	12 16       	cp	r1, r18
    1938:	13 06       	cpc	r1, r19
    193a:	14 06       	cpc	r1, r20
    193c:	05 06       	cpc	r0, r21
    193e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001862 <__fp_round>:
    1862:	09 2e       	mov	r0, r25
    1864:	03 94       	inc	r0
    1866:	00 0c       	add	r0, r0
    1868:	11 f4       	brne	.+4      	; 0x186e <__fp_round+0xc>
    186a:	88 23       	and	r24, r24
    186c:	52 f0       	brmi	.+20     	; 0x1882 <__fp_round+0x20>
    186e:	bb 0f       	add	r27, r27
    1870:	40 f4       	brcc	.+16     	; 0x1882 <__fp_round+0x20>
    1872:	bf 2b       	or	r27, r31
    1874:	11 f4       	brne	.+4      	; 0x187a <__fp_round+0x18>
    1876:	60 ff       	sbrs	r22, 0
    1878:	04 c0       	rjmp	.+8      	; 0x1882 <__fp_round+0x20>
    187a:	6f 5f       	subi	r22, 0xFF	; 255
    187c:	7f 4f       	sbci	r23, 0xFF	; 255
    187e:	8f 4f       	sbci	r24, 0xFF	; 255
    1880:	9f 4f       	sbci	r25, 0xFF	; 255
    1882:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001576 <__fp_split3>:
    1576:	57 fd       	sbrc	r21, 7
    1578:	90 58       	subi	r25, 0x80	; 128
    157a:	44 0f       	add	r20, r20
    157c:	55 1f       	adc	r21, r21
    157e:	59 f0       	breq	.+22     	; 0x1596 <__fp_splitA+0x10>
    1580:	5f 3f       	cpi	r21, 0xFF	; 255
    1582:	71 f0       	breq	.+28     	; 0x15a0 <__fp_splitA+0x1a>
    1584:	47 95       	ror	r20

00001586 <__fp_splitA>:
    1586:	88 0f       	add	r24, r24
    1588:	97 fb       	bst	r25, 7
    158a:	99 1f       	adc	r25, r25
    158c:	61 f0       	breq	.+24     	; 0x15a6 <__fp_splitA+0x20>
    158e:	9f 3f       	cpi	r25, 0xFF	; 255
    1590:	79 f0       	breq	.+30     	; 0x15b0 <__fp_splitA+0x2a>
    1592:	87 95       	ror	r24
    1594:	08 95       	ret
    1596:	12 16       	cp	r1, r18
    1598:	13 06       	cpc	r1, r19
    159a:	14 06       	cpc	r1, r20
    159c:	55 1f       	adc	r21, r21
    159e:	f2 cf       	rjmp	.-28     	; 0x1584 <__fp_split3+0xe>
    15a0:	46 95       	lsr	r20
    15a2:	f1 df       	rcall	.-30     	; 0x1586 <__fp_splitA>
    15a4:	08 c0       	rjmp	.+16     	; 0x15b6 <__fp_splitA+0x30>
    15a6:	16 16       	cp	r1, r22
    15a8:	17 06       	cpc	r1, r23
    15aa:	18 06       	cpc	r1, r24
    15ac:	99 1f       	adc	r25, r25
    15ae:	f1 cf       	rjmp	.-30     	; 0x1592 <__fp_splitA+0xc>
    15b0:	86 95       	lsr	r24
    15b2:	71 05       	cpc	r23, r1
    15b4:	61 05       	cpc	r22, r1
    15b6:	08 94       	sec
    15b8:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001940 <__fp_zero>:
    1940:	e8 94       	clt

00001942 <__fp_szero>:
    1942:	bb 27       	eor	r27, r27
    1944:	66 27       	eor	r22, r22
    1946:	77 27       	eor	r23, r23
    1948:	cb 01       	movw	r24, r22
    194a:	97 f9       	bld	r25, 7
    194c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000197a <__mulsf3>:
    197a:	0e 94 87 07 	call	0xf0e	; 0xf0e <__mulsf3x>
    197e:	0c 94 31 0c 	jmp	0x1862	; 0x1862 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000f0e <__mulsf3x>:
 f0e:	0f c0       	rjmp	.+30     	; 0xf2e <__mulsf3x+0x20>
 f10:	0e 94 92 0c 	call	0x1924	; 0x1924 <__fp_pscA>
 f14:	38 f0       	brcs	.+14     	; 0xf24 <__mulsf3x+0x16>
 f16:	0e 94 99 0c 	call	0x1932	; 0x1932 <__fp_pscB>
 f1a:	20 f0       	brcs	.+8      	; 0xf24 <__mulsf3x+0x16>
 f1c:	95 23       	and	r25, r21
 f1e:	11 f0       	breq	.+4      	; 0xf24 <__mulsf3x+0x16>
 f20:	0c 94 ae 0c 	jmp	0x195c	; 0x195c <__fp_inf>
 f24:	0c 94 c1 0c 	jmp	0x1982	; 0x1982 <__fp_nan>
 f28:	11 24       	eor	r1, r1
 f2a:	0c 94 a1 0c 	jmp	0x1942	; 0x1942 <__fp_szero>
 f2e:	0e 94 bb 0a 	call	0x1576	; 0x1576 <__fp_split3>
 f32:	70 f3       	brcs	.-36     	; 0xf10 <__mulsf3x+0x2>

00000f34 <__mulsf3_pse>:
 f34:	95 9f       	mul	r25, r21
 f36:	c1 f3       	breq	.-16     	; 0xf28 <__mulsf3x+0x1a>
 f38:	95 0f       	add	r25, r21
 f3a:	50 e0       	ldi	r21, 0x00	; 0
 f3c:	55 1f       	adc	r21, r21
 f3e:	62 9f       	mul	r22, r18
 f40:	f0 01       	movw	r30, r0
 f42:	72 9f       	mul	r23, r18
 f44:	bb 27       	eor	r27, r27
 f46:	f0 0d       	add	r31, r0
 f48:	b1 1d       	adc	r27, r1
 f4a:	63 9f       	mul	r22, r19
 f4c:	aa 27       	eor	r26, r26
 f4e:	f0 0d       	add	r31, r0
 f50:	b1 1d       	adc	r27, r1
 f52:	aa 1f       	adc	r26, r26
 f54:	64 9f       	mul	r22, r20
 f56:	66 27       	eor	r22, r22
 f58:	b0 0d       	add	r27, r0
 f5a:	a1 1d       	adc	r26, r1
 f5c:	66 1f       	adc	r22, r22
 f5e:	82 9f       	mul	r24, r18
 f60:	22 27       	eor	r18, r18
 f62:	b0 0d       	add	r27, r0
 f64:	a1 1d       	adc	r26, r1
 f66:	62 1f       	adc	r22, r18
 f68:	73 9f       	mul	r23, r19
 f6a:	b0 0d       	add	r27, r0
 f6c:	a1 1d       	adc	r26, r1
 f6e:	62 1f       	adc	r22, r18
 f70:	83 9f       	mul	r24, r19
 f72:	a0 0d       	add	r26, r0
 f74:	61 1d       	adc	r22, r1
 f76:	22 1f       	adc	r18, r18
 f78:	74 9f       	mul	r23, r20
 f7a:	33 27       	eor	r19, r19
 f7c:	a0 0d       	add	r26, r0
 f7e:	61 1d       	adc	r22, r1
 f80:	23 1f       	adc	r18, r19
 f82:	84 9f       	mul	r24, r20
 f84:	60 0d       	add	r22, r0
 f86:	21 1d       	adc	r18, r1
 f88:	82 2f       	mov	r24, r18
 f8a:	76 2f       	mov	r23, r22
 f8c:	6a 2f       	mov	r22, r26
 f8e:	11 24       	eor	r1, r1
 f90:	9f 57       	subi	r25, 0x7F	; 127
 f92:	50 40       	sbci	r21, 0x00	; 0
 f94:	9a f0       	brmi	.+38     	; 0xfbc <__mulsf3_pse+0x88>
 f96:	f1 f0       	breq	.+60     	; 0xfd4 <__mulsf3_pse+0xa0>
 f98:	88 23       	and	r24, r24
 f9a:	4a f0       	brmi	.+18     	; 0xfae <__mulsf3_pse+0x7a>
 f9c:	ee 0f       	add	r30, r30
 f9e:	ff 1f       	adc	r31, r31
 fa0:	bb 1f       	adc	r27, r27
 fa2:	66 1f       	adc	r22, r22
 fa4:	77 1f       	adc	r23, r23
 fa6:	88 1f       	adc	r24, r24
 fa8:	91 50       	subi	r25, 0x01	; 1
 faa:	50 40       	sbci	r21, 0x00	; 0
 fac:	a9 f7       	brne	.-22     	; 0xf98 <__mulsf3_pse+0x64>
 fae:	9e 3f       	cpi	r25, 0xFE	; 254
 fb0:	51 05       	cpc	r21, r1
 fb2:	80 f0       	brcs	.+32     	; 0xfd4 <__mulsf3_pse+0xa0>
 fb4:	0c 94 ae 0c 	jmp	0x195c	; 0x195c <__fp_inf>
 fb8:	0c 94 a1 0c 	jmp	0x1942	; 0x1942 <__fp_szero>
 fbc:	5f 3f       	cpi	r21, 0xFF	; 255
 fbe:	e4 f3       	brlt	.-8      	; 0xfb8 <__mulsf3_pse+0x84>
 fc0:	98 3e       	cpi	r25, 0xE8	; 232
 fc2:	d4 f3       	brlt	.-12     	; 0xfb8 <__mulsf3_pse+0x84>
 fc4:	86 95       	lsr	r24
 fc6:	77 95       	ror	r23
 fc8:	67 95       	ror	r22
 fca:	b7 95       	ror	r27
 fcc:	f7 95       	ror	r31
 fce:	e7 95       	ror	r30
 fd0:	9f 5f       	subi	r25, 0xFF	; 255
 fd2:	c1 f7       	brne	.-16     	; 0xfc4 <__mulsf3_pse+0x90>
 fd4:	fe 2b       	or	r31, r30
 fd6:	88 0f       	add	r24, r24
 fd8:	91 1d       	adc	r25, r1
 fda:	96 95       	lsr	r25
 fdc:	87 95       	ror	r24
 fde:	97 f9       	bld	r25, 7
 fe0:	08 95       	ret

Disassembly of section .text.avrlibc:

00000212 <vfprintf>:
 212:	a4 e1       	ldi	r26, 0x14	; 20
 214:	b0 e0       	ldi	r27, 0x00	; 0
 216:	ef e0       	ldi	r30, 0x0F	; 15
 218:	f1 e0       	ldi	r31, 0x01	; 1
 21a:	0c 94 56 0b 	jmp	0x16ac	; 0x16ac <__prologue_saves__>
 21e:	6c 01       	movw	r12, r24
 220:	1a 01       	movw	r2, r20
 222:	46 2e       	mov	r4, r22
 224:	59 01       	movw	r10, r18
 226:	fc 01       	movw	r30, r24
 228:	10 86       	std	Z+8, r1	; 0x08
 22a:	17 82       	std	Z+7, r1	; 0x07
 22c:	84 81       	ldd	r24, Z+4	; 0x04
 22e:	81 ff       	sbrs	r24, 1
 230:	62 c3       	rjmp	.+1732   	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
 232:	ce 01       	movw	r24, r28
 234:	01 96       	adiw	r24, 0x01	; 1
 236:	9d 87       	std	Y+13, r25	; 0x0d
 238:	8c 87       	std	Y+12, r24	; 0x0c
 23a:	a0 e8       	ldi	r26, 0x80	; 128
 23c:	8a 8b       	std	Y+18, r24	; 0x12
 23e:	9b 8b       	std	Y+19, r25	; 0x13
 240:	ac 8b       	std	Y+20, r26	; 0x14
 242:	f1 01       	movw	r30, r2
 244:	84 91       	lpm	r24, Z
 246:	47 fc       	sbrc	r4, 7
 248:	80 81       	ld	r24, Z
 24a:	88 23       	and	r24, r24
 24c:	09 f4       	brne	.+2      	; 0x250 <vfprintf+0x3e>
 24e:	4f c3       	rjmp	.+1694   	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 250:	44 2d       	mov	r20, r4
 252:	91 01       	movw	r18, r2
 254:	2f 5f       	subi	r18, 0xFF	; 255
 256:	3f 4f       	sbci	r19, 0xFF	; 255
 258:	4f 4f       	sbci	r20, 0xFF	; 255
 25a:	85 32       	cpi	r24, 0x25	; 37
 25c:	19 f0       	breq	.+6      	; 0x264 <vfprintf+0x52>
 25e:	19 01       	movw	r2, r18
 260:	44 2e       	mov	r4, r20
 262:	0a c0       	rjmp	.+20     	; 0x278 <vfprintf+0x66>
 264:	f9 01       	movw	r30, r18
 266:	84 91       	lpm	r24, Z
 268:	47 fd       	sbrc	r20, 7
 26a:	80 81       	ld	r24, Z
 26c:	92 e0       	ldi	r25, 0x02	; 2
 26e:	29 0e       	add	r2, r25
 270:	31 1c       	adc	r3, r1
 272:	41 1c       	adc	r4, r1
 274:	85 32       	cpi	r24, 0x25	; 37
 276:	49 f4       	brne	.+18     	; 0x28a <vfprintf+0x78>
 278:	b6 01       	movw	r22, r12
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 280:	bf 86       	std	Y+15, r11	; 0x0f
 282:	ae 86       	std	Y+14, r10	; 0x0e
 284:	ae 84       	ldd	r10, Y+14	; 0x0e
 286:	bf 84       	ldd	r11, Y+15	; 0x0f
 288:	dc cf       	rjmp	.-72     	; 0x242 <vfprintf+0x30>
 28a:	10 e0       	ldi	r17, 0x00	; 0
 28c:	f1 2c       	mov	r15, r1
 28e:	00 e0       	ldi	r16, 0x00	; 0
 290:	00 32       	cpi	r16, 0x20	; 32
 292:	a0 f4       	brcc	.+40     	; 0x2bc <vfprintf+0xaa>
 294:	8b 32       	cpi	r24, 0x2B	; 43
 296:	69 f0       	breq	.+26     	; 0x2b2 <vfprintf+0xa0>
 298:	30 f4       	brcc	.+12     	; 0x2a6 <vfprintf+0x94>
 29a:	80 32       	cpi	r24, 0x20	; 32
 29c:	59 f0       	breq	.+22     	; 0x2b4 <vfprintf+0xa2>
 29e:	83 32       	cpi	r24, 0x23	; 35
 2a0:	69 f4       	brne	.+26     	; 0x2bc <vfprintf+0xaa>
 2a2:	00 61       	ori	r16, 0x10	; 16
 2a4:	2c c0       	rjmp	.+88     	; 0x2fe <vfprintf+0xec>
 2a6:	8d 32       	cpi	r24, 0x2D	; 45
 2a8:	39 f0       	breq	.+14     	; 0x2b8 <vfprintf+0xa6>
 2aa:	80 33       	cpi	r24, 0x30	; 48
 2ac:	39 f4       	brne	.+14     	; 0x2bc <vfprintf+0xaa>
 2ae:	01 60       	ori	r16, 0x01	; 1
 2b0:	26 c0       	rjmp	.+76     	; 0x2fe <vfprintf+0xec>
 2b2:	02 60       	ori	r16, 0x02	; 2
 2b4:	04 60       	ori	r16, 0x04	; 4
 2b6:	23 c0       	rjmp	.+70     	; 0x2fe <vfprintf+0xec>
 2b8:	08 60       	ori	r16, 0x08	; 8
 2ba:	21 c0       	rjmp	.+66     	; 0x2fe <vfprintf+0xec>
 2bc:	07 fd       	sbrc	r16, 7
 2be:	29 c0       	rjmp	.+82     	; 0x312 <vfprintf+0x100>
 2c0:	90 ed       	ldi	r25, 0xD0	; 208
 2c2:	98 0f       	add	r25, r24
 2c4:	9a 30       	cpi	r25, 0x0A	; 10
 2c6:	78 f4       	brcc	.+30     	; 0x2e6 <vfprintf+0xd4>
 2c8:	06 ff       	sbrs	r16, 6
 2ca:	06 c0       	rjmp	.+12     	; 0x2d8 <vfprintf+0xc6>
 2cc:	aa e0       	ldi	r26, 0x0A	; 10
 2ce:	1a 9f       	mul	r17, r26
 2d0:	90 0d       	add	r25, r0
 2d2:	11 24       	eor	r1, r1
 2d4:	19 2f       	mov	r17, r25
 2d6:	13 c0       	rjmp	.+38     	; 0x2fe <vfprintf+0xec>
 2d8:	ea e0       	ldi	r30, 0x0A	; 10
 2da:	fe 9e       	mul	r15, r30
 2dc:	90 0d       	add	r25, r0
 2de:	11 24       	eor	r1, r1
 2e0:	f9 2e       	mov	r15, r25
 2e2:	00 62       	ori	r16, 0x20	; 32
 2e4:	0c c0       	rjmp	.+24     	; 0x2fe <vfprintf+0xec>
 2e6:	8e 32       	cpi	r24, 0x2E	; 46
 2e8:	21 f4       	brne	.+8      	; 0x2f2 <vfprintf+0xe0>
 2ea:	06 fd       	sbrc	r16, 6
 2ec:	00 c3       	rjmp	.+1536   	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 2ee:	00 64       	ori	r16, 0x40	; 64
 2f0:	06 c0       	rjmp	.+12     	; 0x2fe <vfprintf+0xec>
 2f2:	8c 36       	cpi	r24, 0x6C	; 108
 2f4:	11 f4       	brne	.+4      	; 0x2fa <vfprintf+0xe8>
 2f6:	00 68       	ori	r16, 0x80	; 128
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <vfprintf+0xec>
 2fa:	88 36       	cpi	r24, 0x68	; 104
 2fc:	51 f4       	brne	.+20     	; 0x312 <vfprintf+0x100>
 2fe:	f1 01       	movw	r30, r2
 300:	84 91       	lpm	r24, Z
 302:	47 fc       	sbrc	r4, 7
 304:	80 81       	ld	r24, Z
 306:	ff ef       	ldi	r31, 0xFF	; 255
 308:	2f 1a       	sub	r2, r31
 30a:	3f 0a       	sbc	r3, r31
 30c:	4f 0a       	sbc	r4, r31
 30e:	81 11       	cpse	r24, r1
 310:	bf cf       	rjmp	.-130    	; 0x290 <vfprintf+0x7e>
 312:	9b eb       	ldi	r25, 0xBB	; 187
 314:	98 0f       	add	r25, r24
 316:	93 30       	cpi	r25, 0x03	; 3
 318:	18 f4       	brcc	.+6      	; 0x320 <vfprintf+0x10e>
 31a:	00 61       	ori	r16, 0x10	; 16
 31c:	80 5e       	subi	r24, 0xE0	; 224
 31e:	06 c0       	rjmp	.+12     	; 0x32c <vfprintf+0x11a>
 320:	9b e9       	ldi	r25, 0x9B	; 155
 322:	98 0f       	add	r25, r24
 324:	93 30       	cpi	r25, 0x03	; 3
 326:	08 f0       	brcs	.+2      	; 0x32a <vfprintf+0x118>
 328:	66 c1       	rjmp	.+716    	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 32a:	0f 7e       	andi	r16, 0xEF	; 239
 32c:	06 ff       	sbrs	r16, 6
 32e:	16 e0       	ldi	r17, 0x06	; 6
 330:	0f 73       	andi	r16, 0x3F	; 63
 332:	70 2e       	mov	r7, r16
 334:	85 36       	cpi	r24, 0x65	; 101
 336:	21 f4       	brne	.+8      	; 0x340 <vfprintf+0x12e>
 338:	20 2f       	mov	r18, r16
 33a:	20 64       	ori	r18, 0x40	; 64
 33c:	72 2e       	mov	r7, r18
 33e:	08 c0       	rjmp	.+16     	; 0x350 <vfprintf+0x13e>
 340:	86 36       	cpi	r24, 0x66	; 102
 342:	21 f4       	brne	.+8      	; 0x34c <vfprintf+0x13a>
 344:	80 2f       	mov	r24, r16
 346:	80 68       	ori	r24, 0x80	; 128
 348:	78 2e       	mov	r7, r24
 34a:	02 c0       	rjmp	.+4      	; 0x350 <vfprintf+0x13e>
 34c:	11 11       	cpse	r17, r1
 34e:	11 50       	subi	r17, 0x01	; 1
 350:	77 fe       	sbrs	r7, 7
 352:	07 c0       	rjmp	.+14     	; 0x362 <vfprintf+0x150>
 354:	1c 33       	cpi	r17, 0x3C	; 60
 356:	50 f4       	brcc	.+20     	; 0x36c <vfprintf+0x15a>
 358:	ee 24       	eor	r14, r14
 35a:	e3 94       	inc	r14
 35c:	e1 0e       	add	r14, r17
 35e:	27 e0       	ldi	r18, 0x07	; 7
 360:	0b c0       	rjmp	.+22     	; 0x378 <vfprintf+0x166>
 362:	18 30       	cpi	r17, 0x08	; 8
 364:	38 f0       	brcs	.+14     	; 0x374 <vfprintf+0x162>
 366:	27 e0       	ldi	r18, 0x07	; 7
 368:	17 e0       	ldi	r17, 0x07	; 7
 36a:	05 c0       	rjmp	.+10     	; 0x376 <vfprintf+0x164>
 36c:	27 e0       	ldi	r18, 0x07	; 7
 36e:	6c e3       	ldi	r22, 0x3C	; 60
 370:	e6 2e       	mov	r14, r22
 372:	02 c0       	rjmp	.+4      	; 0x378 <vfprintf+0x166>
 374:	21 2f       	mov	r18, r17
 376:	e1 2c       	mov	r14, r1
 378:	f5 01       	movw	r30, r10
 37a:	34 96       	adiw	r30, 0x04	; 4
 37c:	ff 87       	std	Y+15, r31	; 0x0f
 37e:	ee 87       	std	Y+14, r30	; 0x0e
 380:	f5 01       	movw	r30, r10
 382:	60 81       	ld	r22, Z
 384:	71 81       	ldd	r23, Z+1	; 0x01
 386:	82 81       	ldd	r24, Z+2	; 0x02
 388:	93 81       	ldd	r25, Z+3	; 0x03
 38a:	0e 2d       	mov	r16, r14
 38c:	ae 01       	movw	r20, r28
 38e:	4f 5f       	subi	r20, 0xFF	; 255
 390:	5f 4f       	sbci	r21, 0xFF	; 255
 392:	0e 94 cc 05 	call	0xb98	; 0xb98 <__ftoa_engine>
 396:	5c 01       	movw	r10, r24
 398:	59 80       	ldd	r5, Y+1	; 0x01
 39a:	50 fe       	sbrs	r5, 0
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <vfprintf+0x190>
 39e:	53 fe       	sbrs	r5, 3
 3a0:	06 c0       	rjmp	.+12     	; 0x3ae <vfprintf+0x19c>
 3a2:	71 fc       	sbrc	r7, 1
 3a4:	06 c0       	rjmp	.+12     	; 0x3b2 <vfprintf+0x1a0>
 3a6:	72 fe       	sbrs	r7, 2
 3a8:	06 c0       	rjmp	.+12     	; 0x3b6 <vfprintf+0x1a4>
 3aa:	00 e2       	ldi	r16, 0x20	; 32
 3ac:	05 c0       	rjmp	.+10     	; 0x3b8 <vfprintf+0x1a6>
 3ae:	0d e2       	ldi	r16, 0x2D	; 45
 3b0:	03 c0       	rjmp	.+6      	; 0x3b8 <vfprintf+0x1a6>
 3b2:	0b e2       	ldi	r16, 0x2B	; 43
 3b4:	01 c0       	rjmp	.+2      	; 0x3b8 <vfprintf+0x1a6>
 3b6:	00 e0       	ldi	r16, 0x00	; 0
 3b8:	85 2d       	mov	r24, r5
 3ba:	8c 70       	andi	r24, 0x0C	; 12
 3bc:	19 f0       	breq	.+6      	; 0x3c4 <vfprintf+0x1b2>
 3be:	01 11       	cpse	r16, r1
 3c0:	73 c2       	rjmp	.+1254   	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
 3c2:	be c2       	rjmp	.+1404   	; 0x940 <__stack+0x41>
 3c4:	77 fe       	sbrs	r7, 7
 3c6:	0f c0       	rjmp	.+30     	; 0x3e6 <vfprintf+0x1d4>
 3c8:	ea 0c       	add	r14, r10
 3ca:	54 fe       	sbrs	r5, 4
 3cc:	04 c0       	rjmp	.+8      	; 0x3d6 <vfprintf+0x1c4>
 3ce:	8a 81       	ldd	r24, Y+2	; 0x02
 3d0:	81 33       	cpi	r24, 0x31	; 49
 3d2:	09 f4       	brne	.+2      	; 0x3d6 <vfprintf+0x1c4>
 3d4:	ea 94       	dec	r14
 3d6:	1e 14       	cp	r1, r14
 3d8:	74 f5       	brge	.+92     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 3da:	28 e0       	ldi	r18, 0x08	; 8
 3dc:	2e 15       	cp	r18, r14
 3de:	78 f5       	brcc	.+94     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 3e0:	38 e0       	ldi	r19, 0x08	; 8
 3e2:	e3 2e       	mov	r14, r19
 3e4:	2c c0       	rjmp	.+88     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 3e6:	76 fc       	sbrc	r7, 6
 3e8:	2a c0       	rjmp	.+84     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 3ea:	81 2f       	mov	r24, r17
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	8a 15       	cp	r24, r10
 3f0:	9b 05       	cpc	r25, r11
 3f2:	9c f0       	brlt	.+38     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 3f4:	8c ef       	ldi	r24, 0xFC	; 252
 3f6:	a8 16       	cp	r10, r24
 3f8:	8f ef       	ldi	r24, 0xFF	; 255
 3fa:	b8 06       	cpc	r11, r24
 3fc:	74 f0       	brlt	.+28     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 3fe:	97 2d       	mov	r25, r7
 400:	90 68       	ori	r25, 0x80	; 128
 402:	79 2e       	mov	r7, r25
 404:	0a c0       	rjmp	.+20     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 406:	e2 e0       	ldi	r30, 0x02	; 2
 408:	f0 e0       	ldi	r31, 0x00	; 0
 40a:	ec 0f       	add	r30, r28
 40c:	fd 1f       	adc	r31, r29
 40e:	e1 0f       	add	r30, r17
 410:	f1 1d       	adc	r31, r1
 412:	80 81       	ld	r24, Z
 414:	80 33       	cpi	r24, 0x30	; 48
 416:	19 f4       	brne	.+6      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 418:	11 50       	subi	r17, 0x01	; 1
 41a:	11 11       	cpse	r17, r1
 41c:	f4 cf       	rjmp	.-24     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 41e:	77 fe       	sbrs	r7, 7
 420:	0e c0       	rjmp	.+28     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 422:	ee 24       	eor	r14, r14
 424:	e3 94       	inc	r14
 426:	e1 0e       	add	r14, r17
 428:	81 2f       	mov	r24, r17
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	a8 16       	cp	r10, r24
 42e:	b9 06       	cpc	r11, r25
 430:	2c f4       	brge	.+10     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 432:	1a 19       	sub	r17, r10
 434:	04 c0       	rjmp	.+8      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 436:	ee 24       	eor	r14, r14
 438:	e3 94       	inc	r14
 43a:	01 c0       	rjmp	.+2      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 43c:	10 e0       	ldi	r17, 0x00	; 0
 43e:	77 fe       	sbrs	r7, 7
 440:	06 c0       	rjmp	.+12     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 442:	1a 14       	cp	r1, r10
 444:	1b 04       	cpc	r1, r11
 446:	34 f4       	brge	.+12     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 448:	c5 01       	movw	r24, r10
 44a:	01 96       	adiw	r24, 0x01	; 1
 44c:	05 c0       	rjmp	.+10     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 44e:	85 e0       	ldi	r24, 0x05	; 5
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	02 c0       	rjmp	.+4      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	01 11       	cpse	r16, r1
 45a:	01 96       	adiw	r24, 0x01	; 1
 45c:	11 23       	and	r17, r17
 45e:	31 f0       	breq	.+12     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 460:	21 2f       	mov	r18, r17
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	2f 5f       	subi	r18, 0xFF	; 255
 466:	3f 4f       	sbci	r19, 0xFF	; 255
 468:	82 0f       	add	r24, r18
 46a:	93 1f       	adc	r25, r19
 46c:	2f 2d       	mov	r18, r15
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	82 17       	cp	r24, r18
 472:	93 07       	cpc	r25, r19
 474:	14 f4       	brge	.+4      	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 476:	f8 1a       	sub	r15, r24
 478:	01 c0       	rjmp	.+2      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 47a:	f1 2c       	mov	r15, r1
 47c:	87 2d       	mov	r24, r7
 47e:	89 70       	andi	r24, 0x09	; 9
 480:	49 f4       	brne	.+18     	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 482:	ff 20       	and	r15, r15
 484:	39 f0       	breq	.+14     	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 486:	b6 01       	movw	r22, r12
 488:	80 e2       	ldi	r24, 0x20	; 32
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 490:	fa 94       	dec	r15
 492:	f7 cf       	rjmp	.-18     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 494:	00 23       	and	r16, r16
 496:	29 f0       	breq	.+10     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 498:	b6 01       	movw	r22, r12
 49a:	80 2f       	mov	r24, r16
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 4a2:	73 fc       	sbrc	r7, 3
 4a4:	09 c0       	rjmp	.+18     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 4a6:	ff 20       	and	r15, r15
 4a8:	39 f0       	breq	.+14     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 4aa:	b6 01       	movw	r22, r12
 4ac:	80 e3       	ldi	r24, 0x30	; 48
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 4b4:	fa 94       	dec	r15
 4b6:	f7 cf       	rjmp	.-18     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4b8:	77 fe       	sbrs	r7, 7
 4ba:	49 c0       	rjmp	.+146    	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
 4bc:	35 01       	movw	r6, r10
 4be:	b7 fe       	sbrs	r11, 7
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 4c2:	61 2c       	mov	r6, r1
 4c4:	71 2c       	mov	r7, r1
 4c6:	c5 01       	movw	r24, r10
 4c8:	86 19       	sub	r24, r6
 4ca:	97 09       	sbc	r25, r7
 4cc:	88 24       	eor	r8, r8
 4ce:	83 94       	inc	r8
 4d0:	91 2c       	mov	r9, r1
 4d2:	8c 0e       	add	r8, r28
 4d4:	9d 1e       	adc	r9, r29
 4d6:	88 0e       	add	r8, r24
 4d8:	99 1e       	adc	r9, r25
 4da:	f5 01       	movw	r30, r10
 4dc:	ee 19       	sub	r30, r14
 4de:	f1 09       	sbc	r31, r1
 4e0:	f9 8b       	std	Y+17, r31	; 0x11
 4e2:	e8 8b       	std	Y+16, r30	; 0x10
 4e4:	01 2f       	mov	r16, r17
 4e6:	10 e0       	ldi	r17, 0x00	; 0
 4e8:	11 95       	neg	r17
 4ea:	01 95       	neg	r16
 4ec:	11 09       	sbc	r17, r1
 4ee:	ff ef       	ldi	r31, 0xFF	; 255
 4f0:	6f 16       	cp	r6, r31
 4f2:	7f 06       	cpc	r7, r31
 4f4:	29 f4       	brne	.+10     	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 4f6:	b6 01       	movw	r22, r12
 4f8:	8e e2       	ldi	r24, 0x2E	; 46
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 500:	a6 14       	cp	r10, r6
 502:	b7 04       	cpc	r11, r7
 504:	44 f0       	brlt	.+16     	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
 506:	88 89       	ldd	r24, Y+16	; 0x10
 508:	99 89       	ldd	r25, Y+17	; 0x11
 50a:	86 15       	cp	r24, r6
 50c:	97 05       	cpc	r25, r7
 50e:	1c f4       	brge	.+6      	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
 510:	f4 01       	movw	r30, r8
 512:	81 81       	ldd	r24, Z+1	; 0x01
 514:	01 c0       	rjmp	.+2      	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
 516:	80 e3       	ldi	r24, 0x30	; 48
 518:	f1 e0       	ldi	r31, 0x01	; 1
 51a:	6f 1a       	sub	r6, r31
 51c:	71 08       	sbc	r7, r1
 51e:	2f ef       	ldi	r18, 0xFF	; 255
 520:	82 1a       	sub	r8, r18
 522:	92 0a       	sbc	r9, r18
 524:	60 16       	cp	r6, r16
 526:	71 06       	cpc	r7, r17
 528:	2c f0       	brlt	.+10     	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 52a:	b6 01       	movw	r22, r12
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 532:	dd cf       	rjmp	.-70     	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 534:	a6 14       	cp	r10, r6
 536:	b7 04       	cpc	r11, r7
 538:	39 f4       	brne	.+14     	; 0x548 <__EEPROM_REGION_LENGTH__+0x148>
 53a:	9a 81       	ldd	r25, Y+2	; 0x02
 53c:	96 33       	cpi	r25, 0x36	; 54
 53e:	18 f4       	brcc	.+6      	; 0x546 <__EEPROM_REGION_LENGTH__+0x146>
 540:	95 33       	cpi	r25, 0x35	; 53
 542:	11 f4       	brne	.+4      	; 0x548 <__EEPROM_REGION_LENGTH__+0x148>
 544:	54 fe       	sbrs	r5, 4
 546:	81 e3       	ldi	r24, 0x31	; 49
 548:	b6 01       	movw	r22, r12
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	51 c0       	rjmp	.+162    	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 54e:	8a 81       	ldd	r24, Y+2	; 0x02
 550:	81 33       	cpi	r24, 0x31	; 49
 552:	19 f0       	breq	.+6      	; 0x55a <__EEPROM_REGION_LENGTH__+0x15a>
 554:	95 2d       	mov	r25, r5
 556:	9f 7e       	andi	r25, 0xEF	; 239
 558:	59 2e       	mov	r5, r25
 55a:	b6 01       	movw	r22, r12
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 562:	11 11       	cpse	r17, r1
 564:	05 c0       	rjmp	.+10     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 566:	74 fc       	sbrc	r7, 4
 568:	1c c0       	rjmp	.+56     	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 56a:	85 e6       	ldi	r24, 0x65	; 101
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	1b c0       	rjmp	.+54     	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 570:	b6 01       	movw	r22, r12
 572:	8e e2       	ldi	r24, 0x2E	; 46
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 57a:	02 e0       	ldi	r16, 0x02	; 2
 57c:	01 0f       	add	r16, r17
 57e:	82 e0       	ldi	r24, 0x02	; 2
 580:	11 e0       	ldi	r17, 0x01	; 1
 582:	18 0f       	add	r17, r24
 584:	e1 e0       	ldi	r30, 0x01	; 1
 586:	f0 e0       	ldi	r31, 0x00	; 0
 588:	ec 0f       	add	r30, r28
 58a:	fd 1f       	adc	r31, r29
 58c:	e8 0f       	add	r30, r24
 58e:	f1 1d       	adc	r31, r1
 590:	80 81       	ld	r24, Z
 592:	b6 01       	movw	r22, r12
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 59a:	81 2f       	mov	r24, r17
 59c:	10 13       	cpse	r17, r16
 59e:	f0 cf       	rjmp	.-32     	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
 5a0:	e2 cf       	rjmp	.-60     	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
 5a2:	85 e4       	ldi	r24, 0x45	; 69
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	b6 01       	movw	r22, r12
 5a8:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 5ac:	b7 fc       	sbrc	r11, 7
 5ae:	05 c0       	rjmp	.+10     	; 0x5ba <__EEPROM_REGION_LENGTH__+0x1ba>
 5b0:	a1 14       	cp	r10, r1
 5b2:	b1 04       	cpc	r11, r1
 5b4:	39 f4       	brne	.+14     	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
 5b6:	54 fe       	sbrs	r5, 4
 5b8:	05 c0       	rjmp	.+10     	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
 5ba:	b1 94       	neg	r11
 5bc:	a1 94       	neg	r10
 5be:	b1 08       	sbc	r11, r1
 5c0:	8d e2       	ldi	r24, 0x2D	; 45
 5c2:	01 c0       	rjmp	.+2      	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
 5c4:	8b e2       	ldi	r24, 0x2B	; 43
 5c6:	b6 01       	movw	r22, r12
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 5ce:	80 e3       	ldi	r24, 0x30	; 48
 5d0:	ea e0       	ldi	r30, 0x0A	; 10
 5d2:	ae 16       	cp	r10, r30
 5d4:	b1 04       	cpc	r11, r1
 5d6:	2c f0       	brlt	.+10     	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
 5d8:	8f 5f       	subi	r24, 0xFF	; 255
 5da:	aa e0       	ldi	r26, 0x0A	; 10
 5dc:	aa 1a       	sub	r10, r26
 5de:	b1 08       	sbc	r11, r1
 5e0:	f7 cf       	rjmp	.-18     	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 5e2:	b6 01       	movw	r22, r12
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 5ea:	b6 01       	movw	r22, r12
 5ec:	c5 01       	movw	r24, r10
 5ee:	c0 96       	adiw	r24, 0x30	; 48
 5f0:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 5f4:	72 c1       	rjmp	.+740    	; 0x8da <__DATA_REGION_LENGTH__+0xda>
 5f6:	83 36       	cpi	r24, 0x63	; 99
 5f8:	31 f0       	breq	.+12     	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
 5fa:	83 37       	cpi	r24, 0x73	; 115
 5fc:	91 f0       	breq	.+36     	; 0x622 <__EEPROM_REGION_LENGTH__+0x222>
 5fe:	83 35       	cpi	r24, 0x53	; 83
 600:	09 f0       	breq	.+2      	; 0x604 <__EEPROM_REGION_LENGTH__+0x204>
 602:	5d c0       	rjmp	.+186    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 604:	24 c0       	rjmp	.+72     	; 0x64e <__EEPROM_REGION_LENGTH__+0x24e>
 606:	c5 01       	movw	r24, r10
 608:	02 96       	adiw	r24, 0x02	; 2
 60a:	9f 87       	std	Y+15, r25	; 0x0f
 60c:	8e 87       	std	Y+14, r24	; 0x0e
 60e:	f5 01       	movw	r30, r10
 610:	80 81       	ld	r24, Z
 612:	89 83       	std	Y+1, r24	; 0x01
 614:	6a 88       	ldd	r6, Y+18	; 0x12
 616:	7b 88       	ldd	r7, Y+19	; 0x13
 618:	8c 88       	ldd	r8, Y+20	; 0x14
 61a:	aa 24       	eor	r10, r10
 61c:	a3 94       	inc	r10
 61e:	b1 2c       	mov	r11, r1
 620:	14 c0       	rjmp	.+40     	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 622:	c5 01       	movw	r24, r10
 624:	03 96       	adiw	r24, 0x03	; 3
 626:	9f 87       	std	Y+15, r25	; 0x0f
 628:	8e 87       	std	Y+14, r24	; 0x0e
 62a:	f5 01       	movw	r30, r10
 62c:	60 80       	ld	r6, Z
 62e:	71 80       	ldd	r7, Z+1	; 0x01
 630:	82 80       	ldd	r8, Z+2	; 0x02
 632:	06 ff       	sbrs	r16, 6
 634:	03 c0       	rjmp	.+6      	; 0x63c <__EEPROM_REGION_LENGTH__+0x23c>
 636:	41 2f       	mov	r20, r17
 638:	50 e0       	ldi	r21, 0x00	; 0
 63a:	02 c0       	rjmp	.+4      	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
 63c:	4f ef       	ldi	r20, 0xFF	; 255
 63e:	5f ef       	ldi	r21, 0xFF	; 255
 640:	88 2d       	mov	r24, r8
 642:	b3 01       	movw	r22, r6
 644:	0e 94 a9 0b 	call	0x1752	; 0x1752 <strnlen>
 648:	5c 01       	movw	r10, r24
 64a:	0f 77       	andi	r16, 0x7F	; 127
 64c:	15 c0       	rjmp	.+42     	; 0x678 <__EEPROM_REGION_LENGTH__+0x278>
 64e:	c5 01       	movw	r24, r10
 650:	03 96       	adiw	r24, 0x03	; 3
 652:	9f 87       	std	Y+15, r25	; 0x0f
 654:	8e 87       	std	Y+14, r24	; 0x0e
 656:	f5 01       	movw	r30, r10
 658:	60 80       	ld	r6, Z
 65a:	71 80       	ldd	r7, Z+1	; 0x01
 65c:	82 80       	ldd	r8, Z+2	; 0x02
 65e:	06 ff       	sbrs	r16, 6
 660:	03 c0       	rjmp	.+6      	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
 662:	41 2f       	mov	r20, r17
 664:	50 e0       	ldi	r21, 0x00	; 0
 666:	02 c0       	rjmp	.+4      	; 0x66c <__EEPROM_REGION_LENGTH__+0x26c>
 668:	4f ef       	ldi	r20, 0xFF	; 255
 66a:	5f ef       	ldi	r21, 0xFF	; 255
 66c:	88 2d       	mov	r24, r8
 66e:	b3 01       	movw	r22, r6
 670:	0e 94 a9 0b 	call	0x1752	; 0x1752 <strnlen>
 674:	5c 01       	movw	r10, r24
 676:	00 68       	ori	r16, 0x80	; 128
 678:	03 fd       	sbrc	r16, 3
 67a:	1d c0       	rjmp	.+58     	; 0x6b6 <__EEPROM_REGION_LENGTH__+0x2b6>
 67c:	8f 2d       	mov	r24, r15
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	a8 16       	cp	r10, r24
 682:	b9 06       	cpc	r11, r25
 684:	c0 f4       	brcc	.+48     	; 0x6b6 <__EEPROM_REGION_LENGTH__+0x2b6>
 686:	b6 01       	movw	r22, r12
 688:	80 e2       	ldi	r24, 0x20	; 32
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 690:	fa 94       	dec	r15
 692:	f4 cf       	rjmp	.-24     	; 0x67c <__EEPROM_REGION_LENGTH__+0x27c>
 694:	f3 01       	movw	r30, r6
 696:	84 91       	lpm	r24, Z
 698:	87 fc       	sbrc	r8, 7
 69a:	80 81       	ld	r24, Z
 69c:	ff ef       	ldi	r31, 0xFF	; 255
 69e:	6f 1a       	sub	r6, r31
 6a0:	7f 0a       	sbc	r7, r31
 6a2:	8f 0a       	sbc	r8, r31
 6a4:	b6 01       	movw	r22, r12
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 6ac:	f1 10       	cpse	r15, r1
 6ae:	fa 94       	dec	r15
 6b0:	21 e0       	ldi	r18, 0x01	; 1
 6b2:	a2 1a       	sub	r10, r18
 6b4:	b1 08       	sbc	r11, r1
 6b6:	a1 14       	cp	r10, r1
 6b8:	b1 04       	cpc	r11, r1
 6ba:	61 f7       	brne	.-40     	; 0x694 <__EEPROM_REGION_LENGTH__+0x294>
 6bc:	0e c1       	rjmp	.+540    	; 0x8da <__DATA_REGION_LENGTH__+0xda>
 6be:	84 36       	cpi	r24, 0x64	; 100
 6c0:	11 f0       	breq	.+4      	; 0x6c6 <__EEPROM_REGION_LENGTH__+0x2c6>
 6c2:	89 36       	cpi	r24, 0x69	; 105
 6c4:	79 f5       	brne	.+94     	; 0x724 <__EEPROM_REGION_LENGTH__+0x324>
 6c6:	c5 01       	movw	r24, r10
 6c8:	07 ff       	sbrs	r16, 7
 6ca:	09 c0       	rjmp	.+18     	; 0x6de <__EEPROM_REGION_LENGTH__+0x2de>
 6cc:	04 96       	adiw	r24, 0x04	; 4
 6ce:	9f 87       	std	Y+15, r25	; 0x0f
 6d0:	8e 87       	std	Y+14, r24	; 0x0e
 6d2:	f5 01       	movw	r30, r10
 6d4:	60 81       	ld	r22, Z
 6d6:	71 81       	ldd	r23, Z+1	; 0x01
 6d8:	82 81       	ldd	r24, Z+2	; 0x02
 6da:	93 81       	ldd	r25, Z+3	; 0x03
 6dc:	0a c0       	rjmp	.+20     	; 0x6f2 <__EEPROM_REGION_LENGTH__+0x2f2>
 6de:	02 96       	adiw	r24, 0x02	; 2
 6e0:	9f 87       	std	Y+15, r25	; 0x0f
 6e2:	8e 87       	std	Y+14, r24	; 0x0e
 6e4:	f5 01       	movw	r30, r10
 6e6:	60 81       	ld	r22, Z
 6e8:	71 81       	ldd	r23, Z+1	; 0x01
 6ea:	07 2e       	mov	r0, r23
 6ec:	00 0c       	add	r0, r0
 6ee:	88 0b       	sbc	r24, r24
 6f0:	99 0b       	sbc	r25, r25
 6f2:	0f 76       	andi	r16, 0x6F	; 111
 6f4:	e0 2e       	mov	r14, r16
 6f6:	97 ff       	sbrs	r25, 7
 6f8:	0a c0       	rjmp	.+20     	; 0x70e <__EEPROM_REGION_LENGTH__+0x30e>
 6fa:	90 95       	com	r25
 6fc:	80 95       	com	r24
 6fe:	70 95       	com	r23
 700:	61 95       	neg	r22
 702:	7f 4f       	sbci	r23, 0xFF	; 255
 704:	8f 4f       	sbci	r24, 0xFF	; 255
 706:	9f 4f       	sbci	r25, 0xFF	; 255
 708:	f0 2f       	mov	r31, r16
 70a:	f0 68       	ori	r31, 0x80	; 128
 70c:	ef 2e       	mov	r14, r31
 70e:	2a e0       	ldi	r18, 0x0A	; 10
 710:	30 e0       	ldi	r19, 0x00	; 0
 712:	ae 01       	movw	r20, r28
 714:	4f 5f       	subi	r20, 0xFF	; 255
 716:	5f 4f       	sbci	r21, 0xFF	; 255
 718:	0e 94 58 08 	call	0x10b0	; 0x10b0 <__ultoa_invert>
 71c:	a8 2e       	mov	r10, r24
 71e:	2c 85       	ldd	r18, Y+12	; 0x0c
 720:	a2 1a       	sub	r10, r18
 722:	4b c0       	rjmp	.+150    	; 0x7ba <__EEPROM_REGION_LENGTH__+0x3ba>
 724:	85 37       	cpi	r24, 0x75	; 117
 726:	29 f4       	brne	.+10     	; 0x732 <__EEPROM_REGION_LENGTH__+0x332>
 728:	0f 7e       	andi	r16, 0xEF	; 239
 72a:	e0 2e       	mov	r14, r16
 72c:	2a e0       	ldi	r18, 0x0A	; 10
 72e:	30 e0       	ldi	r19, 0x00	; 0
 730:	25 c0       	rjmp	.+74     	; 0x77c <__EEPROM_REGION_LENGTH__+0x37c>
 732:	90 2f       	mov	r25, r16
 734:	99 7f       	andi	r25, 0xF9	; 249
 736:	e9 2e       	mov	r14, r25
 738:	8f 36       	cpi	r24, 0x6F	; 111
 73a:	c1 f0       	breq	.+48     	; 0x76c <__EEPROM_REGION_LENGTH__+0x36c>
 73c:	18 f4       	brcc	.+6      	; 0x744 <__EEPROM_REGION_LENGTH__+0x344>
 73e:	88 35       	cpi	r24, 0x58	; 88
 740:	79 f0       	breq	.+30     	; 0x760 <__EEPROM_REGION_LENGTH__+0x360>
 742:	d5 c0       	rjmp	.+426    	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 744:	80 37       	cpi	r24, 0x70	; 112
 746:	19 f0       	breq	.+6      	; 0x74e <__EEPROM_REGION_LENGTH__+0x34e>
 748:	88 37       	cpi	r24, 0x78	; 120
 74a:	21 f0       	breq	.+8      	; 0x754 <__EEPROM_REGION_LENGTH__+0x354>
 74c:	d0 c0       	rjmp	.+416    	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 74e:	a9 2f       	mov	r26, r25
 750:	a0 61       	ori	r26, 0x10	; 16
 752:	ea 2e       	mov	r14, r26
 754:	e4 fe       	sbrs	r14, 4
 756:	0d c0       	rjmp	.+26     	; 0x772 <__EEPROM_REGION_LENGTH__+0x372>
 758:	ee 2d       	mov	r30, r14
 75a:	e4 60       	ori	r30, 0x04	; 4
 75c:	ee 2e       	mov	r14, r30
 75e:	09 c0       	rjmp	.+18     	; 0x772 <__EEPROM_REGION_LENGTH__+0x372>
 760:	04 ff       	sbrs	r16, 4
 762:	0a c0       	rjmp	.+20     	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
 764:	f9 2f       	mov	r31, r25
 766:	f6 60       	ori	r31, 0x06	; 6
 768:	ef 2e       	mov	r14, r31
 76a:	06 c0       	rjmp	.+12     	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
 76c:	28 e0       	ldi	r18, 0x08	; 8
 76e:	30 e0       	ldi	r19, 0x00	; 0
 770:	05 c0       	rjmp	.+10     	; 0x77c <__EEPROM_REGION_LENGTH__+0x37c>
 772:	20 e1       	ldi	r18, 0x10	; 16
 774:	30 e0       	ldi	r19, 0x00	; 0
 776:	02 c0       	rjmp	.+4      	; 0x77c <__EEPROM_REGION_LENGTH__+0x37c>
 778:	20 e1       	ldi	r18, 0x10	; 16
 77a:	32 e0       	ldi	r19, 0x02	; 2
 77c:	c5 01       	movw	r24, r10
 77e:	e7 fe       	sbrs	r14, 7
 780:	09 c0       	rjmp	.+18     	; 0x794 <__EEPROM_REGION_LENGTH__+0x394>
 782:	04 96       	adiw	r24, 0x04	; 4
 784:	9f 87       	std	Y+15, r25	; 0x0f
 786:	8e 87       	std	Y+14, r24	; 0x0e
 788:	f5 01       	movw	r30, r10
 78a:	60 81       	ld	r22, Z
 78c:	71 81       	ldd	r23, Z+1	; 0x01
 78e:	82 81       	ldd	r24, Z+2	; 0x02
 790:	93 81       	ldd	r25, Z+3	; 0x03
 792:	08 c0       	rjmp	.+16     	; 0x7a4 <__EEPROM_REGION_LENGTH__+0x3a4>
 794:	02 96       	adiw	r24, 0x02	; 2
 796:	9f 87       	std	Y+15, r25	; 0x0f
 798:	8e 87       	std	Y+14, r24	; 0x0e
 79a:	f5 01       	movw	r30, r10
 79c:	60 81       	ld	r22, Z
 79e:	71 81       	ldd	r23, Z+1	; 0x01
 7a0:	80 e0       	ldi	r24, 0x00	; 0
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	ae 01       	movw	r20, r28
 7a6:	4f 5f       	subi	r20, 0xFF	; 255
 7a8:	5f 4f       	sbci	r21, 0xFF	; 255
 7aa:	0e 94 58 08 	call	0x10b0	; 0x10b0 <__ultoa_invert>
 7ae:	a8 2e       	mov	r10, r24
 7b0:	fc 85       	ldd	r31, Y+12	; 0x0c
 7b2:	af 1a       	sub	r10, r31
 7b4:	2e 2d       	mov	r18, r14
 7b6:	2f 77       	andi	r18, 0x7F	; 127
 7b8:	e2 2e       	mov	r14, r18
 7ba:	e6 fe       	sbrs	r14, 6
 7bc:	0b c0       	rjmp	.+22     	; 0x7d4 <__EEPROM_REGION_LENGTH__+0x3d4>
 7be:	0e 2d       	mov	r16, r14
 7c0:	0e 7f       	andi	r16, 0xFE	; 254
 7c2:	a1 16       	cp	r10, r17
 7c4:	50 f4       	brcc	.+20     	; 0x7da <__EEPROM_REGION_LENGTH__+0x3da>
 7c6:	e4 fe       	sbrs	r14, 4
 7c8:	0a c0       	rjmp	.+20     	; 0x7de <__EEPROM_REGION_LENGTH__+0x3de>
 7ca:	e2 fc       	sbrc	r14, 2
 7cc:	08 c0       	rjmp	.+16     	; 0x7de <__EEPROM_REGION_LENGTH__+0x3de>
 7ce:	0e 2d       	mov	r16, r14
 7d0:	0e 7e       	andi	r16, 0xEE	; 238
 7d2:	05 c0       	rjmp	.+10     	; 0x7de <__EEPROM_REGION_LENGTH__+0x3de>
 7d4:	ba 2c       	mov	r11, r10
 7d6:	0e 2d       	mov	r16, r14
 7d8:	03 c0       	rjmp	.+6      	; 0x7e0 <__EEPROM_REGION_LENGTH__+0x3e0>
 7da:	ba 2c       	mov	r11, r10
 7dc:	01 c0       	rjmp	.+2      	; 0x7e0 <__EEPROM_REGION_LENGTH__+0x3e0>
 7de:	b1 2e       	mov	r11, r17
 7e0:	04 ff       	sbrs	r16, 4
 7e2:	0d c0       	rjmp	.+26     	; 0x7fe <__EEPROM_REGION_LENGTH__+0x3fe>
 7e4:	fe 01       	movw	r30, r28
 7e6:	ea 0d       	add	r30, r10
 7e8:	f1 1d       	adc	r31, r1
 7ea:	80 81       	ld	r24, Z
 7ec:	80 33       	cpi	r24, 0x30	; 48
 7ee:	11 f4       	brne	.+4      	; 0x7f4 <__EEPROM_REGION_LENGTH__+0x3f4>
 7f0:	09 7e       	andi	r16, 0xE9	; 233
 7f2:	09 c0       	rjmp	.+18     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7f4:	02 ff       	sbrs	r16, 2
 7f6:	06 c0       	rjmp	.+12     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7f8:	b3 94       	inc	r11
 7fa:	b3 94       	inc	r11
 7fc:	04 c0       	rjmp	.+8      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7fe:	80 2f       	mov	r24, r16
 800:	86 78       	andi	r24, 0x86	; 134
 802:	09 f0       	breq	.+2      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 804:	b3 94       	inc	r11
 806:	03 fd       	sbrc	r16, 3
 808:	11 c0       	rjmp	.+34     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 80a:	00 ff       	sbrs	r16, 0
 80c:	06 c0       	rjmp	.+12     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 80e:	bf 14       	cp	r11, r15
 810:	88 f4       	brcc	.+34     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 812:	fa 0c       	add	r15, r10
 814:	1f 2d       	mov	r17, r15
 816:	1b 19       	sub	r17, r11
 818:	0e c0       	rjmp	.+28     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 81a:	bf 14       	cp	r11, r15
 81c:	60 f4       	brcc	.+24     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 81e:	b6 01       	movw	r22, r12
 820:	80 e2       	ldi	r24, 0x20	; 32
 822:	90 e0       	ldi	r25, 0x00	; 0
 824:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 828:	b3 94       	inc	r11
 82a:	f7 cf       	rjmp	.-18     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 82c:	bf 14       	cp	r11, r15
 82e:	18 f4       	brcc	.+6      	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 830:	fb 18       	sub	r15, r11
 832:	02 c0       	rjmp	.+4      	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 834:	1a 2d       	mov	r17, r10
 836:	f1 2c       	mov	r15, r1
 838:	04 ff       	sbrs	r16, 4
 83a:	10 c0       	rjmp	.+32     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 83c:	b6 01       	movw	r22, r12
 83e:	80 e3       	ldi	r24, 0x30	; 48
 840:	90 e0       	ldi	r25, 0x00	; 0
 842:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 846:	02 ff       	sbrs	r16, 2
 848:	17 c0       	rjmp	.+46     	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 84a:	01 fd       	sbrc	r16, 1
 84c:	03 c0       	rjmp	.+6      	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 84e:	88 e7       	ldi	r24, 0x78	; 120
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	02 c0       	rjmp	.+4      	; 0x858 <__DATA_REGION_LENGTH__+0x58>
 854:	88 e5       	ldi	r24, 0x58	; 88
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	b6 01       	movw	r22, r12
 85a:	0c c0       	rjmp	.+24     	; 0x874 <__DATA_REGION_LENGTH__+0x74>
 85c:	80 2f       	mov	r24, r16
 85e:	86 78       	andi	r24, 0x86	; 134
 860:	59 f0       	breq	.+22     	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 862:	01 ff       	sbrs	r16, 1
 864:	02 c0       	rjmp	.+4      	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 866:	8b e2       	ldi	r24, 0x2B	; 43
 868:	01 c0       	rjmp	.+2      	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
 86a:	80 e2       	ldi	r24, 0x20	; 32
 86c:	07 fd       	sbrc	r16, 7
 86e:	8d e2       	ldi	r24, 0x2D	; 45
 870:	b6 01       	movw	r22, r12
 872:	90 e0       	ldi	r25, 0x00	; 0
 874:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 878:	a1 16       	cp	r10, r17
 87a:	38 f4       	brcc	.+14     	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
 87c:	b6 01       	movw	r22, r12
 87e:	80 e3       	ldi	r24, 0x30	; 48
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 886:	11 50       	subi	r17, 0x01	; 1
 888:	f7 cf       	rjmp	.-18     	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 88a:	aa 94       	dec	r10
 88c:	e1 e0       	ldi	r30, 0x01	; 1
 88e:	f0 e0       	ldi	r31, 0x00	; 0
 890:	ec 0f       	add	r30, r28
 892:	fd 1f       	adc	r31, r29
 894:	ea 0d       	add	r30, r10
 896:	f1 1d       	adc	r31, r1
 898:	80 81       	ld	r24, Z
 89a:	b6 01       	movw	r22, r12
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 8a2:	a1 10       	cpse	r10, r1
 8a4:	f2 cf       	rjmp	.-28     	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
 8a6:	19 c0       	rjmp	.+50     	; 0x8da <__DATA_REGION_LENGTH__+0xda>
 8a8:	f4 e0       	ldi	r31, 0x04	; 4
 8aa:	ff 15       	cp	r31, r15
 8ac:	80 f5       	brcc	.+96     	; 0x90e <__stack+0xf>
 8ae:	84 e0       	ldi	r24, 0x04	; 4
 8b0:	f8 1a       	sub	r15, r24
 8b2:	73 fe       	sbrs	r7, 3
 8b4:	23 c0       	rjmp	.+70     	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 8b6:	01 11       	cpse	r16, r1
 8b8:	2b c0       	rjmp	.+86     	; 0x910 <__stack+0x11>
 8ba:	53 fe       	sbrs	r5, 3
 8bc:	2f c0       	rjmp	.+94     	; 0x91c <__stack+0x1d>
 8be:	5d e0       	ldi	r21, 0x0D	; 13
 8c0:	85 2e       	mov	r8, r21
 8c2:	52 e0       	ldi	r21, 0x02	; 2
 8c4:	95 2e       	mov	r9, r21
 8c6:	50 e0       	ldi	r21, 0x00	; 0
 8c8:	a5 2e       	mov	r10, r21
 8ca:	07 2d       	mov	r16, r7
 8cc:	00 71       	andi	r16, 0x10	; 16
 8ce:	f4 01       	movw	r30, r8
 8d0:	84 91       	lpm	r24, Z
 8d2:	a7 fc       	sbrc	r10, 7
 8d4:	80 81       	ld	r24, Z
 8d6:	81 11       	cpse	r24, r1
 8d8:	28 c0       	rjmp	.+80     	; 0x92a <__stack+0x2b>
 8da:	ff 20       	and	r15, r15
 8dc:	09 f4       	brne	.+2      	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
 8de:	d2 cc       	rjmp	.-1628   	; 0x284 <vfprintf+0x72>
 8e0:	b6 01       	movw	r22, r12
 8e2:	80 e2       	ldi	r24, 0x20	; 32
 8e4:	90 e0       	ldi	r25, 0x00	; 0
 8e6:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 8ea:	fa 94       	dec	r15
 8ec:	f6 cf       	rjmp	.-20     	; 0x8da <__DATA_REGION_LENGTH__+0xda>
 8ee:	f6 01       	movw	r30, r12
 8f0:	87 81       	ldd	r24, Z+7	; 0x07
 8f2:	90 85       	ldd	r25, Z+8	; 0x08
 8f4:	2c c0       	rjmp	.+88     	; 0x94e <__stack+0x4f>
 8f6:	8f ef       	ldi	r24, 0xFF	; 255
 8f8:	9f ef       	ldi	r25, 0xFF	; 255
 8fa:	29 c0       	rjmp	.+82     	; 0x94e <__stack+0x4f>
 8fc:	b6 01       	movw	r22, r12
 8fe:	80 e2       	ldi	r24, 0x20	; 32
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 906:	fa 94       	dec	r15
 908:	f1 10       	cpse	r15, r1
 90a:	f8 cf       	rjmp	.-16     	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 90c:	d4 cf       	rjmp	.-88     	; 0x8b6 <__DATA_REGION_LENGTH__+0xb6>
 90e:	f1 2c       	mov	r15, r1
 910:	b6 01       	movw	r22, r12
 912:	80 2f       	mov	r24, r16
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 91a:	cf cf       	rjmp	.-98     	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 91c:	49 e0       	ldi	r20, 0x09	; 9
 91e:	84 2e       	mov	r8, r20
 920:	42 e0       	ldi	r20, 0x02	; 2
 922:	94 2e       	mov	r9, r20
 924:	40 e0       	ldi	r20, 0x00	; 0
 926:	a4 2e       	mov	r10, r20
 928:	d0 cf       	rjmp	.-96     	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 92a:	01 11       	cpse	r16, r1
 92c:	80 52       	subi	r24, 0x20	; 32
 92e:	b6 01       	movw	r22, r12
 930:	90 e0       	ldi	r25, 0x00	; 0
 932:	0e 94 7d 09 	call	0x12fa	; 0x12fa <fputc>
 936:	ff ef       	ldi	r31, 0xFF	; 255
 938:	8f 1a       	sub	r8, r31
 93a:	9f 0a       	sbc	r9, r31
 93c:	af 0a       	sbc	r10, r31
 93e:	c7 cf       	rjmp	.-114    	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 940:	23 e0       	ldi	r18, 0x03	; 3
 942:	2f 15       	cp	r18, r15
 944:	10 f4       	brcc	.+4      	; 0x94a <__stack+0x4b>
 946:	83 e0       	ldi	r24, 0x03	; 3
 948:	b3 cf       	rjmp	.-154    	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
 94a:	f1 2c       	mov	r15, r1
 94c:	b6 cf       	rjmp	.-148    	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 94e:	64 96       	adiw	r28, 0x14	; 20
 950:	e2 e1       	ldi	r30, 0x12	; 18
 952:	0c 94 8e 0b 	jmp	0x171c	; 0x171c <__epilogue_restores__>

Disassembly of section .text.libgcc.prologue:

000016ac <__prologue_saves__>:
    16ac:	2f 92       	push	r2
    16ae:	3f 92       	push	r3
    16b0:	4f 92       	push	r4
    16b2:	5f 92       	push	r5
    16b4:	6f 92       	push	r6
    16b6:	7f 92       	push	r7
    16b8:	8f 92       	push	r8
    16ba:	9f 92       	push	r9
    16bc:	af 92       	push	r10
    16be:	bf 92       	push	r11
    16c0:	cf 92       	push	r12
    16c2:	df 92       	push	r13
    16c4:	ef 92       	push	r14
    16c6:	ff 92       	push	r15
    16c8:	0f 93       	push	r16
    16ca:	1f 93       	push	r17
    16cc:	cf 93       	push	r28
    16ce:	df 93       	push	r29
    16d0:	cd b7       	in	r28, 0x3d	; 61
    16d2:	de b7       	in	r29, 0x3e	; 62
    16d4:	ca 1b       	sub	r28, r26
    16d6:	db 0b       	sbc	r29, r27
    16d8:	0f b6       	in	r0, 0x3f	; 63
    16da:	f8 94       	cli
    16dc:	de bf       	out	0x3e, r29	; 62
    16de:	0f be       	out	0x3f, r0	; 63
    16e0:	cd bf       	out	0x3d, r28	; 61
    16e2:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

0000171c <__epilogue_restores__>:
    171c:	2a 88       	ldd	r2, Y+18	; 0x12
    171e:	39 88       	ldd	r3, Y+17	; 0x11
    1720:	48 88       	ldd	r4, Y+16	; 0x10
    1722:	5f 84       	ldd	r5, Y+15	; 0x0f
    1724:	6e 84       	ldd	r6, Y+14	; 0x0e
    1726:	7d 84       	ldd	r7, Y+13	; 0x0d
    1728:	8c 84       	ldd	r8, Y+12	; 0x0c
    172a:	9b 84       	ldd	r9, Y+11	; 0x0b
    172c:	aa 84       	ldd	r10, Y+10	; 0x0a
    172e:	b9 84       	ldd	r11, Y+9	; 0x09
    1730:	c8 84       	ldd	r12, Y+8	; 0x08
    1732:	df 80       	ldd	r13, Y+7	; 0x07
    1734:	ee 80       	ldd	r14, Y+6	; 0x06
    1736:	fd 80       	ldd	r15, Y+5	; 0x05
    1738:	0c 81       	ldd	r16, Y+4	; 0x04
    173a:	1b 81       	ldd	r17, Y+3	; 0x03
    173c:	aa 81       	ldd	r26, Y+2	; 0x02
    173e:	b9 81       	ldd	r27, Y+1	; 0x01
    1740:	ce 0f       	add	r28, r30
    1742:	d1 1d       	adc	r29, r1
    1744:	0f b6       	in	r0, 0x3f	; 63
    1746:	f8 94       	cli
    1748:	de bf       	out	0x3e, r29	; 62
    174a:	0f be       	out	0x3f, r0	; 63
    174c:	cd bf       	out	0x3d, r28	; 61
    174e:	ed 01       	movw	r28, r26
    1750:	08 95       	ret

Disassembly of section .text.avrlibc:

00000b98 <__ftoa_engine>:
 b98:	28 30       	cpi	r18, 0x08	; 8
 b9a:	08 f0       	brcs	.+2      	; 0xb9e <__ftoa_engine+0x6>
 b9c:	27 e0       	ldi	r18, 0x07	; 7
 b9e:	33 27       	eor	r19, r19
 ba0:	da 01       	movw	r26, r20
 ba2:	99 0f       	add	r25, r25
 ba4:	31 1d       	adc	r19, r1
 ba6:	87 fd       	sbrc	r24, 7
 ba8:	91 60       	ori	r25, 0x01	; 1
 baa:	00 96       	adiw	r24, 0x00	; 0
 bac:	61 05       	cpc	r22, r1
 bae:	71 05       	cpc	r23, r1
 bb0:	39 f4       	brne	.+14     	; 0xbc0 <__ftoa_engine+0x28>
 bb2:	32 60       	ori	r19, 0x02	; 2
 bb4:	2e 5f       	subi	r18, 0xFE	; 254
 bb6:	3d 93       	st	X+, r19
 bb8:	30 e3       	ldi	r19, 0x30	; 48
 bba:	2a 95       	dec	r18
 bbc:	e1 f7       	brne	.-8      	; 0xbb6 <__ftoa_engine+0x1e>
 bbe:	08 95       	ret
 bc0:	9f 3f       	cpi	r25, 0xFF	; 255
 bc2:	30 f0       	brcs	.+12     	; 0xbd0 <__ftoa_engine+0x38>
 bc4:	80 38       	cpi	r24, 0x80	; 128
 bc6:	71 05       	cpc	r23, r1
 bc8:	61 05       	cpc	r22, r1
 bca:	09 f0       	breq	.+2      	; 0xbce <__ftoa_engine+0x36>
 bcc:	3c 5f       	subi	r19, 0xFC	; 252
 bce:	3c 5f       	subi	r19, 0xFC	; 252
 bd0:	3d 93       	st	X+, r19
 bd2:	91 30       	cpi	r25, 0x01	; 1
 bd4:	08 f0       	brcs	.+2      	; 0xbd8 <__ftoa_engine+0x40>
 bd6:	80 68       	ori	r24, 0x80	; 128
 bd8:	91 1d       	adc	r25, r1
 bda:	df 93       	push	r29
 bdc:	cf 93       	push	r28
 bde:	1f 93       	push	r17
 be0:	0f 93       	push	r16
 be2:	ff 92       	push	r15
 be4:	ef 92       	push	r14
 be6:	19 2f       	mov	r17, r25
 be8:	98 7f       	andi	r25, 0xF8	; 248
 bea:	96 95       	lsr	r25
 bec:	e9 2f       	mov	r30, r25
 bee:	96 95       	lsr	r25
 bf0:	96 95       	lsr	r25
 bf2:	e9 0f       	add	r30, r25
 bf4:	ff 27       	eor	r31, r31
 bf6:	ec 52       	subi	r30, 0x2C	; 44
 bf8:	ff 4f       	sbci	r31, 0xFF	; 255
 bfa:	99 27       	eor	r25, r25
 bfc:	33 27       	eor	r19, r19
 bfe:	ee 24       	eor	r14, r14
 c00:	ff 24       	eor	r15, r15
 c02:	a7 01       	movw	r20, r14
 c04:	e7 01       	movw	r28, r14
 c06:	05 90       	lpm	r0, Z+
 c08:	08 94       	sec
 c0a:	07 94       	ror	r0
 c0c:	28 f4       	brcc	.+10     	; 0xc18 <__ftoa_engine+0x80>
 c0e:	36 0f       	add	r19, r22
 c10:	e7 1e       	adc	r14, r23
 c12:	f8 1e       	adc	r15, r24
 c14:	49 1f       	adc	r20, r25
 c16:	51 1d       	adc	r21, r1
 c18:	66 0f       	add	r22, r22
 c1a:	77 1f       	adc	r23, r23
 c1c:	88 1f       	adc	r24, r24
 c1e:	99 1f       	adc	r25, r25
 c20:	06 94       	lsr	r0
 c22:	a1 f7       	brne	.-24     	; 0xc0c <__ftoa_engine+0x74>
 c24:	05 90       	lpm	r0, Z+
 c26:	07 94       	ror	r0
 c28:	28 f4       	brcc	.+10     	; 0xc34 <__ftoa_engine+0x9c>
 c2a:	e7 0e       	add	r14, r23
 c2c:	f8 1e       	adc	r15, r24
 c2e:	49 1f       	adc	r20, r25
 c30:	56 1f       	adc	r21, r22
 c32:	c1 1d       	adc	r28, r1
 c34:	77 0f       	add	r23, r23
 c36:	88 1f       	adc	r24, r24
 c38:	99 1f       	adc	r25, r25
 c3a:	66 1f       	adc	r22, r22
 c3c:	06 94       	lsr	r0
 c3e:	a1 f7       	brne	.-24     	; 0xc28 <__ftoa_engine+0x90>
 c40:	05 90       	lpm	r0, Z+
 c42:	07 94       	ror	r0
 c44:	28 f4       	brcc	.+10     	; 0xc50 <__ftoa_engine+0xb8>
 c46:	f8 0e       	add	r15, r24
 c48:	49 1f       	adc	r20, r25
 c4a:	56 1f       	adc	r21, r22
 c4c:	c7 1f       	adc	r28, r23
 c4e:	d1 1d       	adc	r29, r1
 c50:	88 0f       	add	r24, r24
 c52:	99 1f       	adc	r25, r25
 c54:	66 1f       	adc	r22, r22
 c56:	77 1f       	adc	r23, r23
 c58:	06 94       	lsr	r0
 c5a:	a1 f7       	brne	.-24     	; 0xc44 <__ftoa_engine+0xac>
 c5c:	05 90       	lpm	r0, Z+
 c5e:	07 94       	ror	r0
 c60:	20 f4       	brcc	.+8      	; 0xc6a <__ftoa_engine+0xd2>
 c62:	49 0f       	add	r20, r25
 c64:	56 1f       	adc	r21, r22
 c66:	c7 1f       	adc	r28, r23
 c68:	d8 1f       	adc	r29, r24
 c6a:	99 0f       	add	r25, r25
 c6c:	66 1f       	adc	r22, r22
 c6e:	77 1f       	adc	r23, r23
 c70:	88 1f       	adc	r24, r24
 c72:	06 94       	lsr	r0
 c74:	a9 f7       	brne	.-22     	; 0xc60 <__ftoa_engine+0xc8>
 c76:	84 91       	lpm	r24, Z
 c78:	10 95       	com	r17
 c7a:	17 70       	andi	r17, 0x07	; 7
 c7c:	41 f0       	breq	.+16     	; 0xc8e <__ftoa_engine+0xf6>
 c7e:	d6 95       	lsr	r29
 c80:	c7 95       	ror	r28
 c82:	57 95       	ror	r21
 c84:	47 95       	ror	r20
 c86:	f7 94       	ror	r15
 c88:	e7 94       	ror	r14
 c8a:	1a 95       	dec	r17
 c8c:	c1 f7       	brne	.-16     	; 0xc7e <__ftoa_engine+0xe6>
 c8e:	ea e7       	ldi	r30, 0x7A	; 122
 c90:	f0 e0       	ldi	r31, 0x00	; 0
 c92:	68 94       	set
 c94:	15 90       	lpm	r1, Z+
 c96:	15 91       	lpm	r17, Z+
 c98:	35 91       	lpm	r19, Z+
 c9a:	65 91       	lpm	r22, Z+
 c9c:	95 91       	lpm	r25, Z+
 c9e:	05 90       	lpm	r0, Z+
 ca0:	7f e2       	ldi	r23, 0x2F	; 47
 ca2:	73 95       	inc	r23
 ca4:	e1 18       	sub	r14, r1
 ca6:	f1 0a       	sbc	r15, r17
 ca8:	43 0b       	sbc	r20, r19
 caa:	56 0b       	sbc	r21, r22
 cac:	c9 0b       	sbc	r28, r25
 cae:	d0 09       	sbc	r29, r0
 cb0:	c0 f7       	brcc	.-16     	; 0xca2 <__ftoa_engine+0x10a>
 cb2:	e1 0c       	add	r14, r1
 cb4:	f1 1e       	adc	r15, r17
 cb6:	43 1f       	adc	r20, r19
 cb8:	56 1f       	adc	r21, r22
 cba:	c9 1f       	adc	r28, r25
 cbc:	d0 1d       	adc	r29, r0
 cbe:	7e f4       	brtc	.+30     	; 0xcde <__ftoa_engine+0x146>
 cc0:	70 33       	cpi	r23, 0x30	; 48
 cc2:	11 f4       	brne	.+4      	; 0xcc8 <__ftoa_engine+0x130>
 cc4:	8a 95       	dec	r24
 cc6:	e6 cf       	rjmp	.-52     	; 0xc94 <__ftoa_engine+0xfc>
 cc8:	e8 94       	clt
 cca:	01 50       	subi	r16, 0x01	; 1
 ccc:	30 f0       	brcs	.+12     	; 0xcda <__ftoa_engine+0x142>
 cce:	08 0f       	add	r16, r24
 cd0:	0a f4       	brpl	.+2      	; 0xcd4 <__ftoa_engine+0x13c>
 cd2:	00 27       	eor	r16, r16
 cd4:	02 17       	cp	r16, r18
 cd6:	08 f4       	brcc	.+2      	; 0xcda <__ftoa_engine+0x142>
 cd8:	20 2f       	mov	r18, r16
 cda:	23 95       	inc	r18
 cdc:	02 2f       	mov	r16, r18
 cde:	7a 33       	cpi	r23, 0x3A	; 58
 ce0:	28 f0       	brcs	.+10     	; 0xcec <__ftoa_engine+0x154>
 ce2:	79 e3       	ldi	r23, 0x39	; 57
 ce4:	7d 93       	st	X+, r23
 ce6:	2a 95       	dec	r18
 ce8:	e9 f7       	brne	.-6      	; 0xce4 <__ftoa_engine+0x14c>
 cea:	10 c0       	rjmp	.+32     	; 0xd0c <__ftoa_engine+0x174>
 cec:	7d 93       	st	X+, r23
 cee:	2a 95       	dec	r18
 cf0:	89 f6       	brne	.-94     	; 0xc94 <__ftoa_engine+0xfc>
 cf2:	06 94       	lsr	r0
 cf4:	97 95       	ror	r25
 cf6:	67 95       	ror	r22
 cf8:	37 95       	ror	r19
 cfa:	17 95       	ror	r17
 cfc:	17 94       	ror	r1
 cfe:	e1 18       	sub	r14, r1
 d00:	f1 0a       	sbc	r15, r17
 d02:	43 0b       	sbc	r20, r19
 d04:	56 0b       	sbc	r21, r22
 d06:	c9 0b       	sbc	r28, r25
 d08:	d0 09       	sbc	r29, r0
 d0a:	98 f0       	brcs	.+38     	; 0xd32 <__ftoa_engine+0x19a>
 d0c:	23 95       	inc	r18
 d0e:	7e 91       	ld	r23, -X
 d10:	73 95       	inc	r23
 d12:	7a 33       	cpi	r23, 0x3A	; 58
 d14:	08 f0       	brcs	.+2      	; 0xd18 <__ftoa_engine+0x180>
 d16:	70 e3       	ldi	r23, 0x30	; 48
 d18:	7c 93       	st	X, r23
 d1a:	20 13       	cpse	r18, r16
 d1c:	b8 f7       	brcc	.-18     	; 0xd0c <__ftoa_engine+0x174>
 d1e:	7e 91       	ld	r23, -X
 d20:	70 61       	ori	r23, 0x10	; 16
 d22:	7d 93       	st	X+, r23
 d24:	30 f0       	brcs	.+12     	; 0xd32 <__ftoa_engine+0x19a>
 d26:	83 95       	inc	r24
 d28:	71 e3       	ldi	r23, 0x31	; 49
 d2a:	7d 93       	st	X+, r23
 d2c:	70 e3       	ldi	r23, 0x30	; 48
 d2e:	2a 95       	dec	r18
 d30:	e1 f7       	brne	.-8      	; 0xd2a <__ftoa_engine+0x192>
 d32:	11 24       	eor	r1, r1
 d34:	ef 90       	pop	r14
 d36:	ff 90       	pop	r15
 d38:	0f 91       	pop	r16
 d3a:	1f 91       	pop	r17
 d3c:	cf 91       	pop	r28
 d3e:	df 91       	pop	r29
 d40:	99 27       	eor	r25, r25
 d42:	87 fd       	sbrc	r24, 7
 d44:	90 95       	com	r25
 d46:	08 95       	ret

Disassembly of section .text.avrlibc:

00001752 <strnlen>:
    1752:	cf 92       	push	r12
    1754:	df 92       	push	r13
    1756:	ef 92       	push	r14
    1758:	6b 01       	movw	r12, r22
    175a:	e8 2e       	mov	r14, r24
    175c:	a8 2f       	mov	r26, r24
    175e:	cb 01       	movw	r24, r22
    1760:	41 15       	cp	r20, r1
    1762:	51 05       	cpc	r21, r1
    1764:	31 f4       	brne	.+12     	; 0x1772 <strnlen+0x20>
    1766:	8c 19       	sub	r24, r12
    1768:	9d 09       	sbc	r25, r13
    176a:	ef 90       	pop	r14
    176c:	df 90       	pop	r13
    176e:	cf 90       	pop	r12
    1770:	08 95       	ret
    1772:	fc 01       	movw	r30, r24
    1774:	24 91       	lpm	r18, Z
    1776:	a7 fd       	sbrc	r26, 7
    1778:	20 81       	ld	r18, Z
    177a:	22 23       	and	r18, r18
    177c:	a1 f3       	breq	.-24     	; 0x1766 <strnlen+0x14>
    177e:	01 96       	adiw	r24, 0x01	; 1
    1780:	a1 1d       	adc	r26, r1
    1782:	41 50       	subi	r20, 0x01	; 1
    1784:	51 09       	sbc	r21, r1
    1786:	ec cf       	rjmp	.-40     	; 0x1760 <strnlen+0xe>

Disassembly of section .text.avrlibc:

0000116c <fdevopen>:
    116c:	0f 93       	push	r16
    116e:	1f 93       	push	r17
    1170:	cf 93       	push	r28
    1172:	df 93       	push	r29
    1174:	00 97       	sbiw	r24, 0x00	; 0
    1176:	31 f4       	brne	.+12     	; 0x1184 <fdevopen+0x18>
    1178:	61 15       	cp	r22, r1
    117a:	71 05       	cpc	r23, r1
    117c:	19 f4       	brne	.+6      	; 0x1184 <fdevopen+0x18>
    117e:	80 e0       	ldi	r24, 0x00	; 0
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	3b c0       	rjmp	.+118    	; 0x11fa <fdevopen+0x8e>
    1184:	8b 01       	movw	r16, r22
    1186:	ec 01       	movw	r28, r24
    1188:	6f e0       	ldi	r22, 0x0F	; 15
    118a:	70 e0       	ldi	r23, 0x00	; 0
    118c:	81 e0       	ldi	r24, 0x01	; 1
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	0e 94 72 0b 	call	0x16e4	; 0x16e4 <calloc>
    1194:	fc 01       	movw	r30, r24
    1196:	89 2b       	or	r24, r25
    1198:	91 f3       	breq	.-28     	; 0x117e <fdevopen+0x12>
    119a:	80 e8       	ldi	r24, 0x80	; 128
    119c:	84 83       	std	Z+4, r24	; 0x04
    119e:	01 15       	cp	r16, r1
    11a0:	11 05       	cpc	r17, r1
    11a2:	69 f0       	breq	.+26     	; 0x11be <fdevopen+0x52>
    11a4:	14 87       	std	Z+12, r17	; 0x0c
    11a6:	03 87       	std	Z+11, r16	; 0x0b
    11a8:	81 e8       	ldi	r24, 0x81	; 129
    11aa:	84 83       	std	Z+4, r24	; 0x04
    11ac:	a0 e0       	ldi	r26, 0x00	; 0
    11ae:	b1 e0       	ldi	r27, 0x01	; 1
    11b0:	8d 91       	ld	r24, X+
    11b2:	9c 91       	ld	r25, X
    11b4:	11 97       	sbiw	r26, 0x01	; 1
    11b6:	89 2b       	or	r24, r25
    11b8:	11 f4       	brne	.+4      	; 0x11be <fdevopen+0x52>
    11ba:	ed 93       	st	X+, r30
    11bc:	fc 93       	st	X, r31
    11be:	20 97       	sbiw	r28, 0x00	; 0
    11c0:	d9 f0       	breq	.+54     	; 0x11f8 <fdevopen+0x8c>
    11c2:	d2 87       	std	Z+10, r29	; 0x0a
    11c4:	c1 87       	std	Z+9, r28	; 0x09
    11c6:	84 81       	ldd	r24, Z+4	; 0x04
    11c8:	82 60       	ori	r24, 0x02	; 2
    11ca:	84 83       	std	Z+4, r24	; 0x04
    11cc:	a0 e0       	ldi	r26, 0x00	; 0
    11ce:	b1 e0       	ldi	r27, 0x01	; 1
    11d0:	12 96       	adiw	r26, 0x02	; 2
    11d2:	8d 91       	ld	r24, X+
    11d4:	9c 91       	ld	r25, X
    11d6:	13 97       	sbiw	r26, 0x03	; 3
    11d8:	89 2b       	or	r24, r25
    11da:	71 f4       	brne	.+28     	; 0x11f8 <fdevopen+0x8c>
    11dc:	13 96       	adiw	r26, 0x03	; 3
    11de:	fc 93       	st	X, r31
    11e0:	ee 93       	st	-X, r30
    11e2:	12 97       	sbiw	r26, 0x02	; 2
    11e4:	14 96       	adiw	r26, 0x04	; 4
    11e6:	8d 91       	ld	r24, X+
    11e8:	9c 91       	ld	r25, X
    11ea:	15 97       	sbiw	r26, 0x05	; 5
    11ec:	89 2b       	or	r24, r25
    11ee:	21 f4       	brne	.+8      	; 0x11f8 <fdevopen+0x8c>
    11f0:	15 96       	adiw	r26, 0x05	; 5
    11f2:	fc 93       	st	X, r31
    11f4:	ee 93       	st	-X, r30
    11f6:	14 97       	sbiw	r26, 0x04	; 4
    11f8:	cf 01       	movw	r24, r30
    11fa:	df 91       	pop	r29
    11fc:	cf 91       	pop	r28
    11fe:	1f 91       	pop	r17
    1200:	0f 91       	pop	r16
    1202:	08 95       	ret

Disassembly of section .text.avrlibc:

000012fa <fputc>:
    12fa:	0f 93       	push	r16
    12fc:	1f 93       	push	r17
    12fe:	cf 93       	push	r28
    1300:	df 93       	push	r29
    1302:	fb 01       	movw	r30, r22
    1304:	24 81       	ldd	r18, Z+4	; 0x04
    1306:	21 fd       	sbrc	r18, 1
    1308:	03 c0       	rjmp	.+6      	; 0x1310 <fputc+0x16>
    130a:	8f ef       	ldi	r24, 0xFF	; 255
    130c:	9f ef       	ldi	r25, 0xFF	; 255
    130e:	2c c0       	rjmp	.+88     	; 0x1368 <fputc+0x6e>
    1310:	22 ff       	sbrs	r18, 2
    1312:	16 c0       	rjmp	.+44     	; 0x1340 <fputc+0x46>
    1314:	47 81       	ldd	r20, Z+7	; 0x07
    1316:	50 85       	ldd	r21, Z+8	; 0x08
    1318:	25 81       	ldd	r18, Z+5	; 0x05
    131a:	36 81       	ldd	r19, Z+6	; 0x06
    131c:	42 17       	cp	r20, r18
    131e:	53 07       	cpc	r21, r19
    1320:	44 f4       	brge	.+16     	; 0x1332 <fputc+0x38>
    1322:	a0 81       	ld	r26, Z
    1324:	b1 81       	ldd	r27, Z+1	; 0x01
    1326:	9d 01       	movw	r18, r26
    1328:	2f 5f       	subi	r18, 0xFF	; 255
    132a:	3f 4f       	sbci	r19, 0xFF	; 255
    132c:	31 83       	std	Z+1, r19	; 0x01
    132e:	20 83       	st	Z, r18
    1330:	8c 93       	st	X, r24
    1332:	27 81       	ldd	r18, Z+7	; 0x07
    1334:	30 85       	ldd	r19, Z+8	; 0x08
    1336:	2f 5f       	subi	r18, 0xFF	; 255
    1338:	3f 4f       	sbci	r19, 0xFF	; 255
    133a:	30 87       	std	Z+8, r19	; 0x08
    133c:	27 83       	std	Z+7, r18	; 0x07
    133e:	14 c0       	rjmp	.+40     	; 0x1368 <fputc+0x6e>
    1340:	8b 01       	movw	r16, r22
    1342:	ec 01       	movw	r28, r24
    1344:	fb 01       	movw	r30, r22
    1346:	01 84       	ldd	r0, Z+9	; 0x09
    1348:	f2 85       	ldd	r31, Z+10	; 0x0a
    134a:	e0 2d       	mov	r30, r0
    134c:	09 95       	icall
    134e:	89 2b       	or	r24, r25
    1350:	e1 f6       	brne	.-72     	; 0x130a <fputc+0x10>
    1352:	d8 01       	movw	r26, r16
    1354:	17 96       	adiw	r26, 0x07	; 7
    1356:	8d 91       	ld	r24, X+
    1358:	9c 91       	ld	r25, X
    135a:	18 97       	sbiw	r26, 0x08	; 8
    135c:	01 96       	adiw	r24, 0x01	; 1
    135e:	18 96       	adiw	r26, 0x08	; 8
    1360:	9c 93       	st	X, r25
    1362:	8e 93       	st	-X, r24
    1364:	17 97       	sbiw	r26, 0x07	; 7
    1366:	ce 01       	movw	r24, r28
    1368:	df 91       	pop	r29
    136a:	cf 91       	pop	r28
    136c:	1f 91       	pop	r17
    136e:	0f 91       	pop	r16
    1370:	08 95       	ret

Disassembly of section .text.avrlibc:

000017e6 <printf>:
    17e6:	a0 e0       	ldi	r26, 0x00	; 0
    17e8:	b0 e0       	ldi	r27, 0x00	; 0
    17ea:	e9 ef       	ldi	r30, 0xF9	; 249
    17ec:	fb e0       	ldi	r31, 0x0B	; 11
    17ee:	0c 94 66 0b 	jmp	0x16cc	; 0x16cc <__prologue_saves__+0x20>
    17f2:	9e 01       	movw	r18, r28
    17f4:	2b 5f       	subi	r18, 0xFB	; 251
    17f6:	3f 4f       	sbci	r19, 0xFF	; 255
    17f8:	f9 01       	movw	r30, r18
    17fa:	41 91       	ld	r20, Z+
    17fc:	51 91       	ld	r21, Z+
    17fe:	61 91       	ld	r22, Z+
    1800:	9f 01       	movw	r18, r30
    1802:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    1806:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    180a:	0e 94 09 01 	call	0x212	; 0x212 <vfprintf>
    180e:	e2 e0       	ldi	r30, 0x02	; 2
    1810:	0c 94 9e 0b 	jmp	0x173c	; 0x173c <__epilogue_restores__+0x20>

Disassembly of section .text.avrlibc:

000010b0 <__ultoa_invert>:
    10b0:	fa 01       	movw	r30, r20
    10b2:	aa 27       	eor	r26, r26
    10b4:	28 30       	cpi	r18, 0x08	; 8
    10b6:	51 f1       	breq	.+84     	; 0x110c <__ultoa_invert+0x5c>
    10b8:	20 31       	cpi	r18, 0x10	; 16
    10ba:	81 f1       	breq	.+96     	; 0x111c <__ultoa_invert+0x6c>
    10bc:	e8 94       	clt
    10be:	6f 93       	push	r22
    10c0:	6e 7f       	andi	r22, 0xFE	; 254
    10c2:	6e 5f       	subi	r22, 0xFE	; 254
    10c4:	7f 4f       	sbci	r23, 0xFF	; 255
    10c6:	8f 4f       	sbci	r24, 0xFF	; 255
    10c8:	9f 4f       	sbci	r25, 0xFF	; 255
    10ca:	af 4f       	sbci	r26, 0xFF	; 255
    10cc:	b1 e0       	ldi	r27, 0x01	; 1
    10ce:	3e d0       	rcall	.+124    	; 0x114c <__ultoa_invert+0x9c>
    10d0:	b4 e0       	ldi	r27, 0x04	; 4
    10d2:	3c d0       	rcall	.+120    	; 0x114c <__ultoa_invert+0x9c>
    10d4:	67 0f       	add	r22, r23
    10d6:	78 1f       	adc	r23, r24
    10d8:	89 1f       	adc	r24, r25
    10da:	9a 1f       	adc	r25, r26
    10dc:	a1 1d       	adc	r26, r1
    10de:	68 0f       	add	r22, r24
    10e0:	79 1f       	adc	r23, r25
    10e2:	8a 1f       	adc	r24, r26
    10e4:	91 1d       	adc	r25, r1
    10e6:	a1 1d       	adc	r26, r1
    10e8:	6a 0f       	add	r22, r26
    10ea:	71 1d       	adc	r23, r1
    10ec:	81 1d       	adc	r24, r1
    10ee:	91 1d       	adc	r25, r1
    10f0:	a1 1d       	adc	r26, r1
    10f2:	20 d0       	rcall	.+64     	; 0x1134 <__ultoa_invert+0x84>
    10f4:	09 f4       	brne	.+2      	; 0x10f8 <__ultoa_invert+0x48>
    10f6:	68 94       	set
    10f8:	3f 91       	pop	r19
    10fa:	2a e0       	ldi	r18, 0x0A	; 10
    10fc:	26 9f       	mul	r18, r22
    10fe:	11 24       	eor	r1, r1
    1100:	30 19       	sub	r19, r0
    1102:	30 5d       	subi	r19, 0xD0	; 208
    1104:	31 93       	st	Z+, r19
    1106:	de f6       	brtc	.-74     	; 0x10be <__ultoa_invert+0xe>
    1108:	cf 01       	movw	r24, r30
    110a:	08 95       	ret
    110c:	46 2f       	mov	r20, r22
    110e:	47 70       	andi	r20, 0x07	; 7
    1110:	40 5d       	subi	r20, 0xD0	; 208
    1112:	41 93       	st	Z+, r20
    1114:	b3 e0       	ldi	r27, 0x03	; 3
    1116:	0f d0       	rcall	.+30     	; 0x1136 <__ultoa_invert+0x86>
    1118:	c9 f7       	brne	.-14     	; 0x110c <__ultoa_invert+0x5c>
    111a:	f6 cf       	rjmp	.-20     	; 0x1108 <__ultoa_invert+0x58>
    111c:	46 2f       	mov	r20, r22
    111e:	4f 70       	andi	r20, 0x0F	; 15
    1120:	40 5d       	subi	r20, 0xD0	; 208
    1122:	4a 33       	cpi	r20, 0x3A	; 58
    1124:	18 f0       	brcs	.+6      	; 0x112c <__ultoa_invert+0x7c>
    1126:	49 5d       	subi	r20, 0xD9	; 217
    1128:	31 fd       	sbrc	r19, 1
    112a:	40 52       	subi	r20, 0x20	; 32
    112c:	41 93       	st	Z+, r20
    112e:	02 d0       	rcall	.+4      	; 0x1134 <__ultoa_invert+0x84>
    1130:	a9 f7       	brne	.-22     	; 0x111c <__ultoa_invert+0x6c>
    1132:	ea cf       	rjmp	.-44     	; 0x1108 <__ultoa_invert+0x58>
    1134:	b4 e0       	ldi	r27, 0x04	; 4
    1136:	a6 95       	lsr	r26
    1138:	97 95       	ror	r25
    113a:	87 95       	ror	r24
    113c:	77 95       	ror	r23
    113e:	67 95       	ror	r22
    1140:	ba 95       	dec	r27
    1142:	c9 f7       	brne	.-14     	; 0x1136 <__ultoa_invert+0x86>
    1144:	00 97       	sbiw	r24, 0x00	; 0
    1146:	61 05       	cpc	r22, r1
    1148:	71 05       	cpc	r23, r1
    114a:	08 95       	ret
    114c:	9b 01       	movw	r18, r22
    114e:	ac 01       	movw	r20, r24
    1150:	0a 2e       	mov	r0, r26
    1152:	06 94       	lsr	r0
    1154:	57 95       	ror	r21
    1156:	47 95       	ror	r20
    1158:	37 95       	ror	r19
    115a:	27 95       	ror	r18
    115c:	ba 95       	dec	r27
    115e:	c9 f7       	brne	.-14     	; 0x1152 <__ultoa_invert+0xa2>
    1160:	62 0f       	add	r22, r18
    1162:	73 1f       	adc	r23, r19
    1164:	84 1f       	adc	r24, r20
    1166:	95 1f       	adc	r25, r21
    1168:	a0 1d       	adc	r26, r0
    116a:	08 95       	ret

Disassembly of section .text.avrlibc:

000016e4 <calloc>:
    16e4:	0f 93       	push	r16
    16e6:	1f 93       	push	r17
    16e8:	cf 93       	push	r28
    16ea:	df 93       	push	r29
    16ec:	86 9f       	mul	r24, r22
    16ee:	80 01       	movw	r16, r0
    16f0:	87 9f       	mul	r24, r23
    16f2:	10 0d       	add	r17, r0
    16f4:	96 9f       	mul	r25, r22
    16f6:	10 0d       	add	r17, r0
    16f8:	11 24       	eor	r1, r1
    16fa:	c8 01       	movw	r24, r16
    16fc:	0e 94 ab 04 	call	0x956	; 0x956 <malloc>
    1700:	ec 01       	movw	r28, r24
    1702:	00 97       	sbiw	r24, 0x00	; 0
    1704:	29 f0       	breq	.+10     	; 0x1710 <calloc+0x2c>
    1706:	a8 01       	movw	r20, r16
    1708:	60 e0       	ldi	r22, 0x00	; 0
    170a:	70 e0       	ldi	r23, 0x00	; 0
    170c:	0e 94 a7 0c 	call	0x194e	; 0x194e <memset>
    1710:	ce 01       	movw	r24, r28
    1712:	df 91       	pop	r29
    1714:	cf 91       	pop	r28
    1716:	1f 91       	pop	r17
    1718:	0f 91       	pop	r16
    171a:	08 95       	ret

Disassembly of section .text.avrlibc:

00000956 <malloc>:
 956:	0f 93       	push	r16
 958:	1f 93       	push	r17
 95a:	cf 93       	push	r28
 95c:	df 93       	push	r29
 95e:	82 30       	cpi	r24, 0x02	; 2
 960:	91 05       	cpc	r25, r1
 962:	10 f4       	brcc	.+4      	; 0x968 <malloc+0x12>
 964:	82 e0       	ldi	r24, 0x02	; 2
 966:	90 e0       	ldi	r25, 0x00	; 0
 968:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__flp>
 96c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__flp+0x1>
 970:	20 e0       	ldi	r18, 0x00	; 0
 972:	30 e0       	ldi	r19, 0x00	; 0
 974:	a0 e0       	ldi	r26, 0x00	; 0
 976:	b0 e0       	ldi	r27, 0x00	; 0
 978:	30 97       	sbiw	r30, 0x00	; 0
 97a:	19 f1       	breq	.+70     	; 0x9c2 <malloc+0x6c>
 97c:	40 81       	ld	r20, Z
 97e:	51 81       	ldd	r21, Z+1	; 0x01
 980:	02 81       	ldd	r16, Z+2	; 0x02
 982:	13 81       	ldd	r17, Z+3	; 0x03
 984:	48 17       	cp	r20, r24
 986:	59 07       	cpc	r21, r25
 988:	c8 f0       	brcs	.+50     	; 0x9bc <malloc+0x66>
 98a:	84 17       	cp	r24, r20
 98c:	95 07       	cpc	r25, r21
 98e:	69 f4       	brne	.+26     	; 0x9aa <malloc+0x54>
 990:	10 97       	sbiw	r26, 0x00	; 0
 992:	31 f0       	breq	.+12     	; 0x9a0 <malloc+0x4a>
 994:	12 96       	adiw	r26, 0x02	; 2
 996:	0c 93       	st	X, r16
 998:	12 97       	sbiw	r26, 0x02	; 2
 99a:	13 96       	adiw	r26, 0x03	; 3
 99c:	1c 93       	st	X, r17
 99e:	27 c0       	rjmp	.+78     	; 0x9ee <malloc+0x98>
 9a0:	00 93 08 01 	sts	0x0108, r16	; 0x800108 <__flp>
 9a4:	10 93 09 01 	sts	0x0109, r17	; 0x800109 <__flp+0x1>
 9a8:	22 c0       	rjmp	.+68     	; 0x9ee <malloc+0x98>
 9aa:	21 15       	cp	r18, r1
 9ac:	31 05       	cpc	r19, r1
 9ae:	19 f0       	breq	.+6      	; 0x9b6 <malloc+0x60>
 9b0:	42 17       	cp	r20, r18
 9b2:	53 07       	cpc	r21, r19
 9b4:	18 f4       	brcc	.+6      	; 0x9bc <malloc+0x66>
 9b6:	9a 01       	movw	r18, r20
 9b8:	bd 01       	movw	r22, r26
 9ba:	ef 01       	movw	r28, r30
 9bc:	df 01       	movw	r26, r30
 9be:	f8 01       	movw	r30, r16
 9c0:	db cf       	rjmp	.-74     	; 0x978 <malloc+0x22>
 9c2:	21 15       	cp	r18, r1
 9c4:	31 05       	cpc	r19, r1
 9c6:	f9 f0       	breq	.+62     	; 0xa06 <malloc+0xb0>
 9c8:	28 1b       	sub	r18, r24
 9ca:	39 0b       	sbc	r19, r25
 9cc:	24 30       	cpi	r18, 0x04	; 4
 9ce:	31 05       	cpc	r19, r1
 9d0:	80 f4       	brcc	.+32     	; 0x9f2 <malloc+0x9c>
 9d2:	8a 81       	ldd	r24, Y+2	; 0x02
 9d4:	9b 81       	ldd	r25, Y+3	; 0x03
 9d6:	61 15       	cp	r22, r1
 9d8:	71 05       	cpc	r23, r1
 9da:	21 f0       	breq	.+8      	; 0x9e4 <malloc+0x8e>
 9dc:	fb 01       	movw	r30, r22
 9de:	93 83       	std	Z+3, r25	; 0x03
 9e0:	82 83       	std	Z+2, r24	; 0x02
 9e2:	04 c0       	rjmp	.+8      	; 0x9ec <malloc+0x96>
 9e4:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__flp+0x1>
 9e8:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__flp>
 9ec:	fe 01       	movw	r30, r28
 9ee:	32 96       	adiw	r30, 0x02	; 2
 9f0:	44 c0       	rjmp	.+136    	; 0xa7a <malloc+0x124>
 9f2:	fe 01       	movw	r30, r28
 9f4:	e2 0f       	add	r30, r18
 9f6:	f3 1f       	adc	r31, r19
 9f8:	81 93       	st	Z+, r24
 9fa:	91 93       	st	Z+, r25
 9fc:	22 50       	subi	r18, 0x02	; 2
 9fe:	31 09       	sbc	r19, r1
 a00:	39 83       	std	Y+1, r19	; 0x01
 a02:	28 83       	st	Y, r18
 a04:	3a c0       	rjmp	.+116    	; 0xa7a <malloc+0x124>
 a06:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__brkval>
 a0a:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__brkval+0x1>
 a0e:	23 2b       	or	r18, r19
 a10:	41 f4       	brne	.+16     	; 0xa22 <malloc+0xcc>
 a12:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__malloc_heap_start>
 a16:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__malloc_heap_start+0x1>
 a1a:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <__brkval+0x1>
 a1e:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <__brkval>
 a22:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <_end>
 a26:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <_end+0x1>
 a2a:	21 15       	cp	r18, r1
 a2c:	31 05       	cpc	r19, r1
 a2e:	41 f4       	brne	.+16     	; 0xa40 <malloc+0xea>
 a30:	2d b7       	in	r18, 0x3d	; 61
 a32:	3e b7       	in	r19, 0x3e	; 62
 a34:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <__malloc_margin>
 a38:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <__malloc_margin+0x1>
 a3c:	24 1b       	sub	r18, r20
 a3e:	35 0b       	sbc	r19, r21
 a40:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <__brkval>
 a44:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <__brkval+0x1>
 a48:	e2 17       	cp	r30, r18
 a4a:	f3 07       	cpc	r31, r19
 a4c:	a0 f4       	brcc	.+40     	; 0xa76 <malloc+0x120>
 a4e:	2e 1b       	sub	r18, r30
 a50:	3f 0b       	sbc	r19, r31
 a52:	28 17       	cp	r18, r24
 a54:	39 07       	cpc	r19, r25
 a56:	78 f0       	brcs	.+30     	; 0xa76 <malloc+0x120>
 a58:	ac 01       	movw	r20, r24
 a5a:	4e 5f       	subi	r20, 0xFE	; 254
 a5c:	5f 4f       	sbci	r21, 0xFF	; 255
 a5e:	24 17       	cp	r18, r20
 a60:	35 07       	cpc	r19, r21
 a62:	48 f0       	brcs	.+18     	; 0xa76 <malloc+0x120>
 a64:	4e 0f       	add	r20, r30
 a66:	5f 1f       	adc	r21, r31
 a68:	50 93 07 01 	sts	0x0107, r21	; 0x800107 <__brkval+0x1>
 a6c:	40 93 06 01 	sts	0x0106, r20	; 0x800106 <__brkval>
 a70:	81 93       	st	Z+, r24
 a72:	91 93       	st	Z+, r25
 a74:	02 c0       	rjmp	.+4      	; 0xa7a <malloc+0x124>
 a76:	e0 e0       	ldi	r30, 0x00	; 0
 a78:	f0 e0       	ldi	r31, 0x00	; 0
 a7a:	cf 01       	movw	r24, r30
 a7c:	df 91       	pop	r29
 a7e:	cf 91       	pop	r28
 a80:	1f 91       	pop	r17
 a82:	0f 91       	pop	r16
 a84:	08 95       	ret

00000a86 <free>:
 a86:	cf 93       	push	r28
 a88:	df 93       	push	r29
 a8a:	00 97       	sbiw	r24, 0x00	; 0
 a8c:	09 f4       	brne	.+2      	; 0xa90 <free+0xa>
 a8e:	81 c0       	rjmp	.+258    	; 0xb92 <free+0x10c>
 a90:	fc 01       	movw	r30, r24
 a92:	32 97       	sbiw	r30, 0x02	; 2
 a94:	13 82       	std	Z+3, r1	; 0x03
 a96:	12 82       	std	Z+2, r1	; 0x02
 a98:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <__flp>
 a9c:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <__flp+0x1>
 aa0:	10 97       	sbiw	r26, 0x00	; 0
 aa2:	81 f4       	brne	.+32     	; 0xac4 <free+0x3e>
 aa4:	20 81       	ld	r18, Z
 aa6:	31 81       	ldd	r19, Z+1	; 0x01
 aa8:	82 0f       	add	r24, r18
 aaa:	93 1f       	adc	r25, r19
 aac:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__brkval>
 ab0:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__brkval+0x1>
 ab4:	28 17       	cp	r18, r24
 ab6:	39 07       	cpc	r19, r25
 ab8:	51 f5       	brne	.+84     	; 0xb0e <free+0x88>
 aba:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <__brkval+0x1>
 abe:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <__brkval>
 ac2:	67 c0       	rjmp	.+206    	; 0xb92 <free+0x10c>
 ac4:	ed 01       	movw	r28, r26
 ac6:	20 e0       	ldi	r18, 0x00	; 0
 ac8:	30 e0       	ldi	r19, 0x00	; 0
 aca:	ce 17       	cp	r28, r30
 acc:	df 07       	cpc	r29, r31
 ace:	40 f4       	brcc	.+16     	; 0xae0 <free+0x5a>
 ad0:	4a 81       	ldd	r20, Y+2	; 0x02
 ad2:	5b 81       	ldd	r21, Y+3	; 0x03
 ad4:	9e 01       	movw	r18, r28
 ad6:	41 15       	cp	r20, r1
 ad8:	51 05       	cpc	r21, r1
 ada:	f1 f0       	breq	.+60     	; 0xb18 <free+0x92>
 adc:	ea 01       	movw	r28, r20
 ade:	f5 cf       	rjmp	.-22     	; 0xaca <free+0x44>
 ae0:	d3 83       	std	Z+3, r29	; 0x03
 ae2:	c2 83       	std	Z+2, r28	; 0x02
 ae4:	40 81       	ld	r20, Z
 ae6:	51 81       	ldd	r21, Z+1	; 0x01
 ae8:	84 0f       	add	r24, r20
 aea:	95 1f       	adc	r25, r21
 aec:	c8 17       	cp	r28, r24
 aee:	d9 07       	cpc	r29, r25
 af0:	59 f4       	brne	.+22     	; 0xb08 <free+0x82>
 af2:	88 81       	ld	r24, Y
 af4:	99 81       	ldd	r25, Y+1	; 0x01
 af6:	84 0f       	add	r24, r20
 af8:	95 1f       	adc	r25, r21
 afa:	02 96       	adiw	r24, 0x02	; 2
 afc:	91 83       	std	Z+1, r25	; 0x01
 afe:	80 83       	st	Z, r24
 b00:	8a 81       	ldd	r24, Y+2	; 0x02
 b02:	9b 81       	ldd	r25, Y+3	; 0x03
 b04:	93 83       	std	Z+3, r25	; 0x03
 b06:	82 83       	std	Z+2, r24	; 0x02
 b08:	21 15       	cp	r18, r1
 b0a:	31 05       	cpc	r19, r1
 b0c:	29 f4       	brne	.+10     	; 0xb18 <free+0x92>
 b0e:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__flp+0x1>
 b12:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__flp>
 b16:	3d c0       	rjmp	.+122    	; 0xb92 <free+0x10c>
 b18:	e9 01       	movw	r28, r18
 b1a:	fb 83       	std	Y+3, r31	; 0x03
 b1c:	ea 83       	std	Y+2, r30	; 0x02
 b1e:	49 91       	ld	r20, Y+
 b20:	59 91       	ld	r21, Y+
 b22:	c4 0f       	add	r28, r20
 b24:	d5 1f       	adc	r29, r21
 b26:	ec 17       	cp	r30, r28
 b28:	fd 07       	cpc	r31, r29
 b2a:	61 f4       	brne	.+24     	; 0xb44 <free+0xbe>
 b2c:	80 81       	ld	r24, Z
 b2e:	91 81       	ldd	r25, Z+1	; 0x01
 b30:	84 0f       	add	r24, r20
 b32:	95 1f       	adc	r25, r21
 b34:	02 96       	adiw	r24, 0x02	; 2
 b36:	e9 01       	movw	r28, r18
 b38:	99 83       	std	Y+1, r25	; 0x01
 b3a:	88 83       	st	Y, r24
 b3c:	82 81       	ldd	r24, Z+2	; 0x02
 b3e:	93 81       	ldd	r25, Z+3	; 0x03
 b40:	9b 83       	std	Y+3, r25	; 0x03
 b42:	8a 83       	std	Y+2, r24	; 0x02
 b44:	e0 e0       	ldi	r30, 0x00	; 0
 b46:	f0 e0       	ldi	r31, 0x00	; 0
 b48:	12 96       	adiw	r26, 0x02	; 2
 b4a:	8d 91       	ld	r24, X+
 b4c:	9c 91       	ld	r25, X
 b4e:	13 97       	sbiw	r26, 0x03	; 3
 b50:	00 97       	sbiw	r24, 0x00	; 0
 b52:	19 f0       	breq	.+6      	; 0xb5a <free+0xd4>
 b54:	fd 01       	movw	r30, r26
 b56:	dc 01       	movw	r26, r24
 b58:	f7 cf       	rjmp	.-18     	; 0xb48 <free+0xc2>
 b5a:	8d 91       	ld	r24, X+
 b5c:	9c 91       	ld	r25, X
 b5e:	11 97       	sbiw	r26, 0x01	; 1
 b60:	9d 01       	movw	r18, r26
 b62:	2e 5f       	subi	r18, 0xFE	; 254
 b64:	3f 4f       	sbci	r19, 0xFF	; 255
 b66:	82 0f       	add	r24, r18
 b68:	93 1f       	adc	r25, r19
 b6a:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__brkval>
 b6e:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__brkval+0x1>
 b72:	28 17       	cp	r18, r24
 b74:	39 07       	cpc	r19, r25
 b76:	69 f4       	brne	.+26     	; 0xb92 <free+0x10c>
 b78:	30 97       	sbiw	r30, 0x00	; 0
 b7a:	29 f4       	brne	.+10     	; 0xb86 <free+0x100>
 b7c:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <__flp+0x1>
 b80:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__flp>
 b84:	02 c0       	rjmp	.+4      	; 0xb8a <free+0x104>
 b86:	13 82       	std	Z+3, r1	; 0x03
 b88:	12 82       	std	Z+2, r1	; 0x02
 b8a:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__brkval+0x1>
 b8e:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__brkval>
 b92:	df 91       	pop	r29
 b94:	cf 91       	pop	r28
 b96:	08 95       	ret

Disassembly of section .text.avrlibc:

0000194e <memset>:
    194e:	dc 01       	movw	r26, r24
    1950:	01 c0       	rjmp	.+2      	; 0x1954 <memset+0x6>
    1952:	6d 93       	st	X+, r22
    1954:	41 50       	subi	r20, 0x01	; 1
    1956:	50 40       	sbci	r21, 0x00	; 0
    1958:	e0 f7       	brcc	.-8      	; 0x1952 <memset+0x4>
    195a:	08 95       	ret
