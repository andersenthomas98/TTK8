
application.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000269c  2**0
                  ALLOC, LOAD, DATA
  1 .text         000001d4  00000000  00000000  00000114  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800100  00800100  0000269c  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  0000269c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001f8  00000000  00000000  000026f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000323d  00000000  00000000  000028ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ef7  00000000  00000000  00005b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000012c3  00000000  00000000  00006a23  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000658  00000000  00000000  00007ce8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000047a  00000000  00000000  00008340  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000018ec  00000000  00000000  000087ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000168  00000000  00000000  0000a0a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00002562  00002562  00002676  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000a210  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.encoder_init 0000002e  00002320  00002320  00002434  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.encoder_read_tick 0000001e  00002458  00002458  0000256c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.encoder_get_accumulated_ticks_left 00000046  00001f72  00001f72  00002086  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.encoder_get_accumulated_ticks_right 00000046  00001fb8  00001fb8  000020cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_1 0000009e  00001a36  00001a36  00001b4a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_2 0000009e  00001ad4  00001ad4  00001be8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.encoder_ticks_right 00000004  00800126  00800126  0000269c  2**0
                  ALLOC
 21 .bss.encoder_ticks_left 00000004  0080012a  0080012a  0000269c  2**0
                  ALLOC
 22 .text.abs     00000030  000022f0  000022f0  00002404  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.motor_init 0000001e  00002476  00002476  0000258a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.set_left_motor_dir 00000020  00002418  00002418  0000252c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.set_right_motor_dir 00000020  00002438  00002438  0000254c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.motor_left 00000042  00002114  00002114  00002228  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.motor_right 00000042  00002156  00002156  0000226a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.motor_left_stop 0000000e  000024ae  000024ae  000025c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.motor_right_stop 0000000e  000024bc  000024bc  000025d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.pwm_init 0000001a  00002494  00002494  000025a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.pwm_set_duty_cycle_left 0000002c  0000237c  0000237c  00002490  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.pwm_set_duty_cycle_right 0000002c  000023a8  000023a8  000024bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.PID_controller_set_parameters 0000007c  00001c9c  00001c9c  00001db0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.PID_controller_init 00000074  00001e0a  00001e0a  00001f1e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.PID_controller_get_control_action 000002b4  00000d1e  00000d1e  00000e32  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.speed_estimator_init 00000092  00001c0a  00001c0a  00001d1e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.speed_estimator_right_rad_per_s 00000046  00001ffe  00001ffe  00002112  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.speed_estimator_left_rad_per_s 00000046  00002044  00002044  00002158  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.__vector_11 00000284  00000fd2  00000fd2  000010e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .data.ticks_per_rot_right 00000004  0080012e  00002580  00002694  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 41 .data.ticks_per_rot_left 00000004  00800132  00002584  00002698  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 42 .bss.rad_per_s_right_smoothed 00000004  00800136  00800136  0000269c  2**0
                  ALLOC
 43 .bss.rad_per_s_left_smoothed 00000004  0080013a  0080013a  0000269c  2**0
                  ALLOC
 44 .bss.rad_per_s_right_prev 00000004  0080013e  0080013e  0000269c  2**0
                  ALLOC
 45 .bss.rad_per_s_left_prev 00000004  00800142  00800142  0000269c  2**0
                  ALLOC
 46 .bss.rad_per_s_right 00000004  00800146  00800146  0000269c  2**0
                  ALLOC
 47 .bss.rad_per_s_left 00000004  0080014a  0080014a  0000269c  2**0
                  ALLOC
 48 .bss.prev_ticks_left 00000002  00800156  00800156  0000269c  2**0
                  ALLOC
 49 .bss.prev_ticks_right 00000002  00800158  00800158  0000269c  2**0
                  ALLOC
 50 .bss.ticks_left 00000002  0080015a  0080015a  0000269c  2**0
                  ALLOC
 51 .bss.ticks_right 00000002  0080015c  0080015c  0000269c  2**0
                  ALLOC
 52 .text.timer_init 00000040  00002198  00002198  000022ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.timer_get_elapsed_ms 00000046  0000208a  0000208a  0000219e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.timer_reset 0000004e  00001edc  00001edc  00001ff0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.timer_timeout 0000003c  000021d8  000021d8  000022ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.__vector_7 000000b2  00001984  00001984  00001a98  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .bss.timer_flag 00000002  0080015e  0080015e  0000269c  2**0
                  ALLOC
 58 .bss.elapsed_ms_since_init 00000004  0080014e  0080014e  0000269c  2**0
                  ALLOC
 59 .bss.elapsed_ms 00000004  00800152  00800152  0000269c  2**0
                  ALLOC
 60 .text.usart_tx 0000000e  000024ca  000024ca  000025de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.usart_rx 0000000e  000024d8  000024d8  000025ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.usart_init 00000022  000023d4  000023d4  000024e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .progmemx.data 000000a5  000001d4  000001d4  000002e8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 64 .rodata       00000014  0080010c  00002566  0000267a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 65 .text.main    00000358  000009c6  000009c6  00000ada  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.avrlibc.fplib 0000000e  000024e6  000024e6  000025fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.avrlibc.fplib 000000ce  000017fa  000017fa  0000190e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.avrlibc.fplib 0000000a  00002538  00002538  0000264c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.avrlibc.fplib 00000008  0000254c  0000254c  00002660  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text.avrlibc.fplib 000000de  00001648  00001648  0000175c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.avrlibc.fplib 0000005e  00001e7e  00001e7e  00001f92  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text.avrlibc.fplib 0000007a  00001d18  00001d18  00001e2c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.avrlibc.fplib 00000048  00001f2a  00001f2a  0000203e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.avrlibc.fplib 0000000c  0000252c  0000252c  00002640  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.avrlibc.fplib 00000006  0000255c  0000255c  00002670  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.avrlibc.fplib 0000000e  000024f4  000024f4  00002608  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.avrlibc.fplib 0000000e  00002502  00002502  00002616  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.avrlibc.fplib 00000022  000023f6  000023f6  0000250a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.avrlibc.fplib 00000044  000020d0  000020d0  000021e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.avrlibc.fplib 0000000e  00002510  00002510  00002624  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.avrlibc.fplib 0000000a  00002542  00002542  00002656  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.avrlibc.fplib 00000008  00002554  00002554  00002668  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.avrlibc.fplib 000000d4  00001726  00001726  0000183a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .progmemx.data 00000008  00000279  00000279  0000038d  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 85 .text.avrlibc 00000744  00000282  00000282  00000396  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 .text.libgcc.prologue 00000038  00002214  00002214  00002328  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 .text.libgcc.prologue 00000036  00002284  00002284  00002398  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 .text.avrlibc 000001b0  00001498  00001498  000015ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 .text.avrlibc 00000036  000022ba  000022ba  000023ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 .text.avrlibc 00000098  00001b72  00001b72  00001c86  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 .text.avrlibc 00000078  00001d92  00001d92  00001ea6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 .text.avrlibc 0000002e  0000234e  0000234e  00002462  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 .text.avrlibc 000000bc  000018c8  000018c8  000019dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 .text.avrlibc 00000038  0000224c  0000224c  00002360  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 .data         00000006  00800120  0000257a  0000268e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 96 .text.avrlibc 00000242  00001256  00001256  0000136a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 .text.avrlibc 0000000e  0000251e  0000251e  00002632  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 c0 00 	jmp	0x180	; 0x180 <__ctors_end>
   4:	0c 94 1b 0d 	jmp	0x1a36	; 0x1a36 <__vector_1>
   8:	0c 94 6a 0d 	jmp	0x1ad4	; 0x1ad4 <__vector_2>
   c:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  10:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  14:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  18:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  1c:	0c 94 c2 0c 	jmp	0x1984	; 0x1984 <__vector_7>
  20:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  24:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  28:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  2c:	0c 94 e9 07 	jmp	0xfd2	; 0xfd2 <__vector_11>
  30:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  34:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  38:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  3c:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  40:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  44:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  48:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  4c:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  50:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  54:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  58:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  5c:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  60:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
  64:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 0c       	add	r0, r1
  6c:	80 01       	movw	r16, r0
  6e:	0c 01       	movw	r0, r24
  70:	26 00       	.word	0x0026	; ????
  72:	25 66       	ori	r18, 0x65	; 101
  74:	01 26       	eor	r0, r17
  76:	01 2e       	mov	r0, r17
  78:	80 01       	movw	r16, r0
  7a:	2e 01       	movw	r4, r28
  7c:	36 00       	.word	0x0036	; ????
  7e:	25 80       	ldd	r2, Z+5	; 0x05
  80:	01 36       	cpi	r16, 0x61	; 97
  82:	01 60       	ori	r16, 0x01	; 1
  84:	80 00       	.word	0x0080	; ????

00000086 <__trampolines_end>:
  86:	00 40       	sbci	r16, 0x00	; 0
  88:	7a 10       	cpse	r7, r10
  8a:	f3 5a       	subi	r31, 0xA3	; 163
  8c:	00 a0       	ldd	r0, Z+32	; 0x20
  8e:	72 4e       	sbci	r23, 0xE2	; 226
  90:	18 09       	sbc	r17, r8
  92:	00 10       	cpse	r0, r0
  94:	a5 d4       	rcall	.+2378   	; 0x9e0 <main+0x1a>
  96:	e8 00       	.word	0x00e8	; ????
  98:	00 e8       	ldi	r16, 0x80	; 128
  9a:	76 48       	sbci	r23, 0x86	; 134
  9c:	17 00       	.word	0x0017	; ????
  9e:	00 e4       	ldi	r16, 0x40	; 64
  a0:	0b 54       	subi	r16, 0x4B	; 75
  a2:	02 00       	.word	0x0002	; ????
  a4:	00 ca       	rjmp	.-3072   	; 0xfffff4a6 <__eeprom_end+0xff7ef4a6>
  a6:	9a 3b       	cpi	r25, 0xBA	; 186
  a8:	00 00       	nop
  aa:	00 e1       	ldi	r16, 0x10	; 16
  ac:	f5 05       	cpc	r31, r5
  ae:	00 00       	nop
  b0:	80 96       	adiw	r24, 0x20	; 32
  b2:	98 00       	.word	0x0098	; ????
  b4:	00 00       	nop
  b6:	40 42       	sbci	r20, 0x20	; 32
  b8:	0f 00       	.word	0x000f	; ????
  ba:	00 00       	nop
  bc:	a0 86       	std	Z+8, r10	; 0x08
  be:	01 00       	.word	0x0001	; ????
  c0:	00 00       	nop
  c2:	10 27       	eor	r17, r16
  c4:	00 00       	nop
  c6:	00 00       	nop
  c8:	e8 03       	fmulsu	r22, r16
  ca:	00 00       	nop
  cc:	00 00       	nop
  ce:	64 00       	.word	0x0064	; ????
  d0:	00 00       	nop
  d2:	00 00       	nop
  d4:	0a 00       	.word	0x000a	; ????
  d6:	00 00       	nop
  d8:	00 00       	nop
  da:	01 00       	.word	0x0001	; ????
  dc:	00 00       	nop
  de:	00 00       	nop
  e0:	2c 76       	andi	r18, 0x6C	; 108
  e2:	d8 88       	ldd	r13, Y+16	; 0x10
  e4:	dc 67       	ori	r29, 0x7C	; 124
  e6:	4f 08       	sbc	r4, r15
  e8:	23 df       	rcall	.-442    	; 0xffffff30 <__eeprom_end+0xff7eff30>
  ea:	c1 df       	rcall	.-126    	; 0x6e <.dinit+0x6>
  ec:	ae 59       	subi	r26, 0x9E	; 158
  ee:	e1 b1       	in	r30, 0x01	; 1
  f0:	b7 96       	adiw	r30, 0x27	; 39
  f2:	e5 e3       	ldi	r30, 0x35	; 53
  f4:	e4 53       	subi	r30, 0x34	; 52
  f6:	c6 3a       	cpi	r28, 0xA6	; 166
  f8:	e6 51       	subi	r30, 0x16	; 22
  fa:	99 76       	andi	r25, 0x69	; 105
  fc:	96 e8       	ldi	r25, 0x86	; 134
  fe:	e6 c2       	rjmp	.+1484   	; 0x6cc <__EEPROM_REGION_LENGTH__+0x2cc>
 100:	84 26       	eor	r8, r20
 102:	eb 89       	ldd	r30, Y+19	; 0x13
 104:	8c 9b       	sbis	0x11, 4	; 17
 106:	62 ed       	ldi	r22, 0xD2	; 210
 108:	40 7c       	andi	r20, 0xC0	; 192
 10a:	6f fc       	.word	0xfc6f	; ????
 10c:	ef bc       	out	0x2f, r14	; 47
 10e:	9c 9f       	mul	r25, r28
 110:	40 f2       	brcs	.-112    	; 0xa2 <__trampolines_end+0x1c>
 112:	ba a5       	ldd	r27, Y+42	; 0x2a
 114:	6f a5       	ldd	r22, Y+47	; 0x2f
 116:	f4 90       	lpm	r15, Z
 118:	05 5a       	subi	r16, 0xA5	; 165
 11a:	2a f7       	brpl	.-54     	; 0xe6 <__trampolines_end+0x60>
 11c:	5c 93       	st	X, r21
 11e:	6b 6c       	ori	r22, 0xCB	; 203
 120:	f9 67       	ori	r31, 0x79	; 121
 122:	6d c1       	rjmp	.+730    	; 0x3fe <vfprintf+0x17c>
 124:	1b fc       	.word	0xfc1b	; ????
 126:	e0 e4       	ldi	r30, 0x40	; 64
 128:	0d 47       	sbci	r16, 0x7D	; 125
 12a:	fe f5       	brtc	.+126    	; 0x1aa <__do_copy_data+0x1e>
 12c:	20 e6       	ldi	r18, 0x60	; 96
 12e:	b5 00       	.word	0x00b5	; ????
 130:	d0 ed       	ldi	r29, 0xD0	; 208
 132:	90 2e       	mov	r9, r16
 134:	03 00       	.word	0x0003	; ????
 136:	94 35       	cpi	r25, 0x54	; 84
 138:	77 05       	cpc	r23, r7
 13a:	00 80       	ld	r0, Z
 13c:	84 1e       	adc	r8, r20
 13e:	08 00       	.word	0x0008	; ????
 140:	00 20       	and	r0, r0
 142:	4e 0a       	sbc	r4, r30
 144:	00 00       	nop
 146:	00 c8       	rjmp	.-4096   	; 0xfffff148 <__eeprom_end+0xff7ef148>
 148:	0c 33       	cpi	r16, 0x3C	; 60
 14a:	33 33       	cpi	r19, 0x33	; 51
 14c:	33 0f       	add	r19, r19
 14e:	98 6e       	ori	r25, 0xE8	; 232
 150:	12 83       	std	Z+2, r17	; 0x02
 152:	11 41       	sbci	r17, 0x11	; 17
 154:	ef 8d       	ldd	r30, Y+31	; 0x1f
 156:	21 14       	cp	r2, r1
 158:	89 3b       	cpi	r24, 0xB9	; 185
 15a:	e6 55       	subi	r30, 0x56	; 86
 15c:	16 cf       	rjmp	.-468    	; 0xffffff8a <__eeprom_end+0xff7eff8a>
 15e:	fe e6       	ldi	r31, 0x6E	; 110
 160:	db 18       	sub	r13, r11
 162:	d1 84       	ldd	r13, Z+9	; 0x09
 164:	4b 38       	cpi	r20, 0x8B	; 139
 166:	1b f7       	brvc	.-58     	; 0x12e <__trampolines_end+0xa8>
 168:	7c 1d       	adc	r23, r12
 16a:	90 1d       	adc	r25, r0
 16c:	a4 bb       	out	0x14, r26	; 20
 16e:	e4 24       	eor	r14, r4
 170:	20 32       	cpi	r18, 0x20	; 32
 172:	84 72       	andi	r24, 0x24	; 36
 174:	5e 22       	and	r5, r30
 176:	81 00       	.word	0x0081	; ????
 178:	c9 f1       	breq	.+114    	; 0x1ec <_etext+0x18>
 17a:	24 ec       	ldi	r18, 0xC4	; 196
 17c:	a1 e5       	ldi	r26, 0x51	; 81
 17e:	3d 27       	eor	r19, r29

00000180 <__ctors_end>:
 180:	11 24       	eor	r1, r1
 182:	1f be       	out	0x3f, r1	; 63
 184:	cf ef       	ldi	r28, 0xFF	; 255
 186:	d8 e0       	ldi	r29, 0x08	; 8
 188:	de bf       	out	0x3e, r29	; 62
 18a:	cd bf       	out	0x3d, r28	; 61

0000018c <__do_copy_data>:
 18c:	e8 e6       	ldi	r30, 0x68	; 104
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	40 e0       	ldi	r20, 0x00	; 0
 192:	17 c0       	rjmp	.+46     	; 0x1c2 <__do_clear_bss+0x8>
 194:	b5 91       	lpm	r27, Z+
 196:	a5 91       	lpm	r26, Z+
 198:	35 91       	lpm	r19, Z+
 19a:	25 91       	lpm	r18, Z+
 19c:	05 91       	lpm	r16, Z+
 19e:	07 fd       	sbrc	r16, 7
 1a0:	0c c0       	rjmp	.+24     	; 0x1ba <__do_clear_bss>
 1a2:	95 91       	lpm	r25, Z+
 1a4:	85 91       	lpm	r24, Z+
 1a6:	ef 01       	movw	r28, r30
 1a8:	f9 2f       	mov	r31, r25
 1aa:	e8 2f       	mov	r30, r24
 1ac:	05 90       	lpm	r0, Z+
 1ae:	0d 92       	st	X+, r0
 1b0:	a2 17       	cp	r26, r18
 1b2:	b3 07       	cpc	r27, r19
 1b4:	d9 f7       	brne	.-10     	; 0x1ac <__do_copy_data+0x20>
 1b6:	fe 01       	movw	r30, r28
 1b8:	04 c0       	rjmp	.+8      	; 0x1c2 <__do_clear_bss+0x8>

000001ba <__do_clear_bss>:
 1ba:	1d 92       	st	X+, r1
 1bc:	a2 17       	cp	r26, r18
 1be:	b3 07       	cpc	r27, r19
 1c0:	e1 f7       	brne	.-8      	; 0x1ba <__do_clear_bss>
 1c2:	e5 38       	cpi	r30, 0x85	; 133
 1c4:	f4 07       	cpc	r31, r20
 1c6:	31 f7       	brne	.-52     	; 0x194 <__do_copy_data+0x8>
 1c8:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <main>
 1cc:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <_exit>

000001d0 <_exit>:
 1d0:	f8 94       	cli

000001d2 <__stop_program>:
 1d2:	ff cf       	rjmp	.-2      	; 0x1d2 <__stop_program>

Disassembly of section .text:

00002562 <__bad_interrupt>:
    2562:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.encoder_init:

00002320 <encoder_init>:
static volatile long int encoder_ticks_left = 0;
static volatile long int encoder_ticks_right = 0;

void encoder_init(void) {
	
	cli();
    2320:	f8 94       	cli
	
	// Set digital inputs with internal pull-up (unsure if internal pull-up should be used)
	DDRD &= ~(1 << ENCA1);
    2322:	8a b1       	in	r24, 0x0a	; 10
    2324:	8b 7f       	andi	r24, 0xFB	; 251
    2326:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA1);
    2328:	8b b1       	in	r24, 0x0b	; 11
    232a:	84 60       	ori	r24, 0x04	; 4
    232c:	8b b9       	out	0x0b, r24	; 11
	
	DDRD &= ~(1 << ENCA2);
    232e:	8a b1       	in	r24, 0x0a	; 10
    2330:	87 7f       	andi	r24, 0xF7	; 247
    2332:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA2);
    2334:	8b b1       	in	r24, 0x0b	; 11
    2336:	88 60       	ori	r24, 0x08	; 8
    2338:	8b b9       	out	0x0b, r24	; 11
	
	// Rising edge of INT0 and INT1 will generate an interrupt request
	EICRA |= (1 << ISC00) | (1 << ISC01) | (1 << ISC10) | (1 << ISC11);
    233a:	e9 e6       	ldi	r30, 0x69	; 105
    233c:	f0 e0       	ldi	r31, 0x00	; 0
    233e:	80 81       	ld	r24, Z
    2340:	8f 60       	ori	r24, 0x0F	; 15
    2342:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0) | (1 << INT1);
    2344:	8d b3       	in	r24, 0x1d	; 29
    2346:	83 60       	ori	r24, 0x03	; 3
    2348:	8d bb       	out	0x1d, r24	; 29
	
	// Enable global interrupts
	sei();
    234a:	78 94       	sei
    234c:	08 95       	ret

Disassembly of section .text.encoder_read_tick:

00002458 <encoder_read_tick>:
	
	
}

int encoder_read_tick(int encoder_pin) {
	if (PIND & (1<<encoder_pin)) {
    2458:	29 b1       	in	r18, 0x09	; 9
    245a:	30 e0       	ldi	r19, 0x00	; 0
    245c:	02 c0       	rjmp	.+4      	; 0x2462 <encoder_read_tick+0xa>
    245e:	35 95       	asr	r19
    2460:	27 95       	ror	r18
    2462:	8a 95       	dec	r24
    2464:	e2 f7       	brpl	.-8      	; 0x245e <encoder_read_tick+0x6>
    2466:	c9 01       	movw	r24, r18
    2468:	81 70       	andi	r24, 0x01	; 1
    246a:	99 27       	eor	r25, r25
    246c:	20 ff       	sbrs	r18, 0
    246e:	02 c0       	rjmp	.+4      	; 0x2474 <encoder_read_tick+0x1c>
		return 1;
    2470:	81 e0       	ldi	r24, 0x01	; 1
    2472:	90 e0       	ldi	r25, 0x00	; 0
	}
	return 0;
}
    2474:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_left:

00001f72 <encoder_get_accumulated_ticks_left>:

long encoder_get_accumulated_ticks_left(void) {
    1f72:	cf 93       	push	r28
    1f74:	df 93       	push	r29
    1f76:	1f 92       	push	r1
    1f78:	cd b7       	in	r28, 0x3d	; 61
    1f7a:	de b7       	in	r29, 0x3e	; 62
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1f7c:	8f b7       	in	r24, 0x3f	; 63
    1f7e:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1f80:	f8 94       	cli
    1f82:	81 e0       	ldi	r24, 0x01	; 1
    1f84:	09 c0       	rjmp	.+18     	; 0x1f98 <encoder_get_accumulated_ticks_left+0x26>
		ticks = encoder_ticks_left;
    1f86:	40 91 2a 01 	lds	r20, 0x012A	; 0x80012a <encoder_ticks_left>
    1f8a:	50 91 2b 01 	lds	r21, 0x012B	; 0x80012b <encoder_ticks_left+0x1>
    1f8e:	60 91 2c 01 	lds	r22, 0x012C	; 0x80012c <encoder_ticks_left+0x2>
    1f92:	70 91 2d 01 	lds	r23, 0x012D	; 0x80012d <encoder_ticks_left+0x3>
	return 0;
}

long encoder_get_accumulated_ticks_left(void) {
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1f96:	80 e0       	ldi	r24, 0x00	; 0
    1f98:	81 11       	cpse	r24, r1
    1f9a:	f5 cf       	rjmp	.-22     	; 0x1f86 <encoder_get_accumulated_ticks_left+0x14>
    1f9c:	ce 01       	movw	r24, r28
    1f9e:	01 96       	adiw	r24, 0x01	; 1
    1fa0:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1fa2:	fc 01       	movw	r30, r24
    1fa4:	84 91       	lpm	r24, Z
    1fa6:	a7 fd       	sbrc	r26, 7
    1fa8:	80 81       	ld	r24, Z
    1faa:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_left;
	}
	return ticks;
}
    1fac:	cb 01       	movw	r24, r22
    1fae:	ba 01       	movw	r22, r20
    1fb0:	0f 90       	pop	r0
    1fb2:	df 91       	pop	r29
    1fb4:	cf 91       	pop	r28
    1fb6:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_right:

00001fb8 <encoder_get_accumulated_ticks_right>:

long encoder_get_accumulated_ticks_right(void) {
    1fb8:	cf 93       	push	r28
    1fba:	df 93       	push	r29
    1fbc:	1f 92       	push	r1
    1fbe:	cd b7       	in	r28, 0x3d	; 61
    1fc0:	de b7       	in	r29, 0x3e	; 62
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1fc2:	8f b7       	in	r24, 0x3f	; 63
    1fc4:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1fc6:	f8 94       	cli
    1fc8:	81 e0       	ldi	r24, 0x01	; 1
    1fca:	09 c0       	rjmp	.+18     	; 0x1fde <encoder_get_accumulated_ticks_right+0x26>
		ticks = encoder_ticks_right;
    1fcc:	40 91 26 01 	lds	r20, 0x0126	; 0x800126 <encoder_ticks_right>
    1fd0:	50 91 27 01 	lds	r21, 0x0127	; 0x800127 <encoder_ticks_right+0x1>
    1fd4:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <encoder_ticks_right+0x2>
    1fd8:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <encoder_ticks_right+0x3>
	return ticks;
}

long encoder_get_accumulated_ticks_right(void) {
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1fdc:	80 e0       	ldi	r24, 0x00	; 0
    1fde:	81 11       	cpse	r24, r1
    1fe0:	f5 cf       	rjmp	.-22     	; 0x1fcc <encoder_get_accumulated_ticks_right+0x14>
    1fe2:	ce 01       	movw	r24, r28
    1fe4:	01 96       	adiw	r24, 0x01	; 1
    1fe6:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1fe8:	fc 01       	movw	r30, r24
    1fea:	84 91       	lpm	r24, Z
    1fec:	a7 fd       	sbrc	r26, 7
    1fee:	80 81       	ld	r24, Z
    1ff0:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_right;
	}
	return ticks;
}
    1ff2:	cb 01       	movw	r24, r22
    1ff4:	ba 01       	movw	r22, r20
    1ff6:	0f 90       	pop	r0
    1ff8:	df 91       	pop	r29
    1ffa:	cf 91       	pop	r28
    1ffc:	08 95       	ret

Disassembly of section .text.__vector_1:

00001a36 <__vector_1>:



// Interrupt service routine for INT0
// Triggered on rising edge of channel A encoder signal for left wheel
ISR(INT0_vect) {
    1a36:	1f 92       	push	r1
    1a38:	0f 92       	push	r0
    1a3a:	0f b6       	in	r0, 0x3f	; 63
    1a3c:	0f 92       	push	r0
    1a3e:	11 24       	eor	r1, r1
    1a40:	2f 93       	push	r18
    1a42:	3f 93       	push	r19
    1a44:	4f 93       	push	r20
    1a46:	5f 93       	push	r21
    1a48:	6f 93       	push	r22
    1a4a:	7f 93       	push	r23
    1a4c:	8f 93       	push	r24
    1a4e:	9f 93       	push	r25
    1a50:	af 93       	push	r26
    1a52:	bf 93       	push	r27
    1a54:	ef 93       	push	r30
    1a56:	ff 93       	push	r31
	int encb1 = encoder_read_tick(ENCB1);
    1a58:	84 e0       	ldi	r24, 0x04	; 4
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	0e 94 2c 12 	call	0x2458	; 0x2458 <encoder_read_tick>
	if (encb1) {
    1a60:	89 2b       	or	r24, r25
    1a62:	a1 f0       	breq	.+40     	; 0x1a8c <__vector_1+0x56>
		encoder_ticks_left++;
    1a64:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <encoder_ticks_left>
    1a68:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <encoder_ticks_left+0x1>
    1a6c:	a0 91 2c 01 	lds	r26, 0x012C	; 0x80012c <encoder_ticks_left+0x2>
    1a70:	b0 91 2d 01 	lds	r27, 0x012D	; 0x80012d <encoder_ticks_left+0x3>
    1a74:	01 96       	adiw	r24, 0x01	; 1
    1a76:	a1 1d       	adc	r26, r1
    1a78:	b1 1d       	adc	r27, r1
    1a7a:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <encoder_ticks_left>
    1a7e:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <encoder_ticks_left+0x1>
    1a82:	a0 93 2c 01 	sts	0x012C, r26	; 0x80012c <encoder_ticks_left+0x2>
    1a86:	b0 93 2d 01 	sts	0x012D, r27	; 0x80012d <encoder_ticks_left+0x3>
    1a8a:	13 c0       	rjmp	.+38     	; 0x1ab2 <__vector_1+0x7c>
	} else {
		encoder_ticks_left--;
    1a8c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <encoder_ticks_left>
    1a90:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <encoder_ticks_left+0x1>
    1a94:	a0 91 2c 01 	lds	r26, 0x012C	; 0x80012c <encoder_ticks_left+0x2>
    1a98:	b0 91 2d 01 	lds	r27, 0x012D	; 0x80012d <encoder_ticks_left+0x3>
    1a9c:	01 97       	sbiw	r24, 0x01	; 1
    1a9e:	a1 09       	sbc	r26, r1
    1aa0:	b1 09       	sbc	r27, r1
    1aa2:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <encoder_ticks_left>
    1aa6:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <encoder_ticks_left+0x1>
    1aaa:	a0 93 2c 01 	sts	0x012C, r26	; 0x80012c <encoder_ticks_left+0x2>
    1aae:	b0 93 2d 01 	sts	0x012D, r27	; 0x80012d <encoder_ticks_left+0x3>
	}
}
    1ab2:	ff 91       	pop	r31
    1ab4:	ef 91       	pop	r30
    1ab6:	bf 91       	pop	r27
    1ab8:	af 91       	pop	r26
    1aba:	9f 91       	pop	r25
    1abc:	8f 91       	pop	r24
    1abe:	7f 91       	pop	r23
    1ac0:	6f 91       	pop	r22
    1ac2:	5f 91       	pop	r21
    1ac4:	4f 91       	pop	r20
    1ac6:	3f 91       	pop	r19
    1ac8:	2f 91       	pop	r18
    1aca:	0f 90       	pop	r0
    1acc:	0f be       	out	0x3f, r0	; 63
    1ace:	0f 90       	pop	r0
    1ad0:	1f 90       	pop	r1
    1ad2:	18 95       	reti

Disassembly of section .text.__vector_2:

00001ad4 <__vector_2>:

// Interrupt service routine for INT1
// Triggered on rising edge of channel A encoder signal for right wheel
ISR(INT1_vect) {
    1ad4:	1f 92       	push	r1
    1ad6:	0f 92       	push	r0
    1ad8:	0f b6       	in	r0, 0x3f	; 63
    1ada:	0f 92       	push	r0
    1adc:	11 24       	eor	r1, r1
    1ade:	2f 93       	push	r18
    1ae0:	3f 93       	push	r19
    1ae2:	4f 93       	push	r20
    1ae4:	5f 93       	push	r21
    1ae6:	6f 93       	push	r22
    1ae8:	7f 93       	push	r23
    1aea:	8f 93       	push	r24
    1aec:	9f 93       	push	r25
    1aee:	af 93       	push	r26
    1af0:	bf 93       	push	r27
    1af2:	ef 93       	push	r30
    1af4:	ff 93       	push	r31
	int encb2 = encoder_read_tick(ENCB2);
    1af6:	87 e0       	ldi	r24, 0x07	; 7
    1af8:	90 e0       	ldi	r25, 0x00	; 0
    1afa:	0e 94 2c 12 	call	0x2458	; 0x2458 <encoder_read_tick>
	if (encb2) {
    1afe:	89 2b       	or	r24, r25
    1b00:	a1 f0       	breq	.+40     	; 0x1b2a <__vector_2+0x56>
		encoder_ticks_right++;
    1b02:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <encoder_ticks_right>
    1b06:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <encoder_ticks_right+0x1>
    1b0a:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <encoder_ticks_right+0x2>
    1b0e:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <encoder_ticks_right+0x3>
    1b12:	01 96       	adiw	r24, 0x01	; 1
    1b14:	a1 1d       	adc	r26, r1
    1b16:	b1 1d       	adc	r27, r1
    1b18:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <encoder_ticks_right>
    1b1c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <encoder_ticks_right+0x1>
    1b20:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <encoder_ticks_right+0x2>
    1b24:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <encoder_ticks_right+0x3>
    1b28:	13 c0       	rjmp	.+38     	; 0x1b50 <__vector_2+0x7c>
		} 
	else {
		encoder_ticks_right--;
    1b2a:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <encoder_ticks_right>
    1b2e:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <encoder_ticks_right+0x1>
    1b32:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <encoder_ticks_right+0x2>
    1b36:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <encoder_ticks_right+0x3>
    1b3a:	01 97       	sbiw	r24, 0x01	; 1
    1b3c:	a1 09       	sbc	r26, r1
    1b3e:	b1 09       	sbc	r27, r1
    1b40:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <encoder_ticks_right>
    1b44:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <encoder_ticks_right+0x1>
    1b48:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <encoder_ticks_right+0x2>
    1b4c:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <encoder_ticks_right+0x3>
	}
    1b50:	ff 91       	pop	r31
    1b52:	ef 91       	pop	r30
    1b54:	bf 91       	pop	r27
    1b56:	af 91       	pop	r26
    1b58:	9f 91       	pop	r25
    1b5a:	8f 91       	pop	r24
    1b5c:	7f 91       	pop	r23
    1b5e:	6f 91       	pop	r22
    1b60:	5f 91       	pop	r21
    1b62:	4f 91       	pop	r20
    1b64:	3f 91       	pop	r19
    1b66:	2f 91       	pop	r18
    1b68:	0f 90       	pop	r0
    1b6a:	0f be       	out	0x3f, r0	; 63
    1b6c:	0f 90       	pop	r0
    1b6e:	1f 90       	pop	r1
    1b70:	18 95       	reti

Disassembly of section .text.abs:

000022f0 <abs>:
 *  Author: thoander
 */ 

#include "misc.h"

float abs(float val) {
    22f0:	cf 92       	push	r12
    22f2:	df 92       	push	r13
    22f4:	ef 92       	push	r14
    22f6:	ff 92       	push	r15
    22f8:	6b 01       	movw	r12, r22
    22fa:	7c 01       	movw	r14, r24
	if (val < 0) {
    22fc:	20 e0       	ldi	r18, 0x00	; 0
    22fe:	30 e0       	ldi	r19, 0x00	; 0
    2300:	a9 01       	movw	r20, r18
    2302:	0e 94 9c 12 	call	0x2538	; 0x2538 <__cmpsf2>
    2306:	88 23       	and	r24, r24
    2308:	24 f4       	brge	.+8      	; 0x2312 <abs+0x22>
		return val*(-1.0);
    230a:	c7 01       	movw	r24, r14
    230c:	b6 01       	movw	r22, r12
    230e:	90 58       	subi	r25, 0x80	; 128
    2310:	02 c0       	rjmp	.+4      	; 0x2316 <abs+0x26>
	}
	return val;
    2312:	c7 01       	movw	r24, r14
    2314:	b6 01       	movw	r22, r12
    2316:	ff 90       	pop	r15
    2318:	ef 90       	pop	r14
    231a:	df 90       	pop	r13
    231c:	cf 90       	pop	r12
    231e:	08 95       	ret

Disassembly of section .text.motor_init:

00002476 <motor_init>:


void motor_init(void) {
	
	// For motor control
	pwm_init();
    2476:	0e 94 4a 12 	call	0x2494	; 0x2494 <pwm_init>
	
	// Set direction control pins to L298N as outputs
	DDRC |= (1 << OUT1);
    247a:	87 b1       	in	r24, 0x07	; 7
    247c:	81 60       	ori	r24, 0x01	; 1
    247e:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT2);
    2480:	87 b1       	in	r24, 0x07	; 7
    2482:	82 60       	ori	r24, 0x02	; 2
    2484:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT3);
    2486:	87 b1       	in	r24, 0x07	; 7
    2488:	84 60       	ori	r24, 0x04	; 4
    248a:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT4);
    248c:	87 b1       	in	r24, 0x07	; 7
    248e:	88 60       	ori	r24, 0x08	; 8
    2490:	87 b9       	out	0x07, r24	; 7
    2492:	08 95       	ret

Disassembly of section .text.set_left_motor_dir:

00002418 <set_left_motor_dir>:
}

void set_left_motor_dir(int dir) {
	if (dir == FORWARD) {
    2418:	01 97       	sbiw	r24, 0x01	; 1
    241a:	39 f4       	brne	.+14     	; 0x242a <set_left_motor_dir+0x12>
		PORTC |= (1 << OUT1);
    241c:	88 b1       	in	r24, 0x08	; 8
    241e:	81 60       	ori	r24, 0x01	; 1
    2420:	88 b9       	out	0x08, r24	; 8
		PORTC &= ~(1 << OUT2);
    2422:	88 b1       	in	r24, 0x08	; 8
    2424:	8d 7f       	andi	r24, 0xFD	; 253
    2426:	88 b9       	out	0x08, r24	; 8
    2428:	08 95       	ret
	} else {
		PORTC &= ~(1 << OUT1);
    242a:	88 b1       	in	r24, 0x08	; 8
    242c:	8e 7f       	andi	r24, 0xFE	; 254
    242e:	88 b9       	out	0x08, r24	; 8
		PORTC |= (1 << OUT2);
    2430:	88 b1       	in	r24, 0x08	; 8
    2432:	82 60       	ori	r24, 0x02	; 2
    2434:	88 b9       	out	0x08, r24	; 8
    2436:	08 95       	ret

Disassembly of section .text.set_right_motor_dir:

00002438 <set_right_motor_dir>:
	}
}

void set_right_motor_dir(int dir) {
	if (dir == FORWARD) {
    2438:	01 97       	sbiw	r24, 0x01	; 1
    243a:	39 f4       	brne	.+14     	; 0x244a <set_right_motor_dir+0x12>
		PORTC |= (1 << OUT3);
    243c:	88 b1       	in	r24, 0x08	; 8
    243e:	84 60       	ori	r24, 0x04	; 4
    2440:	88 b9       	out	0x08, r24	; 8
		PORTC &= ~(1 << OUT4);
    2442:	88 b1       	in	r24, 0x08	; 8
    2444:	87 7f       	andi	r24, 0xF7	; 247
    2446:	88 b9       	out	0x08, r24	; 8
    2448:	08 95       	ret
	} else {
		PORTC &= ~(1 << OUT3);
    244a:	88 b1       	in	r24, 0x08	; 8
    244c:	8b 7f       	andi	r24, 0xFB	; 251
    244e:	88 b9       	out	0x08, r24	; 8
		PORTC |= (1 << OUT4);
    2450:	88 b1       	in	r24, 0x08	; 8
    2452:	88 60       	ori	r24, 0x08	; 8
    2454:	88 b9       	out	0x08, r24	; 8
    2456:	08 95       	ret

Disassembly of section .text.motor_left:

00002114 <motor_left>:
	}
}

void motor_left(float duty) {
    2114:	cf 92       	push	r12
    2116:	df 92       	push	r13
    2118:	ef 92       	push	r14
    211a:	ff 92       	push	r15
    211c:	6b 01       	movw	r12, r22
    211e:	7c 01       	movw	r14, r24
	if (duty < 0) {
    2120:	20 e0       	ldi	r18, 0x00	; 0
    2122:	30 e0       	ldi	r19, 0x00	; 0
    2124:	a9 01       	movw	r20, r18
    2126:	0e 94 9c 12 	call	0x2538	; 0x2538 <__cmpsf2>
    212a:	88 23       	and	r24, r24
    212c:	2c f4       	brge	.+10     	; 0x2138 <motor_left+0x24>
		set_left_motor_dir(BACKWARD);
    212e:	80 e0       	ldi	r24, 0x00	; 0
    2130:	90 e0       	ldi	r25, 0x00	; 0
    2132:	0e 94 0c 12 	call	0x2418	; 0x2418 <set_left_motor_dir>
    2136:	04 c0       	rjmp	.+8      	; 0x2140 <motor_left+0x2c>
	} else {
		set_left_motor_dir(FORWARD);
    2138:	81 e0       	ldi	r24, 0x01	; 1
    213a:	90 e0       	ldi	r25, 0x00	; 0
    213c:	0e 94 0c 12 	call	0x2418	; 0x2418 <set_left_motor_dir>
	}
	float abs_duty = abs(duty);
    2140:	c7 01       	movw	r24, r14
    2142:	b6 01       	movw	r22, r12
    2144:	0e 94 78 11 	call	0x22f0	; 0x22f0 <abs>
	pwm_set_duty_cycle_left(abs_duty);	
    2148:	0e 94 be 11 	call	0x237c	; 0x237c <pwm_set_duty_cycle_left>
}
    214c:	ff 90       	pop	r15
    214e:	ef 90       	pop	r14
    2150:	df 90       	pop	r13
    2152:	cf 90       	pop	r12
    2154:	08 95       	ret

Disassembly of section .text.motor_right:

00002156 <motor_right>:

void motor_right(float duty) {
    2156:	cf 92       	push	r12
    2158:	df 92       	push	r13
    215a:	ef 92       	push	r14
    215c:	ff 92       	push	r15
    215e:	6b 01       	movw	r12, r22
    2160:	7c 01       	movw	r14, r24
	if (duty < 0) {
    2162:	20 e0       	ldi	r18, 0x00	; 0
    2164:	30 e0       	ldi	r19, 0x00	; 0
    2166:	a9 01       	movw	r20, r18
    2168:	0e 94 9c 12 	call	0x2538	; 0x2538 <__cmpsf2>
    216c:	88 23       	and	r24, r24
    216e:	2c f4       	brge	.+10     	; 0x217a <motor_right+0x24>
		set_right_motor_dir(BACKWARD);
    2170:	80 e0       	ldi	r24, 0x00	; 0
    2172:	90 e0       	ldi	r25, 0x00	; 0
    2174:	0e 94 1c 12 	call	0x2438	; 0x2438 <set_right_motor_dir>
    2178:	04 c0       	rjmp	.+8      	; 0x2182 <motor_right+0x2c>
	} else {
		set_right_motor_dir(FORWARD);
    217a:	81 e0       	ldi	r24, 0x01	; 1
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	0e 94 1c 12 	call	0x2438	; 0x2438 <set_right_motor_dir>
	}
	float abs_duty = abs(duty);
    2182:	c7 01       	movw	r24, r14
    2184:	b6 01       	movw	r22, r12
    2186:	0e 94 78 11 	call	0x22f0	; 0x22f0 <abs>
	pwm_set_duty_cycle_right(abs_duty);
    218a:	0e 94 d4 11 	call	0x23a8	; 0x23a8 <pwm_set_duty_cycle_right>
}
    218e:	ff 90       	pop	r15
    2190:	ef 90       	pop	r14
    2192:	df 90       	pop	r13
    2194:	cf 90       	pop	r12
    2196:	08 95       	ret

Disassembly of section .text.motor_left_stop:

000024ae <motor_left_stop>:

void motor_left_stop(void) {
	PORTC &= ~(1 << OUT1);
    24ae:	88 b1       	in	r24, 0x08	; 8
    24b0:	8e 7f       	andi	r24, 0xFE	; 254
    24b2:	88 b9       	out	0x08, r24	; 8
	PORTC &= ~(1 << OUT2);
    24b4:	88 b1       	in	r24, 0x08	; 8
    24b6:	8d 7f       	andi	r24, 0xFD	; 253
    24b8:	88 b9       	out	0x08, r24	; 8
    24ba:	08 95       	ret

Disassembly of section .text.motor_right_stop:

000024bc <motor_right_stop>:
}

void motor_right_stop(void) {
	PORTC &= ~(1 << OUT3);
    24bc:	88 b1       	in	r24, 0x08	; 8
    24be:	8b 7f       	andi	r24, 0xFB	; 251
    24c0:	88 b9       	out	0x08, r24	; 8
	PORTC &= ~(1 << OUT4);
    24c2:	88 b1       	in	r24, 0x08	; 8
    24c4:	87 7f       	andi	r24, 0xF7	; 247
    24c6:	88 b9       	out	0x08, r24	; 8
    24c8:	08 95       	ret

Disassembly of section .text.pwm_init:

00002494 <pwm_init>:
#include "pwm.h"

void pwm_init(void) {
	
	// Set as output (one for each wheel)
	DDRD |= (1 << PWM1);
    2494:	8a b1       	in	r24, 0x0a	; 10
    2496:	80 64       	ori	r24, 0x40	; 64
    2498:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << PWM2);
    249a:	8a b1       	in	r24, 0x0a	; 10
    249c:	80 62       	ori	r24, 0x20	; 32
    249e:	8a b9       	out	0x0a, r24	; 10
	TCCR0B |= (1 << CS02) | (1 << CS00); // 1024 prescalar
	*/
	
	// Phase correct PWM mode
	// PWM frequency will be (with no prescaler) 31kHz (outside audible spectrum)
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00);
    24a0:	84 b5       	in	r24, 0x24	; 36
    24a2:	81 6a       	ori	r24, 0xA1	; 161
    24a4:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS00); // no pre-scaling
    24a6:	85 b5       	in	r24, 0x25	; 37
    24a8:	81 60       	ori	r24, 0x01	; 1
    24aa:	85 bd       	out	0x25, r24	; 37
    24ac:	08 95       	ret

Disassembly of section .text.pwm_set_duty_cycle_left:

0000237c <pwm_set_duty_cycle_left>:
	
}

void pwm_set_duty_cycle_left(float d) {
	// value should be between 0-255
	float value = d / 100.0 * (255 - MIN_PWM_DUTY_LEFT) + MIN_PWM_DUTY_LEFT;
    237c:	20 e0       	ldi	r18, 0x00	; 0
    237e:	30 e0       	ldi	r19, 0x00	; 0
    2380:	48 ec       	ldi	r20, 0xC8	; 200
    2382:	52 e4       	ldi	r21, 0x42	; 66
    2384:	0e 94 a6 12 	call	0x254c	; 0x254c <__divsf3>
    2388:	20 e0       	ldi	r18, 0x00	; 0
    238a:	30 e0       	ldi	r19, 0x00	; 0
    238c:	40 ef       	ldi	r20, 0xF0	; 240
    238e:	52 e4       	ldi	r21, 0x42	; 66
    2390:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
    2394:	20 e0       	ldi	r18, 0x00	; 0
    2396:	30 e0       	ldi	r19, 0x00	; 0
    2398:	47 e0       	ldi	r20, 0x07	; 7
    239a:	53 e4       	ldi	r21, 0x43	; 67
    239c:	0e 94 74 12 	call	0x24e8	; 0x24e8 <__addsf3>
	OCR0A = (uint8_t)value;
    23a0:	0e 94 3f 0f 	call	0x1e7e	; 0x1e7e <__fixunssfsi>
    23a4:	67 bd       	out	0x27, r22	; 39
    23a6:	08 95       	ret

Disassembly of section .text.pwm_set_duty_cycle_right:

000023a8 <pwm_set_duty_cycle_right>:
}

void pwm_set_duty_cycle_right(float d) {
	
	float value = d / 100.0 * (255 - MIN_PWM_DUTY_RIGHT) + MIN_PWM_DUTY_RIGHT;
    23a8:	20 e0       	ldi	r18, 0x00	; 0
    23aa:	30 e0       	ldi	r19, 0x00	; 0
    23ac:	48 ec       	ldi	r20, 0xC8	; 200
    23ae:	52 e4       	ldi	r21, 0x42	; 66
    23b0:	0e 94 a6 12 	call	0x254c	; 0x254c <__divsf3>
    23b4:	20 e0       	ldi	r18, 0x00	; 0
    23b6:	30 e0       	ldi	r19, 0x00	; 0
    23b8:	40 ef       	ldi	r20, 0xF0	; 240
    23ba:	52 e4       	ldi	r21, 0x42	; 66
    23bc:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
    23c0:	20 e0       	ldi	r18, 0x00	; 0
    23c2:	30 e0       	ldi	r19, 0x00	; 0
    23c4:	47 e0       	ldi	r20, 0x07	; 7
    23c6:	53 e4       	ldi	r21, 0x43	; 67
    23c8:	0e 94 74 12 	call	0x24e8	; 0x24e8 <__addsf3>
	OCR0B = (uint8_t)value;
    23cc:	0e 94 3f 0f 	call	0x1e7e	; 0x1e7e <__fixunssfsi>
    23d0:	68 bd       	out	0x28, r22	; 40
    23d2:	08 95       	ret

Disassembly of section .text.PID_controller_set_parameters:

00001c9c <PID_controller_set_parameters>:
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
		pid->reference = ref;
	}
}

void PID_controller_set_parameters(PID_controller *pid, float P, float I, float D, float loop_period) {
    1c9c:	8f 92       	push	r8
    1c9e:	9f 92       	push	r9
    1ca0:	af 92       	push	r10
    1ca2:	bf 92       	push	r11
    1ca4:	cf 92       	push	r12
    1ca6:	df 92       	push	r13
    1ca8:	ef 92       	push	r14
    1caa:	ff 92       	push	r15
    1cac:	0f 93       	push	r16
    1cae:	1f 93       	push	r17
    1cb0:	cf 93       	push	r28
    1cb2:	df 93       	push	r29
    1cb4:	1f 92       	push	r1
    1cb6:	cd b7       	in	r28, 0x3d	; 61
    1cb8:	de b7       	in	r29, 0x3e	; 62
    1cba:	fc 01       	movw	r30, r24
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1cbc:	8f b7       	in	r24, 0x3f	; 63
    1cbe:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1cc0:	f8 94       	cli
    1cc2:	81 e0       	ldi	r24, 0x01	; 1
    1cc4:	11 c0       	rjmp	.+34     	; 0x1ce8 <PID_controller_set_parameters+0x4c>
		pid->Kp = P;
    1cc6:	44 8b       	std	Z+20, r20	; 0x14
    1cc8:	55 8b       	std	Z+21, r21	; 0x15
    1cca:	66 8b       	std	Z+22, r22	; 0x16
    1ccc:	77 8b       	std	Z+23, r23	; 0x17
		pid->Ki = I;
    1cce:	00 8f       	std	Z+24, r16	; 0x18
    1cd0:	11 8f       	std	Z+25, r17	; 0x19
    1cd2:	22 8f       	std	Z+26, r18	; 0x1a
    1cd4:	33 8f       	std	Z+27, r19	; 0x1b
		pid->Kd = D;
    1cd6:	c4 8e       	std	Z+28, r12	; 0x1c
    1cd8:	d5 8e       	std	Z+29, r13	; 0x1d
    1cda:	e6 8e       	std	Z+30, r14	; 0x1e
    1cdc:	f7 8e       	std	Z+31, r15	; 0x1f
		pid->loop_period = loop_period;
    1cde:	80 a2       	std	Z+32, r8	; 0x20
    1ce0:	91 a2       	std	Z+33, r9	; 0x21
    1ce2:	a2 a2       	std	Z+34, r10	; 0x22
    1ce4:	b3 a2       	std	Z+35, r11	; 0x23
		pid->reference = ref;
	}
}

void PID_controller_set_parameters(PID_controller *pid, float P, float I, float D, float loop_period) {
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1ce6:	80 e0       	ldi	r24, 0x00	; 0
    1ce8:	81 11       	cpse	r24, r1
    1cea:	ed cf       	rjmp	.-38     	; 0x1cc6 <PID_controller_set_parameters+0x2a>
    1cec:	ce 01       	movw	r24, r28
    1cee:	01 96       	adiw	r24, 0x01	; 1
    1cf0:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1cf2:	fc 01       	movw	r30, r24
    1cf4:	84 91       	lpm	r24, Z
    1cf6:	a7 fd       	sbrc	r26, 7
    1cf8:	80 81       	ld	r24, Z
    1cfa:	8f bf       	out	0x3f, r24	; 63
		pid->Kp = P;
		pid->Ki = I;
		pid->Kd = D;
		pid->loop_period = loop_period;
	}
}
    1cfc:	0f 90       	pop	r0
    1cfe:	df 91       	pop	r29
    1d00:	cf 91       	pop	r28
    1d02:	1f 91       	pop	r17
    1d04:	0f 91       	pop	r16
    1d06:	ff 90       	pop	r15
    1d08:	ef 90       	pop	r14
    1d0a:	df 90       	pop	r13
    1d0c:	cf 90       	pop	r12
    1d0e:	bf 90       	pop	r11
    1d10:	af 90       	pop	r10
    1d12:	9f 90       	pop	r9
    1d14:	8f 90       	pop	r8
    1d16:	08 95       	ret

Disassembly of section .text.PID_controller_init:

00001e0a <PID_controller_init>:

void PID_controller_init(PID_controller *pid) {
    1e0a:	fc 01       	movw	r30, r24
	pid->Kp = 0.0;
    1e0c:	14 8a       	std	Z+20, r1	; 0x14
    1e0e:	15 8a       	std	Z+21, r1	; 0x15
    1e10:	16 8a       	std	Z+22, r1	; 0x16
    1e12:	17 8a       	std	Z+23, r1	; 0x17
	pid->Ki = 0.0;
    1e14:	10 8e       	std	Z+24, r1	; 0x18
    1e16:	11 8e       	std	Z+25, r1	; 0x19
    1e18:	12 8e       	std	Z+26, r1	; 0x1a
    1e1a:	13 8e       	std	Z+27, r1	; 0x1b
	pid->Kp = 0.0;
	pid->loop_period = 0.0;
    1e1c:	10 a2       	std	Z+32, r1	; 0x20
    1e1e:	11 a2       	std	Z+33, r1	; 0x21
    1e20:	12 a2       	std	Z+34, r1	; 0x22
    1e22:	13 a2       	std	Z+35, r1	; 0x23
	pid->reference = 0.0;
    1e24:	10 82       	st	Z, r1
    1e26:	11 82       	std	Z+1, r1	; 0x01
    1e28:	12 82       	std	Z+2, r1	; 0x02
    1e2a:	13 82       	std	Z+3, r1	; 0x03
	pid->prev_reference = 0.0;
    1e2c:	14 82       	std	Z+4, r1	; 0x04
    1e2e:	15 82       	std	Z+5, r1	; 0x05
    1e30:	16 82       	std	Z+6, r1	; 0x06
    1e32:	17 82       	std	Z+7, r1	; 0x07
	pid->error = 0.0;
    1e34:	10 86       	std	Z+8, r1	; 0x08
    1e36:	11 86       	std	Z+9, r1	; 0x09
    1e38:	12 86       	std	Z+10, r1	; 0x0a
    1e3a:	13 86       	std	Z+11, r1	; 0x0b
	pid->prev_error = 0.0;
    1e3c:	14 86       	std	Z+12, r1	; 0x0c
    1e3e:	15 86       	std	Z+13, r1	; 0x0d
    1e40:	16 86       	std	Z+14, r1	; 0x0e
    1e42:	17 86       	std	Z+15, r1	; 0x0f
	pid->integral_error = 0.0;
    1e44:	10 8a       	std	Z+16, r1	; 0x10
    1e46:	11 8a       	std	Z+17, r1	; 0x11
    1e48:	12 8a       	std	Z+18, r1	; 0x12
    1e4a:	13 8a       	std	Z+19, r1	; 0x13
	pid->prev_control_action = 0.0;
    1e4c:	14 a2       	std	Z+36, r1	; 0x24
    1e4e:	15 a2       	std	Z+37, r1	; 0x25
    1e50:	16 a2       	std	Z+38, r1	; 0x26
    1e52:	17 a2       	std	Z+39, r1	; 0x27
	pid->max_control_action = 100;
    1e54:	80 e0       	ldi	r24, 0x00	; 0
    1e56:	90 e0       	ldi	r25, 0x00	; 0
    1e58:	a8 ec       	ldi	r26, 0xC8	; 200
    1e5a:	b2 e4       	ldi	r27, 0x42	; 66
    1e5c:	80 a7       	std	Z+40, r24	; 0x28
    1e5e:	91 a7       	std	Z+41, r25	; 0x29
    1e60:	a2 a7       	std	Z+42, r26	; 0x2a
    1e62:	b3 a7       	std	Z+43, r27	; 0x2b
	pid->min_control_action = -100; 
    1e64:	80 e0       	ldi	r24, 0x00	; 0
    1e66:	90 e0       	ldi	r25, 0x00	; 0
    1e68:	a8 ec       	ldi	r26, 0xC8	; 200
    1e6a:	b2 ec       	ldi	r27, 0xC2	; 194
    1e6c:	84 a7       	std	Z+44, r24	; 0x2c
    1e6e:	95 a7       	std	Z+45, r25	; 0x2d
    1e70:	a6 a7       	std	Z+46, r26	; 0x2e
    1e72:	b7 a7       	std	Z+47, r27	; 0x2f
	pid->u_unbounded = 0;
    1e74:	10 aa       	std	Z+48, r1	; 0x30
    1e76:	11 aa       	std	Z+49, r1	; 0x31
    1e78:	12 aa       	std	Z+50, r1	; 0x32
    1e7a:	13 aa       	std	Z+51, r1	; 0x33
    1e7c:	08 95       	ret

Disassembly of section .text.PID_controller_get_control_action:

00000d1e <PID_controller_get_control_action>:

void PID_controller_set_reference(PID_controller *pid, float ref) {
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
		pid->reference = ref;
	}
}
 d1e:	4f 92       	push	r4
 d20:	5f 92       	push	r5
 d22:	6f 92       	push	r6
 d24:	7f 92       	push	r7
 d26:	8f 92       	push	r8
 d28:	9f 92       	push	r9
 d2a:	af 92       	push	r10
 d2c:	bf 92       	push	r11
 d2e:	cf 92       	push	r12
 d30:	df 92       	push	r13
 d32:	ef 92       	push	r14
 d34:	ff 92       	push	r15
 d36:	cf 93       	push	r28
 d38:	df 93       	push	r29
 d3a:	cd b7       	in	r28, 0x3d	; 61
 d3c:	de b7       	in	r29, 0x3e	; 62
 d3e:	62 97       	sbiw	r28, 0x12	; 18
 d40:	0f b6       	in	r0, 0x3f	; 63
 d42:	f8 94       	cli
 d44:	de bf       	out	0x3e, r29	; 62
 d46:	0f be       	out	0x3f, r0	; 63
 d48:	cd bf       	out	0x3d, r28	; 61
 d4a:	9a 8b       	std	Y+18, r25	; 0x12
 d4c:	89 8b       	std	Y+17, r24	; 0x11
 d4e:	6a 01       	movw	r12, r20
 d50:	7b 01       	movw	r14, r22
 d52:	dc 01       	movw	r26, r24
 d54:	54 96       	adiw	r26, 0x14	; 20
 d56:	6d 91       	ld	r22, X+
 d58:	7d 91       	ld	r23, X+
 d5a:	8d 91       	ld	r24, X+
 d5c:	9c 91       	ld	r25, X
 d5e:	57 97       	sbiw	r26, 0x17	; 23
 d60:	a7 01       	movw	r20, r14
 d62:	96 01       	movw	r18, r12
 d64:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
 d68:	6d 87       	std	Y+13, r22	; 0x0d
 d6a:	7e 87       	std	Y+14, r23	; 0x0e
 d6c:	8f 87       	std	Y+15, r24	; 0x0f
 d6e:	98 8b       	std	Y+16, r25	; 0x10
 d70:	a9 89       	ldd	r26, Y+17	; 0x11
 d72:	ba 89       	ldd	r27, Y+18	; 0x12
 d74:	58 96       	adiw	r26, 0x18	; 24
 d76:	2d 91       	ld	r18, X+
 d78:	3d 91       	ld	r19, X+
 d7a:	4d 91       	ld	r20, X+
 d7c:	5c 91       	ld	r21, X
 d7e:	5b 97       	sbiw	r26, 0x1b	; 27
 d80:	29 83       	std	Y+1, r18	; 0x01
 d82:	3a 83       	std	Y+2, r19	; 0x02
 d84:	4b 83       	std	Y+3, r20	; 0x03
 d86:	5c 83       	std	Y+4, r21	; 0x04
 d88:	50 96       	adiw	r26, 0x10	; 16
 d8a:	2d 91       	ld	r18, X+
 d8c:	3d 91       	ld	r19, X+
 d8e:	4d 91       	ld	r20, X+
 d90:	5c 91       	ld	r21, X
 d92:	53 97       	sbiw	r26, 0x13	; 19
 d94:	29 87       	std	Y+9, r18	; 0x09
 d96:	3a 87       	std	Y+10, r19	; 0x0a
 d98:	4b 87       	std	Y+11, r20	; 0x0b
 d9a:	5c 87       	std	Y+12, r21	; 0x0c
 d9c:	69 81       	ldd	r22, Y+1	; 0x01
 d9e:	7a 81       	ldd	r23, Y+2	; 0x02
 da0:	8b 81       	ldd	r24, Y+3	; 0x03
 da2:	9c 81       	ldd	r25, Y+4	; 0x04
 da4:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
 da8:	2b 01       	movw	r4, r22
 daa:	3c 01       	movw	r6, r24
 dac:	e9 89       	ldd	r30, Y+17	; 0x11
 dae:	fa 89       	ldd	r31, Y+18	; 0x12
 db0:	84 8c       	ldd	r8, Z+28	; 0x1c
 db2:	95 8c       	ldd	r9, Z+29	; 0x1d
 db4:	a6 8c       	ldd	r10, Z+30	; 0x1e
 db6:	b7 8c       	ldd	r11, Z+31	; 0x1f
 db8:	24 85       	ldd	r18, Z+12	; 0x0c
 dba:	35 85       	ldd	r19, Z+13	; 0x0d
 dbc:	46 85       	ldd	r20, Z+14	; 0x0e
 dbe:	57 85       	ldd	r21, Z+15	; 0x0f
 dc0:	c7 01       	movw	r24, r14
 dc2:	b6 01       	movw	r22, r12
 dc4:	0e 94 73 12 	call	0x24e6	; 0x24e6 <__subsf3>
 dc8:	9b 01       	movw	r18, r22
 dca:	ac 01       	movw	r20, r24
 dcc:	c5 01       	movw	r24, r10
 dce:	b4 01       	movw	r22, r8
 dd0:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
 dd4:	a9 89       	ldd	r26, Y+17	; 0x11
 dd6:	ba 89       	ldd	r27, Y+18	; 0x12
 dd8:	90 96       	adiw	r26, 0x20	; 32
 dda:	2d 91       	ld	r18, X+
 ddc:	3d 91       	ld	r19, X+
 dde:	4d 91       	ld	r20, X+
 de0:	5c 91       	ld	r21, X
 de2:	93 97       	sbiw	r26, 0x23	; 35
 de4:	2d 83       	std	Y+5, r18	; 0x05
 de6:	3e 83       	std	Y+6, r19	; 0x06
 de8:	4f 83       	std	Y+7, r20	; 0x07
 dea:	58 87       	std	Y+8, r21	; 0x08
 dec:	0e 94 a6 12 	call	0x254c	; 0x254c <__divsf3>
 df0:	4b 01       	movw	r8, r22
 df2:	5c 01       	movw	r10, r24
 df4:	a3 01       	movw	r20, r6
 df6:	92 01       	movw	r18, r4
 df8:	6d 85       	ldd	r22, Y+13	; 0x0d
 dfa:	7e 85       	ldd	r23, Y+14	; 0x0e
 dfc:	8f 85       	ldd	r24, Y+15	; 0x0f
 dfe:	98 89       	ldd	r25, Y+16	; 0x10
 e00:	0e 94 74 12 	call	0x24e8	; 0x24e8 <__addsf3>
 e04:	9b 01       	movw	r18, r22
 e06:	ac 01       	movw	r20, r24
 e08:	c5 01       	movw	r24, r10
 e0a:	b4 01       	movw	r22, r8
 e0c:	0e 94 74 12 	call	0x24e8	; 0x24e8 <__addsf3>
 e10:	b6 2e       	mov	r11, r22
 e12:	a7 2e       	mov	r10, r23
 e14:	98 2e       	mov	r9, r24
 e16:	89 2e       	mov	r8, r25
 e18:	e9 89       	ldd	r30, Y+17	; 0x11
 e1a:	fa 89       	ldd	r31, Y+18	; 0x12
 e1c:	70 a4       	ldd	r7, Z+40	; 0x28
 e1e:	61 a4       	ldd	r6, Z+41	; 0x29
 e20:	52 a4       	ldd	r5, Z+42	; 0x2a
 e22:	43 a4       	ldd	r4, Z+43	; 0x2b
 e24:	27 2d       	mov	r18, r7
 e26:	36 2d       	mov	r19, r6
 e28:	45 2d       	mov	r20, r5
 e2a:	54 2d       	mov	r21, r4
 e2c:	0e 94 a1 12 	call	0x2542	; 0x2542 <__gesf2>
 e30:	18 16       	cp	r1, r24
 e32:	ec f5       	brge	.+122    	; 0xeae <PID_controller_get_control_action+0x190>
 e34:	20 e0       	ldi	r18, 0x00	; 0
 e36:	30 e0       	ldi	r19, 0x00	; 0
 e38:	a9 01       	movw	r20, r18
 e3a:	69 81       	ldd	r22, Y+1	; 0x01
 e3c:	7a 81       	ldd	r23, Y+2	; 0x02
 e3e:	8b 81       	ldd	r24, Y+3	; 0x03
 e40:	9c 81       	ldd	r25, Y+4	; 0x04
 e42:	0e 94 9c 12 	call	0x2538	; 0x2538 <__cmpsf2>
 e46:	88 23       	and	r24, r24
 e48:	09 f4       	brne	.+2      	; 0xe4c <PID_controller_get_control_action+0x12e>
 e4a:	83 c0       	rjmp	.+262    	; 0xf52 <PID_controller_get_control_action+0x234>
 e4c:	29 81       	ldd	r18, Y+1	; 0x01
 e4e:	3a 81       	ldd	r19, Y+2	; 0x02
 e50:	4b 81       	ldd	r20, Y+3	; 0x03
 e52:	5c 81       	ldd	r21, Y+4	; 0x04
 e54:	6d 81       	ldd	r22, Y+5	; 0x05
 e56:	7e 81       	ldd	r23, Y+6	; 0x06
 e58:	8f 81       	ldd	r24, Y+7	; 0x07
 e5a:	98 85       	ldd	r25, Y+8	; 0x08
 e5c:	0e 94 a6 12 	call	0x254c	; 0x254c <__divsf3>
 e60:	69 83       	std	Y+1, r22	; 0x01
 e62:	7a 83       	std	Y+2, r23	; 0x02
 e64:	8b 83       	std	Y+3, r24	; 0x03
 e66:	9c 83       	std	Y+4, r25	; 0x04
 e68:	2b 2d       	mov	r18, r11
 e6a:	3a 2d       	mov	r19, r10
 e6c:	49 2d       	mov	r20, r9
 e6e:	58 2d       	mov	r21, r8
 e70:	67 2d       	mov	r22, r7
 e72:	76 2d       	mov	r23, r6
 e74:	85 2d       	mov	r24, r5
 e76:	94 2d       	mov	r25, r4
 e78:	0e 94 73 12 	call	0x24e6	; 0x24e6 <__subsf3>
 e7c:	9b 01       	movw	r18, r22
 e7e:	ac 01       	movw	r20, r24
 e80:	69 81       	ldd	r22, Y+1	; 0x01
 e82:	7a 81       	ldd	r23, Y+2	; 0x02
 e84:	8b 81       	ldd	r24, Y+3	; 0x03
 e86:	9c 81       	ldd	r25, Y+4	; 0x04
 e88:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
 e8c:	9b 01       	movw	r18, r22
 e8e:	ac 01       	movw	r20, r24
 e90:	69 85       	ldd	r22, Y+9	; 0x09
 e92:	7a 85       	ldd	r23, Y+10	; 0x0a
 e94:	8b 85       	ldd	r24, Y+11	; 0x0b
 e96:	9c 85       	ldd	r25, Y+12	; 0x0c
 e98:	0e 94 74 12 	call	0x24e8	; 0x24e8 <__addsf3>
 e9c:	a9 89       	ldd	r26, Y+17	; 0x11
 e9e:	ba 89       	ldd	r27, Y+18	; 0x12
 ea0:	50 96       	adiw	r26, 0x10	; 16
 ea2:	6d 93       	st	X+, r22
 ea4:	7d 93       	st	X+, r23
 ea6:	8d 93       	st	X+, r24
 ea8:	9c 93       	st	X, r25
 eaa:	53 97       	sbiw	r26, 0x13	; 19
 eac:	52 c0       	rjmp	.+164    	; 0xf52 <PID_controller_get_control_action+0x234>
 eae:	e9 89       	ldd	r30, Y+17	; 0x11
 eb0:	fa 89       	ldd	r31, Y+18	; 0x12
 eb2:	74 a4       	ldd	r7, Z+44	; 0x2c
 eb4:	65 a4       	ldd	r6, Z+45	; 0x2d
 eb6:	56 a4       	ldd	r5, Z+46	; 0x2e
 eb8:	47 a4       	ldd	r4, Z+47	; 0x2f
 eba:	27 2d       	mov	r18, r7
 ebc:	36 2d       	mov	r19, r6
 ebe:	45 2d       	mov	r20, r5
 ec0:	54 2d       	mov	r21, r4
 ec2:	6b 2d       	mov	r22, r11
 ec4:	7a 2d       	mov	r23, r10
 ec6:	89 2d       	mov	r24, r9
 ec8:	98 2d       	mov	r25, r8
 eca:	0e 94 9c 12 	call	0x2538	; 0x2538 <__cmpsf2>
 ece:	88 23       	and	r24, r24
 ed0:	e4 f5       	brge	.+120    	; 0xf4a <PID_controller_get_control_action+0x22c>
 ed2:	20 e0       	ldi	r18, 0x00	; 0
 ed4:	30 e0       	ldi	r19, 0x00	; 0
 ed6:	a9 01       	movw	r20, r18
 ed8:	69 81       	ldd	r22, Y+1	; 0x01
 eda:	7a 81       	ldd	r23, Y+2	; 0x02
 edc:	8b 81       	ldd	r24, Y+3	; 0x03
 ede:	9c 81       	ldd	r25, Y+4	; 0x04
 ee0:	0e 94 9c 12 	call	0x2538	; 0x2538 <__cmpsf2>
 ee4:	88 23       	and	r24, r24
 ee6:	a9 f1       	breq	.+106    	; 0xf52 <PID_controller_get_control_action+0x234>
 ee8:	29 81       	ldd	r18, Y+1	; 0x01
 eea:	3a 81       	ldd	r19, Y+2	; 0x02
 eec:	4b 81       	ldd	r20, Y+3	; 0x03
 eee:	5c 81       	ldd	r21, Y+4	; 0x04
 ef0:	6d 81       	ldd	r22, Y+5	; 0x05
 ef2:	7e 81       	ldd	r23, Y+6	; 0x06
 ef4:	8f 81       	ldd	r24, Y+7	; 0x07
 ef6:	98 85       	ldd	r25, Y+8	; 0x08
 ef8:	0e 94 a6 12 	call	0x254c	; 0x254c <__divsf3>
 efc:	69 83       	std	Y+1, r22	; 0x01
 efe:	7a 83       	std	Y+2, r23	; 0x02
 f00:	8b 83       	std	Y+3, r24	; 0x03
 f02:	9c 83       	std	Y+4, r25	; 0x04
 f04:	2b 2d       	mov	r18, r11
 f06:	3a 2d       	mov	r19, r10
 f08:	49 2d       	mov	r20, r9
 f0a:	58 2d       	mov	r21, r8
 f0c:	67 2d       	mov	r22, r7
 f0e:	76 2d       	mov	r23, r6
 f10:	85 2d       	mov	r24, r5
 f12:	94 2d       	mov	r25, r4
 f14:	0e 94 73 12 	call	0x24e6	; 0x24e6 <__subsf3>
 f18:	9b 01       	movw	r18, r22
 f1a:	ac 01       	movw	r20, r24
 f1c:	69 81       	ldd	r22, Y+1	; 0x01
 f1e:	7a 81       	ldd	r23, Y+2	; 0x02
 f20:	8b 81       	ldd	r24, Y+3	; 0x03
 f22:	9c 81       	ldd	r25, Y+4	; 0x04
 f24:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
 f28:	9b 01       	movw	r18, r22
 f2a:	ac 01       	movw	r20, r24
 f2c:	69 85       	ldd	r22, Y+9	; 0x09
 f2e:	7a 85       	ldd	r23, Y+10	; 0x0a
 f30:	8b 85       	ldd	r24, Y+11	; 0x0b
 f32:	9c 85       	ldd	r25, Y+12	; 0x0c
 f34:	0e 94 74 12 	call	0x24e8	; 0x24e8 <__addsf3>
 f38:	a9 89       	ldd	r26, Y+17	; 0x11
 f3a:	ba 89       	ldd	r27, Y+18	; 0x12
 f3c:	50 96       	adiw	r26, 0x10	; 16
 f3e:	6d 93       	st	X+, r22
 f40:	7d 93       	st	X+, r23
 f42:	8d 93       	st	X+, r24
 f44:	9c 93       	st	X, r25
 f46:	53 97       	sbiw	r26, 0x13	; 19
 f48:	04 c0       	rjmp	.+8      	; 0xf52 <PID_controller_get_control_action+0x234>
 f4a:	7b 2c       	mov	r7, r11
 f4c:	6a 2c       	mov	r6, r10
 f4e:	59 2c       	mov	r5, r9
 f50:	48 2c       	mov	r4, r8
 f52:	2d 81       	ldd	r18, Y+5	; 0x05
 f54:	3e 81       	ldd	r19, Y+6	; 0x06
 f56:	4f 81       	ldd	r20, Y+7	; 0x07
 f58:	58 85       	ldd	r21, Y+8	; 0x08
 f5a:	c7 01       	movw	r24, r14
 f5c:	b6 01       	movw	r22, r12
 f5e:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
 f62:	9b 01       	movw	r18, r22
 f64:	ac 01       	movw	r20, r24
 f66:	e9 89       	ldd	r30, Y+17	; 0x11
 f68:	fa 89       	ldd	r31, Y+18	; 0x12
 f6a:	60 89       	ldd	r22, Z+16	; 0x10
 f6c:	71 89       	ldd	r23, Z+17	; 0x11
 f6e:	82 89       	ldd	r24, Z+18	; 0x12
 f70:	93 89       	ldd	r25, Z+19	; 0x13
 f72:	0e 94 74 12 	call	0x24e8	; 0x24e8 <__addsf3>
 f76:	a9 89       	ldd	r26, Y+17	; 0x11
 f78:	ba 89       	ldd	r27, Y+18	; 0x12
 f7a:	50 96       	adiw	r26, 0x10	; 16
 f7c:	6d 93       	st	X+, r22
 f7e:	7d 93       	st	X+, r23
 f80:	8d 93       	st	X+, r24
 f82:	9c 93       	st	X, r25
 f84:	53 97       	sbiw	r26, 0x13	; 19
 f86:	fd 01       	movw	r30, r26
 f88:	c4 86       	std	Z+12, r12	; 0x0c
 f8a:	d5 86       	std	Z+13, r13	; 0x0d
 f8c:	e6 86       	std	Z+14, r14	; 0x0e
 f8e:	f7 86       	std	Z+15, r15	; 0x0f
 f90:	80 81       	ld	r24, Z
 f92:	91 81       	ldd	r25, Z+1	; 0x01
 f94:	a2 81       	ldd	r26, Z+2	; 0x02
 f96:	b3 81       	ldd	r27, Z+3	; 0x03
 f98:	84 83       	std	Z+4, r24	; 0x04
 f9a:	95 83       	std	Z+5, r25	; 0x05
 f9c:	a6 83       	std	Z+6, r26	; 0x06
 f9e:	b7 83       	std	Z+7, r27	; 0x07
 fa0:	67 2d       	mov	r22, r7
 fa2:	76 2d       	mov	r23, r6
 fa4:	85 2d       	mov	r24, r5
 fa6:	94 2d       	mov	r25, r4
 fa8:	62 96       	adiw	r28, 0x12	; 18
 faa:	0f b6       	in	r0, 0x3f	; 63
 fac:	f8 94       	cli
 fae:	de bf       	out	0x3e, r29	; 62
 fb0:	0f be       	out	0x3f, r0	; 63
 fb2:	cd bf       	out	0x3d, r28	; 61
 fb4:	df 91       	pop	r29
 fb6:	cf 91       	pop	r28
 fb8:	ff 90       	pop	r15
 fba:	ef 90       	pop	r14
 fbc:	df 90       	pop	r13
 fbe:	cf 90       	pop	r12
 fc0:	bf 90       	pop	r11
 fc2:	af 90       	pop	r10
 fc4:	9f 90       	pop	r9
 fc6:	8f 90       	pop	r8
 fc8:	7f 90       	pop	r7
 fca:	6f 90       	pop	r6
 fcc:	5f 90       	pop	r5
 fce:	4f 90       	pop	r4
 fd0:	08 95       	ret

Disassembly of section .text.speed_estimator_init:

00001c0a <speed_estimator_init>:

long ticks_per_rot_left = DEFAULT_TICKS_PER_ROT_LEFT;
long ticks_per_rot_right = DEFAULT_TICKS_PER_ROT_LEFT;


void speed_estimator_init(long left, long right) {
    1c0a:	cf 93       	push	r28
    1c0c:	df 93       	push	r29
    1c0e:	1f 92       	push	r1
    1c10:	cd b7       	in	r28, 0x3d	; 61
    1c12:	de b7       	in	r29, 0x3e	; 62
	
	ticks_per_rot_left = left;
    1c14:	60 93 32 01 	sts	0x0132, r22	; 0x800132 <ticks_per_rot_left>
    1c18:	70 93 33 01 	sts	0x0133, r23	; 0x800133 <ticks_per_rot_left+0x1>
    1c1c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <ticks_per_rot_left+0x2>
    1c20:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <ticks_per_rot_left+0x3>
	ticks_per_rot_right = right;
    1c24:	20 93 2e 01 	sts	0x012E, r18	; 0x80012e <ticks_per_rot_right>
    1c28:	30 93 2f 01 	sts	0x012F, r19	; 0x80012f <ticks_per_rot_right+0x1>
    1c2c:	40 93 30 01 	sts	0x0130, r20	; 0x800130 <ticks_per_rot_right+0x2>
    1c30:	50 93 31 01 	sts	0x0131, r21	; 0x800131 <ticks_per_rot_right+0x3>
	
	encoder_init();
    1c34:	0e 94 90 11 	call	0x2320	; 0x2320 <encoder_init>
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1c38:	8f b7       	in	r24, 0x3f	; 63
    1c3a:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1c3c:	f8 94       	cli
    1c3e:	81 e0       	ldi	r24, 0x01	; 1
    1c40:	0d c0       	rjmp	.+26     	; 0x1c5c <speed_estimator_init+0x52>
		ticks_right = encoder_get_accumulated_ticks_right();
    1c42:	0e 94 dc 0f 	call	0x1fb8	; 0x1fb8 <encoder_get_accumulated_ticks_right>
    1c46:	70 93 5d 01 	sts	0x015D, r23	; 0x80015d <ticks_right+0x1>
    1c4a:	60 93 5c 01 	sts	0x015C, r22	; 0x80015c <ticks_right>
		ticks_left = encoder_get_accumulated_ticks_left();	
    1c4e:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <encoder_get_accumulated_ticks_left>
    1c52:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <ticks_left+0x1>
    1c56:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <ticks_left>
	
	ticks_per_rot_left = left;
	ticks_per_rot_right = right;
	
	encoder_init();
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1c5a:	80 e0       	ldi	r24, 0x00	; 0
    1c5c:	81 11       	cpse	r24, r1
    1c5e:	f1 cf       	rjmp	.-30     	; 0x1c42 <speed_estimator_init+0x38>
    1c60:	ce 01       	movw	r24, r28
    1c62:	01 96       	adiw	r24, 0x01	; 1
    1c64:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1c66:	fc 01       	movw	r30, r24
    1c68:	84 91       	lpm	r24, Z
    1c6a:	a7 fd       	sbrc	r26, 7
    1c6c:	80 81       	ld	r24, Z
    1c6e:	8f bf       	out	0x3f, r24	; 63
	(2^8*1024) / (16000000) * 255/255 = 0.016384
	
	OCR1A = measurement_period * F_CPU * (2^16-1) / (2^16*prescalar)
	
	*/
	cli();
    1c70:	f8 94       	cli
	// Enable interrupt
	TIMSK2 |= (1 << OCIE2A);
	*/
	
	// 16-bit Timer1
	OCR1AH = 0x04;
    1c72:	84 e0       	ldi	r24, 0x04	; 4
    1c74:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0xE1;
    1c78:	81 ee       	ldi	r24, 0xE1	; 225
    1c7a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	//OCR1A = 15999;
	TCCR1B |= (1 << WGM12) | (1 << CS12); // CTC mode (clear on match with OCR1A), 256 prescalar
    1c7e:	e1 e8       	ldi	r30, 0x81	; 129
    1c80:	f0 e0       	ldi	r31, 0x00	; 0
    1c82:	80 81       	ld	r24, Z
    1c84:	8c 60       	ori	r24, 0x0C	; 12
    1c86:	80 83       	st	Z, r24
	
	// Enable interrupt
	TIMSK1 |= (1 << OCIE1A);
    1c88:	ef e6       	ldi	r30, 0x6F	; 111
    1c8a:	f0 e0       	ldi	r31, 0x00	; 0
    1c8c:	80 81       	ld	r24, Z
    1c8e:	82 60       	ori	r24, 0x02	; 2
    1c90:	80 83       	st	Z, r24
	
	sei();
    1c92:	78 94       	sei
}
    1c94:	0f 90       	pop	r0
    1c96:	df 91       	pop	r29
    1c98:	cf 91       	pop	r28
    1c9a:	08 95       	ret

Disassembly of section .text.speed_estimator_right_rad_per_s:

00001ffe <speed_estimator_right_rad_per_s>:

float speed_estimator_right_rad_per_s() {
    1ffe:	cf 93       	push	r28
    2000:	df 93       	push	r29
    2002:	1f 92       	push	r1
    2004:	cd b7       	in	r28, 0x3d	; 61
    2006:	de b7       	in	r29, 0x3e	; 62
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    2008:	8f b7       	in	r24, 0x3f	; 63
    200a:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    200c:	f8 94       	cli
    200e:	81 e0       	ldi	r24, 0x01	; 1
    2010:	09 c0       	rjmp	.+18     	; 0x2024 <speed_estimator_right_rad_per_s+0x26>
		rad_per_s = rad_per_s_right_smoothed;
    2012:	40 91 36 01 	lds	r20, 0x0136	; 0x800136 <rad_per_s_right_smoothed>
    2016:	50 91 37 01 	lds	r21, 0x0137	; 0x800137 <rad_per_s_right_smoothed+0x1>
    201a:	60 91 38 01 	lds	r22, 0x0138	; 0x800138 <rad_per_s_right_smoothed+0x2>
    201e:	70 91 39 01 	lds	r23, 0x0139	; 0x800139 <rad_per_s_right_smoothed+0x3>
	sei();
}

float speed_estimator_right_rad_per_s() {
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    2022:	80 e0       	ldi	r24, 0x00	; 0
    2024:	81 11       	cpse	r24, r1
    2026:	f5 cf       	rjmp	.-22     	; 0x2012 <speed_estimator_right_rad_per_s+0x14>
    2028:	ce 01       	movw	r24, r28
    202a:	01 96       	adiw	r24, 0x01	; 1
    202c:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    202e:	fc 01       	movw	r30, r24
    2030:	84 91       	lpm	r24, Z
    2032:	a7 fd       	sbrc	r26, 7
    2034:	80 81       	ld	r24, Z
    2036:	8f bf       	out	0x3f, r24	; 63
		rad_per_s = rad_per_s_right_smoothed;
	}
	return rad_per_s;
}
    2038:	cb 01       	movw	r24, r22
    203a:	ba 01       	movw	r22, r20
    203c:	0f 90       	pop	r0
    203e:	df 91       	pop	r29
    2040:	cf 91       	pop	r28
    2042:	08 95       	ret

Disassembly of section .text.speed_estimator_left_rad_per_s:

00002044 <speed_estimator_left_rad_per_s>:

float speed_estimator_left_rad_per_s() {
    2044:	cf 93       	push	r28
    2046:	df 93       	push	r29
    2048:	1f 92       	push	r1
    204a:	cd b7       	in	r28, 0x3d	; 61
    204c:	de b7       	in	r29, 0x3e	; 62
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    204e:	8f b7       	in	r24, 0x3f	; 63
    2050:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    2052:	f8 94       	cli
    2054:	81 e0       	ldi	r24, 0x01	; 1
    2056:	09 c0       	rjmp	.+18     	; 0x206a <speed_estimator_left_rad_per_s+0x26>
		rad_per_s = rad_per_s_left_smoothed;
    2058:	40 91 3a 01 	lds	r20, 0x013A	; 0x80013a <rad_per_s_left_smoothed>
    205c:	50 91 3b 01 	lds	r21, 0x013B	; 0x80013b <rad_per_s_left_smoothed+0x1>
    2060:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <rad_per_s_left_smoothed+0x2>
    2064:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <rad_per_s_left_smoothed+0x3>
	return rad_per_s;
}

float speed_estimator_left_rad_per_s() {
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    2068:	80 e0       	ldi	r24, 0x00	; 0
    206a:	81 11       	cpse	r24, r1
    206c:	f5 cf       	rjmp	.-22     	; 0x2058 <speed_estimator_left_rad_per_s+0x14>
    206e:	ce 01       	movw	r24, r28
    2070:	01 96       	adiw	r24, 0x01	; 1
    2072:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    2074:	fc 01       	movw	r30, r24
    2076:	84 91       	lpm	r24, Z
    2078:	a7 fd       	sbrc	r26, 7
    207a:	80 81       	ld	r24, Z
    207c:	8f bf       	out	0x3f, r24	; 63
		rad_per_s = rad_per_s_left_smoothed;
	}
	return rad_per_s;
}
    207e:	cb 01       	movw	r24, r22
    2080:	ba 01       	movw	r22, r20
    2082:	0f 90       	pop	r0
    2084:	df 91       	pop	r29
    2086:	cf 91       	pop	r28
    2088:	08 95       	ret

Disassembly of section .text.__vector_11:

00000fd2 <__vector_11>:
	prev_ticks_left = ticks_left;
	left_rad_per_s = 2.0*PI*((float)ticks_left - (float)prev_ticks_left) / ((float)TICKS_PER_ROT*encoder_measurement_period);
	
}*/

ISR(TIMER1_COMPA_vect) {
     fd2:	1f 92       	push	r1
     fd4:	0f 92       	push	r0
     fd6:	0f b6       	in	r0, 0x3f	; 63
     fd8:	0f 92       	push	r0
     fda:	11 24       	eor	r1, r1
     fdc:	cf 92       	push	r12
     fde:	df 92       	push	r13
     fe0:	ef 92       	push	r14
     fe2:	ff 92       	push	r15
     fe4:	2f 93       	push	r18
     fe6:	3f 93       	push	r19
     fe8:	4f 93       	push	r20
     fea:	5f 93       	push	r21
     fec:	6f 93       	push	r22
     fee:	7f 93       	push	r23
     ff0:	8f 93       	push	r24
     ff2:	9f 93       	push	r25
     ff4:	af 93       	push	r26
     ff6:	bf 93       	push	r27
     ff8:	ef 93       	push	r30
     ffa:	ff 93       	push	r31
	prev_ticks_right = ticks_right;
     ffc:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <ticks_right>
    1000:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <ticks_right+0x1>
    1004:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <prev_ticks_right+0x1>
    1008:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <prev_ticks_right>
	ticks_right = encoder_get_accumulated_ticks_right();
    100c:	0e 94 dc 0f 	call	0x1fb8	; 0x1fb8 <encoder_get_accumulated_ticks_right>
    1010:	70 93 5d 01 	sts	0x015D, r23	; 0x80015d <ticks_right+0x1>
    1014:	60 93 5c 01 	sts	0x015C, r22	; 0x80015c <ticks_right>
	rad_per_s_right = 2.0*PI*((float)ticks_right - (float)prev_ticks_right) / ((float)ticks_per_rot_right*encoder_measurement_period);
    1018:	60 91 5c 01 	lds	r22, 0x015C	; 0x80015c <ticks_right>
    101c:	70 91 5d 01 	lds	r23, 0x015D	; 0x80015d <ticks_right+0x1>
    1020:	07 2e       	mov	r0, r23
    1022:	00 0c       	add	r0, r0
    1024:	88 0b       	sbc	r24, r24
    1026:	99 0b       	sbc	r25, r25
    1028:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <__floatsisf>
    102c:	6b 01       	movw	r12, r22
    102e:	7c 01       	movw	r14, r24
    1030:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <prev_ticks_right>
    1034:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <prev_ticks_right+0x1>
    1038:	07 2e       	mov	r0, r23
    103a:	00 0c       	add	r0, r0
    103c:	88 0b       	sbc	r24, r24
    103e:	99 0b       	sbc	r25, r25
    1040:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <__floatsisf>
    1044:	9b 01       	movw	r18, r22
    1046:	ac 01       	movw	r20, r24
    1048:	c7 01       	movw	r24, r14
    104a:	b6 01       	movw	r22, r12
    104c:	0e 94 73 12 	call	0x24e6	; 0x24e6 <__subsf3>
    1050:	2b ed       	ldi	r18, 0xDB	; 219
    1052:	3f e0       	ldi	r19, 0x0F	; 15
    1054:	49 ec       	ldi	r20, 0xC9	; 201
    1056:	50 e4       	ldi	r21, 0x40	; 64
    1058:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
    105c:	6b 01       	movw	r12, r22
    105e:	7c 01       	movw	r14, r24
    1060:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <ticks_per_rot_right>
    1064:	70 91 2f 01 	lds	r23, 0x012F	; 0x80012f <ticks_per_rot_right+0x1>
    1068:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <ticks_per_rot_right+0x2>
    106c:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <ticks_per_rot_right+0x3>
    1070:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <__floatsisf>
    1074:	2a e0       	ldi	r18, 0x0A	; 10
    1076:	37 ed       	ldi	r19, 0xD7	; 215
    1078:	43 ea       	ldi	r20, 0xA3	; 163
    107a:	5c e3       	ldi	r21, 0x3C	; 60
    107c:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
    1080:	9b 01       	movw	r18, r22
    1082:	ac 01       	movw	r20, r24
    1084:	c7 01       	movw	r24, r14
    1086:	b6 01       	movw	r22, r12
    1088:	0e 94 a6 12 	call	0x254c	; 0x254c <__divsf3>
    108c:	60 93 46 01 	sts	0x0146, r22	; 0x800146 <rad_per_s_right>
    1090:	70 93 47 01 	sts	0x0147, r23	; 0x800147 <rad_per_s_right+0x1>
    1094:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <rad_per_s_right+0x2>
    1098:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <rad_per_s_right+0x3>
	rad_per_s_right_smoothed = LOW_PASS_WEIGHT * (rad_per_s_right) + (1-LOW_PASS_WEIGHT)*(rad_per_s_right_prev);
    109c:	60 91 46 01 	lds	r22, 0x0146	; 0x800146 <rad_per_s_right>
    10a0:	70 91 47 01 	lds	r23, 0x0147	; 0x800147 <rad_per_s_right+0x1>
    10a4:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <rad_per_s_right+0x2>
    10a8:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <rad_per_s_right+0x3>
    10ac:	2a e9       	ldi	r18, 0x9A	; 154
    10ae:	39 e9       	ldi	r19, 0x99	; 153
    10b0:	49 e9       	ldi	r20, 0x99	; 153
    10b2:	5e e3       	ldi	r21, 0x3E	; 62
    10b4:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
    10b8:	6b 01       	movw	r12, r22
    10ba:	7c 01       	movw	r14, r24
    10bc:	60 91 3e 01 	lds	r22, 0x013E	; 0x80013e <rad_per_s_right_prev>
    10c0:	70 91 3f 01 	lds	r23, 0x013F	; 0x80013f <rad_per_s_right_prev+0x1>
    10c4:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <rad_per_s_right_prev+0x2>
    10c8:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <rad_per_s_right_prev+0x3>
    10cc:	23 e3       	ldi	r18, 0x33	; 51
    10ce:	33 e3       	ldi	r19, 0x33	; 51
    10d0:	43 e3       	ldi	r20, 0x33	; 51
    10d2:	5f e3       	ldi	r21, 0x3F	; 63
    10d4:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
    10d8:	9b 01       	movw	r18, r22
    10da:	ac 01       	movw	r20, r24
    10dc:	c7 01       	movw	r24, r14
    10de:	b6 01       	movw	r22, r12
    10e0:	0e 94 74 12 	call	0x24e8	; 0x24e8 <__addsf3>
    10e4:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <rad_per_s_right_smoothed>
    10e8:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <rad_per_s_right_smoothed+0x1>
    10ec:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <rad_per_s_right_smoothed+0x2>
    10f0:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <rad_per_s_right_smoothed+0x3>
	rad_per_s_right_prev = rad_per_s_right_smoothed;
    10f4:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <rad_per_s_right_smoothed>
    10f8:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <rad_per_s_right_smoothed+0x1>
    10fc:	a0 91 38 01 	lds	r26, 0x0138	; 0x800138 <rad_per_s_right_smoothed+0x2>
    1100:	b0 91 39 01 	lds	r27, 0x0139	; 0x800139 <rad_per_s_right_smoothed+0x3>
    1104:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <rad_per_s_right_prev>
    1108:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <rad_per_s_right_prev+0x1>
    110c:	a0 93 40 01 	sts	0x0140, r26	; 0x800140 <rad_per_s_right_prev+0x2>
    1110:	b0 93 41 01 	sts	0x0141, r27	; 0x800141 <rad_per_s_right_prev+0x3>
	
	prev_ticks_left = ticks_left;
    1114:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <ticks_left>
    1118:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <ticks_left+0x1>
    111c:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <prev_ticks_left+0x1>
    1120:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <prev_ticks_left>
	ticks_left = encoder_get_accumulated_ticks_left();
    1124:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <encoder_get_accumulated_ticks_left>
    1128:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <ticks_left+0x1>
    112c:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <ticks_left>
	rad_per_s_left = 2.0*PI*((float)ticks_left - (float)prev_ticks_left) / ((float)ticks_per_rot_left*encoder_measurement_period);
    1130:	60 91 5a 01 	lds	r22, 0x015A	; 0x80015a <ticks_left>
    1134:	70 91 5b 01 	lds	r23, 0x015B	; 0x80015b <ticks_left+0x1>
    1138:	07 2e       	mov	r0, r23
    113a:	00 0c       	add	r0, r0
    113c:	88 0b       	sbc	r24, r24
    113e:	99 0b       	sbc	r25, r25
    1140:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <__floatsisf>
    1144:	6b 01       	movw	r12, r22
    1146:	7c 01       	movw	r14, r24
    1148:	60 91 56 01 	lds	r22, 0x0156	; 0x800156 <prev_ticks_left>
    114c:	70 91 57 01 	lds	r23, 0x0157	; 0x800157 <prev_ticks_left+0x1>
    1150:	07 2e       	mov	r0, r23
    1152:	00 0c       	add	r0, r0
    1154:	88 0b       	sbc	r24, r24
    1156:	99 0b       	sbc	r25, r25
    1158:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <__floatsisf>
    115c:	9b 01       	movw	r18, r22
    115e:	ac 01       	movw	r20, r24
    1160:	c7 01       	movw	r24, r14
    1162:	b6 01       	movw	r22, r12
    1164:	0e 94 73 12 	call	0x24e6	; 0x24e6 <__subsf3>
    1168:	2b ed       	ldi	r18, 0xDB	; 219
    116a:	3f e0       	ldi	r19, 0x0F	; 15
    116c:	49 ec       	ldi	r20, 0xC9	; 201
    116e:	50 e4       	ldi	r21, 0x40	; 64
    1170:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
    1174:	6b 01       	movw	r12, r22
    1176:	7c 01       	movw	r14, r24
    1178:	60 91 32 01 	lds	r22, 0x0132	; 0x800132 <ticks_per_rot_left>
    117c:	70 91 33 01 	lds	r23, 0x0133	; 0x800133 <ticks_per_rot_left+0x1>
    1180:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <ticks_per_rot_left+0x2>
    1184:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <ticks_per_rot_left+0x3>
    1188:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <__floatsisf>
    118c:	2a e0       	ldi	r18, 0x0A	; 10
    118e:	37 ed       	ldi	r19, 0xD7	; 215
    1190:	43 ea       	ldi	r20, 0xA3	; 163
    1192:	5c e3       	ldi	r21, 0x3C	; 60
    1194:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
    1198:	9b 01       	movw	r18, r22
    119a:	ac 01       	movw	r20, r24
    119c:	c7 01       	movw	r24, r14
    119e:	b6 01       	movw	r22, r12
    11a0:	0e 94 a6 12 	call	0x254c	; 0x254c <__divsf3>
    11a4:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <rad_per_s_left>
    11a8:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <rad_per_s_left+0x1>
    11ac:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <rad_per_s_left+0x2>
    11b0:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <rad_per_s_left+0x3>
	rad_per_s_left_smoothed = LOW_PASS_WEIGHT * (rad_per_s_left) + (1-LOW_PASS_WEIGHT)*(rad_per_s_left_prev);
    11b4:	60 91 4a 01 	lds	r22, 0x014A	; 0x80014a <rad_per_s_left>
    11b8:	70 91 4b 01 	lds	r23, 0x014B	; 0x80014b <rad_per_s_left+0x1>
    11bc:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <rad_per_s_left+0x2>
    11c0:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <rad_per_s_left+0x3>
    11c4:	2a e9       	ldi	r18, 0x9A	; 154
    11c6:	39 e9       	ldi	r19, 0x99	; 153
    11c8:	49 e9       	ldi	r20, 0x99	; 153
    11ca:	5e e3       	ldi	r21, 0x3E	; 62
    11cc:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
    11d0:	6b 01       	movw	r12, r22
    11d2:	7c 01       	movw	r14, r24
    11d4:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <rad_per_s_left_prev>
    11d8:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <rad_per_s_left_prev+0x1>
    11dc:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <rad_per_s_left_prev+0x2>
    11e0:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <rad_per_s_left_prev+0x3>
    11e4:	23 e3       	ldi	r18, 0x33	; 51
    11e6:	33 e3       	ldi	r19, 0x33	; 51
    11e8:	43 e3       	ldi	r20, 0x33	; 51
    11ea:	5f e3       	ldi	r21, 0x3F	; 63
    11ec:	0e 94 aa 12 	call	0x2554	; 0x2554 <__mulsf3>
    11f0:	9b 01       	movw	r18, r22
    11f2:	ac 01       	movw	r20, r24
    11f4:	c7 01       	movw	r24, r14
    11f6:	b6 01       	movw	r22, r12
    11f8:	0e 94 74 12 	call	0x24e8	; 0x24e8 <__addsf3>
    11fc:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <rad_per_s_left_smoothed>
    1200:	70 93 3b 01 	sts	0x013B, r23	; 0x80013b <rad_per_s_left_smoothed+0x1>
    1204:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <rad_per_s_left_smoothed+0x2>
    1208:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <rad_per_s_left_smoothed+0x3>
	rad_per_s_left_prev = rad_per_s_left_smoothed;
    120c:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <rad_per_s_left_smoothed>
    1210:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <rad_per_s_left_smoothed+0x1>
    1214:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <rad_per_s_left_smoothed+0x2>
    1218:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <rad_per_s_left_smoothed+0x3>
    121c:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <rad_per_s_left_prev>
    1220:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <rad_per_s_left_prev+0x1>
    1224:	a0 93 44 01 	sts	0x0144, r26	; 0x800144 <rad_per_s_left_prev+0x2>
    1228:	b0 93 45 01 	sts	0x0145, r27	; 0x800145 <rad_per_s_left_prev+0x3>
	//printf("ISR: %d | %d\n\r", ticks_left, prev_ticks_left);
}
    122c:	ff 91       	pop	r31
    122e:	ef 91       	pop	r30
    1230:	bf 91       	pop	r27
    1232:	af 91       	pop	r26
    1234:	9f 91       	pop	r25
    1236:	8f 91       	pop	r24
    1238:	7f 91       	pop	r23
    123a:	6f 91       	pop	r22
    123c:	5f 91       	pop	r21
    123e:	4f 91       	pop	r20
    1240:	3f 91       	pop	r19
    1242:	2f 91       	pop	r18
    1244:	ff 90       	pop	r15
    1246:	ef 90       	pop	r14
    1248:	df 90       	pop	r13
    124a:	cf 90       	pop	r12
    124c:	0f 90       	pop	r0
    124e:	0f be       	out	0x3f, r0	; 63
    1250:	0f 90       	pop	r0
    1252:	1f 90       	pop	r1
    1254:	18 95       	reti

Disassembly of section .text.timer_init:

00002198 <timer_init>:
static volatile unsigned int timer_flag = 0;
unsigned int timeout_ms;

void timer_init(unsigned int timeout) {
	
	cli();
    2198:	f8 94       	cli
	
	timer_flag = 0;
    219a:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <timer_flag+0x1>
    219e:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <timer_flag>
	timeout_ms = timeout;
    21a2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    21a6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	// Use 8-bit timer 2 for keeping-time
	TCCR2B = 0x00;
    21aa:	e1 eb       	ldi	r30, 0xB1	; 177
    21ac:	f0 e0       	ldi	r31, 0x00	; 0
    21ae:	10 82       	st	Z, r1
	TCNT2 = 0x00;
    21b0:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
	OCR2A = 0xF9;
    21b4:	89 ef       	ldi	r24, 0xF9	; 249
    21b6:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	TCCR2A |= (1 << WGM21) | (1 << CS22); // CTC (Clear timer on compare match with OCR2A), 64 as prescaler
    21ba:	a0 eb       	ldi	r26, 0xB0	; 176
    21bc:	b0 e0       	ldi	r27, 0x00	; 0
    21be:	8c 91       	ld	r24, X
    21c0:	86 60       	ori	r24, 0x06	; 6
    21c2:	8c 93       	st	X, r24
	TCCR2B |= (1 << CS22);
    21c4:	80 81       	ld	r24, Z
    21c6:	84 60       	ori	r24, 0x04	; 4
    21c8:	80 83       	st	Z, r24
	
	
	// Enable interrupt
	TIMSK2 |= (1 << OCIE2A);
    21ca:	e0 e7       	ldi	r30, 0x70	; 112
    21cc:	f0 e0       	ldi	r31, 0x00	; 0
    21ce:	80 81       	ld	r24, Z
    21d0:	82 60       	ori	r24, 0x02	; 2
    21d2:	80 83       	st	Z, r24
	
	// Enable interrupt
	TIMSK1 |= (1 << OCIE1A);
	//SREG |= (1 << 7);*/
	
	sei();
    21d4:	78 94       	sei
    21d6:	08 95       	ret

Disassembly of section .text.timer_get_elapsed_ms:

0000208a <timer_get_elapsed_ms>:
	
}

unsigned long timer_get_elapsed_ms(void) {
    208a:	cf 93       	push	r28
    208c:	df 93       	push	r29
    208e:	1f 92       	push	r1
    2090:	cd b7       	in	r28, 0x3d	; 61
    2092:	de b7       	in	r29, 0x3e	; 62
	unsigned long ms;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    2094:	8f b7       	in	r24, 0x3f	; 63
    2096:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    2098:	f8 94       	cli
    209a:	81 e0       	ldi	r24, 0x01	; 1
    209c:	09 c0       	rjmp	.+18     	; 0x20b0 <timer_get_elapsed_ms+0x26>
		ms = elapsed_ms_since_init;
    209e:	40 91 4e 01 	lds	r20, 0x014E	; 0x80014e <elapsed_ms_since_init>
    20a2:	50 91 4f 01 	lds	r21, 0x014F	; 0x80014f <elapsed_ms_since_init+0x1>
    20a6:	60 91 50 01 	lds	r22, 0x0150	; 0x800150 <elapsed_ms_since_init+0x2>
    20aa:	70 91 51 01 	lds	r23, 0x0151	; 0x800151 <elapsed_ms_since_init+0x3>
	
}

unsigned long timer_get_elapsed_ms(void) {
	unsigned long ms;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    20ae:	80 e0       	ldi	r24, 0x00	; 0
    20b0:	81 11       	cpse	r24, r1
    20b2:	f5 cf       	rjmp	.-22     	; 0x209e <timer_get_elapsed_ms+0x14>
    20b4:	ce 01       	movw	r24, r28
    20b6:	01 96       	adiw	r24, 0x01	; 1
    20b8:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    20ba:	fc 01       	movw	r30, r24
    20bc:	84 91       	lpm	r24, Z
    20be:	a7 fd       	sbrc	r26, 7
    20c0:	80 81       	ld	r24, Z
    20c2:	8f bf       	out	0x3f, r24	; 63
		ms = elapsed_ms_since_init;
	}
	return ms;
}
    20c4:	cb 01       	movw	r24, r22
    20c6:	ba 01       	movw	r22, r20
    20c8:	0f 90       	pop	r0
    20ca:	df 91       	pop	r29
    20cc:	cf 91       	pop	r28
    20ce:	08 95       	ret

Disassembly of section .text.timer_reset:

00001edc <timer_reset>:

void timer_reset(void) {
    1edc:	cf 93       	push	r28
    1ede:	df 93       	push	r29
    1ee0:	1f 92       	push	r1
    1ee2:	cd b7       	in	r28, 0x3d	; 61
    1ee4:	de b7       	in	r29, 0x3e	; 62
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1ee6:	8f b7       	in	r24, 0x3f	; 63
    1ee8:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1eea:	f8 94       	cli
    1eec:	81 e0       	ldi	r24, 0x01	; 1
    1eee:	0f c0       	rjmp	.+30     	; 0x1f0e <timer_reset+0x32>
		elapsed_ms = 0;
    1ef0:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <elapsed_ms>
    1ef4:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <elapsed_ms+0x1>
    1ef8:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <elapsed_ms+0x2>
    1efc:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <elapsed_ms+0x3>
		TCNT2 = 0x00;
    1f00:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
		timer_flag = 0;
    1f04:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <timer_flag+0x1>
    1f08:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <timer_flag>
	}
	return ms;
}

void timer_reset(void) {
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1f0c:	80 e0       	ldi	r24, 0x00	; 0
    1f0e:	81 11       	cpse	r24, r1
    1f10:	ef cf       	rjmp	.-34     	; 0x1ef0 <timer_reset+0x14>
    1f12:	ce 01       	movw	r24, r28
    1f14:	01 96       	adiw	r24, 0x01	; 1
    1f16:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1f18:	fc 01       	movw	r30, r24
    1f1a:	84 91       	lpm	r24, Z
    1f1c:	a7 fd       	sbrc	r26, 7
    1f1e:	80 81       	ld	r24, Z
    1f20:	8f bf       	out	0x3f, r24	; 63
		elapsed_ms = 0;
		TCNT2 = 0x00;
		timer_flag = 0;
	}
}
    1f22:	0f 90       	pop	r0
    1f24:	df 91       	pop	r29
    1f26:	cf 91       	pop	r28
    1f28:	08 95       	ret

Disassembly of section .text.timer_timeout:

000021d8 <timer_timeout>:

unsigned int timer_timeout(void) {
    21d8:	cf 93       	push	r28
    21da:	df 93       	push	r29
    21dc:	1f 92       	push	r1
    21de:	cd b7       	in	r28, 0x3d	; 61
    21e0:	de b7       	in	r29, 0x3e	; 62
	unsigned int flag;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    21e2:	8f b7       	in	r24, 0x3f	; 63
    21e4:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    21e6:	f8 94       	cli
    21e8:	91 e0       	ldi	r25, 0x01	; 1
    21ea:	05 c0       	rjmp	.+10     	; 0x21f6 <timer_timeout+0x1e>
		flag = timer_flag;
    21ec:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <timer_flag>
    21f0:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <timer_flag+0x1>
	}
}

unsigned int timer_timeout(void) {
	unsigned int flag;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    21f4:	90 e0       	ldi	r25, 0x00	; 0
    21f6:	91 11       	cpse	r25, r1
    21f8:	f9 cf       	rjmp	.-14     	; 0x21ec <timer_timeout+0x14>
    21fa:	ce 01       	movw	r24, r28
    21fc:	01 96       	adiw	r24, 0x01	; 1
    21fe:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    2200:	fc 01       	movw	r30, r24
    2202:	84 91       	lpm	r24, Z
    2204:	a7 fd       	sbrc	r26, 7
    2206:	80 81       	ld	r24, Z
    2208:	8f bf       	out	0x3f, r24	; 63
		flag = timer_flag;
	}
	return flag;
}
    220a:	c9 01       	movw	r24, r18
    220c:	0f 90       	pop	r0
    220e:	df 91       	pop	r29
    2210:	cf 91       	pop	r28
    2212:	08 95       	ret

Disassembly of section .text.__vector_7:

00001984 <__vector_7>:

ISR(TIMER2_COMPA_vect) {
    1984:	1f 92       	push	r1
    1986:	0f 92       	push	r0
    1988:	0f b6       	in	r0, 0x3f	; 63
    198a:	0f 92       	push	r0
    198c:	11 24       	eor	r1, r1
    198e:	4f 93       	push	r20
    1990:	5f 93       	push	r21
    1992:	6f 93       	push	r22
    1994:	7f 93       	push	r23
    1996:	8f 93       	push	r24
    1998:	9f 93       	push	r25
    199a:	af 93       	push	r26
    199c:	bf 93       	push	r27
	++elapsed_ms_since_init;
    199e:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <elapsed_ms_since_init>
    19a2:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <elapsed_ms_since_init+0x1>
    19a6:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <elapsed_ms_since_init+0x2>
    19aa:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <elapsed_ms_since_init+0x3>
    19ae:	01 96       	adiw	r24, 0x01	; 1
    19b0:	a1 1d       	adc	r26, r1
    19b2:	b1 1d       	adc	r27, r1
    19b4:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <elapsed_ms_since_init>
    19b8:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <elapsed_ms_since_init+0x1>
    19bc:	a0 93 50 01 	sts	0x0150, r26	; 0x800150 <elapsed_ms_since_init+0x2>
    19c0:	b0 93 51 01 	sts	0x0151, r27	; 0x800151 <elapsed_ms_since_init+0x3>
	++elapsed_ms;
    19c4:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <elapsed_ms>
    19c8:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <elapsed_ms+0x1>
    19cc:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <elapsed_ms+0x2>
    19d0:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <elapsed_ms+0x3>
    19d4:	01 96       	adiw	r24, 0x01	; 1
    19d6:	a1 1d       	adc	r26, r1
    19d8:	b1 1d       	adc	r27, r1
    19da:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <elapsed_ms>
    19de:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <elapsed_ms+0x1>
    19e2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <elapsed_ms+0x2>
    19e6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <elapsed_ms+0x3>
	if (elapsed_ms >= timeout_ms) {
    19ea:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    19ee:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    19f2:	a0 e0       	ldi	r26, 0x00	; 0
    19f4:	b0 e0       	ldi	r27, 0x00	; 0
    19f6:	40 91 52 01 	lds	r20, 0x0152	; 0x800152 <elapsed_ms>
    19fa:	50 91 53 01 	lds	r21, 0x0153	; 0x800153 <elapsed_ms+0x1>
    19fe:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <elapsed_ms+0x2>
    1a02:	70 91 55 01 	lds	r23, 0x0155	; 0x800155 <elapsed_ms+0x3>
    1a06:	48 17       	cp	r20, r24
    1a08:	59 07       	cpc	r21, r25
    1a0a:	6a 07       	cpc	r22, r26
    1a0c:	7b 07       	cpc	r23, r27
    1a0e:	30 f0       	brcs	.+12     	; 0x1a1c <__vector_7+0x98>
		timer_flag = 1;
    1a10:	81 e0       	ldi	r24, 0x01	; 1
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <timer_flag+0x1>
    1a18:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <timer_flag>
	}
}
    1a1c:	bf 91       	pop	r27
    1a1e:	af 91       	pop	r26
    1a20:	9f 91       	pop	r25
    1a22:	8f 91       	pop	r24
    1a24:	7f 91       	pop	r23
    1a26:	6f 91       	pop	r22
    1a28:	5f 91       	pop	r21
    1a2a:	4f 91       	pop	r20
    1a2c:	0f 90       	pop	r0
    1a2e:	0f be       	out	0x3f, r0	; 63
    1a30:	0f 90       	pop	r0
    1a32:	1f 90       	pop	r1
    1a34:	18 95       	reti

Disassembly of section .text.usart_tx:

000024ca <usart_tx>:

#include <avr/io.h>
#include "usart.h"

void usart_tx(unsigned char data) {
	while (! (UCSR0A & (1 << UDRE0))) {
    24ca:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    24ce:	95 ff       	sbrs	r25, 5
    24d0:	fc cf       	rjmp	.-8      	; 0x24ca <usart_tx>
		// wait for buffer to empty
	}
	// Place data in buffer
	UDR0 = data;
    24d2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    24d6:	08 95       	ret

Disassembly of section .text.usart_rx:

000024d8 <usart_rx>:
}

unsigned char usart_rx(void) {
	while(!(UCSR0A & (1 << RXC0))) {
    24d8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    24dc:	88 23       	and	r24, r24
    24de:	e4 f7       	brge	.-8      	; 0x24d8 <usart_rx>
		// Wait for data to be received
	}
	return UDR0;
    24e0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
    24e4:	08 95       	ret

Disassembly of section .text.usart_init:

000023d4 <usart_init>:

void usart_init(unsigned int ubrr) {
	// Set baud rate
	UBRR0H = ubrr>>8;
    23d4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = ubrr;
    23d8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	// Enable rx and tx
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
    23dc:	88 e1       	ldi	r24, 0x18	; 24
    23de:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	
	// Set frame format: 8data 2stop bit
	UCSR0C = (1 << USBS0) | (3 << UCSZ00);
    23e2:	8e e0       	ldi	r24, 0x0E	; 14
    23e4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	
	// Use printf for serial communication
	fdevopen(usart_tx, usart_rx);
    23e8:	6c e6       	ldi	r22, 0x6C	; 108
    23ea:	72 e1       	ldi	r23, 0x12	; 18
    23ec:	85 e6       	ldi	r24, 0x65	; 101
    23ee:	92 e1       	ldi	r25, 0x12	; 18
    23f0:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <fdevopen>
    23f4:	08 95       	ret

Disassembly of section .text.main:

000009c6 <main>:
}



int main(void)
{
 9c6:	2f 92       	push	r2
 9c8:	3f 92       	push	r3
 9ca:	4f 92       	push	r4
 9cc:	5f 92       	push	r5
 9ce:	6f 92       	push	r6
 9d0:	7f 92       	push	r7
 9d2:	8f 92       	push	r8
 9d4:	9f 92       	push	r9
 9d6:	af 92       	push	r10
 9d8:	bf 92       	push	r11
 9da:	cf 92       	push	r12
 9dc:	df 92       	push	r13
 9de:	ef 92       	push	r14
 9e0:	ff 92       	push	r15
 9e2:	0f 93       	push	r16
 9e4:	1f 93       	push	r17
 9e6:	cf 93       	push	r28
 9e8:	df 93       	push	r29
 9ea:	cd b7       	in	r28, 0x3d	; 61
 9ec:	de b7       	in	r29, 0x3e	; 62
 9ee:	c0 58       	subi	r28, 0x80	; 128
 9f0:	d1 09       	sbc	r29, r1
 9f2:	0f b6       	in	r0, 0x3f	; 63
 9f4:	f8 94       	cli
 9f6:	de bf       	out	0x3e, r29	; 62
 9f8:	0f be       	out	0x3f, r0	; 63
 9fa:	cd bf       	out	0x3d, r28	; 61
	usart_init(UBRR);
 9fc:	8c e0       	ldi	r24, 0x0C	; 12
 9fe:	90 e0       	ldi	r25, 0x00	; 0
 a00:	0e 94 ea 11 	call	0x23d4	; 0x23d4 <usart_init>
	speed_estimator_init(840, 850);
 a04:	22 e5       	ldi	r18, 0x52	; 82
 a06:	33 e0       	ldi	r19, 0x03	; 3
 a08:	40 e0       	ldi	r20, 0x00	; 0
 a0a:	50 e0       	ldi	r21, 0x00	; 0
 a0c:	68 e4       	ldi	r22, 0x48	; 72
 a0e:	73 e0       	ldi	r23, 0x03	; 3
 a10:	80 e0       	ldi	r24, 0x00	; 0
 a12:	90 e0       	ldi	r25, 0x00	; 0
 a14:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <speed_estimator_init>

	motor_init();
 a18:	0e 94 3b 12 	call	0x2476	; 0x2476 <motor_init>

	
	float T = 0.02; // Control loop period [s]
	timer_init(T*1000); 
 a1c:	84 e1       	ldi	r24, 0x14	; 20
 a1e:	90 e0       	ldi	r25, 0x00	; 0
 a20:	0e 94 cc 10 	call	0x2198	; 0x2198 <timer_init>
	
	printf("Starting application\n\r");
 a24:	8b e0       	ldi	r24, 0x0B	; 11
 a26:	92 e0       	ldi	r25, 0x02	; 2
 a28:	a0 e0       	ldi	r26, 0x00	; 0
 a2a:	af 93       	push	r26
 a2c:	9f 93       	push	r25
 a2e:	8f 93       	push	r24
 a30:	0e 94 a7 11 	call	0x234e	; 0x234e <printf>
	
	
	PID_controller left_motor;
	PID_controller right_motor;
	PID_controller_init(&left_motor);
 a34:	ce 01       	movw	r24, r28
 a36:	01 96       	adiw	r24, 0x01	; 1
 a38:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <PID_controller_init>
	PID_controller_init(&right_motor);
 a3c:	ce 01       	movw	r24, r28
 a3e:	c5 96       	adiw	r24, 0x35	; 53
 a40:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <PID_controller_init>
	//PID_controller_set_parameters(&left_motor, 10.0, 50.0, 0.0, 0.05);
	//PID_controller_set_parameters(&right_motor, 10.0, 50.0, 0.0, 0.05);
	PID_controller_set_parameters(&left_motor, 10.0, 50.0, 0.0, T);
 a44:	0f 2e       	mov	r0, r31
 a46:	fa e0       	ldi	r31, 0x0A	; 10
 a48:	8f 2e       	mov	r8, r31
 a4a:	f7 ed       	ldi	r31, 0xD7	; 215
 a4c:	9f 2e       	mov	r9, r31
 a4e:	f3 ea       	ldi	r31, 0xA3	; 163
 a50:	af 2e       	mov	r10, r31
 a52:	fc e3       	ldi	r31, 0x3C	; 60
 a54:	bf 2e       	mov	r11, r31
 a56:	f0 2d       	mov	r31, r0
 a58:	c1 2c       	mov	r12, r1
 a5a:	d1 2c       	mov	r13, r1
 a5c:	76 01       	movw	r14, r12
 a5e:	00 e0       	ldi	r16, 0x00	; 0
 a60:	10 e0       	ldi	r17, 0x00	; 0
 a62:	28 e4       	ldi	r18, 0x48	; 72
 a64:	32 e4       	ldi	r19, 0x42	; 66
 a66:	40 e0       	ldi	r20, 0x00	; 0
 a68:	50 e0       	ldi	r21, 0x00	; 0
 a6a:	60 e2       	ldi	r22, 0x20	; 32
 a6c:	71 e4       	ldi	r23, 0x41	; 65
 a6e:	ce 01       	movw	r24, r28
 a70:	01 96       	adiw	r24, 0x01	; 1
 a72:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <PID_controller_set_parameters>
	PID_controller_set_parameters(&right_motor, 10.0, 50.0, 0.0, T);
 a76:	00 e0       	ldi	r16, 0x00	; 0
 a78:	10 e0       	ldi	r17, 0x00	; 0
 a7a:	28 e4       	ldi	r18, 0x48	; 72
 a7c:	32 e4       	ldi	r19, 0x42	; 66
 a7e:	40 e0       	ldi	r20, 0x00	; 0
 a80:	50 e0       	ldi	r21, 0x00	; 0
 a82:	60 e2       	ldi	r22, 0x20	; 32
 a84:	71 e4       	ldi	r23, 0x41	; 65
 a86:	ce 01       	movw	r24, r28
 a88:	c5 96       	adiw	r24, 0x35	; 53
 a8a:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <PID_controller_set_parameters>

	int send_flag = 0;
	unsigned long time=0;
	unsigned long change_ref_time = 10000;
	
	float refs[2] = {DEG2RAD*(-500), DEG2RAD*(100)};
 a8e:	88 e0       	ldi	r24, 0x08	; 8
 a90:	e8 e1       	ldi	r30, 0x18	; 24
 a92:	f1 e0       	ldi	r31, 0x01	; 1
 a94:	de 01       	movw	r26, r28
 a96:	a7 59       	subi	r26, 0x97	; 151
 a98:	bf 4f       	sbci	r27, 0xFF	; 255
 a9a:	01 90       	ld	r0, Z+
 a9c:	0d 92       	st	X+, r0
 a9e:	8a 95       	dec	r24
 aa0:	e1 f7       	brne	.-8      	; 0xa9a <main+0xd4>
 aa2:	0f 90       	pop	r0
 aa4:	0f 90       	pop	r0
 aa6:	0f 90       	pop	r0

	int i = 0;
 aa8:	21 2c       	mov	r2, r1
 aaa:	31 2c       	mov	r3, r1
	float right_speed_ref_rps = DEG2RAD*500;
	float right_u;

	int send_flag = 0;
	unsigned long time=0;
	unsigned long change_ref_time = 10000;
 aac:	0f 2e       	mov	r0, r31
 aae:	f0 e1       	ldi	r31, 0x10	; 16
 ab0:	4f 2e       	mov	r4, r31
 ab2:	f7 e2       	ldi	r31, 0x27	; 39
 ab4:	5f 2e       	mov	r5, r31
 ab6:	61 2c       	mov	r6, r1
 ab8:	71 2c       	mov	r7, r1
 aba:	f0 2d       	mov	r31, r0
	float right_speed_rps;
	float right_speed_ref_rps = DEG2RAD*500;
	float right_u;

	int send_flag = 0;
	unsigned long time=0;
 abc:	81 2c       	mov	r8, r1
 abe:	91 2c       	mov	r9, r1
 ac0:	54 01       	movw	r10, r8
	float right_error_rps; // right wheel error [rad/s]
	float right_speed_rps;
	float right_speed_ref_rps = DEG2RAD*500;
	float right_u;

	int send_flag = 0;
 ac2:	e1 2c       	mov	r14, r1
 ac4:	f1 2c       	mov	r15, r1
	PID_controller_set_parameters(&right_motor, 10.0, 50.0, 0.0, T);
	
	
	float left_error_rps; // left wheel speed error [rad/s]
	float left_speed_rps; // left wheel speed [rad/s]
	float left_speed_ref_rps = DEG2RAD*500; // left wheel reference speed [rad/s]. 9.86 rad/s = 565 deg/s is max speed.
 ac6:	08 e5       	ldi	r16, 0x58	; 88
 ac8:	0f 2e       	mov	r0, r31
 aca:	f0 ea       	ldi	r31, 0xA0	; 160
 acc:	df 2e       	mov	r13, r31
 ace:	f0 2d       	mov	r31, r0
 ad0:	0f 2e       	mov	r0, r31
 ad2:	fb e0       	ldi	r31, 0x0B	; 11
 ad4:	cf 2e       	mov	r12, r31
 ad6:	f0 2d       	mov	r31, r0
 ad8:	11 e4       	ldi	r17, 0x41	; 65
	int i = 0;
	
	while(1)
	{
		// wheel speed control loop
		if (timer_timeout()) {
 ada:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <timer_timeout>
 ade:	89 2b       	or	r24, r25
 ae0:	09 f4       	brne	.+2      	; 0xae4 <main+0x11e>
 ae2:	99 c0       	rjmp	.+306    	; 0xc16 <main+0x250>
			timer_reset();
 ae4:	0e 94 6e 0f 	call	0x1edc	; 0x1edc <timer_reset>
			
			left_speed_rps = speed_estimator_left_rad_per_s();
 ae8:	0e 94 22 10 	call	0x2044	; 0x2044 <speed_estimator_left_rad_per_s>
 aec:	e2 96       	adiw	r28, 0x32	; 50
 aee:	6f af       	std	Y+63, r22	; 0x3f
 af0:	e2 97       	sbiw	r28, 0x32	; 50
 af2:	e3 96       	adiw	r28, 0x33	; 51
 af4:	7f af       	std	Y+63, r23	; 0x3f
 af6:	e3 97       	sbiw	r28, 0x33	; 51
 af8:	e4 96       	adiw	r28, 0x34	; 52
 afa:	8f af       	std	Y+63, r24	; 0x3f
 afc:	e4 97       	sbiw	r28, 0x34	; 52
 afe:	e5 96       	adiw	r28, 0x35	; 53
 b00:	9f af       	std	Y+63, r25	; 0x3f
 b02:	e5 97       	sbiw	r28, 0x35	; 53
			left_error_rps = left_speed_ref_rps - left_speed_rps;
 b04:	76 2f       	mov	r23, r22
 b06:	e3 96       	adiw	r28, 0x33	; 51
 b08:	6f ad       	ldd	r22, Y+63	; 0x3f
 b0a:	e3 97       	sbiw	r28, 0x33	; 51
 b0c:	98 2f       	mov	r25, r24
 b0e:	e5 96       	adiw	r28, 0x35	; 53
 b10:	8f ad       	ldd	r24, Y+63	; 0x3f
 b12:	e5 97       	sbiw	r28, 0x35	; 53
 b14:	27 2f       	mov	r18, r23
 b16:	36 2f       	mov	r19, r22
 b18:	49 2f       	mov	r20, r25
 b1a:	58 2f       	mov	r21, r24
 b1c:	60 2f       	mov	r22, r16
 b1e:	7d 2d       	mov	r23, r13
 b20:	8c 2d       	mov	r24, r12
 b22:	91 2f       	mov	r25, r17
 b24:	0e 94 73 12 	call	0x24e6	; 0x24e6 <__subsf3>
 b28:	ab 01       	movw	r20, r22
 b2a:	bc 01       	movw	r22, r24
			left_u = PID_controller_get_control_action(&left_motor, left_error_rps);
 b2c:	ce 01       	movw	r24, r28
 b2e:	01 96       	adiw	r24, 0x01	; 1
 b30:	0e 94 8f 06 	call	0xd1e	; 0xd1e <PID_controller_get_control_action>
 b34:	e6 96       	adiw	r28, 0x36	; 54
 b36:	6f af       	std	Y+63, r22	; 0x3f
 b38:	e6 97       	sbiw	r28, 0x36	; 54
 b3a:	e7 96       	adiw	r28, 0x37	; 55
 b3c:	7f af       	std	Y+63, r23	; 0x3f
 b3e:	e7 97       	sbiw	r28, 0x37	; 55
 b40:	e8 96       	adiw	r28, 0x38	; 56
 b42:	8f af       	std	Y+63, r24	; 0x3f
 b44:	e8 97       	sbiw	r28, 0x38	; 56
 b46:	e9 96       	adiw	r28, 0x39	; 57
 b48:	9f af       	std	Y+63, r25	; 0x3f
 b4a:	e9 97       	sbiw	r28, 0x39	; 57
			motor_left(left_u);
 b4c:	0e 94 8a 10 	call	0x2114	; 0x2114 <motor_left>
			
			
			right_speed_rps = speed_estimator_right_rad_per_s();
 b50:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <speed_estimator_right_rad_per_s>
 b54:	ea 96       	adiw	r28, 0x3a	; 58
 b56:	6f af       	std	Y+63, r22	; 0x3f
 b58:	ea 97       	sbiw	r28, 0x3a	; 58
 b5a:	eb 96       	adiw	r28, 0x3b	; 59
 b5c:	7f af       	std	Y+63, r23	; 0x3f
 b5e:	eb 97       	sbiw	r28, 0x3b	; 59
 b60:	ec 96       	adiw	r28, 0x3c	; 60
 b62:	8f af       	std	Y+63, r24	; 0x3f
 b64:	ec 97       	sbiw	r28, 0x3c	; 60
 b66:	ed 96       	adiw	r28, 0x3d	; 61
 b68:	9f af       	std	Y+63, r25	; 0x3f
 b6a:	ed 97       	sbiw	r28, 0x3d	; 61
			right_error_rps = right_speed_ref_rps - right_speed_rps;
 b6c:	76 2f       	mov	r23, r22
 b6e:	eb 96       	adiw	r28, 0x3b	; 59
 b70:	6f ad       	ldd	r22, Y+63	; 0x3f
 b72:	eb 97       	sbiw	r28, 0x3b	; 59
 b74:	98 2f       	mov	r25, r24
 b76:	ed 96       	adiw	r28, 0x3d	; 61
 b78:	8f ad       	ldd	r24, Y+63	; 0x3f
 b7a:	ed 97       	sbiw	r28, 0x3d	; 61
 b7c:	27 2f       	mov	r18, r23
 b7e:	36 2f       	mov	r19, r22
 b80:	49 2f       	mov	r20, r25
 b82:	58 2f       	mov	r21, r24
 b84:	60 2f       	mov	r22, r16
 b86:	7d 2d       	mov	r23, r13
 b88:	8c 2d       	mov	r24, r12
 b8a:	91 2f       	mov	r25, r17
 b8c:	0e 94 73 12 	call	0x24e6	; 0x24e6 <__subsf3>
 b90:	ab 01       	movw	r20, r22
 b92:	bc 01       	movw	r22, r24
			right_u = PID_controller_get_control_action(&right_motor, right_error_rps);
 b94:	ce 01       	movw	r24, r28
 b96:	c5 96       	adiw	r24, 0x35	; 53
 b98:	0e 94 8f 06 	call	0xd1e	; 0xd1e <PID_controller_get_control_action>
 b9c:	ee 96       	adiw	r28, 0x3e	; 62
 b9e:	6f af       	std	Y+63, r22	; 0x3f
 ba0:	ee 97       	sbiw	r28, 0x3e	; 62
 ba2:	ef 96       	adiw	r28, 0x3f	; 63
 ba4:	7f af       	std	Y+63, r23	; 0x3f
 ba6:	ef 97       	sbiw	r28, 0x3f	; 63
 ba8:	c1 58       	subi	r28, 0x81	; 129
 baa:	df 4f       	sbci	r29, 0xFF	; 255
 bac:	88 83       	st	Y, r24
 bae:	cf 57       	subi	r28, 0x7F	; 127
 bb0:	d0 40       	sbci	r29, 0x00	; 0
 bb2:	c0 58       	subi	r28, 0x80	; 128
 bb4:	df 4f       	sbci	r29, 0xFF	; 255
 bb6:	98 83       	st	Y, r25
 bb8:	c0 58       	subi	r28, 0x80	; 128
 bba:	d0 40       	sbci	r29, 0x00	; 0
			motor_right(right_u);
 bbc:	0e 94 ab 10 	call	0x2156	; 0x2156 <motor_right>
			
			time = timer_get_elapsed_ms();
 bc0:	0e 94 45 10 	call	0x208a	; 0x208a <timer_get_elapsed_ms>
 bc4:	4b 01       	movw	r8, r22
 bc6:	5c 01       	movw	r10, r24
			
			if (time >= change_ref_time) {
 bc8:	64 15       	cp	r22, r4
 bca:	75 05       	cpc	r23, r5
 bcc:	86 05       	cpc	r24, r6
 bce:	97 05       	cpc	r25, r7
 bd0:	d0 f0       	brcs	.+52     	; 0xc06 <main+0x240>
				change_ref_time = time + 5000;
 bd2:	2b 01       	movw	r4, r22
 bd4:	3c 01       	movw	r6, r24
 bd6:	88 e8       	ldi	r24, 0x88	; 136
 bd8:	48 0e       	add	r4, r24
 bda:	83 e1       	ldi	r24, 0x13	; 19
 bdc:	58 1e       	adc	r5, r24
 bde:	61 1c       	adc	r6, r1
 be0:	71 1c       	adc	r7, r1
				left_speed_ref_rps = refs[i];
 be2:	f1 01       	movw	r30, r2
 be4:	ee 0f       	add	r30, r30
 be6:	ff 1f       	adc	r31, r31
 be8:	ee 0f       	add	r30, r30
 bea:	ff 1f       	adc	r31, r31
 bec:	89 e6       	ldi	r24, 0x69	; 105
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	8c 0f       	add	r24, r28
 bf2:	9d 1f       	adc	r25, r29
 bf4:	e8 0f       	add	r30, r24
 bf6:	f9 1f       	adc	r31, r25
 bf8:	00 81       	ld	r16, Z
 bfa:	d1 80       	ldd	r13, Z+1	; 0x01
 bfc:	c2 80       	ldd	r12, Z+2	; 0x02
 bfe:	13 81       	ldd	r17, Z+3	; 0x03
				right_speed_ref_rps = refs[i];
				i++;
 c00:	9f ef       	ldi	r25, 0xFF	; 255
 c02:	29 1a       	sub	r2, r25
 c04:	39 0a       	sbc	r3, r25
			}
			if (i > 2) {
 c06:	83 e0       	ldi	r24, 0x03	; 3
 c08:	28 16       	cp	r2, r24
 c0a:	31 04       	cpc	r3, r1
 c0c:	0c f0       	brlt	.+2      	; 0xc10 <main+0x24a>
 c0e:	67 c0       	rjmp	.+206    	; 0xcde <main+0x318>
				motor_left_stop();
				motor_right_stop();
				return 0;
			}
			
			send_flag = 1;
 c10:	ee 24       	eor	r14, r14
 c12:	e3 94       	inc	r14
 c14:	f1 2c       	mov	r15, r1
		} 
		
		if (send_flag) {
 c16:	e1 14       	cp	r14, r1
 c18:	f1 04       	cpc	r15, r1
 c1a:	09 f4       	brne	.+2      	; 0xc1e <main+0x258>
 c1c:	5e cf       	rjmp	.-324    	; 0xada <main+0x114>
			printf("{\"t\":%lu,\"l\":{\"ref\":%.2f,\"y\":%.2f,\"ulim\":%.2f},\"r\":{\"ref\":%.2f,\"y\":%.2f,\"ulim\":%.2f}}\n", time, left_speed_ref_rps, left_speed_rps, left_u, right_speed_ref_rps, right_speed_rps, right_u);
 c1e:	c0 58       	subi	r28, 0x80	; 128
 c20:	df 4f       	sbci	r29, 0xFF	; 255
 c22:	98 81       	ld	r25, Y
 c24:	c0 58       	subi	r28, 0x80	; 128
 c26:	d0 40       	sbci	r29, 0x00	; 0
 c28:	9f 93       	push	r25
 c2a:	c1 58       	subi	r28, 0x81	; 129
 c2c:	df 4f       	sbci	r29, 0xFF	; 255
 c2e:	88 81       	ld	r24, Y
 c30:	cf 57       	subi	r28, 0x7F	; 127
 c32:	d0 40       	sbci	r29, 0x00	; 0
 c34:	8f 93       	push	r24
 c36:	ef 96       	adiw	r28, 0x3f	; 63
 c38:	9f ad       	ldd	r25, Y+63	; 0x3f
 c3a:	ef 97       	sbiw	r28, 0x3f	; 63
 c3c:	9f 93       	push	r25
 c3e:	ee 96       	adiw	r28, 0x3e	; 62
 c40:	8f ad       	ldd	r24, Y+63	; 0x3f
 c42:	ee 97       	sbiw	r28, 0x3e	; 62
 c44:	8f 93       	push	r24
 c46:	ed 96       	adiw	r28, 0x3d	; 61
 c48:	9f ad       	ldd	r25, Y+63	; 0x3f
 c4a:	ed 97       	sbiw	r28, 0x3d	; 61
 c4c:	9f 93       	push	r25
 c4e:	ec 96       	adiw	r28, 0x3c	; 60
 c50:	8f ad       	ldd	r24, Y+63	; 0x3f
 c52:	ec 97       	sbiw	r28, 0x3c	; 60
 c54:	8f 93       	push	r24
 c56:	eb 96       	adiw	r28, 0x3b	; 59
 c58:	9f ad       	ldd	r25, Y+63	; 0x3f
 c5a:	eb 97       	sbiw	r28, 0x3b	; 59
 c5c:	9f 93       	push	r25
 c5e:	ea 96       	adiw	r28, 0x3a	; 58
 c60:	8f ad       	ldd	r24, Y+63	; 0x3f
 c62:	ea 97       	sbiw	r28, 0x3a	; 58
 c64:	8f 93       	push	r24
 c66:	1f 93       	push	r17
 c68:	cf 92       	push	r12
 c6a:	df 92       	push	r13
 c6c:	0f 93       	push	r16
 c6e:	e9 96       	adiw	r28, 0x39	; 57
 c70:	9f ad       	ldd	r25, Y+63	; 0x3f
 c72:	e9 97       	sbiw	r28, 0x39	; 57
 c74:	9f 93       	push	r25
 c76:	e8 96       	adiw	r28, 0x38	; 56
 c78:	8f ad       	ldd	r24, Y+63	; 0x3f
 c7a:	e8 97       	sbiw	r28, 0x38	; 56
 c7c:	8f 93       	push	r24
 c7e:	e7 96       	adiw	r28, 0x37	; 55
 c80:	9f ad       	ldd	r25, Y+63	; 0x3f
 c82:	e7 97       	sbiw	r28, 0x37	; 55
 c84:	9f 93       	push	r25
 c86:	e6 96       	adiw	r28, 0x36	; 54
 c88:	8f ad       	ldd	r24, Y+63	; 0x3f
 c8a:	e6 97       	sbiw	r28, 0x36	; 54
 c8c:	8f 93       	push	r24
 c8e:	e5 96       	adiw	r28, 0x35	; 53
 c90:	9f ad       	ldd	r25, Y+63	; 0x3f
 c92:	e5 97       	sbiw	r28, 0x35	; 53
 c94:	9f 93       	push	r25
 c96:	e4 96       	adiw	r28, 0x34	; 52
 c98:	8f ad       	ldd	r24, Y+63	; 0x3f
 c9a:	e4 97       	sbiw	r28, 0x34	; 52
 c9c:	8f 93       	push	r24
 c9e:	e3 96       	adiw	r28, 0x33	; 51
 ca0:	9f ad       	ldd	r25, Y+63	; 0x3f
 ca2:	e3 97       	sbiw	r28, 0x33	; 51
 ca4:	9f 93       	push	r25
 ca6:	e2 96       	adiw	r28, 0x32	; 50
 ca8:	8f ad       	ldd	r24, Y+63	; 0x3f
 caa:	e2 97       	sbiw	r28, 0x32	; 50
 cac:	8f 93       	push	r24
 cae:	1f 93       	push	r17
 cb0:	cf 92       	push	r12
 cb2:	df 92       	push	r13
 cb4:	0f 93       	push	r16
 cb6:	bf 92       	push	r11
 cb8:	af 92       	push	r10
 cba:	9f 92       	push	r9
 cbc:	8f 92       	push	r8
 cbe:	82 e2       	ldi	r24, 0x22	; 34
 cc0:	92 e0       	ldi	r25, 0x02	; 2
 cc2:	a0 e0       	ldi	r26, 0x00	; 0
 cc4:	af 93       	push	r26
 cc6:	9f 93       	push	r25
 cc8:	8f 93       	push	r24
 cca:	0e 94 a7 11 	call	0x234e	; 0x234e <printf>
 cce:	0f b6       	in	r0, 0x3f	; 63
 cd0:	f8 94       	cli
 cd2:	de bf       	out	0x3e, r29	; 62
 cd4:	0f be       	out	0x3f, r0	; 63
 cd6:	cd bf       	out	0x3d, r28	; 61
			send_flag = 0;
 cd8:	e1 2c       	mov	r14, r1
 cda:	f1 2c       	mov	r15, r1
 cdc:	fe ce       	rjmp	.-516    	; 0xada <main+0x114>
				left_speed_ref_rps = refs[i];
				right_speed_ref_rps = refs[i];
				i++;
			}
			if (i > 2) {
				motor_left_stop();
 cde:	0e 94 57 12 	call	0x24ae	; 0x24ae <motor_left_stop>
				motor_right_stop();
 ce2:	0e 94 5e 12 	call	0x24bc	; 0x24bc <motor_right_stop>
		}
	}
	
	
	return 0;
 ce6:	80 e0       	ldi	r24, 0x00	; 0
 ce8:	90 e0       	ldi	r25, 0x00	; 0
 cea:	c0 58       	subi	r28, 0x80	; 128
 cec:	df 4f       	sbci	r29, 0xFF	; 255
 cee:	0f b6       	in	r0, 0x3f	; 63
 cf0:	f8 94       	cli
 cf2:	de bf       	out	0x3e, r29	; 62
 cf4:	0f be       	out	0x3f, r0	; 63
 cf6:	cd bf       	out	0x3d, r28	; 61
 cf8:	df 91       	pop	r29
 cfa:	cf 91       	pop	r28
 cfc:	1f 91       	pop	r17
 cfe:	0f 91       	pop	r16
 d00:	ff 90       	pop	r15
 d02:	ef 90       	pop	r14
 d04:	df 90       	pop	r13
 d06:	cf 90       	pop	r12
 d08:	bf 90       	pop	r11
 d0a:	af 90       	pop	r10
 d0c:	9f 90       	pop	r9
 d0e:	8f 90       	pop	r8
 d10:	7f 90       	pop	r7
 d12:	6f 90       	pop	r6
 d14:	5f 90       	pop	r5
 d16:	4f 90       	pop	r4
 d18:	3f 90       	pop	r3
 d1a:	2f 90       	pop	r2
 d1c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000024e6 <__subsf3>:
    24e6:	50 58       	subi	r21, 0x80	; 128

000024e8 <__addsf3>:
    24e8:	bb 27       	eor	r27, r27
    24ea:	aa 27       	eor	r26, r26
    24ec:	0e 94 fd 0b 	call	0x17fa	; 0x17fa <__addsf3x>
    24f0:	0c 94 fb 11 	jmp	0x23f6	; 0x23f6 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

000017fa <__addsf3x>:
    17fa:	11 c0       	rjmp	.+34     	; 0x181e <__addsf3x+0x24>
    17fc:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <__fp_pscA>
    1800:	38 f0       	brcs	.+14     	; 0x1810 <__addsf3x+0x16>
    1802:	0e 94 81 12 	call	0x2502	; 0x2502 <__fp_pscB>
    1806:	20 f0       	brcs	.+8      	; 0x1810 <__addsf3x+0x16>
    1808:	39 f4       	brne	.+14     	; 0x1818 <__addsf3x+0x1e>
    180a:	9f 3f       	cpi	r25, 0xFF	; 255
    180c:	19 f4       	brne	.+6      	; 0x1814 <__addsf3x+0x1a>
    180e:	26 f4       	brtc	.+8      	; 0x1818 <__addsf3x+0x1e>
    1810:	0c 94 ae 12 	jmp	0x255c	; 0x255c <__fp_nan>
    1814:	0e f4       	brtc	.+2      	; 0x1818 <__addsf3x+0x1e>
    1816:	e0 95       	com	r30
    1818:	e7 fb       	bst	r30, 7
    181a:	0c 94 96 12 	jmp	0x252c	; 0x252c <__fp_inf>
    181e:	e9 2f       	mov	r30, r25
    1820:	0e 94 68 10 	call	0x20d0	; 0x20d0 <__fp_split3>
    1824:	58 f3       	brcs	.-42     	; 0x17fc <__addsf3x+0x2>
    1826:	ba 17       	cp	r27, r26
    1828:	62 07       	cpc	r22, r18
    182a:	73 07       	cpc	r23, r19
    182c:	84 07       	cpc	r24, r20
    182e:	95 07       	cpc	r25, r21
    1830:	20 f0       	brcs	.+8      	; 0x183a <__addsf3x+0x40>
    1832:	79 f4       	brne	.+30     	; 0x1852 <__addsf3x+0x58>
    1834:	a6 f5       	brtc	.+104    	; 0x189e <__addsf3x+0xa4>
    1836:	0c 94 88 12 	jmp	0x2510	; 0x2510 <__fp_zero>
    183a:	0e f4       	brtc	.+2      	; 0x183e <__addsf3x+0x44>
    183c:	e0 95       	com	r30
    183e:	0b 2e       	mov	r0, r27
    1840:	ba 2f       	mov	r27, r26
    1842:	a0 2d       	mov	r26, r0
    1844:	0b 01       	movw	r0, r22
    1846:	b9 01       	movw	r22, r18
    1848:	90 01       	movw	r18, r0
    184a:	0c 01       	movw	r0, r24
    184c:	ca 01       	movw	r24, r20
    184e:	a0 01       	movw	r20, r0
    1850:	11 24       	eor	r1, r1
    1852:	ff 27       	eor	r31, r31
    1854:	59 1b       	sub	r21, r25
    1856:	99 f0       	breq	.+38     	; 0x187e <__addsf3x+0x84>
    1858:	59 3f       	cpi	r21, 0xF9	; 249
    185a:	50 f4       	brcc	.+20     	; 0x1870 <__addsf3x+0x76>
    185c:	50 3e       	cpi	r21, 0xE0	; 224
    185e:	68 f1       	brcs	.+90     	; 0x18ba <__addsf3x+0xc0>
    1860:	1a 16       	cp	r1, r26
    1862:	f0 40       	sbci	r31, 0x00	; 0
    1864:	a2 2f       	mov	r26, r18
    1866:	23 2f       	mov	r18, r19
    1868:	34 2f       	mov	r19, r20
    186a:	44 27       	eor	r20, r20
    186c:	58 5f       	subi	r21, 0xF8	; 248
    186e:	f3 cf       	rjmp	.-26     	; 0x1856 <__addsf3x+0x5c>
    1870:	46 95       	lsr	r20
    1872:	37 95       	ror	r19
    1874:	27 95       	ror	r18
    1876:	a7 95       	ror	r26
    1878:	f0 40       	sbci	r31, 0x00	; 0
    187a:	53 95       	inc	r21
    187c:	c9 f7       	brne	.-14     	; 0x1870 <__addsf3x+0x76>
    187e:	7e f4       	brtc	.+30     	; 0x189e <__addsf3x+0xa4>
    1880:	1f 16       	cp	r1, r31
    1882:	ba 0b       	sbc	r27, r26
    1884:	62 0b       	sbc	r22, r18
    1886:	73 0b       	sbc	r23, r19
    1888:	84 0b       	sbc	r24, r20
    188a:	ba f0       	brmi	.+46     	; 0x18ba <__addsf3x+0xc0>
    188c:	91 50       	subi	r25, 0x01	; 1
    188e:	a1 f0       	breq	.+40     	; 0x18b8 <__addsf3x+0xbe>
    1890:	ff 0f       	add	r31, r31
    1892:	bb 1f       	adc	r27, r27
    1894:	66 1f       	adc	r22, r22
    1896:	77 1f       	adc	r23, r23
    1898:	88 1f       	adc	r24, r24
    189a:	c2 f7       	brpl	.-16     	; 0x188c <__addsf3x+0x92>
    189c:	0e c0       	rjmp	.+28     	; 0x18ba <__addsf3x+0xc0>
    189e:	ba 0f       	add	r27, r26
    18a0:	62 1f       	adc	r22, r18
    18a2:	73 1f       	adc	r23, r19
    18a4:	84 1f       	adc	r24, r20
    18a6:	48 f4       	brcc	.+18     	; 0x18ba <__addsf3x+0xc0>
    18a8:	87 95       	ror	r24
    18aa:	77 95       	ror	r23
    18ac:	67 95       	ror	r22
    18ae:	b7 95       	ror	r27
    18b0:	f7 95       	ror	r31
    18b2:	9e 3f       	cpi	r25, 0xFE	; 254
    18b4:	08 f0       	brcs	.+2      	; 0x18b8 <__addsf3x+0xbe>
    18b6:	b0 cf       	rjmp	.-160    	; 0x1818 <__addsf3x+0x1e>
    18b8:	93 95       	inc	r25
    18ba:	88 0f       	add	r24, r24
    18bc:	08 f0       	brcs	.+2      	; 0x18c0 <__addsf3x+0xc6>
    18be:	99 27       	eor	r25, r25
    18c0:	ee 0f       	add	r30, r30
    18c2:	97 95       	ror	r25
    18c4:	87 95       	ror	r24
    18c6:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002538 <__cmpsf2>:
    2538:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__fp_cmp>
    253c:	08 f4       	brcc	.+2      	; 0x2540 <__cmpsf2+0x8>
    253e:	81 e0       	ldi	r24, 0x01	; 1
    2540:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000254c <__divsf3>:
    254c:	0e 94 24 0b 	call	0x1648	; 0x1648 <__divsf3x>
    2550:	0c 94 fb 11 	jmp	0x23f6	; 0x23f6 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001648 <__divsf3x>:
    1648:	10 c0       	rjmp	.+32     	; 0x166a <__divsf3x+0x22>
    164a:	0e 94 81 12 	call	0x2502	; 0x2502 <__fp_pscB>
    164e:	58 f0       	brcs	.+22     	; 0x1666 <__divsf3x+0x1e>
    1650:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <__fp_pscA>
    1654:	40 f0       	brcs	.+16     	; 0x1666 <__divsf3x+0x1e>
    1656:	29 f4       	brne	.+10     	; 0x1662 <__divsf3x+0x1a>
    1658:	5f 3f       	cpi	r21, 0xFF	; 255
    165a:	29 f0       	breq	.+10     	; 0x1666 <__divsf3x+0x1e>
    165c:	0c 94 96 12 	jmp	0x252c	; 0x252c <__fp_inf>
    1660:	51 11       	cpse	r21, r1
    1662:	0c 94 89 12 	jmp	0x2512	; 0x2512 <__fp_szero>
    1666:	0c 94 ae 12 	jmp	0x255c	; 0x255c <__fp_nan>
    166a:	0e 94 68 10 	call	0x20d0	; 0x20d0 <__fp_split3>
    166e:	68 f3       	brcs	.-38     	; 0x164a <__divsf3x+0x2>

00001670 <__divsf3_pse>:
    1670:	99 23       	and	r25, r25
    1672:	b1 f3       	breq	.-20     	; 0x1660 <__divsf3x+0x18>
    1674:	55 23       	and	r21, r21
    1676:	91 f3       	breq	.-28     	; 0x165c <__divsf3x+0x14>
    1678:	95 1b       	sub	r25, r21
    167a:	55 0b       	sbc	r21, r21
    167c:	bb 27       	eor	r27, r27
    167e:	aa 27       	eor	r26, r26
    1680:	62 17       	cp	r22, r18
    1682:	73 07       	cpc	r23, r19
    1684:	84 07       	cpc	r24, r20
    1686:	38 f0       	brcs	.+14     	; 0x1696 <__divsf3_pse+0x26>
    1688:	9f 5f       	subi	r25, 0xFF	; 255
    168a:	5f 4f       	sbci	r21, 0xFF	; 255
    168c:	22 0f       	add	r18, r18
    168e:	33 1f       	adc	r19, r19
    1690:	44 1f       	adc	r20, r20
    1692:	aa 1f       	adc	r26, r26
    1694:	a9 f3       	breq	.-22     	; 0x1680 <__divsf3_pse+0x10>
    1696:	35 d0       	rcall	.+106    	; 0x1702 <__divsf3_pse+0x92>
    1698:	0e 2e       	mov	r0, r30
    169a:	3a f0       	brmi	.+14     	; 0x16aa <__divsf3_pse+0x3a>
    169c:	e0 e8       	ldi	r30, 0x80	; 128
    169e:	32 d0       	rcall	.+100    	; 0x1704 <__divsf3_pse+0x94>
    16a0:	91 50       	subi	r25, 0x01	; 1
    16a2:	50 40       	sbci	r21, 0x00	; 0
    16a4:	e6 95       	lsr	r30
    16a6:	00 1c       	adc	r0, r0
    16a8:	ca f7       	brpl	.-14     	; 0x169c <__divsf3_pse+0x2c>
    16aa:	2b d0       	rcall	.+86     	; 0x1702 <__divsf3_pse+0x92>
    16ac:	fe 2f       	mov	r31, r30
    16ae:	29 d0       	rcall	.+82     	; 0x1702 <__divsf3_pse+0x92>
    16b0:	66 0f       	add	r22, r22
    16b2:	77 1f       	adc	r23, r23
    16b4:	88 1f       	adc	r24, r24
    16b6:	bb 1f       	adc	r27, r27
    16b8:	26 17       	cp	r18, r22
    16ba:	37 07       	cpc	r19, r23
    16bc:	48 07       	cpc	r20, r24
    16be:	ab 07       	cpc	r26, r27
    16c0:	b0 e8       	ldi	r27, 0x80	; 128
    16c2:	09 f0       	breq	.+2      	; 0x16c6 <__divsf3_pse+0x56>
    16c4:	bb 0b       	sbc	r27, r27
    16c6:	80 2d       	mov	r24, r0
    16c8:	bf 01       	movw	r22, r30
    16ca:	ff 27       	eor	r31, r31
    16cc:	93 58       	subi	r25, 0x83	; 131
    16ce:	5f 4f       	sbci	r21, 0xFF	; 255
    16d0:	3a f0       	brmi	.+14     	; 0x16e0 <__divsf3_pse+0x70>
    16d2:	9e 3f       	cpi	r25, 0xFE	; 254
    16d4:	51 05       	cpc	r21, r1
    16d6:	78 f0       	brcs	.+30     	; 0x16f6 <__divsf3_pse+0x86>
    16d8:	0c 94 96 12 	jmp	0x252c	; 0x252c <__fp_inf>
    16dc:	0c 94 89 12 	jmp	0x2512	; 0x2512 <__fp_szero>
    16e0:	5f 3f       	cpi	r21, 0xFF	; 255
    16e2:	e4 f3       	brlt	.-8      	; 0x16dc <__divsf3_pse+0x6c>
    16e4:	98 3e       	cpi	r25, 0xE8	; 232
    16e6:	d4 f3       	brlt	.-12     	; 0x16dc <__divsf3_pse+0x6c>
    16e8:	86 95       	lsr	r24
    16ea:	77 95       	ror	r23
    16ec:	67 95       	ror	r22
    16ee:	b7 95       	ror	r27
    16f0:	f7 95       	ror	r31
    16f2:	9f 5f       	subi	r25, 0xFF	; 255
    16f4:	c9 f7       	brne	.-14     	; 0x16e8 <__divsf3_pse+0x78>
    16f6:	88 0f       	add	r24, r24
    16f8:	91 1d       	adc	r25, r1
    16fa:	96 95       	lsr	r25
    16fc:	87 95       	ror	r24
    16fe:	97 f9       	bld	r25, 7
    1700:	08 95       	ret
    1702:	e1 e0       	ldi	r30, 0x01	; 1
    1704:	66 0f       	add	r22, r22
    1706:	77 1f       	adc	r23, r23
    1708:	88 1f       	adc	r24, r24
    170a:	bb 1f       	adc	r27, r27
    170c:	62 17       	cp	r22, r18
    170e:	73 07       	cpc	r23, r19
    1710:	84 07       	cpc	r24, r20
    1712:	ba 07       	cpc	r27, r26
    1714:	20 f0       	brcs	.+8      	; 0x171e <__divsf3_pse+0xae>
    1716:	62 1b       	sub	r22, r18
    1718:	73 0b       	sbc	r23, r19
    171a:	84 0b       	sbc	r24, r20
    171c:	ba 0b       	sbc	r27, r26
    171e:	ee 1f       	adc	r30, r30
    1720:	88 f7       	brcc	.-30     	; 0x1704 <__divsf3_pse+0x94>
    1722:	e0 95       	com	r30
    1724:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001e7e <__fixunssfsi>:
    1e7e:	0e 94 70 10 	call	0x20e0	; 0x20e0 <__fp_splitA>
    1e82:	88 f0       	brcs	.+34     	; 0x1ea6 <__fixunssfsi+0x28>
    1e84:	9f 57       	subi	r25, 0x7F	; 127
    1e86:	98 f0       	brcs	.+38     	; 0x1eae <__fixunssfsi+0x30>
    1e88:	b9 2f       	mov	r27, r25
    1e8a:	99 27       	eor	r25, r25
    1e8c:	b7 51       	subi	r27, 0x17	; 23
    1e8e:	b0 f0       	brcs	.+44     	; 0x1ebc <__fixunssfsi+0x3e>
    1e90:	e1 f0       	breq	.+56     	; 0x1eca <__fixunssfsi+0x4c>
    1e92:	66 0f       	add	r22, r22
    1e94:	77 1f       	adc	r23, r23
    1e96:	88 1f       	adc	r24, r24
    1e98:	99 1f       	adc	r25, r25
    1e9a:	1a f0       	brmi	.+6      	; 0x1ea2 <__fixunssfsi+0x24>
    1e9c:	ba 95       	dec	r27
    1e9e:	c9 f7       	brne	.-14     	; 0x1e92 <__fixunssfsi+0x14>
    1ea0:	14 c0       	rjmp	.+40     	; 0x1eca <__fixunssfsi+0x4c>
    1ea2:	b1 30       	cpi	r27, 0x01	; 1
    1ea4:	91 f0       	breq	.+36     	; 0x1eca <__fixunssfsi+0x4c>
    1ea6:	0e 94 88 12 	call	0x2510	; 0x2510 <__fp_zero>
    1eaa:	b1 e0       	ldi	r27, 0x01	; 1
    1eac:	08 95       	ret
    1eae:	0c 94 88 12 	jmp	0x2510	; 0x2510 <__fp_zero>
    1eb2:	67 2f       	mov	r22, r23
    1eb4:	78 2f       	mov	r23, r24
    1eb6:	88 27       	eor	r24, r24
    1eb8:	b8 5f       	subi	r27, 0xF8	; 248
    1eba:	39 f0       	breq	.+14     	; 0x1eca <__fixunssfsi+0x4c>
    1ebc:	b9 3f       	cpi	r27, 0xF9	; 249
    1ebe:	cc f3       	brlt	.-14     	; 0x1eb2 <__fixunssfsi+0x34>
    1ec0:	86 95       	lsr	r24
    1ec2:	77 95       	ror	r23
    1ec4:	67 95       	ror	r22
    1ec6:	b3 95       	inc	r27
    1ec8:	d9 f7       	brne	.-10     	; 0x1ec0 <__fixunssfsi+0x42>
    1eca:	3e f4       	brtc	.+14     	; 0x1eda <__fixunssfsi+0x5c>
    1ecc:	90 95       	com	r25
    1ece:	80 95       	com	r24
    1ed0:	70 95       	com	r23
    1ed2:	61 95       	neg	r22
    1ed4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ed6:	8f 4f       	sbci	r24, 0xFF	; 255
    1ed8:	9f 4f       	sbci	r25, 0xFF	; 255
    1eda:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001d18 <__floatunsisf>:
    1d18:	e8 94       	clt
    1d1a:	09 c0       	rjmp	.+18     	; 0x1d2e <__floatsisf+0x12>

00001d1c <__floatsisf>:
    1d1c:	97 fb       	bst	r25, 7
    1d1e:	3e f4       	brtc	.+14     	; 0x1d2e <__floatsisf+0x12>
    1d20:	90 95       	com	r25
    1d22:	80 95       	com	r24
    1d24:	70 95       	com	r23
    1d26:	61 95       	neg	r22
    1d28:	7f 4f       	sbci	r23, 0xFF	; 255
    1d2a:	8f 4f       	sbci	r24, 0xFF	; 255
    1d2c:	9f 4f       	sbci	r25, 0xFF	; 255
    1d2e:	99 23       	and	r25, r25
    1d30:	a9 f0       	breq	.+42     	; 0x1d5c <__floatsisf+0x40>
    1d32:	f9 2f       	mov	r31, r25
    1d34:	96 e9       	ldi	r25, 0x96	; 150
    1d36:	bb 27       	eor	r27, r27
    1d38:	93 95       	inc	r25
    1d3a:	f6 95       	lsr	r31
    1d3c:	87 95       	ror	r24
    1d3e:	77 95       	ror	r23
    1d40:	67 95       	ror	r22
    1d42:	b7 95       	ror	r27
    1d44:	f1 11       	cpse	r31, r1
    1d46:	f8 cf       	rjmp	.-16     	; 0x1d38 <__floatsisf+0x1c>
    1d48:	fa f4       	brpl	.+62     	; 0x1d88 <__floatsisf+0x6c>
    1d4a:	bb 0f       	add	r27, r27
    1d4c:	11 f4       	brne	.+4      	; 0x1d52 <__floatsisf+0x36>
    1d4e:	60 ff       	sbrs	r22, 0
    1d50:	1b c0       	rjmp	.+54     	; 0x1d88 <__floatsisf+0x6c>
    1d52:	6f 5f       	subi	r22, 0xFF	; 255
    1d54:	7f 4f       	sbci	r23, 0xFF	; 255
    1d56:	8f 4f       	sbci	r24, 0xFF	; 255
    1d58:	9f 4f       	sbci	r25, 0xFF	; 255
    1d5a:	16 c0       	rjmp	.+44     	; 0x1d88 <__floatsisf+0x6c>
    1d5c:	88 23       	and	r24, r24
    1d5e:	11 f0       	breq	.+4      	; 0x1d64 <__floatsisf+0x48>
    1d60:	96 e9       	ldi	r25, 0x96	; 150
    1d62:	11 c0       	rjmp	.+34     	; 0x1d86 <__floatsisf+0x6a>
    1d64:	77 23       	and	r23, r23
    1d66:	21 f0       	breq	.+8      	; 0x1d70 <__floatsisf+0x54>
    1d68:	9e e8       	ldi	r25, 0x8E	; 142
    1d6a:	87 2f       	mov	r24, r23
    1d6c:	76 2f       	mov	r23, r22
    1d6e:	05 c0       	rjmp	.+10     	; 0x1d7a <__floatsisf+0x5e>
    1d70:	66 23       	and	r22, r22
    1d72:	71 f0       	breq	.+28     	; 0x1d90 <__floatsisf+0x74>
    1d74:	96 e8       	ldi	r25, 0x86	; 134
    1d76:	86 2f       	mov	r24, r22
    1d78:	70 e0       	ldi	r23, 0x00	; 0
    1d7a:	60 e0       	ldi	r22, 0x00	; 0
    1d7c:	2a f0       	brmi	.+10     	; 0x1d88 <__floatsisf+0x6c>
    1d7e:	9a 95       	dec	r25
    1d80:	66 0f       	add	r22, r22
    1d82:	77 1f       	adc	r23, r23
    1d84:	88 1f       	adc	r24, r24
    1d86:	da f7       	brpl	.-10     	; 0x1d7e <__floatsisf+0x62>
    1d88:	88 0f       	add	r24, r24
    1d8a:	96 95       	lsr	r25
    1d8c:	87 95       	ror	r24
    1d8e:	97 f9       	bld	r25, 7
    1d90:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f2a <__fp_cmp>:
    1f2a:	99 0f       	add	r25, r25
    1f2c:	00 08       	sbc	r0, r0
    1f2e:	55 0f       	add	r21, r21
    1f30:	aa 0b       	sbc	r26, r26
    1f32:	e0 e8       	ldi	r30, 0x80	; 128
    1f34:	fe ef       	ldi	r31, 0xFE	; 254
    1f36:	16 16       	cp	r1, r22
    1f38:	17 06       	cpc	r1, r23
    1f3a:	e8 07       	cpc	r30, r24
    1f3c:	f9 07       	cpc	r31, r25
    1f3e:	c0 f0       	brcs	.+48     	; 0x1f70 <__fp_cmp+0x46>
    1f40:	12 16       	cp	r1, r18
    1f42:	13 06       	cpc	r1, r19
    1f44:	e4 07       	cpc	r30, r20
    1f46:	f5 07       	cpc	r31, r21
    1f48:	98 f0       	brcs	.+38     	; 0x1f70 <__fp_cmp+0x46>
    1f4a:	62 1b       	sub	r22, r18
    1f4c:	73 0b       	sbc	r23, r19
    1f4e:	84 0b       	sbc	r24, r20
    1f50:	95 0b       	sbc	r25, r21
    1f52:	39 f4       	brne	.+14     	; 0x1f62 <__fp_cmp+0x38>
    1f54:	0a 26       	eor	r0, r26
    1f56:	61 f0       	breq	.+24     	; 0x1f70 <__fp_cmp+0x46>
    1f58:	23 2b       	or	r18, r19
    1f5a:	24 2b       	or	r18, r20
    1f5c:	25 2b       	or	r18, r21
    1f5e:	21 f4       	brne	.+8      	; 0x1f68 <__fp_cmp+0x3e>
    1f60:	08 95       	ret
    1f62:	0a 26       	eor	r0, r26
    1f64:	09 f4       	brne	.+2      	; 0x1f68 <__fp_cmp+0x3e>
    1f66:	a1 40       	sbci	r26, 0x01	; 1
    1f68:	a6 95       	lsr	r26
    1f6a:	8f ef       	ldi	r24, 0xFF	; 255
    1f6c:	81 1d       	adc	r24, r1
    1f6e:	81 1d       	adc	r24, r1
    1f70:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000252c <__fp_inf>:
    252c:	97 f9       	bld	r25, 7
    252e:	9f 67       	ori	r25, 0x7F	; 127
    2530:	80 e8       	ldi	r24, 0x80	; 128
    2532:	70 e0       	ldi	r23, 0x00	; 0
    2534:	60 e0       	ldi	r22, 0x00	; 0
    2536:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000255c <__fp_nan>:
    255c:	9f ef       	ldi	r25, 0xFF	; 255
    255e:	80 ec       	ldi	r24, 0xC0	; 192
    2560:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000024f4 <__fp_pscA>:
    24f4:	00 24       	eor	r0, r0
    24f6:	0a 94       	dec	r0
    24f8:	16 16       	cp	r1, r22
    24fa:	17 06       	cpc	r1, r23
    24fc:	18 06       	cpc	r1, r24
    24fe:	09 06       	cpc	r0, r25
    2500:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002502 <__fp_pscB>:
    2502:	00 24       	eor	r0, r0
    2504:	0a 94       	dec	r0
    2506:	12 16       	cp	r1, r18
    2508:	13 06       	cpc	r1, r19
    250a:	14 06       	cpc	r1, r20
    250c:	05 06       	cpc	r0, r21
    250e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000023f6 <__fp_round>:
    23f6:	09 2e       	mov	r0, r25
    23f8:	03 94       	inc	r0
    23fa:	00 0c       	add	r0, r0
    23fc:	11 f4       	brne	.+4      	; 0x2402 <__fp_round+0xc>
    23fe:	88 23       	and	r24, r24
    2400:	52 f0       	brmi	.+20     	; 0x2416 <__fp_round+0x20>
    2402:	bb 0f       	add	r27, r27
    2404:	40 f4       	brcc	.+16     	; 0x2416 <__fp_round+0x20>
    2406:	bf 2b       	or	r27, r31
    2408:	11 f4       	brne	.+4      	; 0x240e <__fp_round+0x18>
    240a:	60 ff       	sbrs	r22, 0
    240c:	04 c0       	rjmp	.+8      	; 0x2416 <__fp_round+0x20>
    240e:	6f 5f       	subi	r22, 0xFF	; 255
    2410:	7f 4f       	sbci	r23, 0xFF	; 255
    2412:	8f 4f       	sbci	r24, 0xFF	; 255
    2414:	9f 4f       	sbci	r25, 0xFF	; 255
    2416:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000020d0 <__fp_split3>:
    20d0:	57 fd       	sbrc	r21, 7
    20d2:	90 58       	subi	r25, 0x80	; 128
    20d4:	44 0f       	add	r20, r20
    20d6:	55 1f       	adc	r21, r21
    20d8:	59 f0       	breq	.+22     	; 0x20f0 <__fp_splitA+0x10>
    20da:	5f 3f       	cpi	r21, 0xFF	; 255
    20dc:	71 f0       	breq	.+28     	; 0x20fa <__fp_splitA+0x1a>
    20de:	47 95       	ror	r20

000020e0 <__fp_splitA>:
    20e0:	88 0f       	add	r24, r24
    20e2:	97 fb       	bst	r25, 7
    20e4:	99 1f       	adc	r25, r25
    20e6:	61 f0       	breq	.+24     	; 0x2100 <__fp_splitA+0x20>
    20e8:	9f 3f       	cpi	r25, 0xFF	; 255
    20ea:	79 f0       	breq	.+30     	; 0x210a <__fp_splitA+0x2a>
    20ec:	87 95       	ror	r24
    20ee:	08 95       	ret
    20f0:	12 16       	cp	r1, r18
    20f2:	13 06       	cpc	r1, r19
    20f4:	14 06       	cpc	r1, r20
    20f6:	55 1f       	adc	r21, r21
    20f8:	f2 cf       	rjmp	.-28     	; 0x20de <__fp_split3+0xe>
    20fa:	46 95       	lsr	r20
    20fc:	f1 df       	rcall	.-30     	; 0x20e0 <__fp_splitA>
    20fe:	08 c0       	rjmp	.+16     	; 0x2110 <__fp_splitA+0x30>
    2100:	16 16       	cp	r1, r22
    2102:	17 06       	cpc	r1, r23
    2104:	18 06       	cpc	r1, r24
    2106:	99 1f       	adc	r25, r25
    2108:	f1 cf       	rjmp	.-30     	; 0x20ec <__fp_splitA+0xc>
    210a:	86 95       	lsr	r24
    210c:	71 05       	cpc	r23, r1
    210e:	61 05       	cpc	r22, r1
    2110:	08 94       	sec
    2112:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002510 <__fp_zero>:
    2510:	e8 94       	clt

00002512 <__fp_szero>:
    2512:	bb 27       	eor	r27, r27
    2514:	66 27       	eor	r22, r22
    2516:	77 27       	eor	r23, r23
    2518:	cb 01       	movw	r24, r22
    251a:	97 f9       	bld	r25, 7
    251c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002542 <__gesf2>:
    2542:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__fp_cmp>
    2546:	08 f4       	brcc	.+2      	; 0x254a <__gesf2+0x8>
    2548:	8f ef       	ldi	r24, 0xFF	; 255
    254a:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002554 <__mulsf3>:
    2554:	0e 94 93 0b 	call	0x1726	; 0x1726 <__mulsf3x>
    2558:	0c 94 fb 11 	jmp	0x23f6	; 0x23f6 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001726 <__mulsf3x>:
    1726:	0f c0       	rjmp	.+30     	; 0x1746 <__mulsf3x+0x20>
    1728:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <__fp_pscA>
    172c:	38 f0       	brcs	.+14     	; 0x173c <__mulsf3x+0x16>
    172e:	0e 94 81 12 	call	0x2502	; 0x2502 <__fp_pscB>
    1732:	20 f0       	brcs	.+8      	; 0x173c <__mulsf3x+0x16>
    1734:	95 23       	and	r25, r21
    1736:	11 f0       	breq	.+4      	; 0x173c <__mulsf3x+0x16>
    1738:	0c 94 96 12 	jmp	0x252c	; 0x252c <__fp_inf>
    173c:	0c 94 ae 12 	jmp	0x255c	; 0x255c <__fp_nan>
    1740:	11 24       	eor	r1, r1
    1742:	0c 94 89 12 	jmp	0x2512	; 0x2512 <__fp_szero>
    1746:	0e 94 68 10 	call	0x20d0	; 0x20d0 <__fp_split3>
    174a:	70 f3       	brcs	.-36     	; 0x1728 <__mulsf3x+0x2>

0000174c <__mulsf3_pse>:
    174c:	95 9f       	mul	r25, r21
    174e:	c1 f3       	breq	.-16     	; 0x1740 <__mulsf3x+0x1a>
    1750:	95 0f       	add	r25, r21
    1752:	50 e0       	ldi	r21, 0x00	; 0
    1754:	55 1f       	adc	r21, r21
    1756:	62 9f       	mul	r22, r18
    1758:	f0 01       	movw	r30, r0
    175a:	72 9f       	mul	r23, r18
    175c:	bb 27       	eor	r27, r27
    175e:	f0 0d       	add	r31, r0
    1760:	b1 1d       	adc	r27, r1
    1762:	63 9f       	mul	r22, r19
    1764:	aa 27       	eor	r26, r26
    1766:	f0 0d       	add	r31, r0
    1768:	b1 1d       	adc	r27, r1
    176a:	aa 1f       	adc	r26, r26
    176c:	64 9f       	mul	r22, r20
    176e:	66 27       	eor	r22, r22
    1770:	b0 0d       	add	r27, r0
    1772:	a1 1d       	adc	r26, r1
    1774:	66 1f       	adc	r22, r22
    1776:	82 9f       	mul	r24, r18
    1778:	22 27       	eor	r18, r18
    177a:	b0 0d       	add	r27, r0
    177c:	a1 1d       	adc	r26, r1
    177e:	62 1f       	adc	r22, r18
    1780:	73 9f       	mul	r23, r19
    1782:	b0 0d       	add	r27, r0
    1784:	a1 1d       	adc	r26, r1
    1786:	62 1f       	adc	r22, r18
    1788:	83 9f       	mul	r24, r19
    178a:	a0 0d       	add	r26, r0
    178c:	61 1d       	adc	r22, r1
    178e:	22 1f       	adc	r18, r18
    1790:	74 9f       	mul	r23, r20
    1792:	33 27       	eor	r19, r19
    1794:	a0 0d       	add	r26, r0
    1796:	61 1d       	adc	r22, r1
    1798:	23 1f       	adc	r18, r19
    179a:	84 9f       	mul	r24, r20
    179c:	60 0d       	add	r22, r0
    179e:	21 1d       	adc	r18, r1
    17a0:	82 2f       	mov	r24, r18
    17a2:	76 2f       	mov	r23, r22
    17a4:	6a 2f       	mov	r22, r26
    17a6:	11 24       	eor	r1, r1
    17a8:	9f 57       	subi	r25, 0x7F	; 127
    17aa:	50 40       	sbci	r21, 0x00	; 0
    17ac:	9a f0       	brmi	.+38     	; 0x17d4 <__mulsf3_pse+0x88>
    17ae:	f1 f0       	breq	.+60     	; 0x17ec <__mulsf3_pse+0xa0>
    17b0:	88 23       	and	r24, r24
    17b2:	4a f0       	brmi	.+18     	; 0x17c6 <__mulsf3_pse+0x7a>
    17b4:	ee 0f       	add	r30, r30
    17b6:	ff 1f       	adc	r31, r31
    17b8:	bb 1f       	adc	r27, r27
    17ba:	66 1f       	adc	r22, r22
    17bc:	77 1f       	adc	r23, r23
    17be:	88 1f       	adc	r24, r24
    17c0:	91 50       	subi	r25, 0x01	; 1
    17c2:	50 40       	sbci	r21, 0x00	; 0
    17c4:	a9 f7       	brne	.-22     	; 0x17b0 <__mulsf3_pse+0x64>
    17c6:	9e 3f       	cpi	r25, 0xFE	; 254
    17c8:	51 05       	cpc	r21, r1
    17ca:	80 f0       	brcs	.+32     	; 0x17ec <__mulsf3_pse+0xa0>
    17cc:	0c 94 96 12 	jmp	0x252c	; 0x252c <__fp_inf>
    17d0:	0c 94 89 12 	jmp	0x2512	; 0x2512 <__fp_szero>
    17d4:	5f 3f       	cpi	r21, 0xFF	; 255
    17d6:	e4 f3       	brlt	.-8      	; 0x17d0 <__mulsf3_pse+0x84>
    17d8:	98 3e       	cpi	r25, 0xE8	; 232
    17da:	d4 f3       	brlt	.-12     	; 0x17d0 <__mulsf3_pse+0x84>
    17dc:	86 95       	lsr	r24
    17de:	77 95       	ror	r23
    17e0:	67 95       	ror	r22
    17e2:	b7 95       	ror	r27
    17e4:	f7 95       	ror	r31
    17e6:	e7 95       	ror	r30
    17e8:	9f 5f       	subi	r25, 0xFF	; 255
    17ea:	c1 f7       	brne	.-16     	; 0x17dc <__mulsf3_pse+0x90>
    17ec:	fe 2b       	or	r31, r30
    17ee:	88 0f       	add	r24, r24
    17f0:	91 1d       	adc	r25, r1
    17f2:	96 95       	lsr	r25
    17f4:	87 95       	ror	r24
    17f6:	97 f9       	bld	r25, 7
    17f8:	08 95       	ret

Disassembly of section .text.avrlibc:

00000282 <vfprintf>:
 282:	a4 e1       	ldi	r26, 0x14	; 20
 284:	b0 e0       	ldi	r27, 0x00	; 0
 286:	e7 e4       	ldi	r30, 0x47	; 71
 288:	f1 e0       	ldi	r31, 0x01	; 1
 28a:	0c 94 0a 11 	jmp	0x2214	; 0x2214 <__prologue_saves__>
 28e:	6c 01       	movw	r12, r24
 290:	1a 01       	movw	r2, r20
 292:	46 2e       	mov	r4, r22
 294:	59 01       	movw	r10, r18
 296:	fc 01       	movw	r30, r24
 298:	10 86       	std	Z+8, r1	; 0x08
 29a:	17 82       	std	Z+7, r1	; 0x07
 29c:	84 81       	ldd	r24, Z+4	; 0x04
 29e:	81 ff       	sbrs	r24, 1
 2a0:	62 c3       	rjmp	.+1732   	; 0x966 <__stack+0x67>
 2a2:	ce 01       	movw	r24, r28
 2a4:	01 96       	adiw	r24, 0x01	; 1
 2a6:	9d 87       	std	Y+13, r25	; 0x0d
 2a8:	8c 87       	std	Y+12, r24	; 0x0c
 2aa:	a0 e8       	ldi	r26, 0x80	; 128
 2ac:	8a 8b       	std	Y+18, r24	; 0x12
 2ae:	9b 8b       	std	Y+19, r25	; 0x13
 2b0:	ac 8b       	std	Y+20, r26	; 0x14
 2b2:	f1 01       	movw	r30, r2
 2b4:	84 91       	lpm	r24, Z
 2b6:	47 fc       	sbrc	r4, 7
 2b8:	80 81       	ld	r24, Z
 2ba:	88 23       	and	r24, r24
 2bc:	09 f4       	brne	.+2      	; 0x2c0 <vfprintf+0x3e>
 2be:	4f c3       	rjmp	.+1694   	; 0x95e <__stack+0x5f>
 2c0:	44 2d       	mov	r20, r4
 2c2:	91 01       	movw	r18, r2
 2c4:	2f 5f       	subi	r18, 0xFF	; 255
 2c6:	3f 4f       	sbci	r19, 0xFF	; 255
 2c8:	4f 4f       	sbci	r20, 0xFF	; 255
 2ca:	85 32       	cpi	r24, 0x25	; 37
 2cc:	19 f0       	breq	.+6      	; 0x2d4 <vfprintf+0x52>
 2ce:	19 01       	movw	r2, r18
 2d0:	44 2e       	mov	r4, r20
 2d2:	0a c0       	rjmp	.+20     	; 0x2e8 <vfprintf+0x66>
 2d4:	f9 01       	movw	r30, r18
 2d6:	84 91       	lpm	r24, Z
 2d8:	47 fd       	sbrc	r20, 7
 2da:	80 81       	ld	r24, Z
 2dc:	92 e0       	ldi	r25, 0x02	; 2
 2de:	29 0e       	add	r2, r25
 2e0:	31 1c       	adc	r3, r1
 2e2:	41 1c       	adc	r4, r1
 2e4:	85 32       	cpi	r24, 0x25	; 37
 2e6:	49 f4       	brne	.+18     	; 0x2fa <vfprintf+0x78>
 2e8:	b6 01       	movw	r22, r12
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 2f0:	bf 86       	std	Y+15, r11	; 0x0f
 2f2:	ae 86       	std	Y+14, r10	; 0x0e
 2f4:	ae 84       	ldd	r10, Y+14	; 0x0e
 2f6:	bf 84       	ldd	r11, Y+15	; 0x0f
 2f8:	dc cf       	rjmp	.-72     	; 0x2b2 <vfprintf+0x30>
 2fa:	10 e0       	ldi	r17, 0x00	; 0
 2fc:	f1 2c       	mov	r15, r1
 2fe:	00 e0       	ldi	r16, 0x00	; 0
 300:	00 32       	cpi	r16, 0x20	; 32
 302:	a0 f4       	brcc	.+40     	; 0x32c <vfprintf+0xaa>
 304:	8b 32       	cpi	r24, 0x2B	; 43
 306:	69 f0       	breq	.+26     	; 0x322 <vfprintf+0xa0>
 308:	30 f4       	brcc	.+12     	; 0x316 <vfprintf+0x94>
 30a:	80 32       	cpi	r24, 0x20	; 32
 30c:	59 f0       	breq	.+22     	; 0x324 <vfprintf+0xa2>
 30e:	83 32       	cpi	r24, 0x23	; 35
 310:	69 f4       	brne	.+26     	; 0x32c <vfprintf+0xaa>
 312:	00 61       	ori	r16, 0x10	; 16
 314:	2c c0       	rjmp	.+88     	; 0x36e <vfprintf+0xec>
 316:	8d 32       	cpi	r24, 0x2D	; 45
 318:	39 f0       	breq	.+14     	; 0x328 <vfprintf+0xa6>
 31a:	80 33       	cpi	r24, 0x30	; 48
 31c:	39 f4       	brne	.+14     	; 0x32c <vfprintf+0xaa>
 31e:	01 60       	ori	r16, 0x01	; 1
 320:	26 c0       	rjmp	.+76     	; 0x36e <vfprintf+0xec>
 322:	02 60       	ori	r16, 0x02	; 2
 324:	04 60       	ori	r16, 0x04	; 4
 326:	23 c0       	rjmp	.+70     	; 0x36e <vfprintf+0xec>
 328:	08 60       	ori	r16, 0x08	; 8
 32a:	21 c0       	rjmp	.+66     	; 0x36e <vfprintf+0xec>
 32c:	07 fd       	sbrc	r16, 7
 32e:	29 c0       	rjmp	.+82     	; 0x382 <vfprintf+0x100>
 330:	90 ed       	ldi	r25, 0xD0	; 208
 332:	98 0f       	add	r25, r24
 334:	9a 30       	cpi	r25, 0x0A	; 10
 336:	78 f4       	brcc	.+30     	; 0x356 <vfprintf+0xd4>
 338:	06 ff       	sbrs	r16, 6
 33a:	06 c0       	rjmp	.+12     	; 0x348 <vfprintf+0xc6>
 33c:	aa e0       	ldi	r26, 0x0A	; 10
 33e:	1a 9f       	mul	r17, r26
 340:	90 0d       	add	r25, r0
 342:	11 24       	eor	r1, r1
 344:	19 2f       	mov	r17, r25
 346:	13 c0       	rjmp	.+38     	; 0x36e <vfprintf+0xec>
 348:	ea e0       	ldi	r30, 0x0A	; 10
 34a:	fe 9e       	mul	r15, r30
 34c:	90 0d       	add	r25, r0
 34e:	11 24       	eor	r1, r1
 350:	f9 2e       	mov	r15, r25
 352:	00 62       	ori	r16, 0x20	; 32
 354:	0c c0       	rjmp	.+24     	; 0x36e <vfprintf+0xec>
 356:	8e 32       	cpi	r24, 0x2E	; 46
 358:	21 f4       	brne	.+8      	; 0x362 <vfprintf+0xe0>
 35a:	06 fd       	sbrc	r16, 6
 35c:	00 c3       	rjmp	.+1536   	; 0x95e <__stack+0x5f>
 35e:	00 64       	ori	r16, 0x40	; 64
 360:	06 c0       	rjmp	.+12     	; 0x36e <vfprintf+0xec>
 362:	8c 36       	cpi	r24, 0x6C	; 108
 364:	11 f4       	brne	.+4      	; 0x36a <vfprintf+0xe8>
 366:	00 68       	ori	r16, 0x80	; 128
 368:	02 c0       	rjmp	.+4      	; 0x36e <vfprintf+0xec>
 36a:	88 36       	cpi	r24, 0x68	; 104
 36c:	51 f4       	brne	.+20     	; 0x382 <vfprintf+0x100>
 36e:	f1 01       	movw	r30, r2
 370:	84 91       	lpm	r24, Z
 372:	47 fc       	sbrc	r4, 7
 374:	80 81       	ld	r24, Z
 376:	ff ef       	ldi	r31, 0xFF	; 255
 378:	2f 1a       	sub	r2, r31
 37a:	3f 0a       	sbc	r3, r31
 37c:	4f 0a       	sbc	r4, r31
 37e:	81 11       	cpse	r24, r1
 380:	bf cf       	rjmp	.-130    	; 0x300 <vfprintf+0x7e>
 382:	9b eb       	ldi	r25, 0xBB	; 187
 384:	98 0f       	add	r25, r24
 386:	93 30       	cpi	r25, 0x03	; 3
 388:	18 f4       	brcc	.+6      	; 0x390 <vfprintf+0x10e>
 38a:	00 61       	ori	r16, 0x10	; 16
 38c:	80 5e       	subi	r24, 0xE0	; 224
 38e:	06 c0       	rjmp	.+12     	; 0x39c <vfprintf+0x11a>
 390:	9b e9       	ldi	r25, 0x9B	; 155
 392:	98 0f       	add	r25, r24
 394:	93 30       	cpi	r25, 0x03	; 3
 396:	08 f0       	brcs	.+2      	; 0x39a <vfprintf+0x118>
 398:	66 c1       	rjmp	.+716    	; 0x666 <__EEPROM_REGION_LENGTH__+0x266>
 39a:	0f 7e       	andi	r16, 0xEF	; 239
 39c:	06 ff       	sbrs	r16, 6
 39e:	16 e0       	ldi	r17, 0x06	; 6
 3a0:	0f 73       	andi	r16, 0x3F	; 63
 3a2:	70 2e       	mov	r7, r16
 3a4:	85 36       	cpi	r24, 0x65	; 101
 3a6:	21 f4       	brne	.+8      	; 0x3b0 <vfprintf+0x12e>
 3a8:	20 2f       	mov	r18, r16
 3aa:	20 64       	ori	r18, 0x40	; 64
 3ac:	72 2e       	mov	r7, r18
 3ae:	08 c0       	rjmp	.+16     	; 0x3c0 <vfprintf+0x13e>
 3b0:	86 36       	cpi	r24, 0x66	; 102
 3b2:	21 f4       	brne	.+8      	; 0x3bc <vfprintf+0x13a>
 3b4:	80 2f       	mov	r24, r16
 3b6:	80 68       	ori	r24, 0x80	; 128
 3b8:	78 2e       	mov	r7, r24
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <vfprintf+0x13e>
 3bc:	11 11       	cpse	r17, r1
 3be:	11 50       	subi	r17, 0x01	; 1
 3c0:	77 fe       	sbrs	r7, 7
 3c2:	07 c0       	rjmp	.+14     	; 0x3d2 <vfprintf+0x150>
 3c4:	1c 33       	cpi	r17, 0x3C	; 60
 3c6:	50 f4       	brcc	.+20     	; 0x3dc <vfprintf+0x15a>
 3c8:	ee 24       	eor	r14, r14
 3ca:	e3 94       	inc	r14
 3cc:	e1 0e       	add	r14, r17
 3ce:	27 e0       	ldi	r18, 0x07	; 7
 3d0:	0b c0       	rjmp	.+22     	; 0x3e8 <vfprintf+0x166>
 3d2:	18 30       	cpi	r17, 0x08	; 8
 3d4:	38 f0       	brcs	.+14     	; 0x3e4 <vfprintf+0x162>
 3d6:	27 e0       	ldi	r18, 0x07	; 7
 3d8:	17 e0       	ldi	r17, 0x07	; 7
 3da:	05 c0       	rjmp	.+10     	; 0x3e6 <vfprintf+0x164>
 3dc:	27 e0       	ldi	r18, 0x07	; 7
 3de:	6c e3       	ldi	r22, 0x3C	; 60
 3e0:	e6 2e       	mov	r14, r22
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <vfprintf+0x166>
 3e4:	21 2f       	mov	r18, r17
 3e6:	e1 2c       	mov	r14, r1
 3e8:	f5 01       	movw	r30, r10
 3ea:	34 96       	adiw	r30, 0x04	; 4
 3ec:	ff 87       	std	Y+15, r31	; 0x0f
 3ee:	ee 87       	std	Y+14, r30	; 0x0e
 3f0:	f5 01       	movw	r30, r10
 3f2:	60 81       	ld	r22, Z
 3f4:	71 81       	ldd	r23, Z+1	; 0x01
 3f6:	82 81       	ldd	r24, Z+2	; 0x02
 3f8:	93 81       	ldd	r25, Z+3	; 0x03
 3fa:	0e 2d       	mov	r16, r14
 3fc:	ae 01       	movw	r20, r28
 3fe:	4f 5f       	subi	r20, 0xFF	; 255
 400:	5f 4f       	sbci	r21, 0xFF	; 255
 402:	0e 94 4c 0a 	call	0x1498	; 0x1498 <__ftoa_engine>
 406:	5c 01       	movw	r10, r24
 408:	59 80       	ldd	r5, Y+1	; 0x01
 40a:	50 fe       	sbrs	r5, 0
 40c:	02 c0       	rjmp	.+4      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 40e:	53 fe       	sbrs	r5, 3
 410:	06 c0       	rjmp	.+12     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 412:	71 fc       	sbrc	r7, 1
 414:	06 c0       	rjmp	.+12     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 416:	72 fe       	sbrs	r7, 2
 418:	06 c0       	rjmp	.+12     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 41a:	00 e2       	ldi	r16, 0x20	; 32
 41c:	05 c0       	rjmp	.+10     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 41e:	0d e2       	ldi	r16, 0x2D	; 45
 420:	03 c0       	rjmp	.+6      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 422:	0b e2       	ldi	r16, 0x2B	; 43
 424:	01 c0       	rjmp	.+2      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 426:	00 e0       	ldi	r16, 0x00	; 0
 428:	85 2d       	mov	r24, r5
 42a:	8c 70       	andi	r24, 0x0C	; 12
 42c:	19 f0       	breq	.+6      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 42e:	01 11       	cpse	r16, r1
 430:	73 c2       	rjmp	.+1254   	; 0x918 <__stack+0x19>
 432:	be c2       	rjmp	.+1404   	; 0x9b0 <__stack+0xb1>
 434:	77 fe       	sbrs	r7, 7
 436:	0f c0       	rjmp	.+30     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 438:	ea 0c       	add	r14, r10
 43a:	54 fe       	sbrs	r5, 4
 43c:	04 c0       	rjmp	.+8      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 43e:	8a 81       	ldd	r24, Y+2	; 0x02
 440:	81 33       	cpi	r24, 0x31	; 49
 442:	09 f4       	brne	.+2      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 444:	ea 94       	dec	r14
 446:	1e 14       	cp	r1, r14
 448:	74 f5       	brge	.+92     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 44a:	28 e0       	ldi	r18, 0x08	; 8
 44c:	2e 15       	cp	r18, r14
 44e:	78 f5       	brcc	.+94     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 450:	38 e0       	ldi	r19, 0x08	; 8
 452:	e3 2e       	mov	r14, r19
 454:	2c c0       	rjmp	.+88     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 456:	76 fc       	sbrc	r7, 6
 458:	2a c0       	rjmp	.+84     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 45a:	81 2f       	mov	r24, r17
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	8a 15       	cp	r24, r10
 460:	9b 05       	cpc	r25, r11
 462:	9c f0       	brlt	.+38     	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 464:	8c ef       	ldi	r24, 0xFC	; 252
 466:	a8 16       	cp	r10, r24
 468:	8f ef       	ldi	r24, 0xFF	; 255
 46a:	b8 06       	cpc	r11, r24
 46c:	74 f0       	brlt	.+28     	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 46e:	97 2d       	mov	r25, r7
 470:	90 68       	ori	r25, 0x80	; 128
 472:	79 2e       	mov	r7, r25
 474:	0a c0       	rjmp	.+20     	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 476:	e2 e0       	ldi	r30, 0x02	; 2
 478:	f0 e0       	ldi	r31, 0x00	; 0
 47a:	ec 0f       	add	r30, r28
 47c:	fd 1f       	adc	r31, r29
 47e:	e1 0f       	add	r30, r17
 480:	f1 1d       	adc	r31, r1
 482:	80 81       	ld	r24, Z
 484:	80 33       	cpi	r24, 0x30	; 48
 486:	19 f4       	brne	.+6      	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 488:	11 50       	subi	r17, 0x01	; 1
 48a:	11 11       	cpse	r17, r1
 48c:	f4 cf       	rjmp	.-24     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 48e:	77 fe       	sbrs	r7, 7
 490:	0e c0       	rjmp	.+28     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 492:	ee 24       	eor	r14, r14
 494:	e3 94       	inc	r14
 496:	e1 0e       	add	r14, r17
 498:	81 2f       	mov	r24, r17
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	a8 16       	cp	r10, r24
 49e:	b9 06       	cpc	r11, r25
 4a0:	2c f4       	brge	.+10     	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 4a2:	1a 19       	sub	r17, r10
 4a4:	04 c0       	rjmp	.+8      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4a6:	ee 24       	eor	r14, r14
 4a8:	e3 94       	inc	r14
 4aa:	01 c0       	rjmp	.+2      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4ac:	10 e0       	ldi	r17, 0x00	; 0
 4ae:	77 fe       	sbrs	r7, 7
 4b0:	06 c0       	rjmp	.+12     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4b2:	1a 14       	cp	r1, r10
 4b4:	1b 04       	cpc	r1, r11
 4b6:	34 f4       	brge	.+12     	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 4b8:	c5 01       	movw	r24, r10
 4ba:	01 96       	adiw	r24, 0x01	; 1
 4bc:	05 c0       	rjmp	.+10     	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 4be:	85 e0       	ldi	r24, 0x05	; 5
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	01 11       	cpse	r16, r1
 4ca:	01 96       	adiw	r24, 0x01	; 1
 4cc:	11 23       	and	r17, r17
 4ce:	31 f0       	breq	.+12     	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
 4d0:	21 2f       	mov	r18, r17
 4d2:	30 e0       	ldi	r19, 0x00	; 0
 4d4:	2f 5f       	subi	r18, 0xFF	; 255
 4d6:	3f 4f       	sbci	r19, 0xFF	; 255
 4d8:	82 0f       	add	r24, r18
 4da:	93 1f       	adc	r25, r19
 4dc:	2f 2d       	mov	r18, r15
 4de:	30 e0       	ldi	r19, 0x00	; 0
 4e0:	82 17       	cp	r24, r18
 4e2:	93 07       	cpc	r25, r19
 4e4:	14 f4       	brge	.+4      	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
 4e6:	f8 1a       	sub	r15, r24
 4e8:	01 c0       	rjmp	.+2      	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4ea:	f1 2c       	mov	r15, r1
 4ec:	87 2d       	mov	r24, r7
 4ee:	89 70       	andi	r24, 0x09	; 9
 4f0:	49 f4       	brne	.+18     	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
 4f2:	ff 20       	and	r15, r15
 4f4:	39 f0       	breq	.+14     	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
 4f6:	b6 01       	movw	r22, r12
 4f8:	80 e2       	ldi	r24, 0x20	; 32
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 500:	fa 94       	dec	r15
 502:	f7 cf       	rjmp	.-18     	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 504:	00 23       	and	r16, r16
 506:	29 f0       	breq	.+10     	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
 508:	b6 01       	movw	r22, r12
 50a:	80 2f       	mov	r24, r16
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 512:	73 fc       	sbrc	r7, 3
 514:	09 c0       	rjmp	.+18     	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 516:	ff 20       	and	r15, r15
 518:	39 f0       	breq	.+14     	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 51a:	b6 01       	movw	r22, r12
 51c:	80 e3       	ldi	r24, 0x30	; 48
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 524:	fa 94       	dec	r15
 526:	f7 cf       	rjmp	.-18     	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
 528:	77 fe       	sbrs	r7, 7
 52a:	49 c0       	rjmp	.+146    	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 52c:	35 01       	movw	r6, r10
 52e:	b7 fe       	sbrs	r11, 7
 530:	02 c0       	rjmp	.+4      	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
 532:	61 2c       	mov	r6, r1
 534:	71 2c       	mov	r7, r1
 536:	c5 01       	movw	r24, r10
 538:	86 19       	sub	r24, r6
 53a:	97 09       	sbc	r25, r7
 53c:	88 24       	eor	r8, r8
 53e:	83 94       	inc	r8
 540:	91 2c       	mov	r9, r1
 542:	8c 0e       	add	r8, r28
 544:	9d 1e       	adc	r9, r29
 546:	88 0e       	add	r8, r24
 548:	99 1e       	adc	r9, r25
 54a:	f5 01       	movw	r30, r10
 54c:	ee 19       	sub	r30, r14
 54e:	f1 09       	sbc	r31, r1
 550:	f9 8b       	std	Y+17, r31	; 0x11
 552:	e8 8b       	std	Y+16, r30	; 0x10
 554:	01 2f       	mov	r16, r17
 556:	10 e0       	ldi	r17, 0x00	; 0
 558:	11 95       	neg	r17
 55a:	01 95       	neg	r16
 55c:	11 09       	sbc	r17, r1
 55e:	ff ef       	ldi	r31, 0xFF	; 255
 560:	6f 16       	cp	r6, r31
 562:	7f 06       	cpc	r7, r31
 564:	29 f4       	brne	.+10     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 566:	b6 01       	movw	r22, r12
 568:	8e e2       	ldi	r24, 0x2E	; 46
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 570:	a6 14       	cp	r10, r6
 572:	b7 04       	cpc	r11, r7
 574:	44 f0       	brlt	.+16     	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
 576:	88 89       	ldd	r24, Y+16	; 0x10
 578:	99 89       	ldd	r25, Y+17	; 0x11
 57a:	86 15       	cp	r24, r6
 57c:	97 05       	cpc	r25, r7
 57e:	1c f4       	brge	.+6      	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
 580:	f4 01       	movw	r30, r8
 582:	81 81       	ldd	r24, Z+1	; 0x01
 584:	01 c0       	rjmp	.+2      	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
 586:	80 e3       	ldi	r24, 0x30	; 48
 588:	f1 e0       	ldi	r31, 0x01	; 1
 58a:	6f 1a       	sub	r6, r31
 58c:	71 08       	sbc	r7, r1
 58e:	2f ef       	ldi	r18, 0xFF	; 255
 590:	82 1a       	sub	r8, r18
 592:	92 0a       	sbc	r9, r18
 594:	60 16       	cp	r6, r16
 596:	71 06       	cpc	r7, r17
 598:	2c f0       	brlt	.+10     	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
 59a:	b6 01       	movw	r22, r12
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 5a2:	dd cf       	rjmp	.-70     	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 5a4:	a6 14       	cp	r10, r6
 5a6:	b7 04       	cpc	r11, r7
 5a8:	39 f4       	brne	.+14     	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
 5aa:	9a 81       	ldd	r25, Y+2	; 0x02
 5ac:	96 33       	cpi	r25, 0x36	; 54
 5ae:	18 f4       	brcc	.+6      	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
 5b0:	95 33       	cpi	r25, 0x35	; 53
 5b2:	11 f4       	brne	.+4      	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
 5b4:	54 fe       	sbrs	r5, 4
 5b6:	81 e3       	ldi	r24, 0x31	; 49
 5b8:	b6 01       	movw	r22, r12
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	51 c0       	rjmp	.+162    	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 5be:	8a 81       	ldd	r24, Y+2	; 0x02
 5c0:	81 33       	cpi	r24, 0x31	; 49
 5c2:	19 f0       	breq	.+6      	; 0x5ca <__EEPROM_REGION_LENGTH__+0x1ca>
 5c4:	95 2d       	mov	r25, r5
 5c6:	9f 7e       	andi	r25, 0xEF	; 239
 5c8:	59 2e       	mov	r5, r25
 5ca:	b6 01       	movw	r22, r12
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 5d2:	11 11       	cpse	r17, r1
 5d4:	05 c0       	rjmp	.+10     	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
 5d6:	74 fc       	sbrc	r7, 4
 5d8:	1c c0       	rjmp	.+56     	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 5da:	85 e6       	ldi	r24, 0x65	; 101
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	1b c0       	rjmp	.+54     	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
 5e0:	b6 01       	movw	r22, r12
 5e2:	8e e2       	ldi	r24, 0x2E	; 46
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 5ea:	02 e0       	ldi	r16, 0x02	; 2
 5ec:	01 0f       	add	r16, r17
 5ee:	82 e0       	ldi	r24, 0x02	; 2
 5f0:	11 e0       	ldi	r17, 0x01	; 1
 5f2:	18 0f       	add	r17, r24
 5f4:	e1 e0       	ldi	r30, 0x01	; 1
 5f6:	f0 e0       	ldi	r31, 0x00	; 0
 5f8:	ec 0f       	add	r30, r28
 5fa:	fd 1f       	adc	r31, r29
 5fc:	e8 0f       	add	r30, r24
 5fe:	f1 1d       	adc	r31, r1
 600:	80 81       	ld	r24, Z
 602:	b6 01       	movw	r22, r12
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 60a:	81 2f       	mov	r24, r17
 60c:	10 13       	cpse	r17, r16
 60e:	f0 cf       	rjmp	.-32     	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 610:	e2 cf       	rjmp	.-60     	; 0x5d6 <__EEPROM_REGION_LENGTH__+0x1d6>
 612:	85 e4       	ldi	r24, 0x45	; 69
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	b6 01       	movw	r22, r12
 618:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 61c:	b7 fc       	sbrc	r11, 7
 61e:	05 c0       	rjmp	.+10     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
 620:	a1 14       	cp	r10, r1
 622:	b1 04       	cpc	r11, r1
 624:	39 f4       	brne	.+14     	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
 626:	54 fe       	sbrs	r5, 4
 628:	05 c0       	rjmp	.+10     	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
 62a:	b1 94       	neg	r11
 62c:	a1 94       	neg	r10
 62e:	b1 08       	sbc	r11, r1
 630:	8d e2       	ldi	r24, 0x2D	; 45
 632:	01 c0       	rjmp	.+2      	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
 634:	8b e2       	ldi	r24, 0x2B	; 43
 636:	b6 01       	movw	r22, r12
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 63e:	80 e3       	ldi	r24, 0x30	; 48
 640:	ea e0       	ldi	r30, 0x0A	; 10
 642:	ae 16       	cp	r10, r30
 644:	b1 04       	cpc	r11, r1
 646:	2c f0       	brlt	.+10     	; 0x652 <__EEPROM_REGION_LENGTH__+0x252>
 648:	8f 5f       	subi	r24, 0xFF	; 255
 64a:	aa e0       	ldi	r26, 0x0A	; 10
 64c:	aa 1a       	sub	r10, r26
 64e:	b1 08       	sbc	r11, r1
 650:	f7 cf       	rjmp	.-18     	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
 652:	b6 01       	movw	r22, r12
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 65a:	b6 01       	movw	r22, r12
 65c:	c5 01       	movw	r24, r10
 65e:	c0 96       	adiw	r24, 0x30	; 48
 660:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 664:	72 c1       	rjmp	.+740    	; 0x94a <__stack+0x4b>
 666:	83 36       	cpi	r24, 0x63	; 99
 668:	31 f0       	breq	.+12     	; 0x676 <__EEPROM_REGION_LENGTH__+0x276>
 66a:	83 37       	cpi	r24, 0x73	; 115
 66c:	91 f0       	breq	.+36     	; 0x692 <__EEPROM_REGION_LENGTH__+0x292>
 66e:	83 35       	cpi	r24, 0x53	; 83
 670:	09 f0       	breq	.+2      	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
 672:	5d c0       	rjmp	.+186    	; 0x72e <__EEPROM_REGION_LENGTH__+0x32e>
 674:	24 c0       	rjmp	.+72     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 676:	c5 01       	movw	r24, r10
 678:	02 96       	adiw	r24, 0x02	; 2
 67a:	9f 87       	std	Y+15, r25	; 0x0f
 67c:	8e 87       	std	Y+14, r24	; 0x0e
 67e:	f5 01       	movw	r30, r10
 680:	80 81       	ld	r24, Z
 682:	89 83       	std	Y+1, r24	; 0x01
 684:	6a 88       	ldd	r6, Y+18	; 0x12
 686:	7b 88       	ldd	r7, Y+19	; 0x13
 688:	8c 88       	ldd	r8, Y+20	; 0x14
 68a:	aa 24       	eor	r10, r10
 68c:	a3 94       	inc	r10
 68e:	b1 2c       	mov	r11, r1
 690:	14 c0       	rjmp	.+40     	; 0x6ba <__EEPROM_REGION_LENGTH__+0x2ba>
 692:	c5 01       	movw	r24, r10
 694:	03 96       	adiw	r24, 0x03	; 3
 696:	9f 87       	std	Y+15, r25	; 0x0f
 698:	8e 87       	std	Y+14, r24	; 0x0e
 69a:	f5 01       	movw	r30, r10
 69c:	60 80       	ld	r6, Z
 69e:	71 80       	ldd	r7, Z+1	; 0x01
 6a0:	82 80       	ldd	r8, Z+2	; 0x02
 6a2:	06 ff       	sbrs	r16, 6
 6a4:	03 c0       	rjmp	.+6      	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 6a6:	41 2f       	mov	r20, r17
 6a8:	50 e0       	ldi	r21, 0x00	; 0
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <__EEPROM_REGION_LENGTH__+0x2b0>
 6ac:	4f ef       	ldi	r20, 0xFF	; 255
 6ae:	5f ef       	ldi	r21, 0xFF	; 255
 6b0:	88 2d       	mov	r24, r8
 6b2:	b3 01       	movw	r22, r6
 6b4:	0e 94 5d 11 	call	0x22ba	; 0x22ba <strnlen>
 6b8:	5c 01       	movw	r10, r24
 6ba:	0f 77       	andi	r16, 0x7F	; 127
 6bc:	15 c0       	rjmp	.+42     	; 0x6e8 <__EEPROM_REGION_LENGTH__+0x2e8>
 6be:	c5 01       	movw	r24, r10
 6c0:	03 96       	adiw	r24, 0x03	; 3
 6c2:	9f 87       	std	Y+15, r25	; 0x0f
 6c4:	8e 87       	std	Y+14, r24	; 0x0e
 6c6:	f5 01       	movw	r30, r10
 6c8:	60 80       	ld	r6, Z
 6ca:	71 80       	ldd	r7, Z+1	; 0x01
 6cc:	82 80       	ldd	r8, Z+2	; 0x02
 6ce:	06 ff       	sbrs	r16, 6
 6d0:	03 c0       	rjmp	.+6      	; 0x6d8 <__EEPROM_REGION_LENGTH__+0x2d8>
 6d2:	41 2f       	mov	r20, r17
 6d4:	50 e0       	ldi	r21, 0x00	; 0
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <__EEPROM_REGION_LENGTH__+0x2dc>
 6d8:	4f ef       	ldi	r20, 0xFF	; 255
 6da:	5f ef       	ldi	r21, 0xFF	; 255
 6dc:	88 2d       	mov	r24, r8
 6de:	b3 01       	movw	r22, r6
 6e0:	0e 94 5d 11 	call	0x22ba	; 0x22ba <strnlen>
 6e4:	5c 01       	movw	r10, r24
 6e6:	00 68       	ori	r16, 0x80	; 128
 6e8:	03 fd       	sbrc	r16, 3
 6ea:	1d c0       	rjmp	.+58     	; 0x726 <__EEPROM_REGION_LENGTH__+0x326>
 6ec:	8f 2d       	mov	r24, r15
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	a8 16       	cp	r10, r24
 6f2:	b9 06       	cpc	r11, r25
 6f4:	c0 f4       	brcc	.+48     	; 0x726 <__EEPROM_REGION_LENGTH__+0x326>
 6f6:	b6 01       	movw	r22, r12
 6f8:	80 e2       	ldi	r24, 0x20	; 32
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 700:	fa 94       	dec	r15
 702:	f4 cf       	rjmp	.-24     	; 0x6ec <__EEPROM_REGION_LENGTH__+0x2ec>
 704:	f3 01       	movw	r30, r6
 706:	84 91       	lpm	r24, Z
 708:	87 fc       	sbrc	r8, 7
 70a:	80 81       	ld	r24, Z
 70c:	ff ef       	ldi	r31, 0xFF	; 255
 70e:	6f 1a       	sub	r6, r31
 710:	7f 0a       	sbc	r7, r31
 712:	8f 0a       	sbc	r8, r31
 714:	b6 01       	movw	r22, r12
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 71c:	f1 10       	cpse	r15, r1
 71e:	fa 94       	dec	r15
 720:	21 e0       	ldi	r18, 0x01	; 1
 722:	a2 1a       	sub	r10, r18
 724:	b1 08       	sbc	r11, r1
 726:	a1 14       	cp	r10, r1
 728:	b1 04       	cpc	r11, r1
 72a:	61 f7       	brne	.-40     	; 0x704 <__EEPROM_REGION_LENGTH__+0x304>
 72c:	0e c1       	rjmp	.+540    	; 0x94a <__stack+0x4b>
 72e:	84 36       	cpi	r24, 0x64	; 100
 730:	11 f0       	breq	.+4      	; 0x736 <__EEPROM_REGION_LENGTH__+0x336>
 732:	89 36       	cpi	r24, 0x69	; 105
 734:	79 f5       	brne	.+94     	; 0x794 <__EEPROM_REGION_LENGTH__+0x394>
 736:	c5 01       	movw	r24, r10
 738:	07 ff       	sbrs	r16, 7
 73a:	09 c0       	rjmp	.+18     	; 0x74e <__EEPROM_REGION_LENGTH__+0x34e>
 73c:	04 96       	adiw	r24, 0x04	; 4
 73e:	9f 87       	std	Y+15, r25	; 0x0f
 740:	8e 87       	std	Y+14, r24	; 0x0e
 742:	f5 01       	movw	r30, r10
 744:	60 81       	ld	r22, Z
 746:	71 81       	ldd	r23, Z+1	; 0x01
 748:	82 81       	ldd	r24, Z+2	; 0x02
 74a:	93 81       	ldd	r25, Z+3	; 0x03
 74c:	0a c0       	rjmp	.+20     	; 0x762 <__EEPROM_REGION_LENGTH__+0x362>
 74e:	02 96       	adiw	r24, 0x02	; 2
 750:	9f 87       	std	Y+15, r25	; 0x0f
 752:	8e 87       	std	Y+14, r24	; 0x0e
 754:	f5 01       	movw	r30, r10
 756:	60 81       	ld	r22, Z
 758:	71 81       	ldd	r23, Z+1	; 0x01
 75a:	07 2e       	mov	r0, r23
 75c:	00 0c       	add	r0, r0
 75e:	88 0b       	sbc	r24, r24
 760:	99 0b       	sbc	r25, r25
 762:	0f 76       	andi	r16, 0x6F	; 111
 764:	e0 2e       	mov	r14, r16
 766:	97 ff       	sbrs	r25, 7
 768:	0a c0       	rjmp	.+20     	; 0x77e <__EEPROM_REGION_LENGTH__+0x37e>
 76a:	90 95       	com	r25
 76c:	80 95       	com	r24
 76e:	70 95       	com	r23
 770:	61 95       	neg	r22
 772:	7f 4f       	sbci	r23, 0xFF	; 255
 774:	8f 4f       	sbci	r24, 0xFF	; 255
 776:	9f 4f       	sbci	r25, 0xFF	; 255
 778:	f0 2f       	mov	r31, r16
 77a:	f0 68       	ori	r31, 0x80	; 128
 77c:	ef 2e       	mov	r14, r31
 77e:	2a e0       	ldi	r18, 0x0A	; 10
 780:	30 e0       	ldi	r19, 0x00	; 0
 782:	ae 01       	movw	r20, r28
 784:	4f 5f       	subi	r20, 0xFF	; 255
 786:	5f 4f       	sbci	r21, 0xFF	; 255
 788:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <__ultoa_invert>
 78c:	a8 2e       	mov	r10, r24
 78e:	2c 85       	ldd	r18, Y+12	; 0x0c
 790:	a2 1a       	sub	r10, r18
 792:	4b c0       	rjmp	.+150    	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 794:	85 37       	cpi	r24, 0x75	; 117
 796:	29 f4       	brne	.+10     	; 0x7a2 <__EEPROM_REGION_LENGTH__+0x3a2>
 798:	0f 7e       	andi	r16, 0xEF	; 239
 79a:	e0 2e       	mov	r14, r16
 79c:	2a e0       	ldi	r18, 0x0A	; 10
 79e:	30 e0       	ldi	r19, 0x00	; 0
 7a0:	25 c0       	rjmp	.+74     	; 0x7ec <__EEPROM_REGION_LENGTH__+0x3ec>
 7a2:	90 2f       	mov	r25, r16
 7a4:	99 7f       	andi	r25, 0xF9	; 249
 7a6:	e9 2e       	mov	r14, r25
 7a8:	8f 36       	cpi	r24, 0x6F	; 111
 7aa:	c1 f0       	breq	.+48     	; 0x7dc <__EEPROM_REGION_LENGTH__+0x3dc>
 7ac:	18 f4       	brcc	.+6      	; 0x7b4 <__EEPROM_REGION_LENGTH__+0x3b4>
 7ae:	88 35       	cpi	r24, 0x58	; 88
 7b0:	79 f0       	breq	.+30     	; 0x7d0 <__EEPROM_REGION_LENGTH__+0x3d0>
 7b2:	d5 c0       	rjmp	.+426    	; 0x95e <__stack+0x5f>
 7b4:	80 37       	cpi	r24, 0x70	; 112
 7b6:	19 f0       	breq	.+6      	; 0x7be <__EEPROM_REGION_LENGTH__+0x3be>
 7b8:	88 37       	cpi	r24, 0x78	; 120
 7ba:	21 f0       	breq	.+8      	; 0x7c4 <__EEPROM_REGION_LENGTH__+0x3c4>
 7bc:	d0 c0       	rjmp	.+416    	; 0x95e <__stack+0x5f>
 7be:	a9 2f       	mov	r26, r25
 7c0:	a0 61       	ori	r26, 0x10	; 16
 7c2:	ea 2e       	mov	r14, r26
 7c4:	e4 fe       	sbrs	r14, 4
 7c6:	0d c0       	rjmp	.+26     	; 0x7e2 <__EEPROM_REGION_LENGTH__+0x3e2>
 7c8:	ee 2d       	mov	r30, r14
 7ca:	e4 60       	ori	r30, 0x04	; 4
 7cc:	ee 2e       	mov	r14, r30
 7ce:	09 c0       	rjmp	.+18     	; 0x7e2 <__EEPROM_REGION_LENGTH__+0x3e2>
 7d0:	04 ff       	sbrs	r16, 4
 7d2:	0a c0       	rjmp	.+20     	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
 7d4:	f9 2f       	mov	r31, r25
 7d6:	f6 60       	ori	r31, 0x06	; 6
 7d8:	ef 2e       	mov	r14, r31
 7da:	06 c0       	rjmp	.+12     	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
 7dc:	28 e0       	ldi	r18, 0x08	; 8
 7de:	30 e0       	ldi	r19, 0x00	; 0
 7e0:	05 c0       	rjmp	.+10     	; 0x7ec <__EEPROM_REGION_LENGTH__+0x3ec>
 7e2:	20 e1       	ldi	r18, 0x10	; 16
 7e4:	30 e0       	ldi	r19, 0x00	; 0
 7e6:	02 c0       	rjmp	.+4      	; 0x7ec <__EEPROM_REGION_LENGTH__+0x3ec>
 7e8:	20 e1       	ldi	r18, 0x10	; 16
 7ea:	32 e0       	ldi	r19, 0x02	; 2
 7ec:	c5 01       	movw	r24, r10
 7ee:	e7 fe       	sbrs	r14, 7
 7f0:	09 c0       	rjmp	.+18     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7f2:	04 96       	adiw	r24, 0x04	; 4
 7f4:	9f 87       	std	Y+15, r25	; 0x0f
 7f6:	8e 87       	std	Y+14, r24	; 0x0e
 7f8:	f5 01       	movw	r30, r10
 7fa:	60 81       	ld	r22, Z
 7fc:	71 81       	ldd	r23, Z+1	; 0x01
 7fe:	82 81       	ldd	r24, Z+2	; 0x02
 800:	93 81       	ldd	r25, Z+3	; 0x03
 802:	08 c0       	rjmp	.+16     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 804:	02 96       	adiw	r24, 0x02	; 2
 806:	9f 87       	std	Y+15, r25	; 0x0f
 808:	8e 87       	std	Y+14, r24	; 0x0e
 80a:	f5 01       	movw	r30, r10
 80c:	60 81       	ld	r22, Z
 80e:	71 81       	ldd	r23, Z+1	; 0x01
 810:	80 e0       	ldi	r24, 0x00	; 0
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	ae 01       	movw	r20, r28
 816:	4f 5f       	subi	r20, 0xFF	; 255
 818:	5f 4f       	sbci	r21, 0xFF	; 255
 81a:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <__ultoa_invert>
 81e:	a8 2e       	mov	r10, r24
 820:	fc 85       	ldd	r31, Y+12	; 0x0c
 822:	af 1a       	sub	r10, r31
 824:	2e 2d       	mov	r18, r14
 826:	2f 77       	andi	r18, 0x7F	; 127
 828:	e2 2e       	mov	r14, r18
 82a:	e6 fe       	sbrs	r14, 6
 82c:	0b c0       	rjmp	.+22     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 82e:	0e 2d       	mov	r16, r14
 830:	0e 7f       	andi	r16, 0xFE	; 254
 832:	a1 16       	cp	r10, r17
 834:	50 f4       	brcc	.+20     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 836:	e4 fe       	sbrs	r14, 4
 838:	0a c0       	rjmp	.+20     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 83a:	e2 fc       	sbrc	r14, 2
 83c:	08 c0       	rjmp	.+16     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 83e:	0e 2d       	mov	r16, r14
 840:	0e 7e       	andi	r16, 0xEE	; 238
 842:	05 c0       	rjmp	.+10     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 844:	ba 2c       	mov	r11, r10
 846:	0e 2d       	mov	r16, r14
 848:	03 c0       	rjmp	.+6      	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 84a:	ba 2c       	mov	r11, r10
 84c:	01 c0       	rjmp	.+2      	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 84e:	b1 2e       	mov	r11, r17
 850:	04 ff       	sbrs	r16, 4
 852:	0d c0       	rjmp	.+26     	; 0x86e <__DATA_REGION_LENGTH__+0x6e>
 854:	fe 01       	movw	r30, r28
 856:	ea 0d       	add	r30, r10
 858:	f1 1d       	adc	r31, r1
 85a:	80 81       	ld	r24, Z
 85c:	80 33       	cpi	r24, 0x30	; 48
 85e:	11 f4       	brne	.+4      	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 860:	09 7e       	andi	r16, 0xE9	; 233
 862:	09 c0       	rjmp	.+18     	; 0x876 <__DATA_REGION_LENGTH__+0x76>
 864:	02 ff       	sbrs	r16, 2
 866:	06 c0       	rjmp	.+12     	; 0x874 <__DATA_REGION_LENGTH__+0x74>
 868:	b3 94       	inc	r11
 86a:	b3 94       	inc	r11
 86c:	04 c0       	rjmp	.+8      	; 0x876 <__DATA_REGION_LENGTH__+0x76>
 86e:	80 2f       	mov	r24, r16
 870:	86 78       	andi	r24, 0x86	; 134
 872:	09 f0       	breq	.+2      	; 0x876 <__DATA_REGION_LENGTH__+0x76>
 874:	b3 94       	inc	r11
 876:	03 fd       	sbrc	r16, 3
 878:	11 c0       	rjmp	.+34     	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
 87a:	00 ff       	sbrs	r16, 0
 87c:	06 c0       	rjmp	.+12     	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
 87e:	bf 14       	cp	r11, r15
 880:	88 f4       	brcc	.+34     	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
 882:	fa 0c       	add	r15, r10
 884:	1f 2d       	mov	r17, r15
 886:	1b 19       	sub	r17, r11
 888:	0e c0       	rjmp	.+28     	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 88a:	bf 14       	cp	r11, r15
 88c:	60 f4       	brcc	.+24     	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 88e:	b6 01       	movw	r22, r12
 890:	80 e2       	ldi	r24, 0x20	; 32
 892:	90 e0       	ldi	r25, 0x00	; 0
 894:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 898:	b3 94       	inc	r11
 89a:	f7 cf       	rjmp	.-18     	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
 89c:	bf 14       	cp	r11, r15
 89e:	18 f4       	brcc	.+6      	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 8a0:	fb 18       	sub	r15, r11
 8a2:	02 c0       	rjmp	.+4      	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
 8a4:	1a 2d       	mov	r17, r10
 8a6:	f1 2c       	mov	r15, r1
 8a8:	04 ff       	sbrs	r16, 4
 8aa:	10 c0       	rjmp	.+32     	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
 8ac:	b6 01       	movw	r22, r12
 8ae:	80 e3       	ldi	r24, 0x30	; 48
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 8b6:	02 ff       	sbrs	r16, 2
 8b8:	17 c0       	rjmp	.+46     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
 8ba:	01 fd       	sbrc	r16, 1
 8bc:	03 c0       	rjmp	.+6      	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
 8be:	88 e7       	ldi	r24, 0x78	; 120
 8c0:	90 e0       	ldi	r25, 0x00	; 0
 8c2:	02 c0       	rjmp	.+4      	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 8c4:	88 e5       	ldi	r24, 0x58	; 88
 8c6:	90 e0       	ldi	r25, 0x00	; 0
 8c8:	b6 01       	movw	r22, r12
 8ca:	0c c0       	rjmp	.+24     	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
 8cc:	80 2f       	mov	r24, r16
 8ce:	86 78       	andi	r24, 0x86	; 134
 8d0:	59 f0       	breq	.+22     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
 8d2:	01 ff       	sbrs	r16, 1
 8d4:	02 c0       	rjmp	.+4      	; 0x8da <__DATA_REGION_LENGTH__+0xda>
 8d6:	8b e2       	ldi	r24, 0x2B	; 43
 8d8:	01 c0       	rjmp	.+2      	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
 8da:	80 e2       	ldi	r24, 0x20	; 32
 8dc:	07 fd       	sbrc	r16, 7
 8de:	8d e2       	ldi	r24, 0x2D	; 45
 8e0:	b6 01       	movw	r22, r12
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 8e8:	a1 16       	cp	r10, r17
 8ea:	38 f4       	brcc	.+14     	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
 8ec:	b6 01       	movw	r22, r12
 8ee:	80 e3       	ldi	r24, 0x30	; 48
 8f0:	90 e0       	ldi	r25, 0x00	; 0
 8f2:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 8f6:	11 50       	subi	r17, 0x01	; 1
 8f8:	f7 cf       	rjmp	.-18     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
 8fa:	aa 94       	dec	r10
 8fc:	e1 e0       	ldi	r30, 0x01	; 1
 8fe:	f0 e0       	ldi	r31, 0x00	; 0
 900:	ec 0f       	add	r30, r28
 902:	fd 1f       	adc	r31, r29
 904:	ea 0d       	add	r30, r10
 906:	f1 1d       	adc	r31, r1
 908:	80 81       	ld	r24, Z
 90a:	b6 01       	movw	r22, r12
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 912:	a1 10       	cpse	r10, r1
 914:	f2 cf       	rjmp	.-28     	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
 916:	19 c0       	rjmp	.+50     	; 0x94a <__stack+0x4b>
 918:	f4 e0       	ldi	r31, 0x04	; 4
 91a:	ff 15       	cp	r31, r15
 91c:	80 f5       	brcc	.+96     	; 0x97e <__stack+0x7f>
 91e:	84 e0       	ldi	r24, 0x04	; 4
 920:	f8 1a       	sub	r15, r24
 922:	73 fe       	sbrs	r7, 3
 924:	23 c0       	rjmp	.+70     	; 0x96c <__stack+0x6d>
 926:	01 11       	cpse	r16, r1
 928:	2b c0       	rjmp	.+86     	; 0x980 <__stack+0x81>
 92a:	53 fe       	sbrs	r5, 3
 92c:	2f c0       	rjmp	.+94     	; 0x98c <__stack+0x8d>
 92e:	5d e7       	ldi	r21, 0x7D	; 125
 930:	85 2e       	mov	r8, r21
 932:	52 e0       	ldi	r21, 0x02	; 2
 934:	95 2e       	mov	r9, r21
 936:	50 e0       	ldi	r21, 0x00	; 0
 938:	a5 2e       	mov	r10, r21
 93a:	07 2d       	mov	r16, r7
 93c:	00 71       	andi	r16, 0x10	; 16
 93e:	f4 01       	movw	r30, r8
 940:	84 91       	lpm	r24, Z
 942:	a7 fc       	sbrc	r10, 7
 944:	80 81       	ld	r24, Z
 946:	81 11       	cpse	r24, r1
 948:	28 c0       	rjmp	.+80     	; 0x99a <__stack+0x9b>
 94a:	ff 20       	and	r15, r15
 94c:	09 f4       	brne	.+2      	; 0x950 <__stack+0x51>
 94e:	d2 cc       	rjmp	.-1628   	; 0x2f4 <vfprintf+0x72>
 950:	b6 01       	movw	r22, r12
 952:	80 e2       	ldi	r24, 0x20	; 32
 954:	90 e0       	ldi	r25, 0x00	; 0
 956:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 95a:	fa 94       	dec	r15
 95c:	f6 cf       	rjmp	.-20     	; 0x94a <__stack+0x4b>
 95e:	f6 01       	movw	r30, r12
 960:	87 81       	ldd	r24, Z+7	; 0x07
 962:	90 85       	ldd	r25, Z+8	; 0x08
 964:	2c c0       	rjmp	.+88     	; 0x9be <__stack+0xbf>
 966:	8f ef       	ldi	r24, 0xFF	; 255
 968:	9f ef       	ldi	r25, 0xFF	; 255
 96a:	29 c0       	rjmp	.+82     	; 0x9be <__stack+0xbf>
 96c:	b6 01       	movw	r22, r12
 96e:	80 e2       	ldi	r24, 0x20	; 32
 970:	90 e0       	ldi	r25, 0x00	; 0
 972:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 976:	fa 94       	dec	r15
 978:	f1 10       	cpse	r15, r1
 97a:	f8 cf       	rjmp	.-16     	; 0x96c <__stack+0x6d>
 97c:	d4 cf       	rjmp	.-88     	; 0x926 <__stack+0x27>
 97e:	f1 2c       	mov	r15, r1
 980:	b6 01       	movw	r22, r12
 982:	80 2f       	mov	r24, r16
 984:	90 e0       	ldi	r25, 0x00	; 0
 986:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 98a:	cf cf       	rjmp	.-98     	; 0x92a <__stack+0x2b>
 98c:	49 e7       	ldi	r20, 0x79	; 121
 98e:	84 2e       	mov	r8, r20
 990:	42 e0       	ldi	r20, 0x02	; 2
 992:	94 2e       	mov	r9, r20
 994:	40 e0       	ldi	r20, 0x00	; 0
 996:	a4 2e       	mov	r10, r20
 998:	d0 cf       	rjmp	.-96     	; 0x93a <__stack+0x3b>
 99a:	01 11       	cpse	r16, r1
 99c:	80 52       	subi	r24, 0x20	; 32
 99e:	b6 01       	movw	r22, r12
 9a0:	90 e0       	ldi	r25, 0x00	; 0
 9a2:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <fputc>
 9a6:	ff ef       	ldi	r31, 0xFF	; 255
 9a8:	8f 1a       	sub	r8, r31
 9aa:	9f 0a       	sbc	r9, r31
 9ac:	af 0a       	sbc	r10, r31
 9ae:	c7 cf       	rjmp	.-114    	; 0x93e <__stack+0x3f>
 9b0:	23 e0       	ldi	r18, 0x03	; 3
 9b2:	2f 15       	cp	r18, r15
 9b4:	10 f4       	brcc	.+4      	; 0x9ba <__stack+0xbb>
 9b6:	83 e0       	ldi	r24, 0x03	; 3
 9b8:	b3 cf       	rjmp	.-154    	; 0x920 <__stack+0x21>
 9ba:	f1 2c       	mov	r15, r1
 9bc:	b6 cf       	rjmp	.-148    	; 0x92a <__stack+0x2b>
 9be:	64 96       	adiw	r28, 0x14	; 20
 9c0:	e2 e1       	ldi	r30, 0x12	; 18
 9c2:	0c 94 42 11 	jmp	0x2284	; 0x2284 <__epilogue_restores__>

Disassembly of section .text.libgcc.prologue:

00002214 <__prologue_saves__>:
    2214:	2f 92       	push	r2
    2216:	3f 92       	push	r3
    2218:	4f 92       	push	r4
    221a:	5f 92       	push	r5
    221c:	6f 92       	push	r6
    221e:	7f 92       	push	r7
    2220:	8f 92       	push	r8
    2222:	9f 92       	push	r9
    2224:	af 92       	push	r10
    2226:	bf 92       	push	r11
    2228:	cf 92       	push	r12
    222a:	df 92       	push	r13
    222c:	ef 92       	push	r14
    222e:	ff 92       	push	r15
    2230:	0f 93       	push	r16
    2232:	1f 93       	push	r17
    2234:	cf 93       	push	r28
    2236:	df 93       	push	r29
    2238:	cd b7       	in	r28, 0x3d	; 61
    223a:	de b7       	in	r29, 0x3e	; 62
    223c:	ca 1b       	sub	r28, r26
    223e:	db 0b       	sbc	r29, r27
    2240:	0f b6       	in	r0, 0x3f	; 63
    2242:	f8 94       	cli
    2244:	de bf       	out	0x3e, r29	; 62
    2246:	0f be       	out	0x3f, r0	; 63
    2248:	cd bf       	out	0x3d, r28	; 61
    224a:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00002284 <__epilogue_restores__>:
    2284:	2a 88       	ldd	r2, Y+18	; 0x12
    2286:	39 88       	ldd	r3, Y+17	; 0x11
    2288:	48 88       	ldd	r4, Y+16	; 0x10
    228a:	5f 84       	ldd	r5, Y+15	; 0x0f
    228c:	6e 84       	ldd	r6, Y+14	; 0x0e
    228e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2290:	8c 84       	ldd	r8, Y+12	; 0x0c
    2292:	9b 84       	ldd	r9, Y+11	; 0x0b
    2294:	aa 84       	ldd	r10, Y+10	; 0x0a
    2296:	b9 84       	ldd	r11, Y+9	; 0x09
    2298:	c8 84       	ldd	r12, Y+8	; 0x08
    229a:	df 80       	ldd	r13, Y+7	; 0x07
    229c:	ee 80       	ldd	r14, Y+6	; 0x06
    229e:	fd 80       	ldd	r15, Y+5	; 0x05
    22a0:	0c 81       	ldd	r16, Y+4	; 0x04
    22a2:	1b 81       	ldd	r17, Y+3	; 0x03
    22a4:	aa 81       	ldd	r26, Y+2	; 0x02
    22a6:	b9 81       	ldd	r27, Y+1	; 0x01
    22a8:	ce 0f       	add	r28, r30
    22aa:	d1 1d       	adc	r29, r1
    22ac:	0f b6       	in	r0, 0x3f	; 63
    22ae:	f8 94       	cli
    22b0:	de bf       	out	0x3e, r29	; 62
    22b2:	0f be       	out	0x3f, r0	; 63
    22b4:	cd bf       	out	0x3d, r28	; 61
    22b6:	ed 01       	movw	r28, r26
    22b8:	08 95       	ret

Disassembly of section .text.avrlibc:

00001498 <__ftoa_engine>:
    1498:	28 30       	cpi	r18, 0x08	; 8
    149a:	08 f0       	brcs	.+2      	; 0x149e <__ftoa_engine+0x6>
    149c:	27 e0       	ldi	r18, 0x07	; 7
    149e:	33 27       	eor	r19, r19
    14a0:	da 01       	movw	r26, r20
    14a2:	99 0f       	add	r25, r25
    14a4:	31 1d       	adc	r19, r1
    14a6:	87 fd       	sbrc	r24, 7
    14a8:	91 60       	ori	r25, 0x01	; 1
    14aa:	00 96       	adiw	r24, 0x00	; 0
    14ac:	61 05       	cpc	r22, r1
    14ae:	71 05       	cpc	r23, r1
    14b0:	39 f4       	brne	.+14     	; 0x14c0 <__ftoa_engine+0x28>
    14b2:	32 60       	ori	r19, 0x02	; 2
    14b4:	2e 5f       	subi	r18, 0xFE	; 254
    14b6:	3d 93       	st	X+, r19
    14b8:	30 e3       	ldi	r19, 0x30	; 48
    14ba:	2a 95       	dec	r18
    14bc:	e1 f7       	brne	.-8      	; 0x14b6 <__ftoa_engine+0x1e>
    14be:	08 95       	ret
    14c0:	9f 3f       	cpi	r25, 0xFF	; 255
    14c2:	30 f0       	brcs	.+12     	; 0x14d0 <__ftoa_engine+0x38>
    14c4:	80 38       	cpi	r24, 0x80	; 128
    14c6:	71 05       	cpc	r23, r1
    14c8:	61 05       	cpc	r22, r1
    14ca:	09 f0       	breq	.+2      	; 0x14ce <__ftoa_engine+0x36>
    14cc:	3c 5f       	subi	r19, 0xFC	; 252
    14ce:	3c 5f       	subi	r19, 0xFC	; 252
    14d0:	3d 93       	st	X+, r19
    14d2:	91 30       	cpi	r25, 0x01	; 1
    14d4:	08 f0       	brcs	.+2      	; 0x14d8 <__ftoa_engine+0x40>
    14d6:	80 68       	ori	r24, 0x80	; 128
    14d8:	91 1d       	adc	r25, r1
    14da:	df 93       	push	r29
    14dc:	cf 93       	push	r28
    14de:	1f 93       	push	r17
    14e0:	0f 93       	push	r16
    14e2:	ff 92       	push	r15
    14e4:	ef 92       	push	r14
    14e6:	19 2f       	mov	r17, r25
    14e8:	98 7f       	andi	r25, 0xF8	; 248
    14ea:	96 95       	lsr	r25
    14ec:	e9 2f       	mov	r30, r25
    14ee:	96 95       	lsr	r25
    14f0:	96 95       	lsr	r25
    14f2:	e9 0f       	add	r30, r25
    14f4:	ff 27       	eor	r31, r31
    14f6:	e0 52       	subi	r30, 0x20	; 32
    14f8:	ff 4f       	sbci	r31, 0xFF	; 255
    14fa:	99 27       	eor	r25, r25
    14fc:	33 27       	eor	r19, r19
    14fe:	ee 24       	eor	r14, r14
    1500:	ff 24       	eor	r15, r15
    1502:	a7 01       	movw	r20, r14
    1504:	e7 01       	movw	r28, r14
    1506:	05 90       	lpm	r0, Z+
    1508:	08 94       	sec
    150a:	07 94       	ror	r0
    150c:	28 f4       	brcc	.+10     	; 0x1518 <__ftoa_engine+0x80>
    150e:	36 0f       	add	r19, r22
    1510:	e7 1e       	adc	r14, r23
    1512:	f8 1e       	adc	r15, r24
    1514:	49 1f       	adc	r20, r25
    1516:	51 1d       	adc	r21, r1
    1518:	66 0f       	add	r22, r22
    151a:	77 1f       	adc	r23, r23
    151c:	88 1f       	adc	r24, r24
    151e:	99 1f       	adc	r25, r25
    1520:	06 94       	lsr	r0
    1522:	a1 f7       	brne	.-24     	; 0x150c <__ftoa_engine+0x74>
    1524:	05 90       	lpm	r0, Z+
    1526:	07 94       	ror	r0
    1528:	28 f4       	brcc	.+10     	; 0x1534 <__ftoa_engine+0x9c>
    152a:	e7 0e       	add	r14, r23
    152c:	f8 1e       	adc	r15, r24
    152e:	49 1f       	adc	r20, r25
    1530:	56 1f       	adc	r21, r22
    1532:	c1 1d       	adc	r28, r1
    1534:	77 0f       	add	r23, r23
    1536:	88 1f       	adc	r24, r24
    1538:	99 1f       	adc	r25, r25
    153a:	66 1f       	adc	r22, r22
    153c:	06 94       	lsr	r0
    153e:	a1 f7       	brne	.-24     	; 0x1528 <__ftoa_engine+0x90>
    1540:	05 90       	lpm	r0, Z+
    1542:	07 94       	ror	r0
    1544:	28 f4       	brcc	.+10     	; 0x1550 <__ftoa_engine+0xb8>
    1546:	f8 0e       	add	r15, r24
    1548:	49 1f       	adc	r20, r25
    154a:	56 1f       	adc	r21, r22
    154c:	c7 1f       	adc	r28, r23
    154e:	d1 1d       	adc	r29, r1
    1550:	88 0f       	add	r24, r24
    1552:	99 1f       	adc	r25, r25
    1554:	66 1f       	adc	r22, r22
    1556:	77 1f       	adc	r23, r23
    1558:	06 94       	lsr	r0
    155a:	a1 f7       	brne	.-24     	; 0x1544 <__ftoa_engine+0xac>
    155c:	05 90       	lpm	r0, Z+
    155e:	07 94       	ror	r0
    1560:	20 f4       	brcc	.+8      	; 0x156a <__ftoa_engine+0xd2>
    1562:	49 0f       	add	r20, r25
    1564:	56 1f       	adc	r21, r22
    1566:	c7 1f       	adc	r28, r23
    1568:	d8 1f       	adc	r29, r24
    156a:	99 0f       	add	r25, r25
    156c:	66 1f       	adc	r22, r22
    156e:	77 1f       	adc	r23, r23
    1570:	88 1f       	adc	r24, r24
    1572:	06 94       	lsr	r0
    1574:	a9 f7       	brne	.-22     	; 0x1560 <__ftoa_engine+0xc8>
    1576:	84 91       	lpm	r24, Z
    1578:	10 95       	com	r17
    157a:	17 70       	andi	r17, 0x07	; 7
    157c:	41 f0       	breq	.+16     	; 0x158e <__ftoa_engine+0xf6>
    157e:	d6 95       	lsr	r29
    1580:	c7 95       	ror	r28
    1582:	57 95       	ror	r21
    1584:	47 95       	ror	r20
    1586:	f7 94       	ror	r15
    1588:	e7 94       	ror	r14
    158a:	1a 95       	dec	r17
    158c:	c1 f7       	brne	.-16     	; 0x157e <__ftoa_engine+0xe6>
    158e:	e6 e8       	ldi	r30, 0x86	; 134
    1590:	f0 e0       	ldi	r31, 0x00	; 0
    1592:	68 94       	set
    1594:	15 90       	lpm	r1, Z+
    1596:	15 91       	lpm	r17, Z+
    1598:	35 91       	lpm	r19, Z+
    159a:	65 91       	lpm	r22, Z+
    159c:	95 91       	lpm	r25, Z+
    159e:	05 90       	lpm	r0, Z+
    15a0:	7f e2       	ldi	r23, 0x2F	; 47
    15a2:	73 95       	inc	r23
    15a4:	e1 18       	sub	r14, r1
    15a6:	f1 0a       	sbc	r15, r17
    15a8:	43 0b       	sbc	r20, r19
    15aa:	56 0b       	sbc	r21, r22
    15ac:	c9 0b       	sbc	r28, r25
    15ae:	d0 09       	sbc	r29, r0
    15b0:	c0 f7       	brcc	.-16     	; 0x15a2 <__ftoa_engine+0x10a>
    15b2:	e1 0c       	add	r14, r1
    15b4:	f1 1e       	adc	r15, r17
    15b6:	43 1f       	adc	r20, r19
    15b8:	56 1f       	adc	r21, r22
    15ba:	c9 1f       	adc	r28, r25
    15bc:	d0 1d       	adc	r29, r0
    15be:	7e f4       	brtc	.+30     	; 0x15de <__ftoa_engine+0x146>
    15c0:	70 33       	cpi	r23, 0x30	; 48
    15c2:	11 f4       	brne	.+4      	; 0x15c8 <__ftoa_engine+0x130>
    15c4:	8a 95       	dec	r24
    15c6:	e6 cf       	rjmp	.-52     	; 0x1594 <__ftoa_engine+0xfc>
    15c8:	e8 94       	clt
    15ca:	01 50       	subi	r16, 0x01	; 1
    15cc:	30 f0       	brcs	.+12     	; 0x15da <__ftoa_engine+0x142>
    15ce:	08 0f       	add	r16, r24
    15d0:	0a f4       	brpl	.+2      	; 0x15d4 <__ftoa_engine+0x13c>
    15d2:	00 27       	eor	r16, r16
    15d4:	02 17       	cp	r16, r18
    15d6:	08 f4       	brcc	.+2      	; 0x15da <__ftoa_engine+0x142>
    15d8:	20 2f       	mov	r18, r16
    15da:	23 95       	inc	r18
    15dc:	02 2f       	mov	r16, r18
    15de:	7a 33       	cpi	r23, 0x3A	; 58
    15e0:	28 f0       	brcs	.+10     	; 0x15ec <__ftoa_engine+0x154>
    15e2:	79 e3       	ldi	r23, 0x39	; 57
    15e4:	7d 93       	st	X+, r23
    15e6:	2a 95       	dec	r18
    15e8:	e9 f7       	brne	.-6      	; 0x15e4 <__ftoa_engine+0x14c>
    15ea:	10 c0       	rjmp	.+32     	; 0x160c <__ftoa_engine+0x174>
    15ec:	7d 93       	st	X+, r23
    15ee:	2a 95       	dec	r18
    15f0:	89 f6       	brne	.-94     	; 0x1594 <__ftoa_engine+0xfc>
    15f2:	06 94       	lsr	r0
    15f4:	97 95       	ror	r25
    15f6:	67 95       	ror	r22
    15f8:	37 95       	ror	r19
    15fa:	17 95       	ror	r17
    15fc:	17 94       	ror	r1
    15fe:	e1 18       	sub	r14, r1
    1600:	f1 0a       	sbc	r15, r17
    1602:	43 0b       	sbc	r20, r19
    1604:	56 0b       	sbc	r21, r22
    1606:	c9 0b       	sbc	r28, r25
    1608:	d0 09       	sbc	r29, r0
    160a:	98 f0       	brcs	.+38     	; 0x1632 <__ftoa_engine+0x19a>
    160c:	23 95       	inc	r18
    160e:	7e 91       	ld	r23, -X
    1610:	73 95       	inc	r23
    1612:	7a 33       	cpi	r23, 0x3A	; 58
    1614:	08 f0       	brcs	.+2      	; 0x1618 <__ftoa_engine+0x180>
    1616:	70 e3       	ldi	r23, 0x30	; 48
    1618:	7c 93       	st	X, r23
    161a:	20 13       	cpse	r18, r16
    161c:	b8 f7       	brcc	.-18     	; 0x160c <__ftoa_engine+0x174>
    161e:	7e 91       	ld	r23, -X
    1620:	70 61       	ori	r23, 0x10	; 16
    1622:	7d 93       	st	X+, r23
    1624:	30 f0       	brcs	.+12     	; 0x1632 <__ftoa_engine+0x19a>
    1626:	83 95       	inc	r24
    1628:	71 e3       	ldi	r23, 0x31	; 49
    162a:	7d 93       	st	X+, r23
    162c:	70 e3       	ldi	r23, 0x30	; 48
    162e:	2a 95       	dec	r18
    1630:	e1 f7       	brne	.-8      	; 0x162a <__ftoa_engine+0x192>
    1632:	11 24       	eor	r1, r1
    1634:	ef 90       	pop	r14
    1636:	ff 90       	pop	r15
    1638:	0f 91       	pop	r16
    163a:	1f 91       	pop	r17
    163c:	cf 91       	pop	r28
    163e:	df 91       	pop	r29
    1640:	99 27       	eor	r25, r25
    1642:	87 fd       	sbrc	r24, 7
    1644:	90 95       	com	r25
    1646:	08 95       	ret

Disassembly of section .text.avrlibc:

000022ba <strnlen>:
    22ba:	cf 92       	push	r12
    22bc:	df 92       	push	r13
    22be:	ef 92       	push	r14
    22c0:	6b 01       	movw	r12, r22
    22c2:	e8 2e       	mov	r14, r24
    22c4:	a8 2f       	mov	r26, r24
    22c6:	cb 01       	movw	r24, r22
    22c8:	41 15       	cp	r20, r1
    22ca:	51 05       	cpc	r21, r1
    22cc:	31 f4       	brne	.+12     	; 0x22da <strnlen+0x20>
    22ce:	8c 19       	sub	r24, r12
    22d0:	9d 09       	sbc	r25, r13
    22d2:	ef 90       	pop	r14
    22d4:	df 90       	pop	r13
    22d6:	cf 90       	pop	r12
    22d8:	08 95       	ret
    22da:	fc 01       	movw	r30, r24
    22dc:	24 91       	lpm	r18, Z
    22de:	a7 fd       	sbrc	r26, 7
    22e0:	20 81       	ld	r18, Z
    22e2:	22 23       	and	r18, r18
    22e4:	a1 f3       	breq	.-24     	; 0x22ce <strnlen+0x14>
    22e6:	01 96       	adiw	r24, 0x01	; 1
    22e8:	a1 1d       	adc	r26, r1
    22ea:	41 50       	subi	r20, 0x01	; 1
    22ec:	51 09       	sbc	r21, r1
    22ee:	ec cf       	rjmp	.-40     	; 0x22c8 <strnlen+0xe>

Disassembly of section .text.avrlibc:

00001b72 <fdevopen>:
    1b72:	0f 93       	push	r16
    1b74:	1f 93       	push	r17
    1b76:	cf 93       	push	r28
    1b78:	df 93       	push	r29
    1b7a:	00 97       	sbiw	r24, 0x00	; 0
    1b7c:	31 f4       	brne	.+12     	; 0x1b8a <fdevopen+0x18>
    1b7e:	61 15       	cp	r22, r1
    1b80:	71 05       	cpc	r23, r1
    1b82:	19 f4       	brne	.+6      	; 0x1b8a <fdevopen+0x18>
    1b84:	80 e0       	ldi	r24, 0x00	; 0
    1b86:	90 e0       	ldi	r25, 0x00	; 0
    1b88:	3b c0       	rjmp	.+118    	; 0x1c00 <fdevopen+0x8e>
    1b8a:	8b 01       	movw	r16, r22
    1b8c:	ec 01       	movw	r28, r24
    1b8e:	6f e0       	ldi	r22, 0x0F	; 15
    1b90:	70 e0       	ldi	r23, 0x00	; 0
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	90 e0       	ldi	r25, 0x00	; 0
    1b96:	0e 94 26 11 	call	0x224c	; 0x224c <calloc>
    1b9a:	fc 01       	movw	r30, r24
    1b9c:	89 2b       	or	r24, r25
    1b9e:	91 f3       	breq	.-28     	; 0x1b84 <fdevopen+0x12>
    1ba0:	80 e8       	ldi	r24, 0x80	; 128
    1ba2:	84 83       	std	Z+4, r24	; 0x04
    1ba4:	01 15       	cp	r16, r1
    1ba6:	11 05       	cpc	r17, r1
    1ba8:	69 f0       	breq	.+26     	; 0x1bc4 <fdevopen+0x52>
    1baa:	14 87       	std	Z+12, r17	; 0x0c
    1bac:	03 87       	std	Z+11, r16	; 0x0b
    1bae:	81 e8       	ldi	r24, 0x81	; 129
    1bb0:	84 83       	std	Z+4, r24	; 0x04
    1bb2:	a2 e0       	ldi	r26, 0x02	; 2
    1bb4:	b1 e0       	ldi	r27, 0x01	; 1
    1bb6:	8d 91       	ld	r24, X+
    1bb8:	9c 91       	ld	r25, X
    1bba:	11 97       	sbiw	r26, 0x01	; 1
    1bbc:	89 2b       	or	r24, r25
    1bbe:	11 f4       	brne	.+4      	; 0x1bc4 <fdevopen+0x52>
    1bc0:	ed 93       	st	X+, r30
    1bc2:	fc 93       	st	X, r31
    1bc4:	20 97       	sbiw	r28, 0x00	; 0
    1bc6:	d9 f0       	breq	.+54     	; 0x1bfe <fdevopen+0x8c>
    1bc8:	d2 87       	std	Z+10, r29	; 0x0a
    1bca:	c1 87       	std	Z+9, r28	; 0x09
    1bcc:	84 81       	ldd	r24, Z+4	; 0x04
    1bce:	82 60       	ori	r24, 0x02	; 2
    1bd0:	84 83       	std	Z+4, r24	; 0x04
    1bd2:	a2 e0       	ldi	r26, 0x02	; 2
    1bd4:	b1 e0       	ldi	r27, 0x01	; 1
    1bd6:	12 96       	adiw	r26, 0x02	; 2
    1bd8:	8d 91       	ld	r24, X+
    1bda:	9c 91       	ld	r25, X
    1bdc:	13 97       	sbiw	r26, 0x03	; 3
    1bde:	89 2b       	or	r24, r25
    1be0:	71 f4       	brne	.+28     	; 0x1bfe <fdevopen+0x8c>
    1be2:	13 96       	adiw	r26, 0x03	; 3
    1be4:	fc 93       	st	X, r31
    1be6:	ee 93       	st	-X, r30
    1be8:	12 97       	sbiw	r26, 0x02	; 2
    1bea:	14 96       	adiw	r26, 0x04	; 4
    1bec:	8d 91       	ld	r24, X+
    1bee:	9c 91       	ld	r25, X
    1bf0:	15 97       	sbiw	r26, 0x05	; 5
    1bf2:	89 2b       	or	r24, r25
    1bf4:	21 f4       	brne	.+8      	; 0x1bfe <fdevopen+0x8c>
    1bf6:	15 96       	adiw	r26, 0x05	; 5
    1bf8:	fc 93       	st	X, r31
    1bfa:	ee 93       	st	-X, r30
    1bfc:	14 97       	sbiw	r26, 0x04	; 4
    1bfe:	cf 01       	movw	r24, r30
    1c00:	df 91       	pop	r29
    1c02:	cf 91       	pop	r28
    1c04:	1f 91       	pop	r17
    1c06:	0f 91       	pop	r16
    1c08:	08 95       	ret

Disassembly of section .text.avrlibc:

00001d92 <fputc>:
    1d92:	0f 93       	push	r16
    1d94:	1f 93       	push	r17
    1d96:	cf 93       	push	r28
    1d98:	df 93       	push	r29
    1d9a:	fb 01       	movw	r30, r22
    1d9c:	24 81       	ldd	r18, Z+4	; 0x04
    1d9e:	21 fd       	sbrc	r18, 1
    1da0:	03 c0       	rjmp	.+6      	; 0x1da8 <fputc+0x16>
    1da2:	8f ef       	ldi	r24, 0xFF	; 255
    1da4:	9f ef       	ldi	r25, 0xFF	; 255
    1da6:	2c c0       	rjmp	.+88     	; 0x1e00 <fputc+0x6e>
    1da8:	22 ff       	sbrs	r18, 2
    1daa:	16 c0       	rjmp	.+44     	; 0x1dd8 <fputc+0x46>
    1dac:	47 81       	ldd	r20, Z+7	; 0x07
    1dae:	50 85       	ldd	r21, Z+8	; 0x08
    1db0:	25 81       	ldd	r18, Z+5	; 0x05
    1db2:	36 81       	ldd	r19, Z+6	; 0x06
    1db4:	42 17       	cp	r20, r18
    1db6:	53 07       	cpc	r21, r19
    1db8:	44 f4       	brge	.+16     	; 0x1dca <fputc+0x38>
    1dba:	a0 81       	ld	r26, Z
    1dbc:	b1 81       	ldd	r27, Z+1	; 0x01
    1dbe:	9d 01       	movw	r18, r26
    1dc0:	2f 5f       	subi	r18, 0xFF	; 255
    1dc2:	3f 4f       	sbci	r19, 0xFF	; 255
    1dc4:	31 83       	std	Z+1, r19	; 0x01
    1dc6:	20 83       	st	Z, r18
    1dc8:	8c 93       	st	X, r24
    1dca:	27 81       	ldd	r18, Z+7	; 0x07
    1dcc:	30 85       	ldd	r19, Z+8	; 0x08
    1dce:	2f 5f       	subi	r18, 0xFF	; 255
    1dd0:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd2:	30 87       	std	Z+8, r19	; 0x08
    1dd4:	27 83       	std	Z+7, r18	; 0x07
    1dd6:	14 c0       	rjmp	.+40     	; 0x1e00 <fputc+0x6e>
    1dd8:	8b 01       	movw	r16, r22
    1dda:	ec 01       	movw	r28, r24
    1ddc:	fb 01       	movw	r30, r22
    1dde:	01 84       	ldd	r0, Z+9	; 0x09
    1de0:	f2 85       	ldd	r31, Z+10	; 0x0a
    1de2:	e0 2d       	mov	r30, r0
    1de4:	09 95       	icall
    1de6:	89 2b       	or	r24, r25
    1de8:	e1 f6       	brne	.-72     	; 0x1da2 <fputc+0x10>
    1dea:	d8 01       	movw	r26, r16
    1dec:	17 96       	adiw	r26, 0x07	; 7
    1dee:	8d 91       	ld	r24, X+
    1df0:	9c 91       	ld	r25, X
    1df2:	18 97       	sbiw	r26, 0x08	; 8
    1df4:	01 96       	adiw	r24, 0x01	; 1
    1df6:	18 96       	adiw	r26, 0x08	; 8
    1df8:	9c 93       	st	X, r25
    1dfa:	8e 93       	st	-X, r24
    1dfc:	17 97       	sbiw	r26, 0x07	; 7
    1dfe:	ce 01       	movw	r24, r28
    1e00:	df 91       	pop	r29
    1e02:	cf 91       	pop	r28
    1e04:	1f 91       	pop	r17
    1e06:	0f 91       	pop	r16
    1e08:	08 95       	ret

Disassembly of section .text.avrlibc:

0000234e <printf>:
    234e:	a0 e0       	ldi	r26, 0x00	; 0
    2350:	b0 e0       	ldi	r27, 0x00	; 0
    2352:	ed ea       	ldi	r30, 0xAD	; 173
    2354:	f1 e1       	ldi	r31, 0x11	; 17
    2356:	0c 94 1a 11 	jmp	0x2234	; 0x2234 <__prologue_saves__+0x20>
    235a:	9e 01       	movw	r18, r28
    235c:	2b 5f       	subi	r18, 0xFB	; 251
    235e:	3f 4f       	sbci	r19, 0xFF	; 255
    2360:	f9 01       	movw	r30, r18
    2362:	41 91       	ld	r20, Z+
    2364:	51 91       	ld	r21, Z+
    2366:	61 91       	ld	r22, Z+
    2368:	9f 01       	movw	r18, r30
    236a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__iob+0x2>
    236e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__iob+0x3>
    2372:	0e 94 41 01 	call	0x282	; 0x282 <vfprintf>
    2376:	e2 e0       	ldi	r30, 0x02	; 2
    2378:	0c 94 52 11 	jmp	0x22a4	; 0x22a4 <__epilogue_restores__+0x20>

Disassembly of section .text.avrlibc:

000018c8 <__ultoa_invert>:
    18c8:	fa 01       	movw	r30, r20
    18ca:	aa 27       	eor	r26, r26
    18cc:	28 30       	cpi	r18, 0x08	; 8
    18ce:	51 f1       	breq	.+84     	; 0x1924 <__ultoa_invert+0x5c>
    18d0:	20 31       	cpi	r18, 0x10	; 16
    18d2:	81 f1       	breq	.+96     	; 0x1934 <__ultoa_invert+0x6c>
    18d4:	e8 94       	clt
    18d6:	6f 93       	push	r22
    18d8:	6e 7f       	andi	r22, 0xFE	; 254
    18da:	6e 5f       	subi	r22, 0xFE	; 254
    18dc:	7f 4f       	sbci	r23, 0xFF	; 255
    18de:	8f 4f       	sbci	r24, 0xFF	; 255
    18e0:	9f 4f       	sbci	r25, 0xFF	; 255
    18e2:	af 4f       	sbci	r26, 0xFF	; 255
    18e4:	b1 e0       	ldi	r27, 0x01	; 1
    18e6:	3e d0       	rcall	.+124    	; 0x1964 <__ultoa_invert+0x9c>
    18e8:	b4 e0       	ldi	r27, 0x04	; 4
    18ea:	3c d0       	rcall	.+120    	; 0x1964 <__ultoa_invert+0x9c>
    18ec:	67 0f       	add	r22, r23
    18ee:	78 1f       	adc	r23, r24
    18f0:	89 1f       	adc	r24, r25
    18f2:	9a 1f       	adc	r25, r26
    18f4:	a1 1d       	adc	r26, r1
    18f6:	68 0f       	add	r22, r24
    18f8:	79 1f       	adc	r23, r25
    18fa:	8a 1f       	adc	r24, r26
    18fc:	91 1d       	adc	r25, r1
    18fe:	a1 1d       	adc	r26, r1
    1900:	6a 0f       	add	r22, r26
    1902:	71 1d       	adc	r23, r1
    1904:	81 1d       	adc	r24, r1
    1906:	91 1d       	adc	r25, r1
    1908:	a1 1d       	adc	r26, r1
    190a:	20 d0       	rcall	.+64     	; 0x194c <__ultoa_invert+0x84>
    190c:	09 f4       	brne	.+2      	; 0x1910 <__ultoa_invert+0x48>
    190e:	68 94       	set
    1910:	3f 91       	pop	r19
    1912:	2a e0       	ldi	r18, 0x0A	; 10
    1914:	26 9f       	mul	r18, r22
    1916:	11 24       	eor	r1, r1
    1918:	30 19       	sub	r19, r0
    191a:	30 5d       	subi	r19, 0xD0	; 208
    191c:	31 93       	st	Z+, r19
    191e:	de f6       	brtc	.-74     	; 0x18d6 <__ultoa_invert+0xe>
    1920:	cf 01       	movw	r24, r30
    1922:	08 95       	ret
    1924:	46 2f       	mov	r20, r22
    1926:	47 70       	andi	r20, 0x07	; 7
    1928:	40 5d       	subi	r20, 0xD0	; 208
    192a:	41 93       	st	Z+, r20
    192c:	b3 e0       	ldi	r27, 0x03	; 3
    192e:	0f d0       	rcall	.+30     	; 0x194e <__ultoa_invert+0x86>
    1930:	c9 f7       	brne	.-14     	; 0x1924 <__ultoa_invert+0x5c>
    1932:	f6 cf       	rjmp	.-20     	; 0x1920 <__ultoa_invert+0x58>
    1934:	46 2f       	mov	r20, r22
    1936:	4f 70       	andi	r20, 0x0F	; 15
    1938:	40 5d       	subi	r20, 0xD0	; 208
    193a:	4a 33       	cpi	r20, 0x3A	; 58
    193c:	18 f0       	brcs	.+6      	; 0x1944 <__ultoa_invert+0x7c>
    193e:	49 5d       	subi	r20, 0xD9	; 217
    1940:	31 fd       	sbrc	r19, 1
    1942:	40 52       	subi	r20, 0x20	; 32
    1944:	41 93       	st	Z+, r20
    1946:	02 d0       	rcall	.+4      	; 0x194c <__ultoa_invert+0x84>
    1948:	a9 f7       	brne	.-22     	; 0x1934 <__ultoa_invert+0x6c>
    194a:	ea cf       	rjmp	.-44     	; 0x1920 <__ultoa_invert+0x58>
    194c:	b4 e0       	ldi	r27, 0x04	; 4
    194e:	a6 95       	lsr	r26
    1950:	97 95       	ror	r25
    1952:	87 95       	ror	r24
    1954:	77 95       	ror	r23
    1956:	67 95       	ror	r22
    1958:	ba 95       	dec	r27
    195a:	c9 f7       	brne	.-14     	; 0x194e <__ultoa_invert+0x86>
    195c:	00 97       	sbiw	r24, 0x00	; 0
    195e:	61 05       	cpc	r22, r1
    1960:	71 05       	cpc	r23, r1
    1962:	08 95       	ret
    1964:	9b 01       	movw	r18, r22
    1966:	ac 01       	movw	r20, r24
    1968:	0a 2e       	mov	r0, r26
    196a:	06 94       	lsr	r0
    196c:	57 95       	ror	r21
    196e:	47 95       	ror	r20
    1970:	37 95       	ror	r19
    1972:	27 95       	ror	r18
    1974:	ba 95       	dec	r27
    1976:	c9 f7       	brne	.-14     	; 0x196a <__ultoa_invert+0xa2>
    1978:	62 0f       	add	r22, r18
    197a:	73 1f       	adc	r23, r19
    197c:	84 1f       	adc	r24, r20
    197e:	95 1f       	adc	r25, r21
    1980:	a0 1d       	adc	r26, r0
    1982:	08 95       	ret

Disassembly of section .text.avrlibc:

0000224c <calloc>:
    224c:	0f 93       	push	r16
    224e:	1f 93       	push	r17
    2250:	cf 93       	push	r28
    2252:	df 93       	push	r29
    2254:	86 9f       	mul	r24, r22
    2256:	80 01       	movw	r16, r0
    2258:	87 9f       	mul	r24, r23
    225a:	10 0d       	add	r17, r0
    225c:	96 9f       	mul	r25, r22
    225e:	10 0d       	add	r17, r0
    2260:	11 24       	eor	r1, r1
    2262:	c8 01       	movw	r24, r16
    2264:	0e 94 2b 09 	call	0x1256	; 0x1256 <malloc>
    2268:	ec 01       	movw	r28, r24
    226a:	00 97       	sbiw	r24, 0x00	; 0
    226c:	29 f0       	breq	.+10     	; 0x2278 <calloc+0x2c>
    226e:	a8 01       	movw	r20, r16
    2270:	60 e0       	ldi	r22, 0x00	; 0
    2272:	70 e0       	ldi	r23, 0x00	; 0
    2274:	0e 94 8f 12 	call	0x251e	; 0x251e <memset>
    2278:	ce 01       	movw	r24, r28
    227a:	df 91       	pop	r29
    227c:	cf 91       	pop	r28
    227e:	1f 91       	pop	r17
    2280:	0f 91       	pop	r16
    2282:	08 95       	ret

Disassembly of section .text.avrlibc:

00001256 <malloc>:
    1256:	0f 93       	push	r16
    1258:	1f 93       	push	r17
    125a:	cf 93       	push	r28
    125c:	df 93       	push	r29
    125e:	82 30       	cpi	r24, 0x02	; 2
    1260:	91 05       	cpc	r25, r1
    1262:	10 f4       	brcc	.+4      	; 0x1268 <malloc+0x12>
    1264:	82 e0       	ldi	r24, 0x02	; 2
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__flp>
    126c:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <__flp+0x1>
    1270:	20 e0       	ldi	r18, 0x00	; 0
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	a0 e0       	ldi	r26, 0x00	; 0
    1276:	b0 e0       	ldi	r27, 0x00	; 0
    1278:	30 97       	sbiw	r30, 0x00	; 0
    127a:	19 f1       	breq	.+70     	; 0x12c2 <malloc+0x6c>
    127c:	40 81       	ld	r20, Z
    127e:	51 81       	ldd	r21, Z+1	; 0x01
    1280:	02 81       	ldd	r16, Z+2	; 0x02
    1282:	13 81       	ldd	r17, Z+3	; 0x03
    1284:	48 17       	cp	r20, r24
    1286:	59 07       	cpc	r21, r25
    1288:	c8 f0       	brcs	.+50     	; 0x12bc <malloc+0x66>
    128a:	84 17       	cp	r24, r20
    128c:	95 07       	cpc	r25, r21
    128e:	69 f4       	brne	.+26     	; 0x12aa <malloc+0x54>
    1290:	10 97       	sbiw	r26, 0x00	; 0
    1292:	31 f0       	breq	.+12     	; 0x12a0 <malloc+0x4a>
    1294:	12 96       	adiw	r26, 0x02	; 2
    1296:	0c 93       	st	X, r16
    1298:	12 97       	sbiw	r26, 0x02	; 2
    129a:	13 96       	adiw	r26, 0x03	; 3
    129c:	1c 93       	st	X, r17
    129e:	27 c0       	rjmp	.+78     	; 0x12ee <malloc+0x98>
    12a0:	00 93 0a 01 	sts	0x010A, r16	; 0x80010a <__flp>
    12a4:	10 93 0b 01 	sts	0x010B, r17	; 0x80010b <__flp+0x1>
    12a8:	22 c0       	rjmp	.+68     	; 0x12ee <malloc+0x98>
    12aa:	21 15       	cp	r18, r1
    12ac:	31 05       	cpc	r19, r1
    12ae:	19 f0       	breq	.+6      	; 0x12b6 <malloc+0x60>
    12b0:	42 17       	cp	r20, r18
    12b2:	53 07       	cpc	r21, r19
    12b4:	18 f4       	brcc	.+6      	; 0x12bc <malloc+0x66>
    12b6:	9a 01       	movw	r18, r20
    12b8:	bd 01       	movw	r22, r26
    12ba:	ef 01       	movw	r28, r30
    12bc:	df 01       	movw	r26, r30
    12be:	f8 01       	movw	r30, r16
    12c0:	db cf       	rjmp	.-74     	; 0x1278 <malloc+0x22>
    12c2:	21 15       	cp	r18, r1
    12c4:	31 05       	cpc	r19, r1
    12c6:	f9 f0       	breq	.+62     	; 0x1306 <malloc+0xb0>
    12c8:	28 1b       	sub	r18, r24
    12ca:	39 0b       	sbc	r19, r25
    12cc:	24 30       	cpi	r18, 0x04	; 4
    12ce:	31 05       	cpc	r19, r1
    12d0:	80 f4       	brcc	.+32     	; 0x12f2 <malloc+0x9c>
    12d2:	8a 81       	ldd	r24, Y+2	; 0x02
    12d4:	9b 81       	ldd	r25, Y+3	; 0x03
    12d6:	61 15       	cp	r22, r1
    12d8:	71 05       	cpc	r23, r1
    12da:	21 f0       	breq	.+8      	; 0x12e4 <malloc+0x8e>
    12dc:	fb 01       	movw	r30, r22
    12de:	93 83       	std	Z+3, r25	; 0x03
    12e0:	82 83       	std	Z+2, r24	; 0x02
    12e2:	04 c0       	rjmp	.+8      	; 0x12ec <malloc+0x96>
    12e4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__flp+0x1>
    12e8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__flp>
    12ec:	fe 01       	movw	r30, r28
    12ee:	32 96       	adiw	r30, 0x02	; 2
    12f0:	44 c0       	rjmp	.+136    	; 0x137a <malloc+0x124>
    12f2:	fe 01       	movw	r30, r28
    12f4:	e2 0f       	add	r30, r18
    12f6:	f3 1f       	adc	r31, r19
    12f8:	81 93       	st	Z+, r24
    12fa:	91 93       	st	Z+, r25
    12fc:	22 50       	subi	r18, 0x02	; 2
    12fe:	31 09       	sbc	r19, r1
    1300:	39 83       	std	Y+1, r19	; 0x01
    1302:	28 83       	st	Y, r18
    1304:	3a c0       	rjmp	.+116    	; 0x137a <malloc+0x124>
    1306:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
    130a:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
    130e:	23 2b       	or	r18, r19
    1310:	41 f4       	brne	.+16     	; 0x1322 <malloc+0xcc>
    1312:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__malloc_heap_start>
    1316:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__malloc_heap_start+0x1>
    131a:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <__brkval+0x1>
    131e:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <__brkval>
    1322:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <__malloc_heap_end>
    1326:	30 91 21 01 	lds	r19, 0x0121	; 0x800121 <__malloc_heap_end+0x1>
    132a:	21 15       	cp	r18, r1
    132c:	31 05       	cpc	r19, r1
    132e:	41 f4       	brne	.+16     	; 0x1340 <malloc+0xea>
    1330:	2d b7       	in	r18, 0x3d	; 61
    1332:	3e b7       	in	r19, 0x3e	; 62
    1334:	40 91 24 01 	lds	r20, 0x0124	; 0x800124 <__malloc_margin>
    1338:	50 91 25 01 	lds	r21, 0x0125	; 0x800125 <__malloc_margin+0x1>
    133c:	24 1b       	sub	r18, r20
    133e:	35 0b       	sbc	r19, r21
    1340:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__brkval>
    1344:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__brkval+0x1>
    1348:	e2 17       	cp	r30, r18
    134a:	f3 07       	cpc	r31, r19
    134c:	a0 f4       	brcc	.+40     	; 0x1376 <malloc+0x120>
    134e:	2e 1b       	sub	r18, r30
    1350:	3f 0b       	sbc	r19, r31
    1352:	28 17       	cp	r18, r24
    1354:	39 07       	cpc	r19, r25
    1356:	78 f0       	brcs	.+30     	; 0x1376 <malloc+0x120>
    1358:	ac 01       	movw	r20, r24
    135a:	4e 5f       	subi	r20, 0xFE	; 254
    135c:	5f 4f       	sbci	r21, 0xFF	; 255
    135e:	24 17       	cp	r18, r20
    1360:	35 07       	cpc	r19, r21
    1362:	48 f0       	brcs	.+18     	; 0x1376 <malloc+0x120>
    1364:	4e 0f       	add	r20, r30
    1366:	5f 1f       	adc	r21, r31
    1368:	50 93 09 01 	sts	0x0109, r21	; 0x800109 <__brkval+0x1>
    136c:	40 93 08 01 	sts	0x0108, r20	; 0x800108 <__brkval>
    1370:	81 93       	st	Z+, r24
    1372:	91 93       	st	Z+, r25
    1374:	02 c0       	rjmp	.+4      	; 0x137a <malloc+0x124>
    1376:	e0 e0       	ldi	r30, 0x00	; 0
    1378:	f0 e0       	ldi	r31, 0x00	; 0
    137a:	cf 01       	movw	r24, r30
    137c:	df 91       	pop	r29
    137e:	cf 91       	pop	r28
    1380:	1f 91       	pop	r17
    1382:	0f 91       	pop	r16
    1384:	08 95       	ret

00001386 <free>:
    1386:	cf 93       	push	r28
    1388:	df 93       	push	r29
    138a:	00 97       	sbiw	r24, 0x00	; 0
    138c:	09 f4       	brne	.+2      	; 0x1390 <free+0xa>
    138e:	81 c0       	rjmp	.+258    	; 0x1492 <free+0x10c>
    1390:	fc 01       	movw	r30, r24
    1392:	32 97       	sbiw	r30, 0x02	; 2
    1394:	13 82       	std	Z+3, r1	; 0x03
    1396:	12 82       	std	Z+2, r1	; 0x02
    1398:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <__flp>
    139c:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <__flp+0x1>
    13a0:	10 97       	sbiw	r26, 0x00	; 0
    13a2:	81 f4       	brne	.+32     	; 0x13c4 <free+0x3e>
    13a4:	20 81       	ld	r18, Z
    13a6:	31 81       	ldd	r19, Z+1	; 0x01
    13a8:	82 0f       	add	r24, r18
    13aa:	93 1f       	adc	r25, r19
    13ac:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
    13b0:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
    13b4:	28 17       	cp	r18, r24
    13b6:	39 07       	cpc	r19, r25
    13b8:	51 f5       	brne	.+84     	; 0x140e <free+0x88>
    13ba:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__brkval+0x1>
    13be:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__brkval>
    13c2:	67 c0       	rjmp	.+206    	; 0x1492 <free+0x10c>
    13c4:	ed 01       	movw	r28, r26
    13c6:	20 e0       	ldi	r18, 0x00	; 0
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	ce 17       	cp	r28, r30
    13cc:	df 07       	cpc	r29, r31
    13ce:	40 f4       	brcc	.+16     	; 0x13e0 <free+0x5a>
    13d0:	4a 81       	ldd	r20, Y+2	; 0x02
    13d2:	5b 81       	ldd	r21, Y+3	; 0x03
    13d4:	9e 01       	movw	r18, r28
    13d6:	41 15       	cp	r20, r1
    13d8:	51 05       	cpc	r21, r1
    13da:	f1 f0       	breq	.+60     	; 0x1418 <free+0x92>
    13dc:	ea 01       	movw	r28, r20
    13de:	f5 cf       	rjmp	.-22     	; 0x13ca <free+0x44>
    13e0:	d3 83       	std	Z+3, r29	; 0x03
    13e2:	c2 83       	std	Z+2, r28	; 0x02
    13e4:	40 81       	ld	r20, Z
    13e6:	51 81       	ldd	r21, Z+1	; 0x01
    13e8:	84 0f       	add	r24, r20
    13ea:	95 1f       	adc	r25, r21
    13ec:	c8 17       	cp	r28, r24
    13ee:	d9 07       	cpc	r29, r25
    13f0:	59 f4       	brne	.+22     	; 0x1408 <free+0x82>
    13f2:	88 81       	ld	r24, Y
    13f4:	99 81       	ldd	r25, Y+1	; 0x01
    13f6:	84 0f       	add	r24, r20
    13f8:	95 1f       	adc	r25, r21
    13fa:	02 96       	adiw	r24, 0x02	; 2
    13fc:	91 83       	std	Z+1, r25	; 0x01
    13fe:	80 83       	st	Z, r24
    1400:	8a 81       	ldd	r24, Y+2	; 0x02
    1402:	9b 81       	ldd	r25, Y+3	; 0x03
    1404:	93 83       	std	Z+3, r25	; 0x03
    1406:	82 83       	std	Z+2, r24	; 0x02
    1408:	21 15       	cp	r18, r1
    140a:	31 05       	cpc	r19, r1
    140c:	29 f4       	brne	.+10     	; 0x1418 <free+0x92>
    140e:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__flp+0x1>
    1412:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__flp>
    1416:	3d c0       	rjmp	.+122    	; 0x1492 <free+0x10c>
    1418:	e9 01       	movw	r28, r18
    141a:	fb 83       	std	Y+3, r31	; 0x03
    141c:	ea 83       	std	Y+2, r30	; 0x02
    141e:	49 91       	ld	r20, Y+
    1420:	59 91       	ld	r21, Y+
    1422:	c4 0f       	add	r28, r20
    1424:	d5 1f       	adc	r29, r21
    1426:	ec 17       	cp	r30, r28
    1428:	fd 07       	cpc	r31, r29
    142a:	61 f4       	brne	.+24     	; 0x1444 <free+0xbe>
    142c:	80 81       	ld	r24, Z
    142e:	91 81       	ldd	r25, Z+1	; 0x01
    1430:	84 0f       	add	r24, r20
    1432:	95 1f       	adc	r25, r21
    1434:	02 96       	adiw	r24, 0x02	; 2
    1436:	e9 01       	movw	r28, r18
    1438:	99 83       	std	Y+1, r25	; 0x01
    143a:	88 83       	st	Y, r24
    143c:	82 81       	ldd	r24, Z+2	; 0x02
    143e:	93 81       	ldd	r25, Z+3	; 0x03
    1440:	9b 83       	std	Y+3, r25	; 0x03
    1442:	8a 83       	std	Y+2, r24	; 0x02
    1444:	e0 e0       	ldi	r30, 0x00	; 0
    1446:	f0 e0       	ldi	r31, 0x00	; 0
    1448:	12 96       	adiw	r26, 0x02	; 2
    144a:	8d 91       	ld	r24, X+
    144c:	9c 91       	ld	r25, X
    144e:	13 97       	sbiw	r26, 0x03	; 3
    1450:	00 97       	sbiw	r24, 0x00	; 0
    1452:	19 f0       	breq	.+6      	; 0x145a <free+0xd4>
    1454:	fd 01       	movw	r30, r26
    1456:	dc 01       	movw	r26, r24
    1458:	f7 cf       	rjmp	.-18     	; 0x1448 <free+0xc2>
    145a:	8d 91       	ld	r24, X+
    145c:	9c 91       	ld	r25, X
    145e:	11 97       	sbiw	r26, 0x01	; 1
    1460:	9d 01       	movw	r18, r26
    1462:	2e 5f       	subi	r18, 0xFE	; 254
    1464:	3f 4f       	sbci	r19, 0xFF	; 255
    1466:	82 0f       	add	r24, r18
    1468:	93 1f       	adc	r25, r19
    146a:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
    146e:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
    1472:	28 17       	cp	r18, r24
    1474:	39 07       	cpc	r19, r25
    1476:	69 f4       	brne	.+26     	; 0x1492 <free+0x10c>
    1478:	30 97       	sbiw	r30, 0x00	; 0
    147a:	29 f4       	brne	.+10     	; 0x1486 <free+0x100>
    147c:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <__flp+0x1>
    1480:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__flp>
    1484:	02 c0       	rjmp	.+4      	; 0x148a <free+0x104>
    1486:	13 82       	std	Z+3, r1	; 0x03
    1488:	12 82       	std	Z+2, r1	; 0x02
    148a:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <__brkval+0x1>
    148e:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <__brkval>
    1492:	df 91       	pop	r29
    1494:	cf 91       	pop	r28
    1496:	08 95       	ret

Disassembly of section .text.avrlibc:

0000251e <memset>:
    251e:	dc 01       	movw	r26, r24
    2520:	01 c0       	rjmp	.+2      	; 0x2524 <memset+0x6>
    2522:	6d 93       	st	X+, r22
    2524:	41 50       	subi	r20, 0x01	; 1
    2526:	50 40       	sbci	r21, 0x00	; 0
    2528:	e0 f7       	brcc	.-8      	; 0x2522 <memset+0x4>
    252a:	08 95       	ret
