
application.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000021ac  2**0
                  ALLOC, LOAD, DATA
  1 .text         000001d4  00000000  00000000  00000114  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800100  00800100  000021ac  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  000021ac  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001d8  00000000  00000000  00002207  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002dd0  00000000  00000000  000023df  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ebc  00000000  00000000  000051af  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000109a  00000000  00000000  0000606b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000530  00000000  00000000  00007108  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003d8  00000000  00000000  00007638  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001142  00000000  00000000  00007a10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000148  00000000  00000000  00008b52  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00002086  00002086  0000219a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00008c9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.encoder_init 0000002e  00001eac  00001eac  00001fc0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.encoder_read_tick 0000001e  00001f98  00001f98  000020ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.encoder_get_accumulated_ticks_left 00000046  00001b86  00001b86  00001c9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.encoder_get_accumulated_ticks_right 00000046  00001bcc  00001bcc  00001ce0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_1 0000009e  000015ce  000015ce  000016e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_2 0000009e  0000166c  0000166c  00001780  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.encoder_ticks_right 00000004  00800112  00800112  000021ac  2**0
                  ALLOC
 21 .bss.encoder_ticks_left 00000004  00800116  00800116  000021ac  2**0
                  ALLOC
 22 .text.abs     00000030  00001e7c  00001e7c  00001f90  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.motor_init 0000001e  00001fb6  00001fb6  000020ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.set_left_motor_dir 00000020  00001f78  00001f78  0000208c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.motor_left 00000042  00001ce2  00001ce2  00001df6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.pwm_init 0000001a  00001fd4  00001fd4  000020e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.pwm_set_duty_cycle_left 0000002c  00001f08  00001f08  0000201c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.PID_controller_set_parameters 0000007c  000018c0  000018c0  000019d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.PID_controller_init 00000064  00001a2e  00001a2e  00001b42  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.PID_controller_get_control_action 000002b4  0000094e  0000094e  00000a62  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.speed_estimator_init 00000092  000017a2  000017a2  000018b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.speed_estimator_right_rad_per_s 00000046  00001c12  00001c12  00001d26  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.speed_estimator_left_rad_per_s 00000046  00001c58  00001c58  00001d6c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.__vector_11 00000194  00000ff4  00000ff4  00001108  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .data.ticks_per_rot_right 00000004  0080011a  00002090  000021a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 36 .data.ticks_per_rot_left 00000004  0080011e  00002094  000021a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 37 .bss.rad_per_s_right 00000004  00800122  00800122  000021ac  2**0
                  ALLOC
 38 .bss.rad_per_s_left 00000004  00800126  00800126  000021ac  2**0
                  ALLOC
 39 .bss.prev_ticks_left 00000002  0080012e  0080012e  000021ac  2**0
                  ALLOC
 40 .bss.prev_ticks_right 00000002  00800130  00800130  000021ac  2**0
                  ALLOC
 41 .bss.ticks_left 00000002  00800132  00800132  000021ac  2**0
                  ALLOC
 42 .bss.ticks_right 00000002  00800134  00800134  000021ac  2**0
                  ALLOC
 43 .text.timer_init 00000040  00001d24  00001d24  00001e38  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.timer_reset 0000004e  00001af0  00001af0  00001c04  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.timer_timeout 0000003c  00001d64  00001d64  00001e78  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.__vector_7 0000008c  00001834  00001834  00001948  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .bss.timer_flag 00000002  00800136  00800136  000021ac  2**0
                  ALLOC
 48 .bss.elapsed_ms 00000004  0080012a  0080012a  000021ac  2**0
                  ALLOC
 49 .text.usart_tx 0000000e  00001fee  00001fee  00002102  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.usart_rx 0000000e  00001ffc  00001ffc  00002110  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.usart_init 00000022  00001f34  00001f34  00002048  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .progmemx.data 0000002d  000001d4  000001d4  000002e8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 53 .text.main    0000010a  00001188  00001188  0000129c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.avrlibc.fplib 0000000e  0000200a  0000200a  0000211e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.avrlibc.fplib 000000ce  00001444  00001444  00001558  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.avrlibc.fplib 0000000a  0000205c  0000205c  00002170  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.avrlibc.fplib 00000008  00002070  00002070  00002184  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.avrlibc.fplib 000000de  00001292  00001292  000013a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.avrlibc.fplib 0000005e  00001a92  00001a92  00001ba6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.avrlibc.fplib 0000007a  0000193c  0000193c  00001a50  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.avrlibc.fplib 00000048  00001b3e  00001b3e  00001c52  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.avrlibc.fplib 0000000c  00002050  00002050  00002164  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.avrlibc.fplib 00000006  00002080  00002080  00002194  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.avrlibc.fplib 0000000e  00002018  00002018  0000212c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.avrlibc.fplib 0000000e  00002026  00002026  0000213a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.avrlibc.fplib 00000022  00001f56  00001f56  0000206a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.avrlibc.fplib 00000044  00001c9e  00001c9e  00001db2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.avrlibc.fplib 0000000e  00002034  00002034  00002148  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.avrlibc.fplib 0000000a  00002066  00002066  0000217a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text.avrlibc.fplib 00000008  00002078  00002078  0000218c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.avrlibc.fplib 000000d4  00001370  00001370  00001484  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .progmemx.data 00000008  00000201  00000201  00000315  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 73 .text.avrlibc 00000744  0000020a  0000020a  0000031e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.libgcc.prologue 00000038  00001da0  00001da0  00001eb4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.libgcc.prologue 00000036  00001e10  00001e10  00001f24  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.avrlibc 000001b0  00000e44  00000e44  00000f58  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.avrlibc 00000036  00001e46  00001e46  00001f5a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.avrlibc 00000098  0000170a  0000170a  0000181e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.avrlibc 00000078  000019b6  000019b6  00001aca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.avrlibc 0000002e  00001eda  00001eda  00001fee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.avrlibc 000000bc  00001512  00001512  00001626  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.avrlibc 00000038  00001dd8  00001dd8  00001eec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .data         00000006  0080010c  0000208a  0000219e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 84 .text.avrlibc 00000242  00000c02  00000c02  00000d16  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 .text.avrlibc 0000000e  00002042  00002042  00002156  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 c0 00 	jmp	0x180	; 0x180 <__ctors_end>
   4:	0c 94 e7 0a 	jmp	0x15ce	; 0x15ce <__vector_1>
   8:	0c 94 36 0b 	jmp	0x166c	; 0x166c <__vector_2>
   c:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  10:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  14:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  18:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  1c:	0c 94 1a 0c 	jmp	0x1834	; 0x1834 <__vector_7>
  20:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  24:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  28:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  2c:	0c 94 fa 07 	jmp	0xff4	; 0xff4 <__vector_11>
  30:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  34:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  38:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  3c:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  40:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  44:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  48:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  4c:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  50:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  54:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  58:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  5c:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  60:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>
  64:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 0c       	add	r0, r1
  6c:	80 01       	movw	r16, r0
  6e:	0c 01       	movw	r0, r24
  70:	12 00       	.word	0x0012	; ????
  72:	20 8a       	std	Z+16, r2	; 0x10
  74:	01 12       	cpse	r0, r17
  76:	01 1a       	sub	r0, r17
  78:	80 01       	movw	r16, r0
  7a:	1a 01       	movw	r2, r20
  7c:	22 00       	.word	0x0022	; ????
  7e:	20 90 01 22 	lds	r2, 0x2201	; 0x802201 <__heap_start+0x20c9>
  82:	01 38       	cpi	r16, 0x81	; 129
  84:	80 00       	.word	0x0080	; ????

00000086 <__trampolines_end>:
  86:	00 40       	sbci	r16, 0x00	; 0
  88:	7a 10       	cpse	r7, r10
  8a:	f3 5a       	subi	r31, 0xA3	; 163
  8c:	00 a0       	ldd	r0, Z+32	; 0x20
  8e:	72 4e       	sbci	r23, 0xE2	; 226
  90:	18 09       	sbc	r17, r8
  92:	00 10       	cpse	r0, r0
  94:	a5 d4       	rcall	.+2378   	; 0x9e0 <PID_controller_get_control_action+0x92>
  96:	e8 00       	.word	0x00e8	; ????
  98:	00 e8       	ldi	r16, 0x80	; 128
  9a:	76 48       	sbci	r23, 0x86	; 134
  9c:	17 00       	.word	0x0017	; ????
  9e:	00 e4       	ldi	r16, 0x40	; 64
  a0:	0b 54       	subi	r16, 0x4B	; 75
  a2:	02 00       	.word	0x0002	; ????
  a4:	00 ca       	rjmp	.-3072   	; 0xfffff4a6 <__eeprom_end+0xff7ef4a6>
  a6:	9a 3b       	cpi	r25, 0xBA	; 186
  a8:	00 00       	nop
  aa:	00 e1       	ldi	r16, 0x10	; 16
  ac:	f5 05       	cpc	r31, r5
  ae:	00 00       	nop
  b0:	80 96       	adiw	r24, 0x20	; 32
  b2:	98 00       	.word	0x0098	; ????
  b4:	00 00       	nop
  b6:	40 42       	sbci	r20, 0x20	; 32
  b8:	0f 00       	.word	0x000f	; ????
  ba:	00 00       	nop
  bc:	a0 86       	std	Z+8, r10	; 0x08
  be:	01 00       	.word	0x0001	; ????
  c0:	00 00       	nop
  c2:	10 27       	eor	r17, r16
  c4:	00 00       	nop
  c6:	00 00       	nop
  c8:	e8 03       	fmulsu	r22, r16
  ca:	00 00       	nop
  cc:	00 00       	nop
  ce:	64 00       	.word	0x0064	; ????
  d0:	00 00       	nop
  d2:	00 00       	nop
  d4:	0a 00       	.word	0x000a	; ????
  d6:	00 00       	nop
  d8:	00 00       	nop
  da:	01 00       	.word	0x0001	; ????
  dc:	00 00       	nop
  de:	00 00       	nop
  e0:	2c 76       	andi	r18, 0x6C	; 108
  e2:	d8 88       	ldd	r13, Y+16	; 0x10
  e4:	dc 67       	ori	r29, 0x7C	; 124
  e6:	4f 08       	sbc	r4, r15
  e8:	23 df       	rcall	.-442    	; 0xffffff30 <__eeprom_end+0xff7eff30>
  ea:	c1 df       	rcall	.-126    	; 0x6e <.dinit+0x6>
  ec:	ae 59       	subi	r26, 0x9E	; 158
  ee:	e1 b1       	in	r30, 0x01	; 1
  f0:	b7 96       	adiw	r30, 0x27	; 39
  f2:	e5 e3       	ldi	r30, 0x35	; 53
  f4:	e4 53       	subi	r30, 0x34	; 52
  f6:	c6 3a       	cpi	r28, 0xA6	; 166
  f8:	e6 51       	subi	r30, 0x16	; 22
  fa:	99 76       	andi	r25, 0x69	; 105
  fc:	96 e8       	ldi	r25, 0x86	; 134
  fe:	e6 c2       	rjmp	.+1484   	; 0x6cc <__EEPROM_REGION_LENGTH__+0x2cc>
 100:	84 26       	eor	r8, r20
 102:	eb 89       	ldd	r30, Y+19	; 0x13
 104:	8c 9b       	sbis	0x11, 4	; 17
 106:	62 ed       	ldi	r22, 0xD2	; 210
 108:	40 7c       	andi	r20, 0xC0	; 192
 10a:	6f fc       	.word	0xfc6f	; ????
 10c:	ef bc       	out	0x2f, r14	; 47
 10e:	9c 9f       	mul	r25, r28
 110:	40 f2       	brcs	.-112    	; 0xa2 <__trampolines_end+0x1c>
 112:	ba a5       	ldd	r27, Y+42	; 0x2a
 114:	6f a5       	ldd	r22, Y+47	; 0x2f
 116:	f4 90       	lpm	r15, Z
 118:	05 5a       	subi	r16, 0xA5	; 165
 11a:	2a f7       	brpl	.-54     	; 0xe6 <__trampolines_end+0x60>
 11c:	5c 93       	st	X, r21
 11e:	6b 6c       	ori	r22, 0xCB	; 203
 120:	f9 67       	ori	r31, 0x79	; 121
 122:	6d c1       	rjmp	.+730    	; 0x3fe <vfprintf+0x1f4>
 124:	1b fc       	.word	0xfc1b	; ????
 126:	e0 e4       	ldi	r30, 0x40	; 64
 128:	0d 47       	sbci	r16, 0x7D	; 125
 12a:	fe f5       	brtc	.+126    	; 0x1aa <__do_copy_data+0x1e>
 12c:	20 e6       	ldi	r18, 0x60	; 96
 12e:	b5 00       	.word	0x00b5	; ????
 130:	d0 ed       	ldi	r29, 0xD0	; 208
 132:	90 2e       	mov	r9, r16
 134:	03 00       	.word	0x0003	; ????
 136:	94 35       	cpi	r25, 0x54	; 84
 138:	77 05       	cpc	r23, r7
 13a:	00 80       	ld	r0, Z
 13c:	84 1e       	adc	r8, r20
 13e:	08 00       	.word	0x0008	; ????
 140:	00 20       	and	r0, r0
 142:	4e 0a       	sbc	r4, r30
 144:	00 00       	nop
 146:	00 c8       	rjmp	.-4096   	; 0xfffff148 <__eeprom_end+0xff7ef148>
 148:	0c 33       	cpi	r16, 0x3C	; 60
 14a:	33 33       	cpi	r19, 0x33	; 51
 14c:	33 0f       	add	r19, r19
 14e:	98 6e       	ori	r25, 0xE8	; 232
 150:	12 83       	std	Z+2, r17	; 0x02
 152:	11 41       	sbci	r17, 0x11	; 17
 154:	ef 8d       	ldd	r30, Y+31	; 0x1f
 156:	21 14       	cp	r2, r1
 158:	89 3b       	cpi	r24, 0xB9	; 185
 15a:	e6 55       	subi	r30, 0x56	; 86
 15c:	16 cf       	rjmp	.-468    	; 0xffffff8a <__eeprom_end+0xff7eff8a>
 15e:	fe e6       	ldi	r31, 0x6E	; 110
 160:	db 18       	sub	r13, r11
 162:	d1 84       	ldd	r13, Z+9	; 0x09
 164:	4b 38       	cpi	r20, 0x8B	; 139
 166:	1b f7       	brvc	.-58     	; 0x12e <__trampolines_end+0xa8>
 168:	7c 1d       	adc	r23, r12
 16a:	90 1d       	adc	r25, r0
 16c:	a4 bb       	out	0x14, r26	; 20
 16e:	e4 24       	eor	r14, r4
 170:	20 32       	cpi	r18, 0x20	; 32
 172:	84 72       	andi	r24, 0x24	; 36
 174:	5e 22       	and	r5, r30
 176:	81 00       	.word	0x0081	; ????
 178:	c9 f1       	breq	.+114    	; 0x1ec <_etext+0x18>
 17a:	24 ec       	ldi	r18, 0xC4	; 196
 17c:	a1 e5       	ldi	r26, 0x51	; 81
 17e:	3d 27       	eor	r19, r29

00000180 <__ctors_end>:
 180:	11 24       	eor	r1, r1
 182:	1f be       	out	0x3f, r1	; 63
 184:	cf ef       	ldi	r28, 0xFF	; 255
 186:	d8 e0       	ldi	r29, 0x08	; 8
 188:	de bf       	out	0x3e, r29	; 62
 18a:	cd bf       	out	0x3d, r28	; 61

0000018c <__do_copy_data>:
 18c:	e8 e6       	ldi	r30, 0x68	; 104
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	40 e0       	ldi	r20, 0x00	; 0
 192:	17 c0       	rjmp	.+46     	; 0x1c2 <__do_clear_bss+0x8>
 194:	b5 91       	lpm	r27, Z+
 196:	a5 91       	lpm	r26, Z+
 198:	35 91       	lpm	r19, Z+
 19a:	25 91       	lpm	r18, Z+
 19c:	05 91       	lpm	r16, Z+
 19e:	07 fd       	sbrc	r16, 7
 1a0:	0c c0       	rjmp	.+24     	; 0x1ba <__do_clear_bss>
 1a2:	95 91       	lpm	r25, Z+
 1a4:	85 91       	lpm	r24, Z+
 1a6:	ef 01       	movw	r28, r30
 1a8:	f9 2f       	mov	r31, r25
 1aa:	e8 2f       	mov	r30, r24
 1ac:	05 90       	lpm	r0, Z+
 1ae:	0d 92       	st	X+, r0
 1b0:	a2 17       	cp	r26, r18
 1b2:	b3 07       	cpc	r27, r19
 1b4:	d9 f7       	brne	.-10     	; 0x1ac <__do_copy_data+0x20>
 1b6:	fe 01       	movw	r30, r28
 1b8:	04 c0       	rjmp	.+8      	; 0x1c2 <__do_clear_bss+0x8>

000001ba <__do_clear_bss>:
 1ba:	1d 92       	st	X+, r1
 1bc:	a2 17       	cp	r26, r18
 1be:	b3 07       	cpc	r27, r19
 1c0:	e1 f7       	brne	.-8      	; 0x1ba <__do_clear_bss>
 1c2:	e5 38       	cpi	r30, 0x85	; 133
 1c4:	f4 07       	cpc	r31, r20
 1c6:	31 f7       	brne	.-52     	; 0x194 <__do_copy_data+0x8>
 1c8:	0e 94 c4 08 	call	0x1188	; 0x1188 <main>
 1cc:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <_exit>

000001d0 <_exit>:
 1d0:	f8 94       	cli

000001d2 <__stop_program>:
 1d2:	ff cf       	rjmp	.-2      	; 0x1d2 <__stop_program>

Disassembly of section .text:

00002086 <__bad_interrupt>:
    2086:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.encoder_init:

00001eac <encoder_init>:
static volatile long int encoder_ticks_left = 0;
static volatile long int encoder_ticks_right = 0;

void encoder_init(void) {
	
	cli();
    1eac:	f8 94       	cli
	
	// Set digital inputs with internal pull-up (unsure if internal pull-up should be used)
	DDRD &= ~(1 << ENCA1);
    1eae:	8a b1       	in	r24, 0x0a	; 10
    1eb0:	8b 7f       	andi	r24, 0xFB	; 251
    1eb2:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA1);
    1eb4:	8b b1       	in	r24, 0x0b	; 11
    1eb6:	84 60       	ori	r24, 0x04	; 4
    1eb8:	8b b9       	out	0x0b, r24	; 11
	
	DDRD &= ~(1 << ENCA2);
    1eba:	8a b1       	in	r24, 0x0a	; 10
    1ebc:	87 7f       	andi	r24, 0xF7	; 247
    1ebe:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA2);
    1ec0:	8b b1       	in	r24, 0x0b	; 11
    1ec2:	88 60       	ori	r24, 0x08	; 8
    1ec4:	8b b9       	out	0x0b, r24	; 11
	
	// Rising edge of INT0 and INT1 will generate an interrupt request
	EICRA |= (1 << ISC00) | (1 << ISC01) | (1 << ISC10) | (1 << ISC11);
    1ec6:	e9 e6       	ldi	r30, 0x69	; 105
    1ec8:	f0 e0       	ldi	r31, 0x00	; 0
    1eca:	80 81       	ld	r24, Z
    1ecc:	8f 60       	ori	r24, 0x0F	; 15
    1ece:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0) | (1 << INT1);
    1ed0:	8d b3       	in	r24, 0x1d	; 29
    1ed2:	83 60       	ori	r24, 0x03	; 3
    1ed4:	8d bb       	out	0x1d, r24	; 29
	
	// Enable global interrupts
	sei();
    1ed6:	78 94       	sei
    1ed8:	08 95       	ret

Disassembly of section .text.encoder_read_tick:

00001f98 <encoder_read_tick>:
	
	
}

int encoder_read_tick(int encoder_pin) {
	if (PIND & (1<<encoder_pin)) {
    1f98:	29 b1       	in	r18, 0x09	; 9
    1f9a:	30 e0       	ldi	r19, 0x00	; 0
    1f9c:	02 c0       	rjmp	.+4      	; 0x1fa2 <encoder_read_tick+0xa>
    1f9e:	35 95       	asr	r19
    1fa0:	27 95       	ror	r18
    1fa2:	8a 95       	dec	r24
    1fa4:	e2 f7       	brpl	.-8      	; 0x1f9e <encoder_read_tick+0x6>
    1fa6:	c9 01       	movw	r24, r18
    1fa8:	81 70       	andi	r24, 0x01	; 1
    1faa:	99 27       	eor	r25, r25
    1fac:	20 ff       	sbrs	r18, 0
    1fae:	02 c0       	rjmp	.+4      	; 0x1fb4 <encoder_read_tick+0x1c>
		return 1;
    1fb0:	81 e0       	ldi	r24, 0x01	; 1
    1fb2:	90 e0       	ldi	r25, 0x00	; 0
	}
	return 0;
}
    1fb4:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_left:

00001b86 <encoder_get_accumulated_ticks_left>:

long encoder_get_accumulated_ticks_left(void) {
    1b86:	cf 93       	push	r28
    1b88:	df 93       	push	r29
    1b8a:	1f 92       	push	r1
    1b8c:	cd b7       	in	r28, 0x3d	; 61
    1b8e:	de b7       	in	r29, 0x3e	; 62
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1b90:	8f b7       	in	r24, 0x3f	; 63
    1b92:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1b94:	f8 94       	cli
    1b96:	81 e0       	ldi	r24, 0x01	; 1
    1b98:	09 c0       	rjmp	.+18     	; 0x1bac <encoder_get_accumulated_ticks_left+0x26>
		ticks = encoder_ticks_left;
    1b9a:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <encoder_ticks_left>
    1b9e:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <encoder_ticks_left+0x1>
    1ba2:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <encoder_ticks_left+0x2>
    1ba6:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <encoder_ticks_left+0x3>
	return 0;
}

long encoder_get_accumulated_ticks_left(void) {
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1baa:	80 e0       	ldi	r24, 0x00	; 0
    1bac:	81 11       	cpse	r24, r1
    1bae:	f5 cf       	rjmp	.-22     	; 0x1b9a <encoder_get_accumulated_ticks_left+0x14>
    1bb0:	ce 01       	movw	r24, r28
    1bb2:	01 96       	adiw	r24, 0x01	; 1
    1bb4:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1bb6:	fc 01       	movw	r30, r24
    1bb8:	84 91       	lpm	r24, Z
    1bba:	a7 fd       	sbrc	r26, 7
    1bbc:	80 81       	ld	r24, Z
    1bbe:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_left;
	}
	return ticks;
}
    1bc0:	cb 01       	movw	r24, r22
    1bc2:	ba 01       	movw	r22, r20
    1bc4:	0f 90       	pop	r0
    1bc6:	df 91       	pop	r29
    1bc8:	cf 91       	pop	r28
    1bca:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_right:

00001bcc <encoder_get_accumulated_ticks_right>:

long encoder_get_accumulated_ticks_right(void) {
    1bcc:	cf 93       	push	r28
    1bce:	df 93       	push	r29
    1bd0:	1f 92       	push	r1
    1bd2:	cd b7       	in	r28, 0x3d	; 61
    1bd4:	de b7       	in	r29, 0x3e	; 62
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1bd6:	8f b7       	in	r24, 0x3f	; 63
    1bd8:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1bda:	f8 94       	cli
    1bdc:	81 e0       	ldi	r24, 0x01	; 1
    1bde:	09 c0       	rjmp	.+18     	; 0x1bf2 <encoder_get_accumulated_ticks_right+0x26>
		ticks = encoder_ticks_right;
    1be0:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <encoder_ticks_right>
    1be4:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <encoder_ticks_right+0x1>
    1be8:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <encoder_ticks_right+0x2>
    1bec:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <encoder_ticks_right+0x3>
	return ticks;
}

long encoder_get_accumulated_ticks_right(void) {
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1bf0:	80 e0       	ldi	r24, 0x00	; 0
    1bf2:	81 11       	cpse	r24, r1
    1bf4:	f5 cf       	rjmp	.-22     	; 0x1be0 <encoder_get_accumulated_ticks_right+0x14>
    1bf6:	ce 01       	movw	r24, r28
    1bf8:	01 96       	adiw	r24, 0x01	; 1
    1bfa:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1bfc:	fc 01       	movw	r30, r24
    1bfe:	84 91       	lpm	r24, Z
    1c00:	a7 fd       	sbrc	r26, 7
    1c02:	80 81       	ld	r24, Z
    1c04:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_right;
	}
	return ticks;
}
    1c06:	cb 01       	movw	r24, r22
    1c08:	ba 01       	movw	r22, r20
    1c0a:	0f 90       	pop	r0
    1c0c:	df 91       	pop	r29
    1c0e:	cf 91       	pop	r28
    1c10:	08 95       	ret

Disassembly of section .text.__vector_1:

000015ce <__vector_1>:



// Interrupt service routine for INT0
// Triggered on rising edge of channel A encoder signal for left wheel
ISR(INT0_vect) {
    15ce:	1f 92       	push	r1
    15d0:	0f 92       	push	r0
    15d2:	0f b6       	in	r0, 0x3f	; 63
    15d4:	0f 92       	push	r0
    15d6:	11 24       	eor	r1, r1
    15d8:	2f 93       	push	r18
    15da:	3f 93       	push	r19
    15dc:	4f 93       	push	r20
    15de:	5f 93       	push	r21
    15e0:	6f 93       	push	r22
    15e2:	7f 93       	push	r23
    15e4:	8f 93       	push	r24
    15e6:	9f 93       	push	r25
    15e8:	af 93       	push	r26
    15ea:	bf 93       	push	r27
    15ec:	ef 93       	push	r30
    15ee:	ff 93       	push	r31
	int encb1 = encoder_read_tick(ENCB1);
    15f0:	84 e0       	ldi	r24, 0x04	; 4
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	0e 94 cc 0f 	call	0x1f98	; 0x1f98 <encoder_read_tick>
	if (encb1) {
    15f8:	89 2b       	or	r24, r25
    15fa:	a1 f0       	breq	.+40     	; 0x1624 <__vector_1+0x56>
		encoder_ticks_left++;
    15fc:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <encoder_ticks_left>
    1600:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <encoder_ticks_left+0x1>
    1604:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <encoder_ticks_left+0x2>
    1608:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <encoder_ticks_left+0x3>
    160c:	01 96       	adiw	r24, 0x01	; 1
    160e:	a1 1d       	adc	r26, r1
    1610:	b1 1d       	adc	r27, r1
    1612:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <encoder_ticks_left>
    1616:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <encoder_ticks_left+0x1>
    161a:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <encoder_ticks_left+0x2>
    161e:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <encoder_ticks_left+0x3>
    1622:	13 c0       	rjmp	.+38     	; 0x164a <__vector_1+0x7c>
	} else {
		encoder_ticks_left--;
    1624:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <encoder_ticks_left>
    1628:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <encoder_ticks_left+0x1>
    162c:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <encoder_ticks_left+0x2>
    1630:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <encoder_ticks_left+0x3>
    1634:	01 97       	sbiw	r24, 0x01	; 1
    1636:	a1 09       	sbc	r26, r1
    1638:	b1 09       	sbc	r27, r1
    163a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <encoder_ticks_left>
    163e:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <encoder_ticks_left+0x1>
    1642:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <encoder_ticks_left+0x2>
    1646:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <encoder_ticks_left+0x3>
	}
}
    164a:	ff 91       	pop	r31
    164c:	ef 91       	pop	r30
    164e:	bf 91       	pop	r27
    1650:	af 91       	pop	r26
    1652:	9f 91       	pop	r25
    1654:	8f 91       	pop	r24
    1656:	7f 91       	pop	r23
    1658:	6f 91       	pop	r22
    165a:	5f 91       	pop	r21
    165c:	4f 91       	pop	r20
    165e:	3f 91       	pop	r19
    1660:	2f 91       	pop	r18
    1662:	0f 90       	pop	r0
    1664:	0f be       	out	0x3f, r0	; 63
    1666:	0f 90       	pop	r0
    1668:	1f 90       	pop	r1
    166a:	18 95       	reti

Disassembly of section .text.__vector_2:

0000166c <__vector_2>:

// Interrupt service routine for INT1
// Triggered on rising edge of channel A encoder signal for right wheel
ISR(INT1_vect) {
    166c:	1f 92       	push	r1
    166e:	0f 92       	push	r0
    1670:	0f b6       	in	r0, 0x3f	; 63
    1672:	0f 92       	push	r0
    1674:	11 24       	eor	r1, r1
    1676:	2f 93       	push	r18
    1678:	3f 93       	push	r19
    167a:	4f 93       	push	r20
    167c:	5f 93       	push	r21
    167e:	6f 93       	push	r22
    1680:	7f 93       	push	r23
    1682:	8f 93       	push	r24
    1684:	9f 93       	push	r25
    1686:	af 93       	push	r26
    1688:	bf 93       	push	r27
    168a:	ef 93       	push	r30
    168c:	ff 93       	push	r31
	int encb2 = encoder_read_tick(ENCB2);
    168e:	87 e0       	ldi	r24, 0x07	; 7
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	0e 94 cc 0f 	call	0x1f98	; 0x1f98 <encoder_read_tick>
	if (encb2) {
    1696:	89 2b       	or	r24, r25
    1698:	a1 f0       	breq	.+40     	; 0x16c2 <__vector_2+0x56>
		encoder_ticks_right++;
    169a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_right>
    169e:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_right+0x1>
    16a2:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <encoder_ticks_right+0x2>
    16a6:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <encoder_ticks_right+0x3>
    16aa:	01 96       	adiw	r24, 0x01	; 1
    16ac:	a1 1d       	adc	r26, r1
    16ae:	b1 1d       	adc	r27, r1
    16b0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <encoder_ticks_right>
    16b4:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <encoder_ticks_right+0x1>
    16b8:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <encoder_ticks_right+0x2>
    16bc:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <encoder_ticks_right+0x3>
    16c0:	13 c0       	rjmp	.+38     	; 0x16e8 <__vector_2+0x7c>
		} 
	else {
		encoder_ticks_right--;
    16c2:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_right>
    16c6:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_right+0x1>
    16ca:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <encoder_ticks_right+0x2>
    16ce:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <encoder_ticks_right+0x3>
    16d2:	01 97       	sbiw	r24, 0x01	; 1
    16d4:	a1 09       	sbc	r26, r1
    16d6:	b1 09       	sbc	r27, r1
    16d8:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <encoder_ticks_right>
    16dc:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <encoder_ticks_right+0x1>
    16e0:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <encoder_ticks_right+0x2>
    16e4:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <encoder_ticks_right+0x3>
	}
    16e8:	ff 91       	pop	r31
    16ea:	ef 91       	pop	r30
    16ec:	bf 91       	pop	r27
    16ee:	af 91       	pop	r26
    16f0:	9f 91       	pop	r25
    16f2:	8f 91       	pop	r24
    16f4:	7f 91       	pop	r23
    16f6:	6f 91       	pop	r22
    16f8:	5f 91       	pop	r21
    16fa:	4f 91       	pop	r20
    16fc:	3f 91       	pop	r19
    16fe:	2f 91       	pop	r18
    1700:	0f 90       	pop	r0
    1702:	0f be       	out	0x3f, r0	; 63
    1704:	0f 90       	pop	r0
    1706:	1f 90       	pop	r1
    1708:	18 95       	reti

Disassembly of section .text.abs:

00001e7c <abs>:
 *  Author: thoander
 */ 

#include "misc.h"

float abs(float val) {
    1e7c:	cf 92       	push	r12
    1e7e:	df 92       	push	r13
    1e80:	ef 92       	push	r14
    1e82:	ff 92       	push	r15
    1e84:	6b 01       	movw	r12, r22
    1e86:	7c 01       	movw	r14, r24
	if (val < 0) {
    1e88:	20 e0       	ldi	r18, 0x00	; 0
    1e8a:	30 e0       	ldi	r19, 0x00	; 0
    1e8c:	a9 01       	movw	r20, r18
    1e8e:	0e 94 2e 10 	call	0x205c	; 0x205c <__cmpsf2>
    1e92:	88 23       	and	r24, r24
    1e94:	24 f4       	brge	.+8      	; 0x1e9e <abs+0x22>
		return val*(-1.0);
    1e96:	c7 01       	movw	r24, r14
    1e98:	b6 01       	movw	r22, r12
    1e9a:	90 58       	subi	r25, 0x80	; 128
    1e9c:	02 c0       	rjmp	.+4      	; 0x1ea2 <abs+0x26>
	}
	return val;
    1e9e:	c7 01       	movw	r24, r14
    1ea0:	b6 01       	movw	r22, r12
    1ea2:	ff 90       	pop	r15
    1ea4:	ef 90       	pop	r14
    1ea6:	df 90       	pop	r13
    1ea8:	cf 90       	pop	r12
    1eaa:	08 95       	ret

Disassembly of section .text.motor_init:

00001fb6 <motor_init>:


void motor_init(void) {
	
	// For motor control
	pwm_init();
    1fb6:	0e 94 ea 0f 	call	0x1fd4	; 0x1fd4 <pwm_init>
	
	// Set direction control pins to L298N as outputs
	DDRC |= (1 << OUT1);
    1fba:	87 b1       	in	r24, 0x07	; 7
    1fbc:	81 60       	ori	r24, 0x01	; 1
    1fbe:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT2);
    1fc0:	87 b1       	in	r24, 0x07	; 7
    1fc2:	82 60       	ori	r24, 0x02	; 2
    1fc4:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT3);
    1fc6:	87 b1       	in	r24, 0x07	; 7
    1fc8:	84 60       	ori	r24, 0x04	; 4
    1fca:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT4);
    1fcc:	87 b1       	in	r24, 0x07	; 7
    1fce:	88 60       	ori	r24, 0x08	; 8
    1fd0:	87 b9       	out	0x07, r24	; 7
    1fd2:	08 95       	ret

Disassembly of section .text.set_left_motor_dir:

00001f78 <set_left_motor_dir>:
}

void set_left_motor_dir(int dir) {
	if (dir == FORWARD) {
    1f78:	01 97       	sbiw	r24, 0x01	; 1
    1f7a:	39 f4       	brne	.+14     	; 0x1f8a <set_left_motor_dir+0x12>
		PORTC |= (1 << OUT1);
    1f7c:	88 b1       	in	r24, 0x08	; 8
    1f7e:	81 60       	ori	r24, 0x01	; 1
    1f80:	88 b9       	out	0x08, r24	; 8
		PORTC &= ~(1 << OUT2);
    1f82:	88 b1       	in	r24, 0x08	; 8
    1f84:	8d 7f       	andi	r24, 0xFD	; 253
    1f86:	88 b9       	out	0x08, r24	; 8
    1f88:	08 95       	ret
	} else {
		PORTC &= ~(1 << OUT1);
    1f8a:	88 b1       	in	r24, 0x08	; 8
    1f8c:	8e 7f       	andi	r24, 0xFE	; 254
    1f8e:	88 b9       	out	0x08, r24	; 8
		PORTC |= (1 << OUT2);
    1f90:	88 b1       	in	r24, 0x08	; 8
    1f92:	82 60       	ori	r24, 0x02	; 2
    1f94:	88 b9       	out	0x08, r24	; 8
    1f96:	08 95       	ret

Disassembly of section .text.motor_left:

00001ce2 <motor_left>:
		PORTC &= ~(1 << OUT3);
		PORTC |= (1 << OUT4);
	}
}

void motor_left(float duty) {
    1ce2:	cf 92       	push	r12
    1ce4:	df 92       	push	r13
    1ce6:	ef 92       	push	r14
    1ce8:	ff 92       	push	r15
    1cea:	6b 01       	movw	r12, r22
    1cec:	7c 01       	movw	r14, r24
	if (duty < 0) {
    1cee:	20 e0       	ldi	r18, 0x00	; 0
    1cf0:	30 e0       	ldi	r19, 0x00	; 0
    1cf2:	a9 01       	movw	r20, r18
    1cf4:	0e 94 2e 10 	call	0x205c	; 0x205c <__cmpsf2>
    1cf8:	88 23       	and	r24, r24
    1cfa:	2c f4       	brge	.+10     	; 0x1d06 <motor_left+0x24>
		set_left_motor_dir(BACKWARD);
    1cfc:	80 e0       	ldi	r24, 0x00	; 0
    1cfe:	90 e0       	ldi	r25, 0x00	; 0
    1d00:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <set_left_motor_dir>
    1d04:	04 c0       	rjmp	.+8      	; 0x1d0e <motor_left+0x2c>
	} else {
		set_left_motor_dir(FORWARD);
    1d06:	81 e0       	ldi	r24, 0x01	; 1
    1d08:	90 e0       	ldi	r25, 0x00	; 0
    1d0a:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <set_left_motor_dir>
	}
	float abs_duty = abs(duty);
    1d0e:	c7 01       	movw	r24, r14
    1d10:	b6 01       	movw	r22, r12
    1d12:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <abs>
	pwm_set_duty_cycle_left(abs_duty);	
    1d16:	0e 94 84 0f 	call	0x1f08	; 0x1f08 <pwm_set_duty_cycle_left>
}
    1d1a:	ff 90       	pop	r15
    1d1c:	ef 90       	pop	r14
    1d1e:	df 90       	pop	r13
    1d20:	cf 90       	pop	r12
    1d22:	08 95       	ret

Disassembly of section .text.pwm_init:

00001fd4 <pwm_init>:
#include "pwm.h"

void pwm_init(void) {
	
	// Set as output (one for each wheel)
	DDRD |= (1 << PWM1);
    1fd4:	8a b1       	in	r24, 0x0a	; 10
    1fd6:	80 64       	ori	r24, 0x40	; 64
    1fd8:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << PWM2);
    1fda:	8a b1       	in	r24, 0x0a	; 10
    1fdc:	80 62       	ori	r24, 0x20	; 32
    1fde:	8a b9       	out	0x0a, r24	; 10
	TCCR0B |= (1 << CS02) | (1 << CS00); // 1024 prescalar
	*/
	
	// Phase correct PWM mode
	// PWM frequency will be (with no prescaler) 31kHz (outside audible spectrum)
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00);
    1fe0:	84 b5       	in	r24, 0x24	; 36
    1fe2:	81 6a       	ori	r24, 0xA1	; 161
    1fe4:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS00); // no pre-scaling
    1fe6:	85 b5       	in	r24, 0x25	; 37
    1fe8:	81 60       	ori	r24, 0x01	; 1
    1fea:	85 bd       	out	0x25, r24	; 37
    1fec:	08 95       	ret

Disassembly of section .text.pwm_set_duty_cycle_left:

00001f08 <pwm_set_duty_cycle_left>:
	
}

void pwm_set_duty_cycle_left(float d) {
	// value should be between 0-255
	float value = d / 100.0 * (255 - MIN_PWM_DUTY_LEFT) + MIN_PWM_DUTY_LEFT;
    1f08:	20 e0       	ldi	r18, 0x00	; 0
    1f0a:	30 e0       	ldi	r19, 0x00	; 0
    1f0c:	48 ec       	ldi	r20, 0xC8	; 200
    1f0e:	52 e4       	ldi	r21, 0x42	; 66
    1f10:	0e 94 38 10 	call	0x2070	; 0x2070 <__divsf3>
    1f14:	20 e0       	ldi	r18, 0x00	; 0
    1f16:	30 e0       	ldi	r19, 0x00	; 0
    1f18:	40 ef       	ldi	r20, 0xF0	; 240
    1f1a:	52 e4       	ldi	r21, 0x42	; 66
    1f1c:	0e 94 3c 10 	call	0x2078	; 0x2078 <__mulsf3>
    1f20:	20 e0       	ldi	r18, 0x00	; 0
    1f22:	30 e0       	ldi	r19, 0x00	; 0
    1f24:	47 e0       	ldi	r20, 0x07	; 7
    1f26:	53 e4       	ldi	r21, 0x43	; 67
    1f28:	0e 94 06 10 	call	0x200c	; 0x200c <__addsf3>
	OCR0A = (uint8_t)value;
    1f2c:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <__fixunssfsi>
    1f30:	67 bd       	out	0x27, r22	; 39
    1f32:	08 95       	ret

Disassembly of section .text.PID_controller_set_parameters:

000018c0 <PID_controller_set_parameters>:

void PID_controller_set_reference(PID_controller *pid, float ref) {
	pid->reference = ref;
}

void PID_controller_set_parameters(PID_controller *pid, float P, float I, float D, float loop_period) {
    18c0:	8f 92       	push	r8
    18c2:	9f 92       	push	r9
    18c4:	af 92       	push	r10
    18c6:	bf 92       	push	r11
    18c8:	cf 92       	push	r12
    18ca:	df 92       	push	r13
    18cc:	ef 92       	push	r14
    18ce:	ff 92       	push	r15
    18d0:	0f 93       	push	r16
    18d2:	1f 93       	push	r17
    18d4:	cf 93       	push	r28
    18d6:	df 93       	push	r29
    18d8:	1f 92       	push	r1
    18da:	cd b7       	in	r28, 0x3d	; 61
    18dc:	de b7       	in	r29, 0x3e	; 62
    18de:	fc 01       	movw	r30, r24
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    18e0:	8f b7       	in	r24, 0x3f	; 63
    18e2:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    18e4:	f8 94       	cli
    18e6:	81 e0       	ldi	r24, 0x01	; 1
    18e8:	11 c0       	rjmp	.+34     	; 0x190c <PID_controller_set_parameters+0x4c>
		pid->Kp = P;
    18ea:	44 8b       	std	Z+20, r20	; 0x14
    18ec:	55 8b       	std	Z+21, r21	; 0x15
    18ee:	66 8b       	std	Z+22, r22	; 0x16
    18f0:	77 8b       	std	Z+23, r23	; 0x17
		pid->Ki = I;
    18f2:	00 8f       	std	Z+24, r16	; 0x18
    18f4:	11 8f       	std	Z+25, r17	; 0x19
    18f6:	22 8f       	std	Z+26, r18	; 0x1a
    18f8:	33 8f       	std	Z+27, r19	; 0x1b
		pid->Kd = D;
    18fa:	c4 8e       	std	Z+28, r12	; 0x1c
    18fc:	d5 8e       	std	Z+29, r13	; 0x1d
    18fe:	e6 8e       	std	Z+30, r14	; 0x1e
    1900:	f7 8e       	std	Z+31, r15	; 0x1f
		pid->loop_period = loop_period;
    1902:	80 a2       	std	Z+32, r8	; 0x20
    1904:	91 a2       	std	Z+33, r9	; 0x21
    1906:	a2 a2       	std	Z+34, r10	; 0x22
    1908:	b3 a2       	std	Z+35, r11	; 0x23
void PID_controller_set_reference(PID_controller *pid, float ref) {
	pid->reference = ref;
}

void PID_controller_set_parameters(PID_controller *pid, float P, float I, float D, float loop_period) {
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    190a:	80 e0       	ldi	r24, 0x00	; 0
    190c:	81 11       	cpse	r24, r1
    190e:	ed cf       	rjmp	.-38     	; 0x18ea <PID_controller_set_parameters+0x2a>
    1910:	ce 01       	movw	r24, r28
    1912:	01 96       	adiw	r24, 0x01	; 1
    1914:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1916:	fc 01       	movw	r30, r24
    1918:	84 91       	lpm	r24, Z
    191a:	a7 fd       	sbrc	r26, 7
    191c:	80 81       	ld	r24, Z
    191e:	8f bf       	out	0x3f, r24	; 63
		pid->Kp = P;
		pid->Ki = I;
		pid->Kd = D;
		pid->loop_period = loop_period;
	}
}
    1920:	0f 90       	pop	r0
    1922:	df 91       	pop	r29
    1924:	cf 91       	pop	r28
    1926:	1f 91       	pop	r17
    1928:	0f 91       	pop	r16
    192a:	ff 90       	pop	r15
    192c:	ef 90       	pop	r14
    192e:	df 90       	pop	r13
    1930:	cf 90       	pop	r12
    1932:	bf 90       	pop	r11
    1934:	af 90       	pop	r10
    1936:	9f 90       	pop	r9
    1938:	8f 90       	pop	r8
    193a:	08 95       	ret

Disassembly of section .text.PID_controller_init:

00001a2e <PID_controller_init>:

void PID_controller_init(PID_controller *pid) {
    1a2e:	fc 01       	movw	r30, r24
	pid->Kp = 0.0;
    1a30:	14 8a       	std	Z+20, r1	; 0x14
    1a32:	15 8a       	std	Z+21, r1	; 0x15
    1a34:	16 8a       	std	Z+22, r1	; 0x16
    1a36:	17 8a       	std	Z+23, r1	; 0x17
	pid->Ki = 0.0;
    1a38:	10 8e       	std	Z+24, r1	; 0x18
    1a3a:	11 8e       	std	Z+25, r1	; 0x19
    1a3c:	12 8e       	std	Z+26, r1	; 0x1a
    1a3e:	13 8e       	std	Z+27, r1	; 0x1b
	pid->Kp = 0.0;
	pid->loop_period = 0.0;
    1a40:	10 a2       	std	Z+32, r1	; 0x20
    1a42:	11 a2       	std	Z+33, r1	; 0x21
    1a44:	12 a2       	std	Z+34, r1	; 0x22
    1a46:	13 a2       	std	Z+35, r1	; 0x23
	pid->reference = 0.0;
    1a48:	10 82       	st	Z, r1
    1a4a:	11 82       	std	Z+1, r1	; 0x01
    1a4c:	12 82       	std	Z+2, r1	; 0x02
    1a4e:	13 82       	std	Z+3, r1	; 0x03
	pid->prev_reference = 0.0;
    1a50:	14 82       	std	Z+4, r1	; 0x04
    1a52:	15 82       	std	Z+5, r1	; 0x05
    1a54:	16 82       	std	Z+6, r1	; 0x06
    1a56:	17 82       	std	Z+7, r1	; 0x07
	pid->error = 0.0;
    1a58:	10 86       	std	Z+8, r1	; 0x08
    1a5a:	11 86       	std	Z+9, r1	; 0x09
    1a5c:	12 86       	std	Z+10, r1	; 0x0a
    1a5e:	13 86       	std	Z+11, r1	; 0x0b
	pid->prev_error = 0.0;
    1a60:	14 86       	std	Z+12, r1	; 0x0c
    1a62:	15 86       	std	Z+13, r1	; 0x0d
    1a64:	16 86       	std	Z+14, r1	; 0x0e
    1a66:	17 86       	std	Z+15, r1	; 0x0f
	pid->integral_error = 0.0;
    1a68:	10 8a       	std	Z+16, r1	; 0x10
    1a6a:	11 8a       	std	Z+17, r1	; 0x11
    1a6c:	12 8a       	std	Z+18, r1	; 0x12
    1a6e:	13 8a       	std	Z+19, r1	; 0x13
	pid->max_control_action = 100;
    1a70:	80 e0       	ldi	r24, 0x00	; 0
    1a72:	90 e0       	ldi	r25, 0x00	; 0
    1a74:	a8 ec       	ldi	r26, 0xC8	; 200
    1a76:	b2 e4       	ldi	r27, 0x42	; 66
    1a78:	84 a3       	std	Z+36, r24	; 0x24
    1a7a:	95 a3       	std	Z+37, r25	; 0x25
    1a7c:	a6 a3       	std	Z+38, r26	; 0x26
    1a7e:	b7 a3       	std	Z+39, r27	; 0x27
	pid->min_control_action = -100; 
    1a80:	80 e0       	ldi	r24, 0x00	; 0
    1a82:	90 e0       	ldi	r25, 0x00	; 0
    1a84:	a8 ec       	ldi	r26, 0xC8	; 200
    1a86:	b2 ec       	ldi	r27, 0xC2	; 194
    1a88:	80 a7       	std	Z+40, r24	; 0x28
    1a8a:	91 a7       	std	Z+41, r25	; 0x29
    1a8c:	a2 a7       	std	Z+42, r26	; 0x2a
    1a8e:	b3 a7       	std	Z+43, r27	; 0x2b
    1a90:	08 95       	ret

Disassembly of section .text.PID_controller_get_control_action:

0000094e <PID_controller_get_control_action>:
float Kd = 0.0;



void PID_controller_set_reference(PID_controller *pid, float ref) {
	pid->reference = ref;
 94e:	4f 92       	push	r4
 950:	5f 92       	push	r5
 952:	6f 92       	push	r6
 954:	7f 92       	push	r7
 956:	8f 92       	push	r8
 958:	9f 92       	push	r9
 95a:	af 92       	push	r10
 95c:	bf 92       	push	r11
 95e:	cf 92       	push	r12
 960:	df 92       	push	r13
 962:	ef 92       	push	r14
 964:	ff 92       	push	r15
 966:	cf 93       	push	r28
 968:	df 93       	push	r29
 96a:	cd b7       	in	r28, 0x3d	; 61
 96c:	de b7       	in	r29, 0x3e	; 62
 96e:	62 97       	sbiw	r28, 0x12	; 18
 970:	0f b6       	in	r0, 0x3f	; 63
 972:	f8 94       	cli
 974:	de bf       	out	0x3e, r29	; 62
 976:	0f be       	out	0x3f, r0	; 63
 978:	cd bf       	out	0x3d, r28	; 61
 97a:	9a 8b       	std	Y+18, r25	; 0x12
 97c:	89 8b       	std	Y+17, r24	; 0x11
 97e:	6a 01       	movw	r12, r20
 980:	7b 01       	movw	r14, r22
 982:	dc 01       	movw	r26, r24
 984:	54 96       	adiw	r26, 0x14	; 20
 986:	6d 91       	ld	r22, X+
 988:	7d 91       	ld	r23, X+
 98a:	8d 91       	ld	r24, X+
 98c:	9c 91       	ld	r25, X
 98e:	57 97       	sbiw	r26, 0x17	; 23
 990:	a7 01       	movw	r20, r14
 992:	96 01       	movw	r18, r12
 994:	0e 94 3c 10 	call	0x2078	; 0x2078 <__mulsf3>
 998:	6d 87       	std	Y+13, r22	; 0x0d
 99a:	7e 87       	std	Y+14, r23	; 0x0e
 99c:	8f 87       	std	Y+15, r24	; 0x0f
 99e:	98 8b       	std	Y+16, r25	; 0x10
 9a0:	a9 89       	ldd	r26, Y+17	; 0x11
 9a2:	ba 89       	ldd	r27, Y+18	; 0x12
 9a4:	58 96       	adiw	r26, 0x18	; 24
 9a6:	2d 91       	ld	r18, X+
 9a8:	3d 91       	ld	r19, X+
 9aa:	4d 91       	ld	r20, X+
 9ac:	5c 91       	ld	r21, X
 9ae:	5b 97       	sbiw	r26, 0x1b	; 27
 9b0:	29 83       	std	Y+1, r18	; 0x01
 9b2:	3a 83       	std	Y+2, r19	; 0x02
 9b4:	4b 83       	std	Y+3, r20	; 0x03
 9b6:	5c 83       	std	Y+4, r21	; 0x04
 9b8:	50 96       	adiw	r26, 0x10	; 16
 9ba:	2d 91       	ld	r18, X+
 9bc:	3d 91       	ld	r19, X+
 9be:	4d 91       	ld	r20, X+
 9c0:	5c 91       	ld	r21, X
 9c2:	53 97       	sbiw	r26, 0x13	; 19
 9c4:	29 87       	std	Y+9, r18	; 0x09
 9c6:	3a 87       	std	Y+10, r19	; 0x0a
 9c8:	4b 87       	std	Y+11, r20	; 0x0b
 9ca:	5c 87       	std	Y+12, r21	; 0x0c
 9cc:	69 81       	ldd	r22, Y+1	; 0x01
 9ce:	7a 81       	ldd	r23, Y+2	; 0x02
 9d0:	8b 81       	ldd	r24, Y+3	; 0x03
 9d2:	9c 81       	ldd	r25, Y+4	; 0x04
 9d4:	0e 94 3c 10 	call	0x2078	; 0x2078 <__mulsf3>
 9d8:	2b 01       	movw	r4, r22
 9da:	3c 01       	movw	r6, r24
 9dc:	e9 89       	ldd	r30, Y+17	; 0x11
 9de:	fa 89       	ldd	r31, Y+18	; 0x12
 9e0:	84 8c       	ldd	r8, Z+28	; 0x1c
 9e2:	95 8c       	ldd	r9, Z+29	; 0x1d
 9e4:	a6 8c       	ldd	r10, Z+30	; 0x1e
 9e6:	b7 8c       	ldd	r11, Z+31	; 0x1f
 9e8:	24 85       	ldd	r18, Z+12	; 0x0c
 9ea:	35 85       	ldd	r19, Z+13	; 0x0d
 9ec:	46 85       	ldd	r20, Z+14	; 0x0e
 9ee:	57 85       	ldd	r21, Z+15	; 0x0f
 9f0:	c7 01       	movw	r24, r14
 9f2:	b6 01       	movw	r22, r12
 9f4:	0e 94 05 10 	call	0x200a	; 0x200a <__subsf3>
 9f8:	9b 01       	movw	r18, r22
 9fa:	ac 01       	movw	r20, r24
 9fc:	c5 01       	movw	r24, r10
 9fe:	b4 01       	movw	r22, r8
 a00:	0e 94 3c 10 	call	0x2078	; 0x2078 <__mulsf3>
 a04:	a9 89       	ldd	r26, Y+17	; 0x11
 a06:	ba 89       	ldd	r27, Y+18	; 0x12
 a08:	90 96       	adiw	r26, 0x20	; 32
 a0a:	2d 91       	ld	r18, X+
 a0c:	3d 91       	ld	r19, X+
 a0e:	4d 91       	ld	r20, X+
 a10:	5c 91       	ld	r21, X
 a12:	93 97       	sbiw	r26, 0x23	; 35
 a14:	2d 83       	std	Y+5, r18	; 0x05
 a16:	3e 83       	std	Y+6, r19	; 0x06
 a18:	4f 83       	std	Y+7, r20	; 0x07
 a1a:	58 87       	std	Y+8, r21	; 0x08
 a1c:	0e 94 38 10 	call	0x2070	; 0x2070 <__divsf3>
 a20:	4b 01       	movw	r8, r22
 a22:	5c 01       	movw	r10, r24
 a24:	a3 01       	movw	r20, r6
 a26:	92 01       	movw	r18, r4
 a28:	6d 85       	ldd	r22, Y+13	; 0x0d
 a2a:	7e 85       	ldd	r23, Y+14	; 0x0e
 a2c:	8f 85       	ldd	r24, Y+15	; 0x0f
 a2e:	98 89       	ldd	r25, Y+16	; 0x10
 a30:	0e 94 06 10 	call	0x200c	; 0x200c <__addsf3>
 a34:	9b 01       	movw	r18, r22
 a36:	ac 01       	movw	r20, r24
 a38:	c5 01       	movw	r24, r10
 a3a:	b4 01       	movw	r22, r8
 a3c:	0e 94 06 10 	call	0x200c	; 0x200c <__addsf3>
 a40:	b6 2e       	mov	r11, r22
 a42:	a7 2e       	mov	r10, r23
 a44:	98 2e       	mov	r9, r24
 a46:	89 2e       	mov	r8, r25
 a48:	e9 89       	ldd	r30, Y+17	; 0x11
 a4a:	fa 89       	ldd	r31, Y+18	; 0x12
 a4c:	74 a0       	ldd	r7, Z+36	; 0x24
 a4e:	65 a0       	ldd	r6, Z+37	; 0x25
 a50:	56 a0       	ldd	r5, Z+38	; 0x26
 a52:	47 a0       	ldd	r4, Z+39	; 0x27
 a54:	27 2d       	mov	r18, r7
 a56:	36 2d       	mov	r19, r6
 a58:	45 2d       	mov	r20, r5
 a5a:	54 2d       	mov	r21, r4
 a5c:	0e 94 33 10 	call	0x2066	; 0x2066 <__gesf2>
 a60:	18 16       	cp	r1, r24
 a62:	ec f5       	brge	.+122    	; 0xade <PID_controller_get_control_action+0x190>
 a64:	20 e0       	ldi	r18, 0x00	; 0
 a66:	30 e0       	ldi	r19, 0x00	; 0
 a68:	a9 01       	movw	r20, r18
 a6a:	69 81       	ldd	r22, Y+1	; 0x01
 a6c:	7a 81       	ldd	r23, Y+2	; 0x02
 a6e:	8b 81       	ldd	r24, Y+3	; 0x03
 a70:	9c 81       	ldd	r25, Y+4	; 0x04
 a72:	0e 94 2e 10 	call	0x205c	; 0x205c <__cmpsf2>
 a76:	88 23       	and	r24, r24
 a78:	09 f4       	brne	.+2      	; 0xa7c <PID_controller_get_control_action+0x12e>
 a7a:	83 c0       	rjmp	.+262    	; 0xb82 <PID_controller_get_control_action+0x234>
 a7c:	29 81       	ldd	r18, Y+1	; 0x01
 a7e:	3a 81       	ldd	r19, Y+2	; 0x02
 a80:	4b 81       	ldd	r20, Y+3	; 0x03
 a82:	5c 81       	ldd	r21, Y+4	; 0x04
 a84:	6d 81       	ldd	r22, Y+5	; 0x05
 a86:	7e 81       	ldd	r23, Y+6	; 0x06
 a88:	8f 81       	ldd	r24, Y+7	; 0x07
 a8a:	98 85       	ldd	r25, Y+8	; 0x08
 a8c:	0e 94 38 10 	call	0x2070	; 0x2070 <__divsf3>
 a90:	69 83       	std	Y+1, r22	; 0x01
 a92:	7a 83       	std	Y+2, r23	; 0x02
 a94:	8b 83       	std	Y+3, r24	; 0x03
 a96:	9c 83       	std	Y+4, r25	; 0x04
 a98:	2b 2d       	mov	r18, r11
 a9a:	3a 2d       	mov	r19, r10
 a9c:	49 2d       	mov	r20, r9
 a9e:	58 2d       	mov	r21, r8
 aa0:	67 2d       	mov	r22, r7
 aa2:	76 2d       	mov	r23, r6
 aa4:	85 2d       	mov	r24, r5
 aa6:	94 2d       	mov	r25, r4
 aa8:	0e 94 05 10 	call	0x200a	; 0x200a <__subsf3>
 aac:	9b 01       	movw	r18, r22
 aae:	ac 01       	movw	r20, r24
 ab0:	69 81       	ldd	r22, Y+1	; 0x01
 ab2:	7a 81       	ldd	r23, Y+2	; 0x02
 ab4:	8b 81       	ldd	r24, Y+3	; 0x03
 ab6:	9c 81       	ldd	r25, Y+4	; 0x04
 ab8:	0e 94 3c 10 	call	0x2078	; 0x2078 <__mulsf3>
 abc:	9b 01       	movw	r18, r22
 abe:	ac 01       	movw	r20, r24
 ac0:	69 85       	ldd	r22, Y+9	; 0x09
 ac2:	7a 85       	ldd	r23, Y+10	; 0x0a
 ac4:	8b 85       	ldd	r24, Y+11	; 0x0b
 ac6:	9c 85       	ldd	r25, Y+12	; 0x0c
 ac8:	0e 94 06 10 	call	0x200c	; 0x200c <__addsf3>
 acc:	a9 89       	ldd	r26, Y+17	; 0x11
 ace:	ba 89       	ldd	r27, Y+18	; 0x12
 ad0:	50 96       	adiw	r26, 0x10	; 16
 ad2:	6d 93       	st	X+, r22
 ad4:	7d 93       	st	X+, r23
 ad6:	8d 93       	st	X+, r24
 ad8:	9c 93       	st	X, r25
 ada:	53 97       	sbiw	r26, 0x13	; 19
 adc:	52 c0       	rjmp	.+164    	; 0xb82 <PID_controller_get_control_action+0x234>
 ade:	e9 89       	ldd	r30, Y+17	; 0x11
 ae0:	fa 89       	ldd	r31, Y+18	; 0x12
 ae2:	70 a4       	ldd	r7, Z+40	; 0x28
 ae4:	61 a4       	ldd	r6, Z+41	; 0x29
 ae6:	52 a4       	ldd	r5, Z+42	; 0x2a
 ae8:	43 a4       	ldd	r4, Z+43	; 0x2b
 aea:	27 2d       	mov	r18, r7
 aec:	36 2d       	mov	r19, r6
 aee:	45 2d       	mov	r20, r5
 af0:	54 2d       	mov	r21, r4
 af2:	6b 2d       	mov	r22, r11
 af4:	7a 2d       	mov	r23, r10
 af6:	89 2d       	mov	r24, r9
 af8:	98 2d       	mov	r25, r8
 afa:	0e 94 2e 10 	call	0x205c	; 0x205c <__cmpsf2>
 afe:	88 23       	and	r24, r24
 b00:	e4 f5       	brge	.+120    	; 0xb7a <PID_controller_get_control_action+0x22c>
 b02:	20 e0       	ldi	r18, 0x00	; 0
 b04:	30 e0       	ldi	r19, 0x00	; 0
 b06:	a9 01       	movw	r20, r18
 b08:	69 81       	ldd	r22, Y+1	; 0x01
 b0a:	7a 81       	ldd	r23, Y+2	; 0x02
 b0c:	8b 81       	ldd	r24, Y+3	; 0x03
 b0e:	9c 81       	ldd	r25, Y+4	; 0x04
 b10:	0e 94 2e 10 	call	0x205c	; 0x205c <__cmpsf2>
 b14:	88 23       	and	r24, r24
 b16:	a9 f1       	breq	.+106    	; 0xb82 <PID_controller_get_control_action+0x234>
 b18:	29 81       	ldd	r18, Y+1	; 0x01
 b1a:	3a 81       	ldd	r19, Y+2	; 0x02
 b1c:	4b 81       	ldd	r20, Y+3	; 0x03
 b1e:	5c 81       	ldd	r21, Y+4	; 0x04
 b20:	6d 81       	ldd	r22, Y+5	; 0x05
 b22:	7e 81       	ldd	r23, Y+6	; 0x06
 b24:	8f 81       	ldd	r24, Y+7	; 0x07
 b26:	98 85       	ldd	r25, Y+8	; 0x08
 b28:	0e 94 38 10 	call	0x2070	; 0x2070 <__divsf3>
 b2c:	69 83       	std	Y+1, r22	; 0x01
 b2e:	7a 83       	std	Y+2, r23	; 0x02
 b30:	8b 83       	std	Y+3, r24	; 0x03
 b32:	9c 83       	std	Y+4, r25	; 0x04
 b34:	2b 2d       	mov	r18, r11
 b36:	3a 2d       	mov	r19, r10
 b38:	49 2d       	mov	r20, r9
 b3a:	58 2d       	mov	r21, r8
 b3c:	67 2d       	mov	r22, r7
 b3e:	76 2d       	mov	r23, r6
 b40:	85 2d       	mov	r24, r5
 b42:	94 2d       	mov	r25, r4
 b44:	0e 94 05 10 	call	0x200a	; 0x200a <__subsf3>
 b48:	9b 01       	movw	r18, r22
 b4a:	ac 01       	movw	r20, r24
 b4c:	69 81       	ldd	r22, Y+1	; 0x01
 b4e:	7a 81       	ldd	r23, Y+2	; 0x02
 b50:	8b 81       	ldd	r24, Y+3	; 0x03
 b52:	9c 81       	ldd	r25, Y+4	; 0x04
 b54:	0e 94 3c 10 	call	0x2078	; 0x2078 <__mulsf3>
 b58:	9b 01       	movw	r18, r22
 b5a:	ac 01       	movw	r20, r24
 b5c:	69 85       	ldd	r22, Y+9	; 0x09
 b5e:	7a 85       	ldd	r23, Y+10	; 0x0a
 b60:	8b 85       	ldd	r24, Y+11	; 0x0b
 b62:	9c 85       	ldd	r25, Y+12	; 0x0c
 b64:	0e 94 06 10 	call	0x200c	; 0x200c <__addsf3>
 b68:	a9 89       	ldd	r26, Y+17	; 0x11
 b6a:	ba 89       	ldd	r27, Y+18	; 0x12
 b6c:	50 96       	adiw	r26, 0x10	; 16
 b6e:	6d 93       	st	X+, r22
 b70:	7d 93       	st	X+, r23
 b72:	8d 93       	st	X+, r24
 b74:	9c 93       	st	X, r25
 b76:	53 97       	sbiw	r26, 0x13	; 19
 b78:	04 c0       	rjmp	.+8      	; 0xb82 <PID_controller_get_control_action+0x234>
 b7a:	7b 2c       	mov	r7, r11
 b7c:	6a 2c       	mov	r6, r10
 b7e:	59 2c       	mov	r5, r9
 b80:	48 2c       	mov	r4, r8
 b82:	2d 81       	ldd	r18, Y+5	; 0x05
 b84:	3e 81       	ldd	r19, Y+6	; 0x06
 b86:	4f 81       	ldd	r20, Y+7	; 0x07
 b88:	58 85       	ldd	r21, Y+8	; 0x08
 b8a:	c7 01       	movw	r24, r14
 b8c:	b6 01       	movw	r22, r12
 b8e:	0e 94 3c 10 	call	0x2078	; 0x2078 <__mulsf3>
 b92:	9b 01       	movw	r18, r22
 b94:	ac 01       	movw	r20, r24
 b96:	e9 89       	ldd	r30, Y+17	; 0x11
 b98:	fa 89       	ldd	r31, Y+18	; 0x12
 b9a:	60 89       	ldd	r22, Z+16	; 0x10
 b9c:	71 89       	ldd	r23, Z+17	; 0x11
 b9e:	82 89       	ldd	r24, Z+18	; 0x12
 ba0:	93 89       	ldd	r25, Z+19	; 0x13
 ba2:	0e 94 06 10 	call	0x200c	; 0x200c <__addsf3>
 ba6:	a9 89       	ldd	r26, Y+17	; 0x11
 ba8:	ba 89       	ldd	r27, Y+18	; 0x12
 baa:	50 96       	adiw	r26, 0x10	; 16
 bac:	6d 93       	st	X+, r22
 bae:	7d 93       	st	X+, r23
 bb0:	8d 93       	st	X+, r24
 bb2:	9c 93       	st	X, r25
 bb4:	53 97       	sbiw	r26, 0x13	; 19
 bb6:	fd 01       	movw	r30, r26
 bb8:	c4 86       	std	Z+12, r12	; 0x0c
 bba:	d5 86       	std	Z+13, r13	; 0x0d
 bbc:	e6 86       	std	Z+14, r14	; 0x0e
 bbe:	f7 86       	std	Z+15, r15	; 0x0f
 bc0:	80 81       	ld	r24, Z
 bc2:	91 81       	ldd	r25, Z+1	; 0x01
 bc4:	a2 81       	ldd	r26, Z+2	; 0x02
 bc6:	b3 81       	ldd	r27, Z+3	; 0x03
 bc8:	84 83       	std	Z+4, r24	; 0x04
 bca:	95 83       	std	Z+5, r25	; 0x05
 bcc:	a6 83       	std	Z+6, r26	; 0x06
 bce:	b7 83       	std	Z+7, r27	; 0x07
 bd0:	67 2d       	mov	r22, r7
 bd2:	76 2d       	mov	r23, r6
 bd4:	85 2d       	mov	r24, r5
 bd6:	94 2d       	mov	r25, r4
 bd8:	62 96       	adiw	r28, 0x12	; 18
 bda:	0f b6       	in	r0, 0x3f	; 63
 bdc:	f8 94       	cli
 bde:	de bf       	out	0x3e, r29	; 62
 be0:	0f be       	out	0x3f, r0	; 63
 be2:	cd bf       	out	0x3d, r28	; 61
 be4:	df 91       	pop	r29
 be6:	cf 91       	pop	r28
 be8:	ff 90       	pop	r15
 bea:	ef 90       	pop	r14
 bec:	df 90       	pop	r13
 bee:	cf 90       	pop	r12
 bf0:	bf 90       	pop	r11
 bf2:	af 90       	pop	r10
 bf4:	9f 90       	pop	r9
 bf6:	8f 90       	pop	r8
 bf8:	7f 90       	pop	r7
 bfa:	6f 90       	pop	r6
 bfc:	5f 90       	pop	r5
 bfe:	4f 90       	pop	r4
 c00:	08 95       	ret

Disassembly of section .text.speed_estimator_init:

000017a2 <speed_estimator_init>:
// Should be updated if timer is adjusted!
const float encoder_measurement_period = 0.02;
long ticks_per_rot_left = DEFAULT_TICKS_PER_ROT_LEFT;
long ticks_per_rot_right = DEFAULT_TICKS_PER_ROT_LEFT;

void speed_estimator_init(long left, long right) {
    17a2:	cf 93       	push	r28
    17a4:	df 93       	push	r29
    17a6:	1f 92       	push	r1
    17a8:	cd b7       	in	r28, 0x3d	; 61
    17aa:	de b7       	in	r29, 0x3e	; 62
	
	ticks_per_rot_left = left;
    17ac:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <ticks_per_rot_left>
    17b0:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <ticks_per_rot_left+0x1>
    17b4:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <ticks_per_rot_left+0x2>
    17b8:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <ticks_per_rot_left+0x3>
	ticks_per_rot_right = right;
    17bc:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <ticks_per_rot_right>
    17c0:	30 93 1b 01 	sts	0x011B, r19	; 0x80011b <ticks_per_rot_right+0x1>
    17c4:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <ticks_per_rot_right+0x2>
    17c8:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <ticks_per_rot_right+0x3>
	
	encoder_init();
    17cc:	0e 94 56 0f 	call	0x1eac	; 0x1eac <encoder_init>
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    17d0:	8f b7       	in	r24, 0x3f	; 63
    17d2:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    17d4:	f8 94       	cli
    17d6:	81 e0       	ldi	r24, 0x01	; 1
    17d8:	0d c0       	rjmp	.+26     	; 0x17f4 <speed_estimator_init+0x52>
		ticks_right = encoder_get_accumulated_ticks_right();
    17da:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <encoder_get_accumulated_ticks_right>
    17de:	70 93 35 01 	sts	0x0135, r23	; 0x800135 <ticks_right+0x1>
    17e2:	60 93 34 01 	sts	0x0134, r22	; 0x800134 <ticks_right>
		ticks_left = encoder_get_accumulated_ticks_left();	
    17e6:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <encoder_get_accumulated_ticks_left>
    17ea:	70 93 33 01 	sts	0x0133, r23	; 0x800133 <ticks_left+0x1>
    17ee:	60 93 32 01 	sts	0x0132, r22	; 0x800132 <ticks_left>
	
	ticks_per_rot_left = left;
	ticks_per_rot_right = right;
	
	encoder_init();
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    17f2:	80 e0       	ldi	r24, 0x00	; 0
    17f4:	81 11       	cpse	r24, r1
    17f6:	f1 cf       	rjmp	.-30     	; 0x17da <speed_estimator_init+0x38>
    17f8:	ce 01       	movw	r24, r28
    17fa:	01 96       	adiw	r24, 0x01	; 1
    17fc:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    17fe:	fc 01       	movw	r30, r24
    1800:	84 91       	lpm	r24, Z
    1802:	a7 fd       	sbrc	r26, 7
    1804:	80 81       	ld	r24, Z
    1806:	8f bf       	out	0x3f, r24	; 63
	(2^8*1024) / (16000000) * 255/255 = 0.016384
	
	OCR1A = measurement_period * F_CPU * (2^16-1) / (2^16*prescalar)
	
	*/
	cli();
    1808:	f8 94       	cli
	// Enable interrupt
	TIMSK2 |= (1 << OCIE2A);
	*/
	
	// 16-bit Timer1
	OCR1AH = 0x04;
    180a:	84 e0       	ldi	r24, 0x04	; 4
    180c:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0xE1;
    1810:	81 ee       	ldi	r24, 0xE1	; 225
    1812:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	//OCR1A = 15999;
	TCCR1B |= (1 << WGM12) | (1 << CS12); // CTC mode (clear on match with OCR1A), 256 prescalar
    1816:	e1 e8       	ldi	r30, 0x81	; 129
    1818:	f0 e0       	ldi	r31, 0x00	; 0
    181a:	80 81       	ld	r24, Z
    181c:	8c 60       	ori	r24, 0x0C	; 12
    181e:	80 83       	st	Z, r24
	
	// Enable interrupt
	TIMSK1 |= (1 << OCIE1A);
    1820:	ef e6       	ldi	r30, 0x6F	; 111
    1822:	f0 e0       	ldi	r31, 0x00	; 0
    1824:	80 81       	ld	r24, Z
    1826:	82 60       	ori	r24, 0x02	; 2
    1828:	80 83       	st	Z, r24
	
	sei();
    182a:	78 94       	sei
}
    182c:	0f 90       	pop	r0
    182e:	df 91       	pop	r29
    1830:	cf 91       	pop	r28
    1832:	08 95       	ret

Disassembly of section .text.speed_estimator_right_rad_per_s:

00001c12 <speed_estimator_right_rad_per_s>:

float speed_estimator_right_rad_per_s() {
    1c12:	cf 93       	push	r28
    1c14:	df 93       	push	r29
    1c16:	1f 92       	push	r1
    1c18:	cd b7       	in	r28, 0x3d	; 61
    1c1a:	de b7       	in	r29, 0x3e	; 62
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1c1c:	8f b7       	in	r24, 0x3f	; 63
    1c1e:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1c20:	f8 94       	cli
    1c22:	81 e0       	ldi	r24, 0x01	; 1
    1c24:	09 c0       	rjmp	.+18     	; 0x1c38 <speed_estimator_right_rad_per_s+0x26>
		rad_per_s = rad_per_s_right;
    1c26:	40 91 22 01 	lds	r20, 0x0122	; 0x800122 <rad_per_s_right>
    1c2a:	50 91 23 01 	lds	r21, 0x0123	; 0x800123 <rad_per_s_right+0x1>
    1c2e:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <rad_per_s_right+0x2>
    1c32:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <rad_per_s_right+0x3>
	sei();
}

float speed_estimator_right_rad_per_s() {
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1c36:	80 e0       	ldi	r24, 0x00	; 0
    1c38:	81 11       	cpse	r24, r1
    1c3a:	f5 cf       	rjmp	.-22     	; 0x1c26 <speed_estimator_right_rad_per_s+0x14>
    1c3c:	ce 01       	movw	r24, r28
    1c3e:	01 96       	adiw	r24, 0x01	; 1
    1c40:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1c42:	fc 01       	movw	r30, r24
    1c44:	84 91       	lpm	r24, Z
    1c46:	a7 fd       	sbrc	r26, 7
    1c48:	80 81       	ld	r24, Z
    1c4a:	8f bf       	out	0x3f, r24	; 63
		rad_per_s = rad_per_s_right;
	}
	return rad_per_s;
}
    1c4c:	cb 01       	movw	r24, r22
    1c4e:	ba 01       	movw	r22, r20
    1c50:	0f 90       	pop	r0
    1c52:	df 91       	pop	r29
    1c54:	cf 91       	pop	r28
    1c56:	08 95       	ret

Disassembly of section .text.speed_estimator_left_rad_per_s:

00001c58 <speed_estimator_left_rad_per_s>:

float speed_estimator_left_rad_per_s() {
    1c58:	cf 93       	push	r28
    1c5a:	df 93       	push	r29
    1c5c:	1f 92       	push	r1
    1c5e:	cd b7       	in	r28, 0x3d	; 61
    1c60:	de b7       	in	r29, 0x3e	; 62
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1c62:	8f b7       	in	r24, 0x3f	; 63
    1c64:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1c66:	f8 94       	cli
    1c68:	81 e0       	ldi	r24, 0x01	; 1
    1c6a:	09 c0       	rjmp	.+18     	; 0x1c7e <speed_estimator_left_rad_per_s+0x26>
		rad_per_s = rad_per_s_left;
    1c6c:	40 91 26 01 	lds	r20, 0x0126	; 0x800126 <rad_per_s_left>
    1c70:	50 91 27 01 	lds	r21, 0x0127	; 0x800127 <rad_per_s_left+0x1>
    1c74:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <rad_per_s_left+0x2>
    1c78:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <rad_per_s_left+0x3>
	return rad_per_s;
}

float speed_estimator_left_rad_per_s() {
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1c7c:	80 e0       	ldi	r24, 0x00	; 0
    1c7e:	81 11       	cpse	r24, r1
    1c80:	f5 cf       	rjmp	.-22     	; 0x1c6c <speed_estimator_left_rad_per_s+0x14>
    1c82:	ce 01       	movw	r24, r28
    1c84:	01 96       	adiw	r24, 0x01	; 1
    1c86:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1c88:	fc 01       	movw	r30, r24
    1c8a:	84 91       	lpm	r24, Z
    1c8c:	a7 fd       	sbrc	r26, 7
    1c8e:	80 81       	ld	r24, Z
    1c90:	8f bf       	out	0x3f, r24	; 63
		rad_per_s = rad_per_s_left;
	}
	return rad_per_s;
}
    1c92:	cb 01       	movw	r24, r22
    1c94:	ba 01       	movw	r22, r20
    1c96:	0f 90       	pop	r0
    1c98:	df 91       	pop	r29
    1c9a:	cf 91       	pop	r28
    1c9c:	08 95       	ret

Disassembly of section .text.__vector_11:

00000ff4 <__vector_11>:
	prev_ticks_left = ticks_left;
	left_rad_per_s = 2.0*PI*((float)ticks_left - (float)prev_ticks_left) / ((float)TICKS_PER_ROT*encoder_measurement_period);
	
}*/

ISR(TIMER1_COMPA_vect) {
     ff4:	1f 92       	push	r1
     ff6:	0f 92       	push	r0
     ff8:	0f b6       	in	r0, 0x3f	; 63
     ffa:	0f 92       	push	r0
     ffc:	11 24       	eor	r1, r1
     ffe:	cf 92       	push	r12
    1000:	df 92       	push	r13
    1002:	ef 92       	push	r14
    1004:	ff 92       	push	r15
    1006:	2f 93       	push	r18
    1008:	3f 93       	push	r19
    100a:	4f 93       	push	r20
    100c:	5f 93       	push	r21
    100e:	6f 93       	push	r22
    1010:	7f 93       	push	r23
    1012:	8f 93       	push	r24
    1014:	9f 93       	push	r25
    1016:	af 93       	push	r26
    1018:	bf 93       	push	r27
    101a:	ef 93       	push	r30
    101c:	ff 93       	push	r31
	prev_ticks_right = ticks_right;
    101e:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <ticks_right>
    1022:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <ticks_right+0x1>
    1026:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <prev_ticks_right+0x1>
    102a:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <prev_ticks_right>
	ticks_right = encoder_get_accumulated_ticks_right();
    102e:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <encoder_get_accumulated_ticks_right>
    1032:	70 93 35 01 	sts	0x0135, r23	; 0x800135 <ticks_right+0x1>
    1036:	60 93 34 01 	sts	0x0134, r22	; 0x800134 <ticks_right>
	rad_per_s_right = 2.0*PI*((float)ticks_right - (float)prev_ticks_right) / ((float)ticks_per_rot_right*encoder_measurement_period);
    103a:	60 91 34 01 	lds	r22, 0x0134	; 0x800134 <ticks_right>
    103e:	70 91 35 01 	lds	r23, 0x0135	; 0x800135 <ticks_right+0x1>
    1042:	07 2e       	mov	r0, r23
    1044:	00 0c       	add	r0, r0
    1046:	88 0b       	sbc	r24, r24
    1048:	99 0b       	sbc	r25, r25
    104a:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__floatsisf>
    104e:	6b 01       	movw	r12, r22
    1050:	7c 01       	movw	r14, r24
    1052:	60 91 30 01 	lds	r22, 0x0130	; 0x800130 <prev_ticks_right>
    1056:	70 91 31 01 	lds	r23, 0x0131	; 0x800131 <prev_ticks_right+0x1>
    105a:	07 2e       	mov	r0, r23
    105c:	00 0c       	add	r0, r0
    105e:	88 0b       	sbc	r24, r24
    1060:	99 0b       	sbc	r25, r25
    1062:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__floatsisf>
    1066:	9b 01       	movw	r18, r22
    1068:	ac 01       	movw	r20, r24
    106a:	c7 01       	movw	r24, r14
    106c:	b6 01       	movw	r22, r12
    106e:	0e 94 05 10 	call	0x200a	; 0x200a <__subsf3>
    1072:	2b ed       	ldi	r18, 0xDB	; 219
    1074:	3f e0       	ldi	r19, 0x0F	; 15
    1076:	49 ec       	ldi	r20, 0xC9	; 201
    1078:	50 e4       	ldi	r21, 0x40	; 64
    107a:	0e 94 3c 10 	call	0x2078	; 0x2078 <__mulsf3>
    107e:	6b 01       	movw	r12, r22
    1080:	7c 01       	movw	r14, r24
    1082:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <ticks_per_rot_right>
    1086:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <ticks_per_rot_right+0x1>
    108a:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <ticks_per_rot_right+0x2>
    108e:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <ticks_per_rot_right+0x3>
    1092:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__floatsisf>
    1096:	2a e0       	ldi	r18, 0x0A	; 10
    1098:	37 ed       	ldi	r19, 0xD7	; 215
    109a:	43 ea       	ldi	r20, 0xA3	; 163
    109c:	5c e3       	ldi	r21, 0x3C	; 60
    109e:	0e 94 3c 10 	call	0x2078	; 0x2078 <__mulsf3>
    10a2:	9b 01       	movw	r18, r22
    10a4:	ac 01       	movw	r20, r24
    10a6:	c7 01       	movw	r24, r14
    10a8:	b6 01       	movw	r22, r12
    10aa:	0e 94 38 10 	call	0x2070	; 0x2070 <__divsf3>
    10ae:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <rad_per_s_right>
    10b2:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <rad_per_s_right+0x1>
    10b6:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <rad_per_s_right+0x2>
    10ba:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <rad_per_s_right+0x3>
	
	prev_ticks_left = ticks_left;
    10be:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <ticks_left>
    10c2:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <ticks_left+0x1>
    10c6:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <prev_ticks_left+0x1>
    10ca:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <prev_ticks_left>
	ticks_left = encoder_get_accumulated_ticks_left();
    10ce:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <encoder_get_accumulated_ticks_left>
    10d2:	70 93 33 01 	sts	0x0133, r23	; 0x800133 <ticks_left+0x1>
    10d6:	60 93 32 01 	sts	0x0132, r22	; 0x800132 <ticks_left>
	rad_per_s_left = 2.0*PI*((float)ticks_left - (float)prev_ticks_left) / ((float)ticks_per_rot_left*encoder_measurement_period);
    10da:	60 91 32 01 	lds	r22, 0x0132	; 0x800132 <ticks_left>
    10de:	70 91 33 01 	lds	r23, 0x0133	; 0x800133 <ticks_left+0x1>
    10e2:	07 2e       	mov	r0, r23
    10e4:	00 0c       	add	r0, r0
    10e6:	88 0b       	sbc	r24, r24
    10e8:	99 0b       	sbc	r25, r25
    10ea:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__floatsisf>
    10ee:	6b 01       	movw	r12, r22
    10f0:	7c 01       	movw	r14, r24
    10f2:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <prev_ticks_left>
    10f6:	70 91 2f 01 	lds	r23, 0x012F	; 0x80012f <prev_ticks_left+0x1>
    10fa:	07 2e       	mov	r0, r23
    10fc:	00 0c       	add	r0, r0
    10fe:	88 0b       	sbc	r24, r24
    1100:	99 0b       	sbc	r25, r25
    1102:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__floatsisf>
    1106:	9b 01       	movw	r18, r22
    1108:	ac 01       	movw	r20, r24
    110a:	c7 01       	movw	r24, r14
    110c:	b6 01       	movw	r22, r12
    110e:	0e 94 05 10 	call	0x200a	; 0x200a <__subsf3>
    1112:	2b ed       	ldi	r18, 0xDB	; 219
    1114:	3f e0       	ldi	r19, 0x0F	; 15
    1116:	49 ec       	ldi	r20, 0xC9	; 201
    1118:	50 e4       	ldi	r21, 0x40	; 64
    111a:	0e 94 3c 10 	call	0x2078	; 0x2078 <__mulsf3>
    111e:	6b 01       	movw	r12, r22
    1120:	7c 01       	movw	r14, r24
    1122:	60 91 1e 01 	lds	r22, 0x011E	; 0x80011e <ticks_per_rot_left>
    1126:	70 91 1f 01 	lds	r23, 0x011F	; 0x80011f <ticks_per_rot_left+0x1>
    112a:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <ticks_per_rot_left+0x2>
    112e:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <ticks_per_rot_left+0x3>
    1132:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__floatsisf>
    1136:	2a e0       	ldi	r18, 0x0A	; 10
    1138:	37 ed       	ldi	r19, 0xD7	; 215
    113a:	43 ea       	ldi	r20, 0xA3	; 163
    113c:	5c e3       	ldi	r21, 0x3C	; 60
    113e:	0e 94 3c 10 	call	0x2078	; 0x2078 <__mulsf3>
    1142:	9b 01       	movw	r18, r22
    1144:	ac 01       	movw	r20, r24
    1146:	c7 01       	movw	r24, r14
    1148:	b6 01       	movw	r22, r12
    114a:	0e 94 38 10 	call	0x2070	; 0x2070 <__divsf3>
    114e:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <rad_per_s_left>
    1152:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <rad_per_s_left+0x1>
    1156:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <rad_per_s_left+0x2>
    115a:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <rad_per_s_left+0x3>
	//printf("ISR: %d | %d\n\r", ticks_left, prev_ticks_left);
}
    115e:	ff 91       	pop	r31
    1160:	ef 91       	pop	r30
    1162:	bf 91       	pop	r27
    1164:	af 91       	pop	r26
    1166:	9f 91       	pop	r25
    1168:	8f 91       	pop	r24
    116a:	7f 91       	pop	r23
    116c:	6f 91       	pop	r22
    116e:	5f 91       	pop	r21
    1170:	4f 91       	pop	r20
    1172:	3f 91       	pop	r19
    1174:	2f 91       	pop	r18
    1176:	ff 90       	pop	r15
    1178:	ef 90       	pop	r14
    117a:	df 90       	pop	r13
    117c:	cf 90       	pop	r12
    117e:	0f 90       	pop	r0
    1180:	0f be       	out	0x3f, r0	; 63
    1182:	0f 90       	pop	r0
    1184:	1f 90       	pop	r1
    1186:	18 95       	reti

Disassembly of section .text.timer_init:

00001d24 <timer_init>:
static volatile unsigned int timer_flag = 0;
unsigned int timeout_ms;

void timer_init(unsigned int timeout) {
	
	cli();
    1d24:	f8 94       	cli
	
	timer_flag = 0;
    1d26:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <timer_flag+0x1>
    1d2a:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <timer_flag>
	timeout_ms = timeout;
    1d2e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d32:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	// Use 8-bit timer 2 for keeping-time
	TCCR2B = 0x00;
    1d36:	e1 eb       	ldi	r30, 0xB1	; 177
    1d38:	f0 e0       	ldi	r31, 0x00	; 0
    1d3a:	10 82       	st	Z, r1
	TCNT2 = 0x00;
    1d3c:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
	OCR2A = 0xF9;
    1d40:	89 ef       	ldi	r24, 0xF9	; 249
    1d42:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	TCCR2A |= (1 << WGM21) | (1 << CS22); // CTC (Clear timer on compare match with OCR2A), 64 as prescaler
    1d46:	a0 eb       	ldi	r26, 0xB0	; 176
    1d48:	b0 e0       	ldi	r27, 0x00	; 0
    1d4a:	8c 91       	ld	r24, X
    1d4c:	86 60       	ori	r24, 0x06	; 6
    1d4e:	8c 93       	st	X, r24
	TCCR2B |= (1 << CS22);
    1d50:	80 81       	ld	r24, Z
    1d52:	84 60       	ori	r24, 0x04	; 4
    1d54:	80 83       	st	Z, r24
	
	
	// Enable interrupt
	TIMSK2 |= (1 << OCIE2A);
    1d56:	e0 e7       	ldi	r30, 0x70	; 112
    1d58:	f0 e0       	ldi	r31, 0x00	; 0
    1d5a:	80 81       	ld	r24, Z
    1d5c:	82 60       	ori	r24, 0x02	; 2
    1d5e:	80 83       	st	Z, r24
	
	// Enable interrupt
	TIMSK1 |= (1 << OCIE1A);
	//SREG |= (1 << 7);*/
	
	sei();
    1d60:	78 94       	sei
    1d62:	08 95       	ret

Disassembly of section .text.timer_reset:

00001af0 <timer_reset>:
		ms = elapsed_ms;
	}
	return ms;
}

void timer_reset(void) {
    1af0:	cf 93       	push	r28
    1af2:	df 93       	push	r29
    1af4:	1f 92       	push	r1
    1af6:	cd b7       	in	r28, 0x3d	; 61
    1af8:	de b7       	in	r29, 0x3e	; 62
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1afa:	8f b7       	in	r24, 0x3f	; 63
    1afc:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1afe:	f8 94       	cli
    1b00:	81 e0       	ldi	r24, 0x01	; 1
    1b02:	0f c0       	rjmp	.+30     	; 0x1b22 <timer_reset+0x32>
		elapsed_ms = 0;
    1b04:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <elapsed_ms>
    1b08:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <elapsed_ms+0x1>
    1b0c:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <elapsed_ms+0x2>
    1b10:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <elapsed_ms+0x3>
		TCNT2 = 0x00;
    1b14:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
		timer_flag = 0;
    1b18:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <timer_flag+0x1>
    1b1c:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <timer_flag>
	}
	return ms;
}

void timer_reset(void) {
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1b20:	80 e0       	ldi	r24, 0x00	; 0
    1b22:	81 11       	cpse	r24, r1
    1b24:	ef cf       	rjmp	.-34     	; 0x1b04 <timer_reset+0x14>
    1b26:	ce 01       	movw	r24, r28
    1b28:	01 96       	adiw	r24, 0x01	; 1
    1b2a:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1b2c:	fc 01       	movw	r30, r24
    1b2e:	84 91       	lpm	r24, Z
    1b30:	a7 fd       	sbrc	r26, 7
    1b32:	80 81       	ld	r24, Z
    1b34:	8f bf       	out	0x3f, r24	; 63
		elapsed_ms = 0;
		TCNT2 = 0x00;
		timer_flag = 0;
	}
}
    1b36:	0f 90       	pop	r0
    1b38:	df 91       	pop	r29
    1b3a:	cf 91       	pop	r28
    1b3c:	08 95       	ret

Disassembly of section .text.timer_timeout:

00001d64 <timer_timeout>:

unsigned int timer_timeout(void) {
    1d64:	cf 93       	push	r28
    1d66:	df 93       	push	r29
    1d68:	1f 92       	push	r1
    1d6a:	cd b7       	in	r28, 0x3d	; 61
    1d6c:	de b7       	in	r29, 0x3e	; 62
	unsigned int flag;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1d6e:	8f b7       	in	r24, 0x3f	; 63
    1d70:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1d72:	f8 94       	cli
    1d74:	91 e0       	ldi	r25, 0x01	; 1
    1d76:	05 c0       	rjmp	.+10     	; 0x1d82 <timer_timeout+0x1e>
		flag = timer_flag;
    1d78:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <timer_flag>
    1d7c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <timer_flag+0x1>
	}
}

unsigned int timer_timeout(void) {
	unsigned int flag;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1d80:	90 e0       	ldi	r25, 0x00	; 0
    1d82:	91 11       	cpse	r25, r1
    1d84:	f9 cf       	rjmp	.-14     	; 0x1d78 <timer_timeout+0x14>
    1d86:	ce 01       	movw	r24, r28
    1d88:	01 96       	adiw	r24, 0x01	; 1
    1d8a:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1d8c:	fc 01       	movw	r30, r24
    1d8e:	84 91       	lpm	r24, Z
    1d90:	a7 fd       	sbrc	r26, 7
    1d92:	80 81       	ld	r24, Z
    1d94:	8f bf       	out	0x3f, r24	; 63
		flag = timer_flag;
	}
	return flag;
}
    1d96:	c9 01       	movw	r24, r18
    1d98:	0f 90       	pop	r0
    1d9a:	df 91       	pop	r29
    1d9c:	cf 91       	pop	r28
    1d9e:	08 95       	ret

Disassembly of section .text.__vector_7:

00001834 <__vector_7>:
	unsigned long ms;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
		ms = elapsed_ms;
	}
	return ms;
}
    1834:	1f 92       	push	r1
    1836:	0f 92       	push	r0
    1838:	0f b6       	in	r0, 0x3f	; 63
    183a:	0f 92       	push	r0
    183c:	11 24       	eor	r1, r1
    183e:	4f 93       	push	r20
    1840:	5f 93       	push	r21
    1842:	6f 93       	push	r22
    1844:	7f 93       	push	r23
    1846:	8f 93       	push	r24
    1848:	9f 93       	push	r25
    184a:	af 93       	push	r26
    184c:	bf 93       	push	r27
    184e:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <elapsed_ms>
    1852:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <elapsed_ms+0x1>
    1856:	a0 91 2c 01 	lds	r26, 0x012C	; 0x80012c <elapsed_ms+0x2>
    185a:	b0 91 2d 01 	lds	r27, 0x012D	; 0x80012d <elapsed_ms+0x3>
    185e:	01 96       	adiw	r24, 0x01	; 1
    1860:	a1 1d       	adc	r26, r1
    1862:	b1 1d       	adc	r27, r1
    1864:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <elapsed_ms>
    1868:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <elapsed_ms+0x1>
    186c:	a0 93 2c 01 	sts	0x012C, r26	; 0x80012c <elapsed_ms+0x2>
    1870:	b0 93 2d 01 	sts	0x012D, r27	; 0x80012d <elapsed_ms+0x3>
    1874:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1878:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    187c:	a0 e0       	ldi	r26, 0x00	; 0
    187e:	b0 e0       	ldi	r27, 0x00	; 0
    1880:	40 91 2a 01 	lds	r20, 0x012A	; 0x80012a <elapsed_ms>
    1884:	50 91 2b 01 	lds	r21, 0x012B	; 0x80012b <elapsed_ms+0x1>
    1888:	60 91 2c 01 	lds	r22, 0x012C	; 0x80012c <elapsed_ms+0x2>
    188c:	70 91 2d 01 	lds	r23, 0x012D	; 0x80012d <elapsed_ms+0x3>
    1890:	48 17       	cp	r20, r24
    1892:	59 07       	cpc	r21, r25
    1894:	6a 07       	cpc	r22, r26
    1896:	7b 07       	cpc	r23, r27
    1898:	30 f0       	brcs	.+12     	; 0x18a6 <__vector_7+0x72>
    189a:	81 e0       	ldi	r24, 0x01	; 1
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <timer_flag+0x1>
    18a2:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <timer_flag>
    18a6:	bf 91       	pop	r27
    18a8:	af 91       	pop	r26
    18aa:	9f 91       	pop	r25
    18ac:	8f 91       	pop	r24
    18ae:	7f 91       	pop	r23
    18b0:	6f 91       	pop	r22
    18b2:	5f 91       	pop	r21
    18b4:	4f 91       	pop	r20
    18b6:	0f 90       	pop	r0
    18b8:	0f be       	out	0x3f, r0	; 63
    18ba:	0f 90       	pop	r0
    18bc:	1f 90       	pop	r1
    18be:	18 95       	reti

Disassembly of section .text.usart_tx:

00001fee <usart_tx>:

#include <avr/io.h>
#include "usart.h"

void usart_tx(unsigned char data) {
	while (! (UCSR0A & (1 << UDRE0))) {
    1fee:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    1ff2:	95 ff       	sbrs	r25, 5
    1ff4:	fc cf       	rjmp	.-8      	; 0x1fee <usart_tx>
		// wait for buffer to empty
	}
	// Place data in buffer
	UDR0 = data;
    1ff6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    1ffa:	08 95       	ret

Disassembly of section .text.usart_rx:

00001ffc <usart_rx>:
}

unsigned char usart_rx(void) {
	while(!(UCSR0A & (1 << RXC0))) {
    1ffc:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2000:	88 23       	and	r24, r24
    2002:	e4 f7       	brge	.-8      	; 0x1ffc <usart_rx>
		// Wait for data to be received
	}
	return UDR0;
    2004:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
    2008:	08 95       	ret

Disassembly of section .text.usart_init:

00001f34 <usart_init>:

void usart_init(unsigned int ubrr) {
	// Set baud rate
	UBRR0H = ubrr>>8;
    1f34:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = ubrr;
    1f38:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	// Enable rx and tx
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
    1f3c:	88 e1       	ldi	r24, 0x18	; 24
    1f3e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	
	// Set frame format: 8data 2stop bit
	UCSR0C = (1 << USBS0) | (3 << UCSZ00);
    1f42:	8e e0       	ldi	r24, 0x0E	; 14
    1f44:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	
	// Use printf for serial communication
	fdevopen(usart_tx, usart_rx);
    1f48:	6e ef       	ldi	r22, 0xFE	; 254
    1f4a:	7f e0       	ldi	r23, 0x0F	; 15
    1f4c:	87 ef       	ldi	r24, 0xF7	; 247
    1f4e:	9f e0       	ldi	r25, 0x0F	; 15
    1f50:	0e 94 85 0b 	call	0x170a	; 0x170a <fdevopen>
    1f54:	08 95       	ret

Disassembly of section .text.main:

00001188 <main>:
#include "drivers/timer/timer.h"
#include "drivers/speed_estimator/speed_estimator.h"
#include "drivers/PID_controller/PID_controller.h"

int main(void)
{
    1188:	cf 93       	push	r28
    118a:	df 93       	push	r29
    118c:	cd b7       	in	r28, 0x3d	; 61
    118e:	de b7       	in	r29, 0x3e	; 62
    1190:	ac 97       	sbiw	r28, 0x2c	; 44
    1192:	0f b6       	in	r0, 0x3f	; 63
    1194:	f8 94       	cli
    1196:	de bf       	out	0x3e, r29	; 62
    1198:	0f be       	out	0x3f, r0	; 63
    119a:	cd bf       	out	0x3d, r28	; 61
	usart_init(UBRR);
    119c:	87 e6       	ldi	r24, 0x67	; 103
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <usart_init>
	speed_estimator_init(850, 850);
    11a4:	22 e5       	ldi	r18, 0x52	; 82
    11a6:	33 e0       	ldi	r19, 0x03	; 3
    11a8:	40 e0       	ldi	r20, 0x00	; 0
    11aa:	50 e0       	ldi	r21, 0x00	; 0
    11ac:	62 e5       	ldi	r22, 0x52	; 82
    11ae:	73 e0       	ldi	r23, 0x03	; 3
    11b0:	80 e0       	ldi	r24, 0x00	; 0
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <speed_estimator_init>
	motor_init();
    11b8:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <motor_init>

	//encoder_init();
	
	timer_init(50); // Set control loop period to 50 ms (Obs: Should check if code takes longer time to run!)
    11bc:	82 e3       	ldi	r24, 0x32	; 50
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <timer_init>
	
	printf("Starting application\n\r");
    11c4:	84 ed       	ldi	r24, 0xD4	; 212
    11c6:	91 e0       	ldi	r25, 0x01	; 1
    11c8:	a0 e0       	ldi	r26, 0x00	; 0
    11ca:	af 93       	push	r26
    11cc:	9f 93       	push	r25
    11ce:	8f 93       	push	r24
    11d0:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <printf>
	
	
	PID_controller left_motor;
	PID_controller_init(&left_motor);
    11d4:	ce 01       	movw	r24, r28
    11d6:	01 96       	adiw	r24, 0x01	; 1
    11d8:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <PID_controller_init>
	PID_controller_set_parameters(&left_motor, 10.0, 50.0, 0.0, 0.05);
    11dc:	0f 2e       	mov	r0, r31
    11de:	fd ec       	ldi	r31, 0xCD	; 205
    11e0:	8f 2e       	mov	r8, r31
    11e2:	fc ec       	ldi	r31, 0xCC	; 204
    11e4:	9f 2e       	mov	r9, r31
    11e6:	fc e4       	ldi	r31, 0x4C	; 76
    11e8:	af 2e       	mov	r10, r31
    11ea:	fd e3       	ldi	r31, 0x3D	; 61
    11ec:	bf 2e       	mov	r11, r31
    11ee:	f0 2d       	mov	r31, r0
    11f0:	c1 2c       	mov	r12, r1
    11f2:	d1 2c       	mov	r13, r1
    11f4:	76 01       	movw	r14, r12
    11f6:	00 e0       	ldi	r16, 0x00	; 0
    11f8:	10 e0       	ldi	r17, 0x00	; 0
    11fa:	28 e4       	ldi	r18, 0x48	; 72
    11fc:	32 e4       	ldi	r19, 0x42	; 66
    11fe:	40 e0       	ldi	r20, 0x00	; 0
    1200:	50 e0       	ldi	r21, 0x00	; 0
    1202:	60 e2       	ldi	r22, 0x20	; 32
    1204:	71 e4       	ldi	r23, 0x41	; 65
    1206:	ce 01       	movw	r24, r28
    1208:	01 96       	adiw	r24, 0x01	; 1
    120a:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <PID_controller_set_parameters>
    120e:	0f 90       	pop	r0
    1210:	0f 90       	pop	r0
    1212:	0f 90       	pop	r0
	
	
	while(1)
	{
		// wheel speed control loop
		if (timer_timeout()) {
    1214:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <timer_timeout>
    1218:	89 2b       	or	r24, r25
    121a:	e1 f3       	breq	.-8      	; 0x1214 <main+0x8c>
			timer_reset();
    121c:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <timer_reset>
	
			left_speed_rps = speed_estimator_left_rad_per_s();
    1220:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <speed_estimator_left_rad_per_s>
    1224:	16 2f       	mov	r17, r22
    1226:	07 2f       	mov	r16, r23
    1228:	f8 2e       	mov	r15, r24
    122a:	e9 2e       	mov	r14, r25
			left_error_rps = left_speed_ref_rps - left_speed_rps;
    122c:	76 2f       	mov	r23, r22
    122e:	27 2f       	mov	r18, r23
    1230:	30 2f       	mov	r19, r16
    1232:	4f 2d       	mov	r20, r15
    1234:	5e 2d       	mov	r21, r14
    1236:	62 e9       	ldi	r22, 0x92	; 146
    1238:	7a e0       	ldi	r23, 0x0A	; 10
    123a:	86 e0       	ldi	r24, 0x06	; 6
    123c:	9f e3       	ldi	r25, 0x3F	; 63
    123e:	0e 94 05 10 	call	0x200a	; 0x200a <__subsf3>
    1242:	ab 01       	movw	r20, r22
    1244:	bc 01       	movw	r22, r24
			left_u = PID_controller_get_control_action(&left_motor, left_error_rps);
    1246:	ce 01       	movw	r24, r28
    1248:	01 96       	adiw	r24, 0x01	; 1
    124a:	0e 94 a7 04 	call	0x94e	; 0x94e <PID_controller_get_control_action>
    124e:	d6 2e       	mov	r13, r22
    1250:	c7 2e       	mov	r12, r23
    1252:	b8 2e       	mov	r11, r24
    1254:	a9 2e       	mov	r10, r25
			motor_left(left_u);
    1256:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <motor_left>
			
			
			right_speed_rps = speed_estimator_right_rad_per_s();
    125a:	0e 94 09 0e 	call	0x1c12	; 0x1c12 <speed_estimator_right_rad_per_s>
			
			printf("l: %f\t r: %f\t u: %f\n\r", left_speed_rps, right_speed_rps, left_u);
    125e:	af 92       	push	r10
    1260:	bf 92       	push	r11
    1262:	cf 92       	push	r12
    1264:	df 92       	push	r13
    1266:	9f 93       	push	r25
    1268:	8f 93       	push	r24
    126a:	7f 93       	push	r23
    126c:	6f 93       	push	r22
    126e:	ef 92       	push	r14
    1270:	ff 92       	push	r15
    1272:	0f 93       	push	r16
    1274:	1f 93       	push	r17
    1276:	8b ee       	ldi	r24, 0xEB	; 235
    1278:	91 e0       	ldi	r25, 0x01	; 1
    127a:	a0 e0       	ldi	r26, 0x00	; 0
    127c:	af 93       	push	r26
    127e:	9f 93       	push	r25
    1280:	8f 93       	push	r24
    1282:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <printf>
    1286:	0f b6       	in	r0, 0x3f	; 63
    1288:	f8 94       	cli
    128a:	de bf       	out	0x3e, r29	; 62
    128c:	0f be       	out	0x3f, r0	; 63
    128e:	cd bf       	out	0x3d, r28	; 61
    1290:	c1 cf       	rjmp	.-126    	; 0x1214 <main+0x8c>

Disassembly of section .text.avrlibc.fplib:

0000200a <__subsf3>:
    200a:	50 58       	subi	r21, 0x80	; 128

0000200c <__addsf3>:
    200c:	bb 27       	eor	r27, r27
    200e:	aa 27       	eor	r26, r26
    2010:	0e 94 22 0a 	call	0x1444	; 0x1444 <__addsf3x>
    2014:	0c 94 ab 0f 	jmp	0x1f56	; 0x1f56 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001444 <__addsf3x>:
    1444:	11 c0       	rjmp	.+34     	; 0x1468 <__addsf3x+0x24>
    1446:	0e 94 0c 10 	call	0x2018	; 0x2018 <__fp_pscA>
    144a:	38 f0       	brcs	.+14     	; 0x145a <__addsf3x+0x16>
    144c:	0e 94 13 10 	call	0x2026	; 0x2026 <__fp_pscB>
    1450:	20 f0       	brcs	.+8      	; 0x145a <__addsf3x+0x16>
    1452:	39 f4       	brne	.+14     	; 0x1462 <__addsf3x+0x1e>
    1454:	9f 3f       	cpi	r25, 0xFF	; 255
    1456:	19 f4       	brne	.+6      	; 0x145e <__addsf3x+0x1a>
    1458:	26 f4       	brtc	.+8      	; 0x1462 <__addsf3x+0x1e>
    145a:	0c 94 40 10 	jmp	0x2080	; 0x2080 <__fp_nan>
    145e:	0e f4       	brtc	.+2      	; 0x1462 <__addsf3x+0x1e>
    1460:	e0 95       	com	r30
    1462:	e7 fb       	bst	r30, 7
    1464:	0c 94 28 10 	jmp	0x2050	; 0x2050 <__fp_inf>
    1468:	e9 2f       	mov	r30, r25
    146a:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fp_split3>
    146e:	58 f3       	brcs	.-42     	; 0x1446 <__addsf3x+0x2>
    1470:	ba 17       	cp	r27, r26
    1472:	62 07       	cpc	r22, r18
    1474:	73 07       	cpc	r23, r19
    1476:	84 07       	cpc	r24, r20
    1478:	95 07       	cpc	r25, r21
    147a:	20 f0       	brcs	.+8      	; 0x1484 <__addsf3x+0x40>
    147c:	79 f4       	brne	.+30     	; 0x149c <__addsf3x+0x58>
    147e:	a6 f5       	brtc	.+104    	; 0x14e8 <__addsf3x+0xa4>
    1480:	0c 94 1a 10 	jmp	0x2034	; 0x2034 <__fp_zero>
    1484:	0e f4       	brtc	.+2      	; 0x1488 <__addsf3x+0x44>
    1486:	e0 95       	com	r30
    1488:	0b 2e       	mov	r0, r27
    148a:	ba 2f       	mov	r27, r26
    148c:	a0 2d       	mov	r26, r0
    148e:	0b 01       	movw	r0, r22
    1490:	b9 01       	movw	r22, r18
    1492:	90 01       	movw	r18, r0
    1494:	0c 01       	movw	r0, r24
    1496:	ca 01       	movw	r24, r20
    1498:	a0 01       	movw	r20, r0
    149a:	11 24       	eor	r1, r1
    149c:	ff 27       	eor	r31, r31
    149e:	59 1b       	sub	r21, r25
    14a0:	99 f0       	breq	.+38     	; 0x14c8 <__addsf3x+0x84>
    14a2:	59 3f       	cpi	r21, 0xF9	; 249
    14a4:	50 f4       	brcc	.+20     	; 0x14ba <__addsf3x+0x76>
    14a6:	50 3e       	cpi	r21, 0xE0	; 224
    14a8:	68 f1       	brcs	.+90     	; 0x1504 <__addsf3x+0xc0>
    14aa:	1a 16       	cp	r1, r26
    14ac:	f0 40       	sbci	r31, 0x00	; 0
    14ae:	a2 2f       	mov	r26, r18
    14b0:	23 2f       	mov	r18, r19
    14b2:	34 2f       	mov	r19, r20
    14b4:	44 27       	eor	r20, r20
    14b6:	58 5f       	subi	r21, 0xF8	; 248
    14b8:	f3 cf       	rjmp	.-26     	; 0x14a0 <__addsf3x+0x5c>
    14ba:	46 95       	lsr	r20
    14bc:	37 95       	ror	r19
    14be:	27 95       	ror	r18
    14c0:	a7 95       	ror	r26
    14c2:	f0 40       	sbci	r31, 0x00	; 0
    14c4:	53 95       	inc	r21
    14c6:	c9 f7       	brne	.-14     	; 0x14ba <__addsf3x+0x76>
    14c8:	7e f4       	brtc	.+30     	; 0x14e8 <__addsf3x+0xa4>
    14ca:	1f 16       	cp	r1, r31
    14cc:	ba 0b       	sbc	r27, r26
    14ce:	62 0b       	sbc	r22, r18
    14d0:	73 0b       	sbc	r23, r19
    14d2:	84 0b       	sbc	r24, r20
    14d4:	ba f0       	brmi	.+46     	; 0x1504 <__addsf3x+0xc0>
    14d6:	91 50       	subi	r25, 0x01	; 1
    14d8:	a1 f0       	breq	.+40     	; 0x1502 <__addsf3x+0xbe>
    14da:	ff 0f       	add	r31, r31
    14dc:	bb 1f       	adc	r27, r27
    14de:	66 1f       	adc	r22, r22
    14e0:	77 1f       	adc	r23, r23
    14e2:	88 1f       	adc	r24, r24
    14e4:	c2 f7       	brpl	.-16     	; 0x14d6 <__addsf3x+0x92>
    14e6:	0e c0       	rjmp	.+28     	; 0x1504 <__addsf3x+0xc0>
    14e8:	ba 0f       	add	r27, r26
    14ea:	62 1f       	adc	r22, r18
    14ec:	73 1f       	adc	r23, r19
    14ee:	84 1f       	adc	r24, r20
    14f0:	48 f4       	brcc	.+18     	; 0x1504 <__addsf3x+0xc0>
    14f2:	87 95       	ror	r24
    14f4:	77 95       	ror	r23
    14f6:	67 95       	ror	r22
    14f8:	b7 95       	ror	r27
    14fa:	f7 95       	ror	r31
    14fc:	9e 3f       	cpi	r25, 0xFE	; 254
    14fe:	08 f0       	brcs	.+2      	; 0x1502 <__addsf3x+0xbe>
    1500:	b0 cf       	rjmp	.-160    	; 0x1462 <__addsf3x+0x1e>
    1502:	93 95       	inc	r25
    1504:	88 0f       	add	r24, r24
    1506:	08 f0       	brcs	.+2      	; 0x150a <__addsf3x+0xc6>
    1508:	99 27       	eor	r25, r25
    150a:	ee 0f       	add	r30, r30
    150c:	97 95       	ror	r25
    150e:	87 95       	ror	r24
    1510:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000205c <__cmpsf2>:
    205c:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fp_cmp>
    2060:	08 f4       	brcc	.+2      	; 0x2064 <__cmpsf2+0x8>
    2062:	81 e0       	ldi	r24, 0x01	; 1
    2064:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002070 <__divsf3>:
    2070:	0e 94 49 09 	call	0x1292	; 0x1292 <__divsf3x>
    2074:	0c 94 ab 0f 	jmp	0x1f56	; 0x1f56 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001292 <__divsf3x>:
    1292:	10 c0       	rjmp	.+32     	; 0x12b4 <__divsf3x+0x22>
    1294:	0e 94 13 10 	call	0x2026	; 0x2026 <__fp_pscB>
    1298:	58 f0       	brcs	.+22     	; 0x12b0 <__divsf3x+0x1e>
    129a:	0e 94 0c 10 	call	0x2018	; 0x2018 <__fp_pscA>
    129e:	40 f0       	brcs	.+16     	; 0x12b0 <__divsf3x+0x1e>
    12a0:	29 f4       	brne	.+10     	; 0x12ac <__divsf3x+0x1a>
    12a2:	5f 3f       	cpi	r21, 0xFF	; 255
    12a4:	29 f0       	breq	.+10     	; 0x12b0 <__divsf3x+0x1e>
    12a6:	0c 94 28 10 	jmp	0x2050	; 0x2050 <__fp_inf>
    12aa:	51 11       	cpse	r21, r1
    12ac:	0c 94 1b 10 	jmp	0x2036	; 0x2036 <__fp_szero>
    12b0:	0c 94 40 10 	jmp	0x2080	; 0x2080 <__fp_nan>
    12b4:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fp_split3>
    12b8:	68 f3       	brcs	.-38     	; 0x1294 <__divsf3x+0x2>

000012ba <__divsf3_pse>:
    12ba:	99 23       	and	r25, r25
    12bc:	b1 f3       	breq	.-20     	; 0x12aa <__divsf3x+0x18>
    12be:	55 23       	and	r21, r21
    12c0:	91 f3       	breq	.-28     	; 0x12a6 <__divsf3x+0x14>
    12c2:	95 1b       	sub	r25, r21
    12c4:	55 0b       	sbc	r21, r21
    12c6:	bb 27       	eor	r27, r27
    12c8:	aa 27       	eor	r26, r26
    12ca:	62 17       	cp	r22, r18
    12cc:	73 07       	cpc	r23, r19
    12ce:	84 07       	cpc	r24, r20
    12d0:	38 f0       	brcs	.+14     	; 0x12e0 <__divsf3_pse+0x26>
    12d2:	9f 5f       	subi	r25, 0xFF	; 255
    12d4:	5f 4f       	sbci	r21, 0xFF	; 255
    12d6:	22 0f       	add	r18, r18
    12d8:	33 1f       	adc	r19, r19
    12da:	44 1f       	adc	r20, r20
    12dc:	aa 1f       	adc	r26, r26
    12de:	a9 f3       	breq	.-22     	; 0x12ca <__divsf3_pse+0x10>
    12e0:	35 d0       	rcall	.+106    	; 0x134c <__divsf3_pse+0x92>
    12e2:	0e 2e       	mov	r0, r30
    12e4:	3a f0       	brmi	.+14     	; 0x12f4 <__divsf3_pse+0x3a>
    12e6:	e0 e8       	ldi	r30, 0x80	; 128
    12e8:	32 d0       	rcall	.+100    	; 0x134e <__divsf3_pse+0x94>
    12ea:	91 50       	subi	r25, 0x01	; 1
    12ec:	50 40       	sbci	r21, 0x00	; 0
    12ee:	e6 95       	lsr	r30
    12f0:	00 1c       	adc	r0, r0
    12f2:	ca f7       	brpl	.-14     	; 0x12e6 <__divsf3_pse+0x2c>
    12f4:	2b d0       	rcall	.+86     	; 0x134c <__divsf3_pse+0x92>
    12f6:	fe 2f       	mov	r31, r30
    12f8:	29 d0       	rcall	.+82     	; 0x134c <__divsf3_pse+0x92>
    12fa:	66 0f       	add	r22, r22
    12fc:	77 1f       	adc	r23, r23
    12fe:	88 1f       	adc	r24, r24
    1300:	bb 1f       	adc	r27, r27
    1302:	26 17       	cp	r18, r22
    1304:	37 07       	cpc	r19, r23
    1306:	48 07       	cpc	r20, r24
    1308:	ab 07       	cpc	r26, r27
    130a:	b0 e8       	ldi	r27, 0x80	; 128
    130c:	09 f0       	breq	.+2      	; 0x1310 <__divsf3_pse+0x56>
    130e:	bb 0b       	sbc	r27, r27
    1310:	80 2d       	mov	r24, r0
    1312:	bf 01       	movw	r22, r30
    1314:	ff 27       	eor	r31, r31
    1316:	93 58       	subi	r25, 0x83	; 131
    1318:	5f 4f       	sbci	r21, 0xFF	; 255
    131a:	3a f0       	brmi	.+14     	; 0x132a <__divsf3_pse+0x70>
    131c:	9e 3f       	cpi	r25, 0xFE	; 254
    131e:	51 05       	cpc	r21, r1
    1320:	78 f0       	brcs	.+30     	; 0x1340 <__divsf3_pse+0x86>
    1322:	0c 94 28 10 	jmp	0x2050	; 0x2050 <__fp_inf>
    1326:	0c 94 1b 10 	jmp	0x2036	; 0x2036 <__fp_szero>
    132a:	5f 3f       	cpi	r21, 0xFF	; 255
    132c:	e4 f3       	brlt	.-8      	; 0x1326 <__divsf3_pse+0x6c>
    132e:	98 3e       	cpi	r25, 0xE8	; 232
    1330:	d4 f3       	brlt	.-12     	; 0x1326 <__divsf3_pse+0x6c>
    1332:	86 95       	lsr	r24
    1334:	77 95       	ror	r23
    1336:	67 95       	ror	r22
    1338:	b7 95       	ror	r27
    133a:	f7 95       	ror	r31
    133c:	9f 5f       	subi	r25, 0xFF	; 255
    133e:	c9 f7       	brne	.-14     	; 0x1332 <__divsf3_pse+0x78>
    1340:	88 0f       	add	r24, r24
    1342:	91 1d       	adc	r25, r1
    1344:	96 95       	lsr	r25
    1346:	87 95       	ror	r24
    1348:	97 f9       	bld	r25, 7
    134a:	08 95       	ret
    134c:	e1 e0       	ldi	r30, 0x01	; 1
    134e:	66 0f       	add	r22, r22
    1350:	77 1f       	adc	r23, r23
    1352:	88 1f       	adc	r24, r24
    1354:	bb 1f       	adc	r27, r27
    1356:	62 17       	cp	r22, r18
    1358:	73 07       	cpc	r23, r19
    135a:	84 07       	cpc	r24, r20
    135c:	ba 07       	cpc	r27, r26
    135e:	20 f0       	brcs	.+8      	; 0x1368 <__divsf3_pse+0xae>
    1360:	62 1b       	sub	r22, r18
    1362:	73 0b       	sbc	r23, r19
    1364:	84 0b       	sbc	r24, r20
    1366:	ba 0b       	sbc	r27, r26
    1368:	ee 1f       	adc	r30, r30
    136a:	88 f7       	brcc	.-30     	; 0x134e <__divsf3_pse+0x94>
    136c:	e0 95       	com	r30
    136e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001a92 <__fixunssfsi>:
    1a92:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__fp_splitA>
    1a96:	88 f0       	brcs	.+34     	; 0x1aba <__fixunssfsi+0x28>
    1a98:	9f 57       	subi	r25, 0x7F	; 127
    1a9a:	98 f0       	brcs	.+38     	; 0x1ac2 <__fixunssfsi+0x30>
    1a9c:	b9 2f       	mov	r27, r25
    1a9e:	99 27       	eor	r25, r25
    1aa0:	b7 51       	subi	r27, 0x17	; 23
    1aa2:	b0 f0       	brcs	.+44     	; 0x1ad0 <__fixunssfsi+0x3e>
    1aa4:	e1 f0       	breq	.+56     	; 0x1ade <__fixunssfsi+0x4c>
    1aa6:	66 0f       	add	r22, r22
    1aa8:	77 1f       	adc	r23, r23
    1aaa:	88 1f       	adc	r24, r24
    1aac:	99 1f       	adc	r25, r25
    1aae:	1a f0       	brmi	.+6      	; 0x1ab6 <__fixunssfsi+0x24>
    1ab0:	ba 95       	dec	r27
    1ab2:	c9 f7       	brne	.-14     	; 0x1aa6 <__fixunssfsi+0x14>
    1ab4:	14 c0       	rjmp	.+40     	; 0x1ade <__fixunssfsi+0x4c>
    1ab6:	b1 30       	cpi	r27, 0x01	; 1
    1ab8:	91 f0       	breq	.+36     	; 0x1ade <__fixunssfsi+0x4c>
    1aba:	0e 94 1a 10 	call	0x2034	; 0x2034 <__fp_zero>
    1abe:	b1 e0       	ldi	r27, 0x01	; 1
    1ac0:	08 95       	ret
    1ac2:	0c 94 1a 10 	jmp	0x2034	; 0x2034 <__fp_zero>
    1ac6:	67 2f       	mov	r22, r23
    1ac8:	78 2f       	mov	r23, r24
    1aca:	88 27       	eor	r24, r24
    1acc:	b8 5f       	subi	r27, 0xF8	; 248
    1ace:	39 f0       	breq	.+14     	; 0x1ade <__fixunssfsi+0x4c>
    1ad0:	b9 3f       	cpi	r27, 0xF9	; 249
    1ad2:	cc f3       	brlt	.-14     	; 0x1ac6 <__fixunssfsi+0x34>
    1ad4:	86 95       	lsr	r24
    1ad6:	77 95       	ror	r23
    1ad8:	67 95       	ror	r22
    1ada:	b3 95       	inc	r27
    1adc:	d9 f7       	brne	.-10     	; 0x1ad4 <__fixunssfsi+0x42>
    1ade:	3e f4       	brtc	.+14     	; 0x1aee <__fixunssfsi+0x5c>
    1ae0:	90 95       	com	r25
    1ae2:	80 95       	com	r24
    1ae4:	70 95       	com	r23
    1ae6:	61 95       	neg	r22
    1ae8:	7f 4f       	sbci	r23, 0xFF	; 255
    1aea:	8f 4f       	sbci	r24, 0xFF	; 255
    1aec:	9f 4f       	sbci	r25, 0xFF	; 255
    1aee:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000193c <__floatunsisf>:
    193c:	e8 94       	clt
    193e:	09 c0       	rjmp	.+18     	; 0x1952 <__floatsisf+0x12>

00001940 <__floatsisf>:
    1940:	97 fb       	bst	r25, 7
    1942:	3e f4       	brtc	.+14     	; 0x1952 <__floatsisf+0x12>
    1944:	90 95       	com	r25
    1946:	80 95       	com	r24
    1948:	70 95       	com	r23
    194a:	61 95       	neg	r22
    194c:	7f 4f       	sbci	r23, 0xFF	; 255
    194e:	8f 4f       	sbci	r24, 0xFF	; 255
    1950:	9f 4f       	sbci	r25, 0xFF	; 255
    1952:	99 23       	and	r25, r25
    1954:	a9 f0       	breq	.+42     	; 0x1980 <__floatsisf+0x40>
    1956:	f9 2f       	mov	r31, r25
    1958:	96 e9       	ldi	r25, 0x96	; 150
    195a:	bb 27       	eor	r27, r27
    195c:	93 95       	inc	r25
    195e:	f6 95       	lsr	r31
    1960:	87 95       	ror	r24
    1962:	77 95       	ror	r23
    1964:	67 95       	ror	r22
    1966:	b7 95       	ror	r27
    1968:	f1 11       	cpse	r31, r1
    196a:	f8 cf       	rjmp	.-16     	; 0x195c <__floatsisf+0x1c>
    196c:	fa f4       	brpl	.+62     	; 0x19ac <__floatsisf+0x6c>
    196e:	bb 0f       	add	r27, r27
    1970:	11 f4       	brne	.+4      	; 0x1976 <__floatsisf+0x36>
    1972:	60 ff       	sbrs	r22, 0
    1974:	1b c0       	rjmp	.+54     	; 0x19ac <__floatsisf+0x6c>
    1976:	6f 5f       	subi	r22, 0xFF	; 255
    1978:	7f 4f       	sbci	r23, 0xFF	; 255
    197a:	8f 4f       	sbci	r24, 0xFF	; 255
    197c:	9f 4f       	sbci	r25, 0xFF	; 255
    197e:	16 c0       	rjmp	.+44     	; 0x19ac <__floatsisf+0x6c>
    1980:	88 23       	and	r24, r24
    1982:	11 f0       	breq	.+4      	; 0x1988 <__floatsisf+0x48>
    1984:	96 e9       	ldi	r25, 0x96	; 150
    1986:	11 c0       	rjmp	.+34     	; 0x19aa <__floatsisf+0x6a>
    1988:	77 23       	and	r23, r23
    198a:	21 f0       	breq	.+8      	; 0x1994 <__floatsisf+0x54>
    198c:	9e e8       	ldi	r25, 0x8E	; 142
    198e:	87 2f       	mov	r24, r23
    1990:	76 2f       	mov	r23, r22
    1992:	05 c0       	rjmp	.+10     	; 0x199e <__floatsisf+0x5e>
    1994:	66 23       	and	r22, r22
    1996:	71 f0       	breq	.+28     	; 0x19b4 <__floatsisf+0x74>
    1998:	96 e8       	ldi	r25, 0x86	; 134
    199a:	86 2f       	mov	r24, r22
    199c:	70 e0       	ldi	r23, 0x00	; 0
    199e:	60 e0       	ldi	r22, 0x00	; 0
    19a0:	2a f0       	brmi	.+10     	; 0x19ac <__floatsisf+0x6c>
    19a2:	9a 95       	dec	r25
    19a4:	66 0f       	add	r22, r22
    19a6:	77 1f       	adc	r23, r23
    19a8:	88 1f       	adc	r24, r24
    19aa:	da f7       	brpl	.-10     	; 0x19a2 <__floatsisf+0x62>
    19ac:	88 0f       	add	r24, r24
    19ae:	96 95       	lsr	r25
    19b0:	87 95       	ror	r24
    19b2:	97 f9       	bld	r25, 7
    19b4:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001b3e <__fp_cmp>:
    1b3e:	99 0f       	add	r25, r25
    1b40:	00 08       	sbc	r0, r0
    1b42:	55 0f       	add	r21, r21
    1b44:	aa 0b       	sbc	r26, r26
    1b46:	e0 e8       	ldi	r30, 0x80	; 128
    1b48:	fe ef       	ldi	r31, 0xFE	; 254
    1b4a:	16 16       	cp	r1, r22
    1b4c:	17 06       	cpc	r1, r23
    1b4e:	e8 07       	cpc	r30, r24
    1b50:	f9 07       	cpc	r31, r25
    1b52:	c0 f0       	brcs	.+48     	; 0x1b84 <__fp_cmp+0x46>
    1b54:	12 16       	cp	r1, r18
    1b56:	13 06       	cpc	r1, r19
    1b58:	e4 07       	cpc	r30, r20
    1b5a:	f5 07       	cpc	r31, r21
    1b5c:	98 f0       	brcs	.+38     	; 0x1b84 <__fp_cmp+0x46>
    1b5e:	62 1b       	sub	r22, r18
    1b60:	73 0b       	sbc	r23, r19
    1b62:	84 0b       	sbc	r24, r20
    1b64:	95 0b       	sbc	r25, r21
    1b66:	39 f4       	brne	.+14     	; 0x1b76 <__fp_cmp+0x38>
    1b68:	0a 26       	eor	r0, r26
    1b6a:	61 f0       	breq	.+24     	; 0x1b84 <__fp_cmp+0x46>
    1b6c:	23 2b       	or	r18, r19
    1b6e:	24 2b       	or	r18, r20
    1b70:	25 2b       	or	r18, r21
    1b72:	21 f4       	brne	.+8      	; 0x1b7c <__fp_cmp+0x3e>
    1b74:	08 95       	ret
    1b76:	0a 26       	eor	r0, r26
    1b78:	09 f4       	brne	.+2      	; 0x1b7c <__fp_cmp+0x3e>
    1b7a:	a1 40       	sbci	r26, 0x01	; 1
    1b7c:	a6 95       	lsr	r26
    1b7e:	8f ef       	ldi	r24, 0xFF	; 255
    1b80:	81 1d       	adc	r24, r1
    1b82:	81 1d       	adc	r24, r1
    1b84:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002050 <__fp_inf>:
    2050:	97 f9       	bld	r25, 7
    2052:	9f 67       	ori	r25, 0x7F	; 127
    2054:	80 e8       	ldi	r24, 0x80	; 128
    2056:	70 e0       	ldi	r23, 0x00	; 0
    2058:	60 e0       	ldi	r22, 0x00	; 0
    205a:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002080 <__fp_nan>:
    2080:	9f ef       	ldi	r25, 0xFF	; 255
    2082:	80 ec       	ldi	r24, 0xC0	; 192
    2084:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002018 <__fp_pscA>:
    2018:	00 24       	eor	r0, r0
    201a:	0a 94       	dec	r0
    201c:	16 16       	cp	r1, r22
    201e:	17 06       	cpc	r1, r23
    2020:	18 06       	cpc	r1, r24
    2022:	09 06       	cpc	r0, r25
    2024:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002026 <__fp_pscB>:
    2026:	00 24       	eor	r0, r0
    2028:	0a 94       	dec	r0
    202a:	12 16       	cp	r1, r18
    202c:	13 06       	cpc	r1, r19
    202e:	14 06       	cpc	r1, r20
    2030:	05 06       	cpc	r0, r21
    2032:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f56 <__fp_round>:
    1f56:	09 2e       	mov	r0, r25
    1f58:	03 94       	inc	r0
    1f5a:	00 0c       	add	r0, r0
    1f5c:	11 f4       	brne	.+4      	; 0x1f62 <__fp_round+0xc>
    1f5e:	88 23       	and	r24, r24
    1f60:	52 f0       	brmi	.+20     	; 0x1f76 <__fp_round+0x20>
    1f62:	bb 0f       	add	r27, r27
    1f64:	40 f4       	brcc	.+16     	; 0x1f76 <__fp_round+0x20>
    1f66:	bf 2b       	or	r27, r31
    1f68:	11 f4       	brne	.+4      	; 0x1f6e <__fp_round+0x18>
    1f6a:	60 ff       	sbrs	r22, 0
    1f6c:	04 c0       	rjmp	.+8      	; 0x1f76 <__fp_round+0x20>
    1f6e:	6f 5f       	subi	r22, 0xFF	; 255
    1f70:	7f 4f       	sbci	r23, 0xFF	; 255
    1f72:	8f 4f       	sbci	r24, 0xFF	; 255
    1f74:	9f 4f       	sbci	r25, 0xFF	; 255
    1f76:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001c9e <__fp_split3>:
    1c9e:	57 fd       	sbrc	r21, 7
    1ca0:	90 58       	subi	r25, 0x80	; 128
    1ca2:	44 0f       	add	r20, r20
    1ca4:	55 1f       	adc	r21, r21
    1ca6:	59 f0       	breq	.+22     	; 0x1cbe <__fp_splitA+0x10>
    1ca8:	5f 3f       	cpi	r21, 0xFF	; 255
    1caa:	71 f0       	breq	.+28     	; 0x1cc8 <__fp_splitA+0x1a>
    1cac:	47 95       	ror	r20

00001cae <__fp_splitA>:
    1cae:	88 0f       	add	r24, r24
    1cb0:	97 fb       	bst	r25, 7
    1cb2:	99 1f       	adc	r25, r25
    1cb4:	61 f0       	breq	.+24     	; 0x1cce <__fp_splitA+0x20>
    1cb6:	9f 3f       	cpi	r25, 0xFF	; 255
    1cb8:	79 f0       	breq	.+30     	; 0x1cd8 <__fp_splitA+0x2a>
    1cba:	87 95       	ror	r24
    1cbc:	08 95       	ret
    1cbe:	12 16       	cp	r1, r18
    1cc0:	13 06       	cpc	r1, r19
    1cc2:	14 06       	cpc	r1, r20
    1cc4:	55 1f       	adc	r21, r21
    1cc6:	f2 cf       	rjmp	.-28     	; 0x1cac <__fp_split3+0xe>
    1cc8:	46 95       	lsr	r20
    1cca:	f1 df       	rcall	.-30     	; 0x1cae <__fp_splitA>
    1ccc:	08 c0       	rjmp	.+16     	; 0x1cde <__fp_splitA+0x30>
    1cce:	16 16       	cp	r1, r22
    1cd0:	17 06       	cpc	r1, r23
    1cd2:	18 06       	cpc	r1, r24
    1cd4:	99 1f       	adc	r25, r25
    1cd6:	f1 cf       	rjmp	.-30     	; 0x1cba <__fp_splitA+0xc>
    1cd8:	86 95       	lsr	r24
    1cda:	71 05       	cpc	r23, r1
    1cdc:	61 05       	cpc	r22, r1
    1cde:	08 94       	sec
    1ce0:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002034 <__fp_zero>:
    2034:	e8 94       	clt

00002036 <__fp_szero>:
    2036:	bb 27       	eor	r27, r27
    2038:	66 27       	eor	r22, r22
    203a:	77 27       	eor	r23, r23
    203c:	cb 01       	movw	r24, r22
    203e:	97 f9       	bld	r25, 7
    2040:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002066 <__gesf2>:
    2066:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fp_cmp>
    206a:	08 f4       	brcc	.+2      	; 0x206e <__gesf2+0x8>
    206c:	8f ef       	ldi	r24, 0xFF	; 255
    206e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002078 <__mulsf3>:
    2078:	0e 94 b8 09 	call	0x1370	; 0x1370 <__mulsf3x>
    207c:	0c 94 ab 0f 	jmp	0x1f56	; 0x1f56 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001370 <__mulsf3x>:
    1370:	0f c0       	rjmp	.+30     	; 0x1390 <__mulsf3x+0x20>
    1372:	0e 94 0c 10 	call	0x2018	; 0x2018 <__fp_pscA>
    1376:	38 f0       	brcs	.+14     	; 0x1386 <__mulsf3x+0x16>
    1378:	0e 94 13 10 	call	0x2026	; 0x2026 <__fp_pscB>
    137c:	20 f0       	brcs	.+8      	; 0x1386 <__mulsf3x+0x16>
    137e:	95 23       	and	r25, r21
    1380:	11 f0       	breq	.+4      	; 0x1386 <__mulsf3x+0x16>
    1382:	0c 94 28 10 	jmp	0x2050	; 0x2050 <__fp_inf>
    1386:	0c 94 40 10 	jmp	0x2080	; 0x2080 <__fp_nan>
    138a:	11 24       	eor	r1, r1
    138c:	0c 94 1b 10 	jmp	0x2036	; 0x2036 <__fp_szero>
    1390:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fp_split3>
    1394:	70 f3       	brcs	.-36     	; 0x1372 <__mulsf3x+0x2>

00001396 <__mulsf3_pse>:
    1396:	95 9f       	mul	r25, r21
    1398:	c1 f3       	breq	.-16     	; 0x138a <__mulsf3x+0x1a>
    139a:	95 0f       	add	r25, r21
    139c:	50 e0       	ldi	r21, 0x00	; 0
    139e:	55 1f       	adc	r21, r21
    13a0:	62 9f       	mul	r22, r18
    13a2:	f0 01       	movw	r30, r0
    13a4:	72 9f       	mul	r23, r18
    13a6:	bb 27       	eor	r27, r27
    13a8:	f0 0d       	add	r31, r0
    13aa:	b1 1d       	adc	r27, r1
    13ac:	63 9f       	mul	r22, r19
    13ae:	aa 27       	eor	r26, r26
    13b0:	f0 0d       	add	r31, r0
    13b2:	b1 1d       	adc	r27, r1
    13b4:	aa 1f       	adc	r26, r26
    13b6:	64 9f       	mul	r22, r20
    13b8:	66 27       	eor	r22, r22
    13ba:	b0 0d       	add	r27, r0
    13bc:	a1 1d       	adc	r26, r1
    13be:	66 1f       	adc	r22, r22
    13c0:	82 9f       	mul	r24, r18
    13c2:	22 27       	eor	r18, r18
    13c4:	b0 0d       	add	r27, r0
    13c6:	a1 1d       	adc	r26, r1
    13c8:	62 1f       	adc	r22, r18
    13ca:	73 9f       	mul	r23, r19
    13cc:	b0 0d       	add	r27, r0
    13ce:	a1 1d       	adc	r26, r1
    13d0:	62 1f       	adc	r22, r18
    13d2:	83 9f       	mul	r24, r19
    13d4:	a0 0d       	add	r26, r0
    13d6:	61 1d       	adc	r22, r1
    13d8:	22 1f       	adc	r18, r18
    13da:	74 9f       	mul	r23, r20
    13dc:	33 27       	eor	r19, r19
    13de:	a0 0d       	add	r26, r0
    13e0:	61 1d       	adc	r22, r1
    13e2:	23 1f       	adc	r18, r19
    13e4:	84 9f       	mul	r24, r20
    13e6:	60 0d       	add	r22, r0
    13e8:	21 1d       	adc	r18, r1
    13ea:	82 2f       	mov	r24, r18
    13ec:	76 2f       	mov	r23, r22
    13ee:	6a 2f       	mov	r22, r26
    13f0:	11 24       	eor	r1, r1
    13f2:	9f 57       	subi	r25, 0x7F	; 127
    13f4:	50 40       	sbci	r21, 0x00	; 0
    13f6:	9a f0       	brmi	.+38     	; 0x141e <__mulsf3_pse+0x88>
    13f8:	f1 f0       	breq	.+60     	; 0x1436 <__mulsf3_pse+0xa0>
    13fa:	88 23       	and	r24, r24
    13fc:	4a f0       	brmi	.+18     	; 0x1410 <__mulsf3_pse+0x7a>
    13fe:	ee 0f       	add	r30, r30
    1400:	ff 1f       	adc	r31, r31
    1402:	bb 1f       	adc	r27, r27
    1404:	66 1f       	adc	r22, r22
    1406:	77 1f       	adc	r23, r23
    1408:	88 1f       	adc	r24, r24
    140a:	91 50       	subi	r25, 0x01	; 1
    140c:	50 40       	sbci	r21, 0x00	; 0
    140e:	a9 f7       	brne	.-22     	; 0x13fa <__mulsf3_pse+0x64>
    1410:	9e 3f       	cpi	r25, 0xFE	; 254
    1412:	51 05       	cpc	r21, r1
    1414:	80 f0       	brcs	.+32     	; 0x1436 <__mulsf3_pse+0xa0>
    1416:	0c 94 28 10 	jmp	0x2050	; 0x2050 <__fp_inf>
    141a:	0c 94 1b 10 	jmp	0x2036	; 0x2036 <__fp_szero>
    141e:	5f 3f       	cpi	r21, 0xFF	; 255
    1420:	e4 f3       	brlt	.-8      	; 0x141a <__mulsf3_pse+0x84>
    1422:	98 3e       	cpi	r25, 0xE8	; 232
    1424:	d4 f3       	brlt	.-12     	; 0x141a <__mulsf3_pse+0x84>
    1426:	86 95       	lsr	r24
    1428:	77 95       	ror	r23
    142a:	67 95       	ror	r22
    142c:	b7 95       	ror	r27
    142e:	f7 95       	ror	r31
    1430:	e7 95       	ror	r30
    1432:	9f 5f       	subi	r25, 0xFF	; 255
    1434:	c1 f7       	brne	.-16     	; 0x1426 <__mulsf3_pse+0x90>
    1436:	fe 2b       	or	r31, r30
    1438:	88 0f       	add	r24, r24
    143a:	91 1d       	adc	r25, r1
    143c:	96 95       	lsr	r25
    143e:	87 95       	ror	r24
    1440:	97 f9       	bld	r25, 7
    1442:	08 95       	ret

Disassembly of section .text.avrlibc:

0000020a <vfprintf>:
 20a:	a4 e1       	ldi	r26, 0x14	; 20
 20c:	b0 e0       	ldi	r27, 0x00	; 0
 20e:	eb e0       	ldi	r30, 0x0B	; 11
 210:	f1 e0       	ldi	r31, 0x01	; 1
 212:	0c 94 d0 0e 	jmp	0x1da0	; 0x1da0 <__prologue_saves__>
 216:	6c 01       	movw	r12, r24
 218:	1a 01       	movw	r2, r20
 21a:	46 2e       	mov	r4, r22
 21c:	59 01       	movw	r10, r18
 21e:	fc 01       	movw	r30, r24
 220:	10 86       	std	Z+8, r1	; 0x08
 222:	17 82       	std	Z+7, r1	; 0x07
 224:	84 81       	ldd	r24, Z+4	; 0x04
 226:	81 ff       	sbrs	r24, 1
 228:	62 c3       	rjmp	.+1732   	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 22a:	ce 01       	movw	r24, r28
 22c:	01 96       	adiw	r24, 0x01	; 1
 22e:	9d 87       	std	Y+13, r25	; 0x0d
 230:	8c 87       	std	Y+12, r24	; 0x0c
 232:	a0 e8       	ldi	r26, 0x80	; 128
 234:	8a 8b       	std	Y+18, r24	; 0x12
 236:	9b 8b       	std	Y+19, r25	; 0x13
 238:	ac 8b       	std	Y+20, r26	; 0x14
 23a:	f1 01       	movw	r30, r2
 23c:	84 91       	lpm	r24, Z
 23e:	47 fc       	sbrc	r4, 7
 240:	80 81       	ld	r24, Z
 242:	88 23       	and	r24, r24
 244:	09 f4       	brne	.+2      	; 0x248 <vfprintf+0x3e>
 246:	4f c3       	rjmp	.+1694   	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
 248:	44 2d       	mov	r20, r4
 24a:	91 01       	movw	r18, r2
 24c:	2f 5f       	subi	r18, 0xFF	; 255
 24e:	3f 4f       	sbci	r19, 0xFF	; 255
 250:	4f 4f       	sbci	r20, 0xFF	; 255
 252:	85 32       	cpi	r24, 0x25	; 37
 254:	19 f0       	breq	.+6      	; 0x25c <vfprintf+0x52>
 256:	19 01       	movw	r2, r18
 258:	44 2e       	mov	r4, r20
 25a:	0a c0       	rjmp	.+20     	; 0x270 <vfprintf+0x66>
 25c:	f9 01       	movw	r30, r18
 25e:	84 91       	lpm	r24, Z
 260:	47 fd       	sbrc	r20, 7
 262:	80 81       	ld	r24, Z
 264:	92 e0       	ldi	r25, 0x02	; 2
 266:	29 0e       	add	r2, r25
 268:	31 1c       	adc	r3, r1
 26a:	41 1c       	adc	r4, r1
 26c:	85 32       	cpi	r24, 0x25	; 37
 26e:	49 f4       	brne	.+18     	; 0x282 <vfprintf+0x78>
 270:	b6 01       	movw	r22, r12
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 278:	bf 86       	std	Y+15, r11	; 0x0f
 27a:	ae 86       	std	Y+14, r10	; 0x0e
 27c:	ae 84       	ldd	r10, Y+14	; 0x0e
 27e:	bf 84       	ldd	r11, Y+15	; 0x0f
 280:	dc cf       	rjmp	.-72     	; 0x23a <vfprintf+0x30>
 282:	10 e0       	ldi	r17, 0x00	; 0
 284:	f1 2c       	mov	r15, r1
 286:	00 e0       	ldi	r16, 0x00	; 0
 288:	00 32       	cpi	r16, 0x20	; 32
 28a:	a0 f4       	brcc	.+40     	; 0x2b4 <vfprintf+0xaa>
 28c:	8b 32       	cpi	r24, 0x2B	; 43
 28e:	69 f0       	breq	.+26     	; 0x2aa <vfprintf+0xa0>
 290:	30 f4       	brcc	.+12     	; 0x29e <vfprintf+0x94>
 292:	80 32       	cpi	r24, 0x20	; 32
 294:	59 f0       	breq	.+22     	; 0x2ac <vfprintf+0xa2>
 296:	83 32       	cpi	r24, 0x23	; 35
 298:	69 f4       	brne	.+26     	; 0x2b4 <vfprintf+0xaa>
 29a:	00 61       	ori	r16, 0x10	; 16
 29c:	2c c0       	rjmp	.+88     	; 0x2f6 <vfprintf+0xec>
 29e:	8d 32       	cpi	r24, 0x2D	; 45
 2a0:	39 f0       	breq	.+14     	; 0x2b0 <vfprintf+0xa6>
 2a2:	80 33       	cpi	r24, 0x30	; 48
 2a4:	39 f4       	brne	.+14     	; 0x2b4 <vfprintf+0xaa>
 2a6:	01 60       	ori	r16, 0x01	; 1
 2a8:	26 c0       	rjmp	.+76     	; 0x2f6 <vfprintf+0xec>
 2aa:	02 60       	ori	r16, 0x02	; 2
 2ac:	04 60       	ori	r16, 0x04	; 4
 2ae:	23 c0       	rjmp	.+70     	; 0x2f6 <vfprintf+0xec>
 2b0:	08 60       	ori	r16, 0x08	; 8
 2b2:	21 c0       	rjmp	.+66     	; 0x2f6 <vfprintf+0xec>
 2b4:	07 fd       	sbrc	r16, 7
 2b6:	29 c0       	rjmp	.+82     	; 0x30a <vfprintf+0x100>
 2b8:	90 ed       	ldi	r25, 0xD0	; 208
 2ba:	98 0f       	add	r25, r24
 2bc:	9a 30       	cpi	r25, 0x0A	; 10
 2be:	78 f4       	brcc	.+30     	; 0x2de <vfprintf+0xd4>
 2c0:	06 ff       	sbrs	r16, 6
 2c2:	06 c0       	rjmp	.+12     	; 0x2d0 <vfprintf+0xc6>
 2c4:	aa e0       	ldi	r26, 0x0A	; 10
 2c6:	1a 9f       	mul	r17, r26
 2c8:	90 0d       	add	r25, r0
 2ca:	11 24       	eor	r1, r1
 2cc:	19 2f       	mov	r17, r25
 2ce:	13 c0       	rjmp	.+38     	; 0x2f6 <vfprintf+0xec>
 2d0:	ea e0       	ldi	r30, 0x0A	; 10
 2d2:	fe 9e       	mul	r15, r30
 2d4:	90 0d       	add	r25, r0
 2d6:	11 24       	eor	r1, r1
 2d8:	f9 2e       	mov	r15, r25
 2da:	00 62       	ori	r16, 0x20	; 32
 2dc:	0c c0       	rjmp	.+24     	; 0x2f6 <vfprintf+0xec>
 2de:	8e 32       	cpi	r24, 0x2E	; 46
 2e0:	21 f4       	brne	.+8      	; 0x2ea <vfprintf+0xe0>
 2e2:	06 fd       	sbrc	r16, 6
 2e4:	00 c3       	rjmp	.+1536   	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
 2e6:	00 64       	ori	r16, 0x40	; 64
 2e8:	06 c0       	rjmp	.+12     	; 0x2f6 <vfprintf+0xec>
 2ea:	8c 36       	cpi	r24, 0x6C	; 108
 2ec:	11 f4       	brne	.+4      	; 0x2f2 <vfprintf+0xe8>
 2ee:	00 68       	ori	r16, 0x80	; 128
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <vfprintf+0xec>
 2f2:	88 36       	cpi	r24, 0x68	; 104
 2f4:	51 f4       	brne	.+20     	; 0x30a <vfprintf+0x100>
 2f6:	f1 01       	movw	r30, r2
 2f8:	84 91       	lpm	r24, Z
 2fa:	47 fc       	sbrc	r4, 7
 2fc:	80 81       	ld	r24, Z
 2fe:	ff ef       	ldi	r31, 0xFF	; 255
 300:	2f 1a       	sub	r2, r31
 302:	3f 0a       	sbc	r3, r31
 304:	4f 0a       	sbc	r4, r31
 306:	81 11       	cpse	r24, r1
 308:	bf cf       	rjmp	.-130    	; 0x288 <vfprintf+0x7e>
 30a:	9b eb       	ldi	r25, 0xBB	; 187
 30c:	98 0f       	add	r25, r24
 30e:	93 30       	cpi	r25, 0x03	; 3
 310:	18 f4       	brcc	.+6      	; 0x318 <vfprintf+0x10e>
 312:	00 61       	ori	r16, 0x10	; 16
 314:	80 5e       	subi	r24, 0xE0	; 224
 316:	06 c0       	rjmp	.+12     	; 0x324 <vfprintf+0x11a>
 318:	9b e9       	ldi	r25, 0x9B	; 155
 31a:	98 0f       	add	r25, r24
 31c:	93 30       	cpi	r25, 0x03	; 3
 31e:	08 f0       	brcs	.+2      	; 0x322 <vfprintf+0x118>
 320:	66 c1       	rjmp	.+716    	; 0x5ee <__EEPROM_REGION_LENGTH__+0x1ee>
 322:	0f 7e       	andi	r16, 0xEF	; 239
 324:	06 ff       	sbrs	r16, 6
 326:	16 e0       	ldi	r17, 0x06	; 6
 328:	0f 73       	andi	r16, 0x3F	; 63
 32a:	70 2e       	mov	r7, r16
 32c:	85 36       	cpi	r24, 0x65	; 101
 32e:	21 f4       	brne	.+8      	; 0x338 <vfprintf+0x12e>
 330:	20 2f       	mov	r18, r16
 332:	20 64       	ori	r18, 0x40	; 64
 334:	72 2e       	mov	r7, r18
 336:	08 c0       	rjmp	.+16     	; 0x348 <vfprintf+0x13e>
 338:	86 36       	cpi	r24, 0x66	; 102
 33a:	21 f4       	brne	.+8      	; 0x344 <vfprintf+0x13a>
 33c:	80 2f       	mov	r24, r16
 33e:	80 68       	ori	r24, 0x80	; 128
 340:	78 2e       	mov	r7, r24
 342:	02 c0       	rjmp	.+4      	; 0x348 <vfprintf+0x13e>
 344:	11 11       	cpse	r17, r1
 346:	11 50       	subi	r17, 0x01	; 1
 348:	77 fe       	sbrs	r7, 7
 34a:	07 c0       	rjmp	.+14     	; 0x35a <vfprintf+0x150>
 34c:	1c 33       	cpi	r17, 0x3C	; 60
 34e:	50 f4       	brcc	.+20     	; 0x364 <vfprintf+0x15a>
 350:	ee 24       	eor	r14, r14
 352:	e3 94       	inc	r14
 354:	e1 0e       	add	r14, r17
 356:	27 e0       	ldi	r18, 0x07	; 7
 358:	0b c0       	rjmp	.+22     	; 0x370 <vfprintf+0x166>
 35a:	18 30       	cpi	r17, 0x08	; 8
 35c:	38 f0       	brcs	.+14     	; 0x36c <vfprintf+0x162>
 35e:	27 e0       	ldi	r18, 0x07	; 7
 360:	17 e0       	ldi	r17, 0x07	; 7
 362:	05 c0       	rjmp	.+10     	; 0x36e <vfprintf+0x164>
 364:	27 e0       	ldi	r18, 0x07	; 7
 366:	6c e3       	ldi	r22, 0x3C	; 60
 368:	e6 2e       	mov	r14, r22
 36a:	02 c0       	rjmp	.+4      	; 0x370 <vfprintf+0x166>
 36c:	21 2f       	mov	r18, r17
 36e:	e1 2c       	mov	r14, r1
 370:	f5 01       	movw	r30, r10
 372:	34 96       	adiw	r30, 0x04	; 4
 374:	ff 87       	std	Y+15, r31	; 0x0f
 376:	ee 87       	std	Y+14, r30	; 0x0e
 378:	f5 01       	movw	r30, r10
 37a:	60 81       	ld	r22, Z
 37c:	71 81       	ldd	r23, Z+1	; 0x01
 37e:	82 81       	ldd	r24, Z+2	; 0x02
 380:	93 81       	ldd	r25, Z+3	; 0x03
 382:	0e 2d       	mov	r16, r14
 384:	ae 01       	movw	r20, r28
 386:	4f 5f       	subi	r20, 0xFF	; 255
 388:	5f 4f       	sbci	r21, 0xFF	; 255
 38a:	0e 94 22 07 	call	0xe44	; 0xe44 <__ftoa_engine>
 38e:	5c 01       	movw	r10, r24
 390:	59 80       	ldd	r5, Y+1	; 0x01
 392:	50 fe       	sbrs	r5, 0
 394:	02 c0       	rjmp	.+4      	; 0x39a <vfprintf+0x190>
 396:	53 fe       	sbrs	r5, 3
 398:	06 c0       	rjmp	.+12     	; 0x3a6 <vfprintf+0x19c>
 39a:	71 fc       	sbrc	r7, 1
 39c:	06 c0       	rjmp	.+12     	; 0x3aa <vfprintf+0x1a0>
 39e:	72 fe       	sbrs	r7, 2
 3a0:	06 c0       	rjmp	.+12     	; 0x3ae <vfprintf+0x1a4>
 3a2:	00 e2       	ldi	r16, 0x20	; 32
 3a4:	05 c0       	rjmp	.+10     	; 0x3b0 <vfprintf+0x1a6>
 3a6:	0d e2       	ldi	r16, 0x2D	; 45
 3a8:	03 c0       	rjmp	.+6      	; 0x3b0 <vfprintf+0x1a6>
 3aa:	0b e2       	ldi	r16, 0x2B	; 43
 3ac:	01 c0       	rjmp	.+2      	; 0x3b0 <vfprintf+0x1a6>
 3ae:	00 e0       	ldi	r16, 0x00	; 0
 3b0:	85 2d       	mov	r24, r5
 3b2:	8c 70       	andi	r24, 0x0C	; 12
 3b4:	19 f0       	breq	.+6      	; 0x3bc <vfprintf+0x1b2>
 3b6:	01 11       	cpse	r16, r1
 3b8:	73 c2       	rjmp	.+1254   	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
 3ba:	be c2       	rjmp	.+1404   	; 0x938 <__stack+0x39>
 3bc:	77 fe       	sbrs	r7, 7
 3be:	0f c0       	rjmp	.+30     	; 0x3de <vfprintf+0x1d4>
 3c0:	ea 0c       	add	r14, r10
 3c2:	54 fe       	sbrs	r5, 4
 3c4:	04 c0       	rjmp	.+8      	; 0x3ce <vfprintf+0x1c4>
 3c6:	8a 81       	ldd	r24, Y+2	; 0x02
 3c8:	81 33       	cpi	r24, 0x31	; 49
 3ca:	09 f4       	brne	.+2      	; 0x3ce <vfprintf+0x1c4>
 3cc:	ea 94       	dec	r14
 3ce:	1e 14       	cp	r1, r14
 3d0:	74 f5       	brge	.+92     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 3d2:	28 e0       	ldi	r18, 0x08	; 8
 3d4:	2e 15       	cp	r18, r14
 3d6:	78 f5       	brcc	.+94     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 3d8:	38 e0       	ldi	r19, 0x08	; 8
 3da:	e3 2e       	mov	r14, r19
 3dc:	2c c0       	rjmp	.+88     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 3de:	76 fc       	sbrc	r7, 6
 3e0:	2a c0       	rjmp	.+84     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 3e2:	81 2f       	mov	r24, r17
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	8a 15       	cp	r24, r10
 3e8:	9b 05       	cpc	r25, r11
 3ea:	9c f0       	brlt	.+38     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3ec:	8c ef       	ldi	r24, 0xFC	; 252
 3ee:	a8 16       	cp	r10, r24
 3f0:	8f ef       	ldi	r24, 0xFF	; 255
 3f2:	b8 06       	cpc	r11, r24
 3f4:	74 f0       	brlt	.+28     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3f6:	97 2d       	mov	r25, r7
 3f8:	90 68       	ori	r25, 0x80	; 128
 3fa:	79 2e       	mov	r7, r25
 3fc:	0a c0       	rjmp	.+20     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3fe:	e2 e0       	ldi	r30, 0x02	; 2
 400:	f0 e0       	ldi	r31, 0x00	; 0
 402:	ec 0f       	add	r30, r28
 404:	fd 1f       	adc	r31, r29
 406:	e1 0f       	add	r30, r17
 408:	f1 1d       	adc	r31, r1
 40a:	80 81       	ld	r24, Z
 40c:	80 33       	cpi	r24, 0x30	; 48
 40e:	19 f4       	brne	.+6      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 410:	11 50       	subi	r17, 0x01	; 1
 412:	11 11       	cpse	r17, r1
 414:	f4 cf       	rjmp	.-24     	; 0x3fe <vfprintf+0x1f4>
 416:	77 fe       	sbrs	r7, 7
 418:	0e c0       	rjmp	.+28     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 41a:	ee 24       	eor	r14, r14
 41c:	e3 94       	inc	r14
 41e:	e1 0e       	add	r14, r17
 420:	81 2f       	mov	r24, r17
 422:	90 e0       	ldi	r25, 0x00	; 0
 424:	a8 16       	cp	r10, r24
 426:	b9 06       	cpc	r11, r25
 428:	2c f4       	brge	.+10     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 42a:	1a 19       	sub	r17, r10
 42c:	04 c0       	rjmp	.+8      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 42e:	ee 24       	eor	r14, r14
 430:	e3 94       	inc	r14
 432:	01 c0       	rjmp	.+2      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 434:	10 e0       	ldi	r17, 0x00	; 0
 436:	77 fe       	sbrs	r7, 7
 438:	06 c0       	rjmp	.+12     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 43a:	1a 14       	cp	r1, r10
 43c:	1b 04       	cpc	r1, r11
 43e:	34 f4       	brge	.+12     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 440:	c5 01       	movw	r24, r10
 442:	01 96       	adiw	r24, 0x01	; 1
 444:	05 c0       	rjmp	.+10     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 446:	85 e0       	ldi	r24, 0x05	; 5
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	02 c0       	rjmp	.+4      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 44c:	81 e0       	ldi	r24, 0x01	; 1
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	01 11       	cpse	r16, r1
 452:	01 96       	adiw	r24, 0x01	; 1
 454:	11 23       	and	r17, r17
 456:	31 f0       	breq	.+12     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 458:	21 2f       	mov	r18, r17
 45a:	30 e0       	ldi	r19, 0x00	; 0
 45c:	2f 5f       	subi	r18, 0xFF	; 255
 45e:	3f 4f       	sbci	r19, 0xFF	; 255
 460:	82 0f       	add	r24, r18
 462:	93 1f       	adc	r25, r19
 464:	2f 2d       	mov	r18, r15
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	82 17       	cp	r24, r18
 46a:	93 07       	cpc	r25, r19
 46c:	14 f4       	brge	.+4      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 46e:	f8 1a       	sub	r15, r24
 470:	01 c0       	rjmp	.+2      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 472:	f1 2c       	mov	r15, r1
 474:	87 2d       	mov	r24, r7
 476:	89 70       	andi	r24, 0x09	; 9
 478:	49 f4       	brne	.+18     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 47a:	ff 20       	and	r15, r15
 47c:	39 f0       	breq	.+14     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 47e:	b6 01       	movw	r22, r12
 480:	80 e2       	ldi	r24, 0x20	; 32
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 488:	fa 94       	dec	r15
 48a:	f7 cf       	rjmp	.-18     	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 48c:	00 23       	and	r16, r16
 48e:	29 f0       	breq	.+10     	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 490:	b6 01       	movw	r22, r12
 492:	80 2f       	mov	r24, r16
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 49a:	73 fc       	sbrc	r7, 3
 49c:	09 c0       	rjmp	.+18     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 49e:	ff 20       	and	r15, r15
 4a0:	39 f0       	breq	.+14     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4a2:	b6 01       	movw	r22, r12
 4a4:	80 e3       	ldi	r24, 0x30	; 48
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 4ac:	fa 94       	dec	r15
 4ae:	f7 cf       	rjmp	.-18     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
 4b0:	77 fe       	sbrs	r7, 7
 4b2:	49 c0       	rjmp	.+146    	; 0x546 <__EEPROM_REGION_LENGTH__+0x146>
 4b4:	35 01       	movw	r6, r10
 4b6:	b7 fe       	sbrs	r11, 7
 4b8:	02 c0       	rjmp	.+4      	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4ba:	61 2c       	mov	r6, r1
 4bc:	71 2c       	mov	r7, r1
 4be:	c5 01       	movw	r24, r10
 4c0:	86 19       	sub	r24, r6
 4c2:	97 09       	sbc	r25, r7
 4c4:	88 24       	eor	r8, r8
 4c6:	83 94       	inc	r8
 4c8:	91 2c       	mov	r9, r1
 4ca:	8c 0e       	add	r8, r28
 4cc:	9d 1e       	adc	r9, r29
 4ce:	88 0e       	add	r8, r24
 4d0:	99 1e       	adc	r9, r25
 4d2:	f5 01       	movw	r30, r10
 4d4:	ee 19       	sub	r30, r14
 4d6:	f1 09       	sbc	r31, r1
 4d8:	f9 8b       	std	Y+17, r31	; 0x11
 4da:	e8 8b       	std	Y+16, r30	; 0x10
 4dc:	01 2f       	mov	r16, r17
 4de:	10 e0       	ldi	r17, 0x00	; 0
 4e0:	11 95       	neg	r17
 4e2:	01 95       	neg	r16
 4e4:	11 09       	sbc	r17, r1
 4e6:	ff ef       	ldi	r31, 0xFF	; 255
 4e8:	6f 16       	cp	r6, r31
 4ea:	7f 06       	cpc	r7, r31
 4ec:	29 f4       	brne	.+10     	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 4ee:	b6 01       	movw	r22, r12
 4f0:	8e e2       	ldi	r24, 0x2E	; 46
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 4f8:	a6 14       	cp	r10, r6
 4fa:	b7 04       	cpc	r11, r7
 4fc:	44 f0       	brlt	.+16     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 4fe:	88 89       	ldd	r24, Y+16	; 0x10
 500:	99 89       	ldd	r25, Y+17	; 0x11
 502:	86 15       	cp	r24, r6
 504:	97 05       	cpc	r25, r7
 506:	1c f4       	brge	.+6      	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 508:	f4 01       	movw	r30, r8
 50a:	81 81       	ldd	r24, Z+1	; 0x01
 50c:	01 c0       	rjmp	.+2      	; 0x510 <__EEPROM_REGION_LENGTH__+0x110>
 50e:	80 e3       	ldi	r24, 0x30	; 48
 510:	f1 e0       	ldi	r31, 0x01	; 1
 512:	6f 1a       	sub	r6, r31
 514:	71 08       	sbc	r7, r1
 516:	2f ef       	ldi	r18, 0xFF	; 255
 518:	82 1a       	sub	r8, r18
 51a:	92 0a       	sbc	r9, r18
 51c:	60 16       	cp	r6, r16
 51e:	71 06       	cpc	r7, r17
 520:	2c f0       	brlt	.+10     	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
 522:	b6 01       	movw	r22, r12
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 52a:	dd cf       	rjmp	.-70     	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
 52c:	a6 14       	cp	r10, r6
 52e:	b7 04       	cpc	r11, r7
 530:	39 f4       	brne	.+14     	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 532:	9a 81       	ldd	r25, Y+2	; 0x02
 534:	96 33       	cpi	r25, 0x36	; 54
 536:	18 f4       	brcc	.+6      	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
 538:	95 33       	cpi	r25, 0x35	; 53
 53a:	11 f4       	brne	.+4      	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 53c:	54 fe       	sbrs	r5, 4
 53e:	81 e3       	ldi	r24, 0x31	; 49
 540:	b6 01       	movw	r22, r12
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	51 c0       	rjmp	.+162    	; 0x5e8 <__EEPROM_REGION_LENGTH__+0x1e8>
 546:	8a 81       	ldd	r24, Y+2	; 0x02
 548:	81 33       	cpi	r24, 0x31	; 49
 54a:	19 f0       	breq	.+6      	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
 54c:	95 2d       	mov	r25, r5
 54e:	9f 7e       	andi	r25, 0xEF	; 239
 550:	59 2e       	mov	r5, r25
 552:	b6 01       	movw	r22, r12
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 55a:	11 11       	cpse	r17, r1
 55c:	05 c0       	rjmp	.+10     	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 55e:	74 fc       	sbrc	r7, 4
 560:	1c c0       	rjmp	.+56     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 562:	85 e6       	ldi	r24, 0x65	; 101
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	1b c0       	rjmp	.+54     	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
 568:	b6 01       	movw	r22, r12
 56a:	8e e2       	ldi	r24, 0x2E	; 46
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 572:	02 e0       	ldi	r16, 0x02	; 2
 574:	01 0f       	add	r16, r17
 576:	82 e0       	ldi	r24, 0x02	; 2
 578:	11 e0       	ldi	r17, 0x01	; 1
 57a:	18 0f       	add	r17, r24
 57c:	e1 e0       	ldi	r30, 0x01	; 1
 57e:	f0 e0       	ldi	r31, 0x00	; 0
 580:	ec 0f       	add	r30, r28
 582:	fd 1f       	adc	r31, r29
 584:	e8 0f       	add	r30, r24
 586:	f1 1d       	adc	r31, r1
 588:	80 81       	ld	r24, Z
 58a:	b6 01       	movw	r22, r12
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 592:	81 2f       	mov	r24, r17
 594:	10 13       	cpse	r17, r16
 596:	f0 cf       	rjmp	.-32     	; 0x578 <__EEPROM_REGION_LENGTH__+0x178>
 598:	e2 cf       	rjmp	.-60     	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 59a:	85 e4       	ldi	r24, 0x45	; 69
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	b6 01       	movw	r22, r12
 5a0:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 5a4:	b7 fc       	sbrc	r11, 7
 5a6:	05 c0       	rjmp	.+10     	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
 5a8:	a1 14       	cp	r10, r1
 5aa:	b1 04       	cpc	r11, r1
 5ac:	39 f4       	brne	.+14     	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
 5ae:	54 fe       	sbrs	r5, 4
 5b0:	05 c0       	rjmp	.+10     	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
 5b2:	b1 94       	neg	r11
 5b4:	a1 94       	neg	r10
 5b6:	b1 08       	sbc	r11, r1
 5b8:	8d e2       	ldi	r24, 0x2D	; 45
 5ba:	01 c0       	rjmp	.+2      	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 5bc:	8b e2       	ldi	r24, 0x2B	; 43
 5be:	b6 01       	movw	r22, r12
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 5c6:	80 e3       	ldi	r24, 0x30	; 48
 5c8:	ea e0       	ldi	r30, 0x0A	; 10
 5ca:	ae 16       	cp	r10, r30
 5cc:	b1 04       	cpc	r11, r1
 5ce:	2c f0       	brlt	.+10     	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5d0:	8f 5f       	subi	r24, 0xFF	; 255
 5d2:	aa e0       	ldi	r26, 0x0A	; 10
 5d4:	aa 1a       	sub	r10, r26
 5d6:	b1 08       	sbc	r11, r1
 5d8:	f7 cf       	rjmp	.-18     	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 5da:	b6 01       	movw	r22, r12
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 5e2:	b6 01       	movw	r22, r12
 5e4:	c5 01       	movw	r24, r10
 5e6:	c0 96       	adiw	r24, 0x30	; 48
 5e8:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 5ec:	72 c1       	rjmp	.+740    	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
 5ee:	83 36       	cpi	r24, 0x63	; 99
 5f0:	31 f0       	breq	.+12     	; 0x5fe <__EEPROM_REGION_LENGTH__+0x1fe>
 5f2:	83 37       	cpi	r24, 0x73	; 115
 5f4:	91 f0       	breq	.+36     	; 0x61a <__EEPROM_REGION_LENGTH__+0x21a>
 5f6:	83 35       	cpi	r24, 0x53	; 83
 5f8:	09 f0       	breq	.+2      	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5fa:	5d c0       	rjmp	.+186    	; 0x6b6 <__EEPROM_REGION_LENGTH__+0x2b6>
 5fc:	24 c0       	rjmp	.+72     	; 0x646 <__EEPROM_REGION_LENGTH__+0x246>
 5fe:	c5 01       	movw	r24, r10
 600:	02 96       	adiw	r24, 0x02	; 2
 602:	9f 87       	std	Y+15, r25	; 0x0f
 604:	8e 87       	std	Y+14, r24	; 0x0e
 606:	f5 01       	movw	r30, r10
 608:	80 81       	ld	r24, Z
 60a:	89 83       	std	Y+1, r24	; 0x01
 60c:	6a 88       	ldd	r6, Y+18	; 0x12
 60e:	7b 88       	ldd	r7, Y+19	; 0x13
 610:	8c 88       	ldd	r8, Y+20	; 0x14
 612:	aa 24       	eor	r10, r10
 614:	a3 94       	inc	r10
 616:	b1 2c       	mov	r11, r1
 618:	14 c0       	rjmp	.+40     	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
 61a:	c5 01       	movw	r24, r10
 61c:	03 96       	adiw	r24, 0x03	; 3
 61e:	9f 87       	std	Y+15, r25	; 0x0f
 620:	8e 87       	std	Y+14, r24	; 0x0e
 622:	f5 01       	movw	r30, r10
 624:	60 80       	ld	r6, Z
 626:	71 80       	ldd	r7, Z+1	; 0x01
 628:	82 80       	ldd	r8, Z+2	; 0x02
 62a:	06 ff       	sbrs	r16, 6
 62c:	03 c0       	rjmp	.+6      	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
 62e:	41 2f       	mov	r20, r17
 630:	50 e0       	ldi	r21, 0x00	; 0
 632:	02 c0       	rjmp	.+4      	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
 634:	4f ef       	ldi	r20, 0xFF	; 255
 636:	5f ef       	ldi	r21, 0xFF	; 255
 638:	88 2d       	mov	r24, r8
 63a:	b3 01       	movw	r22, r6
 63c:	0e 94 23 0f 	call	0x1e46	; 0x1e46 <strnlen>
 640:	5c 01       	movw	r10, r24
 642:	0f 77       	andi	r16, 0x7F	; 127
 644:	15 c0       	rjmp	.+42     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 646:	c5 01       	movw	r24, r10
 648:	03 96       	adiw	r24, 0x03	; 3
 64a:	9f 87       	std	Y+15, r25	; 0x0f
 64c:	8e 87       	std	Y+14, r24	; 0x0e
 64e:	f5 01       	movw	r30, r10
 650:	60 80       	ld	r6, Z
 652:	71 80       	ldd	r7, Z+1	; 0x01
 654:	82 80       	ldd	r8, Z+2	; 0x02
 656:	06 ff       	sbrs	r16, 6
 658:	03 c0       	rjmp	.+6      	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 65a:	41 2f       	mov	r20, r17
 65c:	50 e0       	ldi	r21, 0x00	; 0
 65e:	02 c0       	rjmp	.+4      	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
 660:	4f ef       	ldi	r20, 0xFF	; 255
 662:	5f ef       	ldi	r21, 0xFF	; 255
 664:	88 2d       	mov	r24, r8
 666:	b3 01       	movw	r22, r6
 668:	0e 94 23 0f 	call	0x1e46	; 0x1e46 <strnlen>
 66c:	5c 01       	movw	r10, r24
 66e:	00 68       	ori	r16, 0x80	; 128
 670:	03 fd       	sbrc	r16, 3
 672:	1d c0       	rjmp	.+58     	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
 674:	8f 2d       	mov	r24, r15
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	a8 16       	cp	r10, r24
 67a:	b9 06       	cpc	r11, r25
 67c:	c0 f4       	brcc	.+48     	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
 67e:	b6 01       	movw	r22, r12
 680:	80 e2       	ldi	r24, 0x20	; 32
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 688:	fa 94       	dec	r15
 68a:	f4 cf       	rjmp	.-24     	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
 68c:	f3 01       	movw	r30, r6
 68e:	84 91       	lpm	r24, Z
 690:	87 fc       	sbrc	r8, 7
 692:	80 81       	ld	r24, Z
 694:	ff ef       	ldi	r31, 0xFF	; 255
 696:	6f 1a       	sub	r6, r31
 698:	7f 0a       	sbc	r7, r31
 69a:	8f 0a       	sbc	r8, r31
 69c:	b6 01       	movw	r22, r12
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 6a4:	f1 10       	cpse	r15, r1
 6a6:	fa 94       	dec	r15
 6a8:	21 e0       	ldi	r18, 0x01	; 1
 6aa:	a2 1a       	sub	r10, r18
 6ac:	b1 08       	sbc	r11, r1
 6ae:	a1 14       	cp	r10, r1
 6b0:	b1 04       	cpc	r11, r1
 6b2:	61 f7       	brne	.-40     	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
 6b4:	0e c1       	rjmp	.+540    	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
 6b6:	84 36       	cpi	r24, 0x64	; 100
 6b8:	11 f0       	breq	.+4      	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 6ba:	89 36       	cpi	r24, 0x69	; 105
 6bc:	79 f5       	brne	.+94     	; 0x71c <__EEPROM_REGION_LENGTH__+0x31c>
 6be:	c5 01       	movw	r24, r10
 6c0:	07 ff       	sbrs	r16, 7
 6c2:	09 c0       	rjmp	.+18     	; 0x6d6 <__EEPROM_REGION_LENGTH__+0x2d6>
 6c4:	04 96       	adiw	r24, 0x04	; 4
 6c6:	9f 87       	std	Y+15, r25	; 0x0f
 6c8:	8e 87       	std	Y+14, r24	; 0x0e
 6ca:	f5 01       	movw	r30, r10
 6cc:	60 81       	ld	r22, Z
 6ce:	71 81       	ldd	r23, Z+1	; 0x01
 6d0:	82 81       	ldd	r24, Z+2	; 0x02
 6d2:	93 81       	ldd	r25, Z+3	; 0x03
 6d4:	0a c0       	rjmp	.+20     	; 0x6ea <__EEPROM_REGION_LENGTH__+0x2ea>
 6d6:	02 96       	adiw	r24, 0x02	; 2
 6d8:	9f 87       	std	Y+15, r25	; 0x0f
 6da:	8e 87       	std	Y+14, r24	; 0x0e
 6dc:	f5 01       	movw	r30, r10
 6de:	60 81       	ld	r22, Z
 6e0:	71 81       	ldd	r23, Z+1	; 0x01
 6e2:	07 2e       	mov	r0, r23
 6e4:	00 0c       	add	r0, r0
 6e6:	88 0b       	sbc	r24, r24
 6e8:	99 0b       	sbc	r25, r25
 6ea:	0f 76       	andi	r16, 0x6F	; 111
 6ec:	e0 2e       	mov	r14, r16
 6ee:	97 ff       	sbrs	r25, 7
 6f0:	0a c0       	rjmp	.+20     	; 0x706 <__EEPROM_REGION_LENGTH__+0x306>
 6f2:	90 95       	com	r25
 6f4:	80 95       	com	r24
 6f6:	70 95       	com	r23
 6f8:	61 95       	neg	r22
 6fa:	7f 4f       	sbci	r23, 0xFF	; 255
 6fc:	8f 4f       	sbci	r24, 0xFF	; 255
 6fe:	9f 4f       	sbci	r25, 0xFF	; 255
 700:	f0 2f       	mov	r31, r16
 702:	f0 68       	ori	r31, 0x80	; 128
 704:	ef 2e       	mov	r14, r31
 706:	2a e0       	ldi	r18, 0x0A	; 10
 708:	30 e0       	ldi	r19, 0x00	; 0
 70a:	ae 01       	movw	r20, r28
 70c:	4f 5f       	subi	r20, 0xFF	; 255
 70e:	5f 4f       	sbci	r21, 0xFF	; 255
 710:	0e 94 89 0a 	call	0x1512	; 0x1512 <__ultoa_invert>
 714:	a8 2e       	mov	r10, r24
 716:	2c 85       	ldd	r18, Y+12	; 0x0c
 718:	a2 1a       	sub	r10, r18
 71a:	4b c0       	rjmp	.+150    	; 0x7b2 <__EEPROM_REGION_LENGTH__+0x3b2>
 71c:	85 37       	cpi	r24, 0x75	; 117
 71e:	29 f4       	brne	.+10     	; 0x72a <__EEPROM_REGION_LENGTH__+0x32a>
 720:	0f 7e       	andi	r16, 0xEF	; 239
 722:	e0 2e       	mov	r14, r16
 724:	2a e0       	ldi	r18, 0x0A	; 10
 726:	30 e0       	ldi	r19, 0x00	; 0
 728:	25 c0       	rjmp	.+74     	; 0x774 <__EEPROM_REGION_LENGTH__+0x374>
 72a:	90 2f       	mov	r25, r16
 72c:	99 7f       	andi	r25, 0xF9	; 249
 72e:	e9 2e       	mov	r14, r25
 730:	8f 36       	cpi	r24, 0x6F	; 111
 732:	c1 f0       	breq	.+48     	; 0x764 <__EEPROM_REGION_LENGTH__+0x364>
 734:	18 f4       	brcc	.+6      	; 0x73c <__EEPROM_REGION_LENGTH__+0x33c>
 736:	88 35       	cpi	r24, 0x58	; 88
 738:	79 f0       	breq	.+30     	; 0x758 <__EEPROM_REGION_LENGTH__+0x358>
 73a:	d5 c0       	rjmp	.+426    	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
 73c:	80 37       	cpi	r24, 0x70	; 112
 73e:	19 f0       	breq	.+6      	; 0x746 <__EEPROM_REGION_LENGTH__+0x346>
 740:	88 37       	cpi	r24, 0x78	; 120
 742:	21 f0       	breq	.+8      	; 0x74c <__EEPROM_REGION_LENGTH__+0x34c>
 744:	d0 c0       	rjmp	.+416    	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
 746:	a9 2f       	mov	r26, r25
 748:	a0 61       	ori	r26, 0x10	; 16
 74a:	ea 2e       	mov	r14, r26
 74c:	e4 fe       	sbrs	r14, 4
 74e:	0d c0       	rjmp	.+26     	; 0x76a <__EEPROM_REGION_LENGTH__+0x36a>
 750:	ee 2d       	mov	r30, r14
 752:	e4 60       	ori	r30, 0x04	; 4
 754:	ee 2e       	mov	r14, r30
 756:	09 c0       	rjmp	.+18     	; 0x76a <__EEPROM_REGION_LENGTH__+0x36a>
 758:	04 ff       	sbrs	r16, 4
 75a:	0a c0       	rjmp	.+20     	; 0x770 <__EEPROM_REGION_LENGTH__+0x370>
 75c:	f9 2f       	mov	r31, r25
 75e:	f6 60       	ori	r31, 0x06	; 6
 760:	ef 2e       	mov	r14, r31
 762:	06 c0       	rjmp	.+12     	; 0x770 <__EEPROM_REGION_LENGTH__+0x370>
 764:	28 e0       	ldi	r18, 0x08	; 8
 766:	30 e0       	ldi	r19, 0x00	; 0
 768:	05 c0       	rjmp	.+10     	; 0x774 <__EEPROM_REGION_LENGTH__+0x374>
 76a:	20 e1       	ldi	r18, 0x10	; 16
 76c:	30 e0       	ldi	r19, 0x00	; 0
 76e:	02 c0       	rjmp	.+4      	; 0x774 <__EEPROM_REGION_LENGTH__+0x374>
 770:	20 e1       	ldi	r18, 0x10	; 16
 772:	32 e0       	ldi	r19, 0x02	; 2
 774:	c5 01       	movw	r24, r10
 776:	e7 fe       	sbrs	r14, 7
 778:	09 c0       	rjmp	.+18     	; 0x78c <__EEPROM_REGION_LENGTH__+0x38c>
 77a:	04 96       	adiw	r24, 0x04	; 4
 77c:	9f 87       	std	Y+15, r25	; 0x0f
 77e:	8e 87       	std	Y+14, r24	; 0x0e
 780:	f5 01       	movw	r30, r10
 782:	60 81       	ld	r22, Z
 784:	71 81       	ldd	r23, Z+1	; 0x01
 786:	82 81       	ldd	r24, Z+2	; 0x02
 788:	93 81       	ldd	r25, Z+3	; 0x03
 78a:	08 c0       	rjmp	.+16     	; 0x79c <__EEPROM_REGION_LENGTH__+0x39c>
 78c:	02 96       	adiw	r24, 0x02	; 2
 78e:	9f 87       	std	Y+15, r25	; 0x0f
 790:	8e 87       	std	Y+14, r24	; 0x0e
 792:	f5 01       	movw	r30, r10
 794:	60 81       	ld	r22, Z
 796:	71 81       	ldd	r23, Z+1	; 0x01
 798:	80 e0       	ldi	r24, 0x00	; 0
 79a:	90 e0       	ldi	r25, 0x00	; 0
 79c:	ae 01       	movw	r20, r28
 79e:	4f 5f       	subi	r20, 0xFF	; 255
 7a0:	5f 4f       	sbci	r21, 0xFF	; 255
 7a2:	0e 94 89 0a 	call	0x1512	; 0x1512 <__ultoa_invert>
 7a6:	a8 2e       	mov	r10, r24
 7a8:	fc 85       	ldd	r31, Y+12	; 0x0c
 7aa:	af 1a       	sub	r10, r31
 7ac:	2e 2d       	mov	r18, r14
 7ae:	2f 77       	andi	r18, 0x7F	; 127
 7b0:	e2 2e       	mov	r14, r18
 7b2:	e6 fe       	sbrs	r14, 6
 7b4:	0b c0       	rjmp	.+22     	; 0x7cc <__EEPROM_REGION_LENGTH__+0x3cc>
 7b6:	0e 2d       	mov	r16, r14
 7b8:	0e 7f       	andi	r16, 0xFE	; 254
 7ba:	a1 16       	cp	r10, r17
 7bc:	50 f4       	brcc	.+20     	; 0x7d2 <__EEPROM_REGION_LENGTH__+0x3d2>
 7be:	e4 fe       	sbrs	r14, 4
 7c0:	0a c0       	rjmp	.+20     	; 0x7d6 <__EEPROM_REGION_LENGTH__+0x3d6>
 7c2:	e2 fc       	sbrc	r14, 2
 7c4:	08 c0       	rjmp	.+16     	; 0x7d6 <__EEPROM_REGION_LENGTH__+0x3d6>
 7c6:	0e 2d       	mov	r16, r14
 7c8:	0e 7e       	andi	r16, 0xEE	; 238
 7ca:	05 c0       	rjmp	.+10     	; 0x7d6 <__EEPROM_REGION_LENGTH__+0x3d6>
 7cc:	ba 2c       	mov	r11, r10
 7ce:	0e 2d       	mov	r16, r14
 7d0:	03 c0       	rjmp	.+6      	; 0x7d8 <__EEPROM_REGION_LENGTH__+0x3d8>
 7d2:	ba 2c       	mov	r11, r10
 7d4:	01 c0       	rjmp	.+2      	; 0x7d8 <__EEPROM_REGION_LENGTH__+0x3d8>
 7d6:	b1 2e       	mov	r11, r17
 7d8:	04 ff       	sbrs	r16, 4
 7da:	0d c0       	rjmp	.+26     	; 0x7f6 <__EEPROM_REGION_LENGTH__+0x3f6>
 7dc:	fe 01       	movw	r30, r28
 7de:	ea 0d       	add	r30, r10
 7e0:	f1 1d       	adc	r31, r1
 7e2:	80 81       	ld	r24, Z
 7e4:	80 33       	cpi	r24, 0x30	; 48
 7e6:	11 f4       	brne	.+4      	; 0x7ec <__EEPROM_REGION_LENGTH__+0x3ec>
 7e8:	09 7e       	andi	r16, 0xE9	; 233
 7ea:	09 c0       	rjmp	.+18     	; 0x7fe <__EEPROM_REGION_LENGTH__+0x3fe>
 7ec:	02 ff       	sbrs	r16, 2
 7ee:	06 c0       	rjmp	.+12     	; 0x7fc <__EEPROM_REGION_LENGTH__+0x3fc>
 7f0:	b3 94       	inc	r11
 7f2:	b3 94       	inc	r11
 7f4:	04 c0       	rjmp	.+8      	; 0x7fe <__EEPROM_REGION_LENGTH__+0x3fe>
 7f6:	80 2f       	mov	r24, r16
 7f8:	86 78       	andi	r24, 0x86	; 134
 7fa:	09 f0       	breq	.+2      	; 0x7fe <__EEPROM_REGION_LENGTH__+0x3fe>
 7fc:	b3 94       	inc	r11
 7fe:	03 fd       	sbrc	r16, 3
 800:	11 c0       	rjmp	.+34     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 802:	00 ff       	sbrs	r16, 0
 804:	06 c0       	rjmp	.+12     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 806:	bf 14       	cp	r11, r15
 808:	88 f4       	brcc	.+34     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 80a:	fa 0c       	add	r15, r10
 80c:	1f 2d       	mov	r17, r15
 80e:	1b 19       	sub	r17, r11
 810:	0e c0       	rjmp	.+28     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 812:	bf 14       	cp	r11, r15
 814:	60 f4       	brcc	.+24     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 816:	b6 01       	movw	r22, r12
 818:	80 e2       	ldi	r24, 0x20	; 32
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 820:	b3 94       	inc	r11
 822:	f7 cf       	rjmp	.-18     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 824:	bf 14       	cp	r11, r15
 826:	18 f4       	brcc	.+6      	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 828:	fb 18       	sub	r15, r11
 82a:	02 c0       	rjmp	.+4      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 82c:	1a 2d       	mov	r17, r10
 82e:	f1 2c       	mov	r15, r1
 830:	04 ff       	sbrs	r16, 4
 832:	10 c0       	rjmp	.+32     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 834:	b6 01       	movw	r22, r12
 836:	80 e3       	ldi	r24, 0x30	; 48
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 83e:	02 ff       	sbrs	r16, 2
 840:	17 c0       	rjmp	.+46     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 842:	01 fd       	sbrc	r16, 1
 844:	03 c0       	rjmp	.+6      	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 846:	88 e7       	ldi	r24, 0x78	; 120
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	02 c0       	rjmp	.+4      	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 84c:	88 e5       	ldi	r24, 0x58	; 88
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	b6 01       	movw	r22, r12
 852:	0c c0       	rjmp	.+24     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
 854:	80 2f       	mov	r24, r16
 856:	86 78       	andi	r24, 0x86	; 134
 858:	59 f0       	breq	.+22     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 85a:	01 ff       	sbrs	r16, 1
 85c:	02 c0       	rjmp	.+4      	; 0x862 <__DATA_REGION_LENGTH__+0x62>
 85e:	8b e2       	ldi	r24, 0x2B	; 43
 860:	01 c0       	rjmp	.+2      	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 862:	80 e2       	ldi	r24, 0x20	; 32
 864:	07 fd       	sbrc	r16, 7
 866:	8d e2       	ldi	r24, 0x2D	; 45
 868:	b6 01       	movw	r22, r12
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 870:	a1 16       	cp	r10, r17
 872:	38 f4       	brcc	.+14     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 874:	b6 01       	movw	r22, r12
 876:	80 e3       	ldi	r24, 0x30	; 48
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 87e:	11 50       	subi	r17, 0x01	; 1
 880:	f7 cf       	rjmp	.-18     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 882:	aa 94       	dec	r10
 884:	e1 e0       	ldi	r30, 0x01	; 1
 886:	f0 e0       	ldi	r31, 0x00	; 0
 888:	ec 0f       	add	r30, r28
 88a:	fd 1f       	adc	r31, r29
 88c:	ea 0d       	add	r30, r10
 88e:	f1 1d       	adc	r31, r1
 890:	80 81       	ld	r24, Z
 892:	b6 01       	movw	r22, r12
 894:	90 e0       	ldi	r25, 0x00	; 0
 896:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 89a:	a1 10       	cpse	r10, r1
 89c:	f2 cf       	rjmp	.-28     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 89e:	19 c0       	rjmp	.+50     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
 8a0:	f4 e0       	ldi	r31, 0x04	; 4
 8a2:	ff 15       	cp	r31, r15
 8a4:	80 f5       	brcc	.+96     	; 0x906 <__stack+0x7>
 8a6:	84 e0       	ldi	r24, 0x04	; 4
 8a8:	f8 1a       	sub	r15, r24
 8aa:	73 fe       	sbrs	r7, 3
 8ac:	23 c0       	rjmp	.+70     	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
 8ae:	01 11       	cpse	r16, r1
 8b0:	2b c0       	rjmp	.+86     	; 0x908 <__stack+0x9>
 8b2:	53 fe       	sbrs	r5, 3
 8b4:	2f c0       	rjmp	.+94     	; 0x914 <__stack+0x15>
 8b6:	55 e0       	ldi	r21, 0x05	; 5
 8b8:	85 2e       	mov	r8, r21
 8ba:	52 e0       	ldi	r21, 0x02	; 2
 8bc:	95 2e       	mov	r9, r21
 8be:	50 e0       	ldi	r21, 0x00	; 0
 8c0:	a5 2e       	mov	r10, r21
 8c2:	07 2d       	mov	r16, r7
 8c4:	00 71       	andi	r16, 0x10	; 16
 8c6:	f4 01       	movw	r30, r8
 8c8:	84 91       	lpm	r24, Z
 8ca:	a7 fc       	sbrc	r10, 7
 8cc:	80 81       	ld	r24, Z
 8ce:	81 11       	cpse	r24, r1
 8d0:	28 c0       	rjmp	.+80     	; 0x922 <__stack+0x23>
 8d2:	ff 20       	and	r15, r15
 8d4:	09 f4       	brne	.+2      	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
 8d6:	d2 cc       	rjmp	.-1628   	; 0x27c <vfprintf+0x72>
 8d8:	b6 01       	movw	r22, r12
 8da:	80 e2       	ldi	r24, 0x20	; 32
 8dc:	90 e0       	ldi	r25, 0x00	; 0
 8de:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 8e2:	fa 94       	dec	r15
 8e4:	f6 cf       	rjmp	.-20     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
 8e6:	f6 01       	movw	r30, r12
 8e8:	87 81       	ldd	r24, Z+7	; 0x07
 8ea:	90 85       	ldd	r25, Z+8	; 0x08
 8ec:	2c c0       	rjmp	.+88     	; 0x946 <__stack+0x47>
 8ee:	8f ef       	ldi	r24, 0xFF	; 255
 8f0:	9f ef       	ldi	r25, 0xFF	; 255
 8f2:	29 c0       	rjmp	.+82     	; 0x946 <__stack+0x47>
 8f4:	b6 01       	movw	r22, r12
 8f6:	80 e2       	ldi	r24, 0x20	; 32
 8f8:	90 e0       	ldi	r25, 0x00	; 0
 8fa:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 8fe:	fa 94       	dec	r15
 900:	f1 10       	cpse	r15, r1
 902:	f8 cf       	rjmp	.-16     	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
 904:	d4 cf       	rjmp	.-88     	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 906:	f1 2c       	mov	r15, r1
 908:	b6 01       	movw	r22, r12
 90a:	80 2f       	mov	r24, r16
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 912:	cf cf       	rjmp	.-98     	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 914:	41 e0       	ldi	r20, 0x01	; 1
 916:	84 2e       	mov	r8, r20
 918:	42 e0       	ldi	r20, 0x02	; 2
 91a:	94 2e       	mov	r9, r20
 91c:	40 e0       	ldi	r20, 0x00	; 0
 91e:	a4 2e       	mov	r10, r20
 920:	d0 cf       	rjmp	.-96     	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
 922:	01 11       	cpse	r16, r1
 924:	80 52       	subi	r24, 0x20	; 32
 926:	b6 01       	movw	r22, r12
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <fputc>
 92e:	ff ef       	ldi	r31, 0xFF	; 255
 930:	8f 1a       	sub	r8, r31
 932:	9f 0a       	sbc	r9, r31
 934:	af 0a       	sbc	r10, r31
 936:	c7 cf       	rjmp	.-114    	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
 938:	23 e0       	ldi	r18, 0x03	; 3
 93a:	2f 15       	cp	r18, r15
 93c:	10 f4       	brcc	.+4      	; 0x942 <__stack+0x43>
 93e:	83 e0       	ldi	r24, 0x03	; 3
 940:	b3 cf       	rjmp	.-154    	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
 942:	f1 2c       	mov	r15, r1
 944:	b6 cf       	rjmp	.-148    	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 946:	64 96       	adiw	r28, 0x14	; 20
 948:	e2 e1       	ldi	r30, 0x12	; 18
 94a:	0c 94 08 0f 	jmp	0x1e10	; 0x1e10 <__epilogue_restores__>

Disassembly of section .text.libgcc.prologue:

00001da0 <__prologue_saves__>:
    1da0:	2f 92       	push	r2
    1da2:	3f 92       	push	r3
    1da4:	4f 92       	push	r4
    1da6:	5f 92       	push	r5
    1da8:	6f 92       	push	r6
    1daa:	7f 92       	push	r7
    1dac:	8f 92       	push	r8
    1dae:	9f 92       	push	r9
    1db0:	af 92       	push	r10
    1db2:	bf 92       	push	r11
    1db4:	cf 92       	push	r12
    1db6:	df 92       	push	r13
    1db8:	ef 92       	push	r14
    1dba:	ff 92       	push	r15
    1dbc:	0f 93       	push	r16
    1dbe:	1f 93       	push	r17
    1dc0:	cf 93       	push	r28
    1dc2:	df 93       	push	r29
    1dc4:	cd b7       	in	r28, 0x3d	; 61
    1dc6:	de b7       	in	r29, 0x3e	; 62
    1dc8:	ca 1b       	sub	r28, r26
    1dca:	db 0b       	sbc	r29, r27
    1dcc:	0f b6       	in	r0, 0x3f	; 63
    1dce:	f8 94       	cli
    1dd0:	de bf       	out	0x3e, r29	; 62
    1dd2:	0f be       	out	0x3f, r0	; 63
    1dd4:	cd bf       	out	0x3d, r28	; 61
    1dd6:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00001e10 <__epilogue_restores__>:
    1e10:	2a 88       	ldd	r2, Y+18	; 0x12
    1e12:	39 88       	ldd	r3, Y+17	; 0x11
    1e14:	48 88       	ldd	r4, Y+16	; 0x10
    1e16:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e18:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e1a:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e1c:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e1e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e20:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e22:	b9 84       	ldd	r11, Y+9	; 0x09
    1e24:	c8 84       	ldd	r12, Y+8	; 0x08
    1e26:	df 80       	ldd	r13, Y+7	; 0x07
    1e28:	ee 80       	ldd	r14, Y+6	; 0x06
    1e2a:	fd 80       	ldd	r15, Y+5	; 0x05
    1e2c:	0c 81       	ldd	r16, Y+4	; 0x04
    1e2e:	1b 81       	ldd	r17, Y+3	; 0x03
    1e30:	aa 81       	ldd	r26, Y+2	; 0x02
    1e32:	b9 81       	ldd	r27, Y+1	; 0x01
    1e34:	ce 0f       	add	r28, r30
    1e36:	d1 1d       	adc	r29, r1
    1e38:	0f b6       	in	r0, 0x3f	; 63
    1e3a:	f8 94       	cli
    1e3c:	de bf       	out	0x3e, r29	; 62
    1e3e:	0f be       	out	0x3f, r0	; 63
    1e40:	cd bf       	out	0x3d, r28	; 61
    1e42:	ed 01       	movw	r28, r26
    1e44:	08 95       	ret

Disassembly of section .text.avrlibc:

00000e44 <__ftoa_engine>:
 e44:	28 30       	cpi	r18, 0x08	; 8
 e46:	08 f0       	brcs	.+2      	; 0xe4a <__ftoa_engine+0x6>
 e48:	27 e0       	ldi	r18, 0x07	; 7
 e4a:	33 27       	eor	r19, r19
 e4c:	da 01       	movw	r26, r20
 e4e:	99 0f       	add	r25, r25
 e50:	31 1d       	adc	r19, r1
 e52:	87 fd       	sbrc	r24, 7
 e54:	91 60       	ori	r25, 0x01	; 1
 e56:	00 96       	adiw	r24, 0x00	; 0
 e58:	61 05       	cpc	r22, r1
 e5a:	71 05       	cpc	r23, r1
 e5c:	39 f4       	brne	.+14     	; 0xe6c <__ftoa_engine+0x28>
 e5e:	32 60       	ori	r19, 0x02	; 2
 e60:	2e 5f       	subi	r18, 0xFE	; 254
 e62:	3d 93       	st	X+, r19
 e64:	30 e3       	ldi	r19, 0x30	; 48
 e66:	2a 95       	dec	r18
 e68:	e1 f7       	brne	.-8      	; 0xe62 <__ftoa_engine+0x1e>
 e6a:	08 95       	ret
 e6c:	9f 3f       	cpi	r25, 0xFF	; 255
 e6e:	30 f0       	brcs	.+12     	; 0xe7c <__ftoa_engine+0x38>
 e70:	80 38       	cpi	r24, 0x80	; 128
 e72:	71 05       	cpc	r23, r1
 e74:	61 05       	cpc	r22, r1
 e76:	09 f0       	breq	.+2      	; 0xe7a <__ftoa_engine+0x36>
 e78:	3c 5f       	subi	r19, 0xFC	; 252
 e7a:	3c 5f       	subi	r19, 0xFC	; 252
 e7c:	3d 93       	st	X+, r19
 e7e:	91 30       	cpi	r25, 0x01	; 1
 e80:	08 f0       	brcs	.+2      	; 0xe84 <__ftoa_engine+0x40>
 e82:	80 68       	ori	r24, 0x80	; 128
 e84:	91 1d       	adc	r25, r1
 e86:	df 93       	push	r29
 e88:	cf 93       	push	r28
 e8a:	1f 93       	push	r17
 e8c:	0f 93       	push	r16
 e8e:	ff 92       	push	r15
 e90:	ef 92       	push	r14
 e92:	19 2f       	mov	r17, r25
 e94:	98 7f       	andi	r25, 0xF8	; 248
 e96:	96 95       	lsr	r25
 e98:	e9 2f       	mov	r30, r25
 e9a:	96 95       	lsr	r25
 e9c:	96 95       	lsr	r25
 e9e:	e9 0f       	add	r30, r25
 ea0:	ff 27       	eor	r31, r31
 ea2:	e0 52       	subi	r30, 0x20	; 32
 ea4:	ff 4f       	sbci	r31, 0xFF	; 255
 ea6:	99 27       	eor	r25, r25
 ea8:	33 27       	eor	r19, r19
 eaa:	ee 24       	eor	r14, r14
 eac:	ff 24       	eor	r15, r15
 eae:	a7 01       	movw	r20, r14
 eb0:	e7 01       	movw	r28, r14
 eb2:	05 90       	lpm	r0, Z+
 eb4:	08 94       	sec
 eb6:	07 94       	ror	r0
 eb8:	28 f4       	brcc	.+10     	; 0xec4 <__ftoa_engine+0x80>
 eba:	36 0f       	add	r19, r22
 ebc:	e7 1e       	adc	r14, r23
 ebe:	f8 1e       	adc	r15, r24
 ec0:	49 1f       	adc	r20, r25
 ec2:	51 1d       	adc	r21, r1
 ec4:	66 0f       	add	r22, r22
 ec6:	77 1f       	adc	r23, r23
 ec8:	88 1f       	adc	r24, r24
 eca:	99 1f       	adc	r25, r25
 ecc:	06 94       	lsr	r0
 ece:	a1 f7       	brne	.-24     	; 0xeb8 <__ftoa_engine+0x74>
 ed0:	05 90       	lpm	r0, Z+
 ed2:	07 94       	ror	r0
 ed4:	28 f4       	brcc	.+10     	; 0xee0 <__ftoa_engine+0x9c>
 ed6:	e7 0e       	add	r14, r23
 ed8:	f8 1e       	adc	r15, r24
 eda:	49 1f       	adc	r20, r25
 edc:	56 1f       	adc	r21, r22
 ede:	c1 1d       	adc	r28, r1
 ee0:	77 0f       	add	r23, r23
 ee2:	88 1f       	adc	r24, r24
 ee4:	99 1f       	adc	r25, r25
 ee6:	66 1f       	adc	r22, r22
 ee8:	06 94       	lsr	r0
 eea:	a1 f7       	brne	.-24     	; 0xed4 <__ftoa_engine+0x90>
 eec:	05 90       	lpm	r0, Z+
 eee:	07 94       	ror	r0
 ef0:	28 f4       	brcc	.+10     	; 0xefc <__ftoa_engine+0xb8>
 ef2:	f8 0e       	add	r15, r24
 ef4:	49 1f       	adc	r20, r25
 ef6:	56 1f       	adc	r21, r22
 ef8:	c7 1f       	adc	r28, r23
 efa:	d1 1d       	adc	r29, r1
 efc:	88 0f       	add	r24, r24
 efe:	99 1f       	adc	r25, r25
 f00:	66 1f       	adc	r22, r22
 f02:	77 1f       	adc	r23, r23
 f04:	06 94       	lsr	r0
 f06:	a1 f7       	brne	.-24     	; 0xef0 <__ftoa_engine+0xac>
 f08:	05 90       	lpm	r0, Z+
 f0a:	07 94       	ror	r0
 f0c:	20 f4       	brcc	.+8      	; 0xf16 <__ftoa_engine+0xd2>
 f0e:	49 0f       	add	r20, r25
 f10:	56 1f       	adc	r21, r22
 f12:	c7 1f       	adc	r28, r23
 f14:	d8 1f       	adc	r29, r24
 f16:	99 0f       	add	r25, r25
 f18:	66 1f       	adc	r22, r22
 f1a:	77 1f       	adc	r23, r23
 f1c:	88 1f       	adc	r24, r24
 f1e:	06 94       	lsr	r0
 f20:	a9 f7       	brne	.-22     	; 0xf0c <__ftoa_engine+0xc8>
 f22:	84 91       	lpm	r24, Z
 f24:	10 95       	com	r17
 f26:	17 70       	andi	r17, 0x07	; 7
 f28:	41 f0       	breq	.+16     	; 0xf3a <__ftoa_engine+0xf6>
 f2a:	d6 95       	lsr	r29
 f2c:	c7 95       	ror	r28
 f2e:	57 95       	ror	r21
 f30:	47 95       	ror	r20
 f32:	f7 94       	ror	r15
 f34:	e7 94       	ror	r14
 f36:	1a 95       	dec	r17
 f38:	c1 f7       	brne	.-16     	; 0xf2a <__ftoa_engine+0xe6>
 f3a:	e6 e8       	ldi	r30, 0x86	; 134
 f3c:	f0 e0       	ldi	r31, 0x00	; 0
 f3e:	68 94       	set
 f40:	15 90       	lpm	r1, Z+
 f42:	15 91       	lpm	r17, Z+
 f44:	35 91       	lpm	r19, Z+
 f46:	65 91       	lpm	r22, Z+
 f48:	95 91       	lpm	r25, Z+
 f4a:	05 90       	lpm	r0, Z+
 f4c:	7f e2       	ldi	r23, 0x2F	; 47
 f4e:	73 95       	inc	r23
 f50:	e1 18       	sub	r14, r1
 f52:	f1 0a       	sbc	r15, r17
 f54:	43 0b       	sbc	r20, r19
 f56:	56 0b       	sbc	r21, r22
 f58:	c9 0b       	sbc	r28, r25
 f5a:	d0 09       	sbc	r29, r0
 f5c:	c0 f7       	brcc	.-16     	; 0xf4e <__ftoa_engine+0x10a>
 f5e:	e1 0c       	add	r14, r1
 f60:	f1 1e       	adc	r15, r17
 f62:	43 1f       	adc	r20, r19
 f64:	56 1f       	adc	r21, r22
 f66:	c9 1f       	adc	r28, r25
 f68:	d0 1d       	adc	r29, r0
 f6a:	7e f4       	brtc	.+30     	; 0xf8a <__ftoa_engine+0x146>
 f6c:	70 33       	cpi	r23, 0x30	; 48
 f6e:	11 f4       	brne	.+4      	; 0xf74 <__ftoa_engine+0x130>
 f70:	8a 95       	dec	r24
 f72:	e6 cf       	rjmp	.-52     	; 0xf40 <__ftoa_engine+0xfc>
 f74:	e8 94       	clt
 f76:	01 50       	subi	r16, 0x01	; 1
 f78:	30 f0       	brcs	.+12     	; 0xf86 <__ftoa_engine+0x142>
 f7a:	08 0f       	add	r16, r24
 f7c:	0a f4       	brpl	.+2      	; 0xf80 <__ftoa_engine+0x13c>
 f7e:	00 27       	eor	r16, r16
 f80:	02 17       	cp	r16, r18
 f82:	08 f4       	brcc	.+2      	; 0xf86 <__ftoa_engine+0x142>
 f84:	20 2f       	mov	r18, r16
 f86:	23 95       	inc	r18
 f88:	02 2f       	mov	r16, r18
 f8a:	7a 33       	cpi	r23, 0x3A	; 58
 f8c:	28 f0       	brcs	.+10     	; 0xf98 <__ftoa_engine+0x154>
 f8e:	79 e3       	ldi	r23, 0x39	; 57
 f90:	7d 93       	st	X+, r23
 f92:	2a 95       	dec	r18
 f94:	e9 f7       	brne	.-6      	; 0xf90 <__ftoa_engine+0x14c>
 f96:	10 c0       	rjmp	.+32     	; 0xfb8 <__ftoa_engine+0x174>
 f98:	7d 93       	st	X+, r23
 f9a:	2a 95       	dec	r18
 f9c:	89 f6       	brne	.-94     	; 0xf40 <__ftoa_engine+0xfc>
 f9e:	06 94       	lsr	r0
 fa0:	97 95       	ror	r25
 fa2:	67 95       	ror	r22
 fa4:	37 95       	ror	r19
 fa6:	17 95       	ror	r17
 fa8:	17 94       	ror	r1
 faa:	e1 18       	sub	r14, r1
 fac:	f1 0a       	sbc	r15, r17
 fae:	43 0b       	sbc	r20, r19
 fb0:	56 0b       	sbc	r21, r22
 fb2:	c9 0b       	sbc	r28, r25
 fb4:	d0 09       	sbc	r29, r0
 fb6:	98 f0       	brcs	.+38     	; 0xfde <__ftoa_engine+0x19a>
 fb8:	23 95       	inc	r18
 fba:	7e 91       	ld	r23, -X
 fbc:	73 95       	inc	r23
 fbe:	7a 33       	cpi	r23, 0x3A	; 58
 fc0:	08 f0       	brcs	.+2      	; 0xfc4 <__ftoa_engine+0x180>
 fc2:	70 e3       	ldi	r23, 0x30	; 48
 fc4:	7c 93       	st	X, r23
 fc6:	20 13       	cpse	r18, r16
 fc8:	b8 f7       	brcc	.-18     	; 0xfb8 <__ftoa_engine+0x174>
 fca:	7e 91       	ld	r23, -X
 fcc:	70 61       	ori	r23, 0x10	; 16
 fce:	7d 93       	st	X+, r23
 fd0:	30 f0       	brcs	.+12     	; 0xfde <__ftoa_engine+0x19a>
 fd2:	83 95       	inc	r24
 fd4:	71 e3       	ldi	r23, 0x31	; 49
 fd6:	7d 93       	st	X+, r23
 fd8:	70 e3       	ldi	r23, 0x30	; 48
 fda:	2a 95       	dec	r18
 fdc:	e1 f7       	brne	.-8      	; 0xfd6 <__ftoa_engine+0x192>
 fde:	11 24       	eor	r1, r1
 fe0:	ef 90       	pop	r14
 fe2:	ff 90       	pop	r15
 fe4:	0f 91       	pop	r16
 fe6:	1f 91       	pop	r17
 fe8:	cf 91       	pop	r28
 fea:	df 91       	pop	r29
 fec:	99 27       	eor	r25, r25
 fee:	87 fd       	sbrc	r24, 7
 ff0:	90 95       	com	r25
 ff2:	08 95       	ret

Disassembly of section .text.avrlibc:

00001e46 <strnlen>:
    1e46:	cf 92       	push	r12
    1e48:	df 92       	push	r13
    1e4a:	ef 92       	push	r14
    1e4c:	6b 01       	movw	r12, r22
    1e4e:	e8 2e       	mov	r14, r24
    1e50:	a8 2f       	mov	r26, r24
    1e52:	cb 01       	movw	r24, r22
    1e54:	41 15       	cp	r20, r1
    1e56:	51 05       	cpc	r21, r1
    1e58:	31 f4       	brne	.+12     	; 0x1e66 <strnlen+0x20>
    1e5a:	8c 19       	sub	r24, r12
    1e5c:	9d 09       	sbc	r25, r13
    1e5e:	ef 90       	pop	r14
    1e60:	df 90       	pop	r13
    1e62:	cf 90       	pop	r12
    1e64:	08 95       	ret
    1e66:	fc 01       	movw	r30, r24
    1e68:	24 91       	lpm	r18, Z
    1e6a:	a7 fd       	sbrc	r26, 7
    1e6c:	20 81       	ld	r18, Z
    1e6e:	22 23       	and	r18, r18
    1e70:	a1 f3       	breq	.-24     	; 0x1e5a <strnlen+0x14>
    1e72:	01 96       	adiw	r24, 0x01	; 1
    1e74:	a1 1d       	adc	r26, r1
    1e76:	41 50       	subi	r20, 0x01	; 1
    1e78:	51 09       	sbc	r21, r1
    1e7a:	ec cf       	rjmp	.-40     	; 0x1e54 <strnlen+0xe>

Disassembly of section .text.avrlibc:

0000170a <fdevopen>:
    170a:	0f 93       	push	r16
    170c:	1f 93       	push	r17
    170e:	cf 93       	push	r28
    1710:	df 93       	push	r29
    1712:	00 97       	sbiw	r24, 0x00	; 0
    1714:	31 f4       	brne	.+12     	; 0x1722 <fdevopen+0x18>
    1716:	61 15       	cp	r22, r1
    1718:	71 05       	cpc	r23, r1
    171a:	19 f4       	brne	.+6      	; 0x1722 <fdevopen+0x18>
    171c:	80 e0       	ldi	r24, 0x00	; 0
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	3b c0       	rjmp	.+118    	; 0x1798 <fdevopen+0x8e>
    1722:	8b 01       	movw	r16, r22
    1724:	ec 01       	movw	r28, r24
    1726:	6f e0       	ldi	r22, 0x0F	; 15
    1728:	70 e0       	ldi	r23, 0x00	; 0
    172a:	81 e0       	ldi	r24, 0x01	; 1
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	0e 94 ec 0e 	call	0x1dd8	; 0x1dd8 <calloc>
    1732:	fc 01       	movw	r30, r24
    1734:	89 2b       	or	r24, r25
    1736:	91 f3       	breq	.-28     	; 0x171c <fdevopen+0x12>
    1738:	80 e8       	ldi	r24, 0x80	; 128
    173a:	84 83       	std	Z+4, r24	; 0x04
    173c:	01 15       	cp	r16, r1
    173e:	11 05       	cpc	r17, r1
    1740:	69 f0       	breq	.+26     	; 0x175c <fdevopen+0x52>
    1742:	14 87       	std	Z+12, r17	; 0x0c
    1744:	03 87       	std	Z+11, r16	; 0x0b
    1746:	81 e8       	ldi	r24, 0x81	; 129
    1748:	84 83       	std	Z+4, r24	; 0x04
    174a:	a2 e0       	ldi	r26, 0x02	; 2
    174c:	b1 e0       	ldi	r27, 0x01	; 1
    174e:	8d 91       	ld	r24, X+
    1750:	9c 91       	ld	r25, X
    1752:	11 97       	sbiw	r26, 0x01	; 1
    1754:	89 2b       	or	r24, r25
    1756:	11 f4       	brne	.+4      	; 0x175c <fdevopen+0x52>
    1758:	ed 93       	st	X+, r30
    175a:	fc 93       	st	X, r31
    175c:	20 97       	sbiw	r28, 0x00	; 0
    175e:	d9 f0       	breq	.+54     	; 0x1796 <fdevopen+0x8c>
    1760:	d2 87       	std	Z+10, r29	; 0x0a
    1762:	c1 87       	std	Z+9, r28	; 0x09
    1764:	84 81       	ldd	r24, Z+4	; 0x04
    1766:	82 60       	ori	r24, 0x02	; 2
    1768:	84 83       	std	Z+4, r24	; 0x04
    176a:	a2 e0       	ldi	r26, 0x02	; 2
    176c:	b1 e0       	ldi	r27, 0x01	; 1
    176e:	12 96       	adiw	r26, 0x02	; 2
    1770:	8d 91       	ld	r24, X+
    1772:	9c 91       	ld	r25, X
    1774:	13 97       	sbiw	r26, 0x03	; 3
    1776:	89 2b       	or	r24, r25
    1778:	71 f4       	brne	.+28     	; 0x1796 <fdevopen+0x8c>
    177a:	13 96       	adiw	r26, 0x03	; 3
    177c:	fc 93       	st	X, r31
    177e:	ee 93       	st	-X, r30
    1780:	12 97       	sbiw	r26, 0x02	; 2
    1782:	14 96       	adiw	r26, 0x04	; 4
    1784:	8d 91       	ld	r24, X+
    1786:	9c 91       	ld	r25, X
    1788:	15 97       	sbiw	r26, 0x05	; 5
    178a:	89 2b       	or	r24, r25
    178c:	21 f4       	brne	.+8      	; 0x1796 <fdevopen+0x8c>
    178e:	15 96       	adiw	r26, 0x05	; 5
    1790:	fc 93       	st	X, r31
    1792:	ee 93       	st	-X, r30
    1794:	14 97       	sbiw	r26, 0x04	; 4
    1796:	cf 01       	movw	r24, r30
    1798:	df 91       	pop	r29
    179a:	cf 91       	pop	r28
    179c:	1f 91       	pop	r17
    179e:	0f 91       	pop	r16
    17a0:	08 95       	ret

Disassembly of section .text.avrlibc:

000019b6 <fputc>:
    19b6:	0f 93       	push	r16
    19b8:	1f 93       	push	r17
    19ba:	cf 93       	push	r28
    19bc:	df 93       	push	r29
    19be:	fb 01       	movw	r30, r22
    19c0:	24 81       	ldd	r18, Z+4	; 0x04
    19c2:	21 fd       	sbrc	r18, 1
    19c4:	03 c0       	rjmp	.+6      	; 0x19cc <fputc+0x16>
    19c6:	8f ef       	ldi	r24, 0xFF	; 255
    19c8:	9f ef       	ldi	r25, 0xFF	; 255
    19ca:	2c c0       	rjmp	.+88     	; 0x1a24 <fputc+0x6e>
    19cc:	22 ff       	sbrs	r18, 2
    19ce:	16 c0       	rjmp	.+44     	; 0x19fc <fputc+0x46>
    19d0:	47 81       	ldd	r20, Z+7	; 0x07
    19d2:	50 85       	ldd	r21, Z+8	; 0x08
    19d4:	25 81       	ldd	r18, Z+5	; 0x05
    19d6:	36 81       	ldd	r19, Z+6	; 0x06
    19d8:	42 17       	cp	r20, r18
    19da:	53 07       	cpc	r21, r19
    19dc:	44 f4       	brge	.+16     	; 0x19ee <fputc+0x38>
    19de:	a0 81       	ld	r26, Z
    19e0:	b1 81       	ldd	r27, Z+1	; 0x01
    19e2:	9d 01       	movw	r18, r26
    19e4:	2f 5f       	subi	r18, 0xFF	; 255
    19e6:	3f 4f       	sbci	r19, 0xFF	; 255
    19e8:	31 83       	std	Z+1, r19	; 0x01
    19ea:	20 83       	st	Z, r18
    19ec:	8c 93       	st	X, r24
    19ee:	27 81       	ldd	r18, Z+7	; 0x07
    19f0:	30 85       	ldd	r19, Z+8	; 0x08
    19f2:	2f 5f       	subi	r18, 0xFF	; 255
    19f4:	3f 4f       	sbci	r19, 0xFF	; 255
    19f6:	30 87       	std	Z+8, r19	; 0x08
    19f8:	27 83       	std	Z+7, r18	; 0x07
    19fa:	14 c0       	rjmp	.+40     	; 0x1a24 <fputc+0x6e>
    19fc:	8b 01       	movw	r16, r22
    19fe:	ec 01       	movw	r28, r24
    1a00:	fb 01       	movw	r30, r22
    1a02:	01 84       	ldd	r0, Z+9	; 0x09
    1a04:	f2 85       	ldd	r31, Z+10	; 0x0a
    1a06:	e0 2d       	mov	r30, r0
    1a08:	09 95       	icall
    1a0a:	89 2b       	or	r24, r25
    1a0c:	e1 f6       	brne	.-72     	; 0x19c6 <fputc+0x10>
    1a0e:	d8 01       	movw	r26, r16
    1a10:	17 96       	adiw	r26, 0x07	; 7
    1a12:	8d 91       	ld	r24, X+
    1a14:	9c 91       	ld	r25, X
    1a16:	18 97       	sbiw	r26, 0x08	; 8
    1a18:	01 96       	adiw	r24, 0x01	; 1
    1a1a:	18 96       	adiw	r26, 0x08	; 8
    1a1c:	9c 93       	st	X, r25
    1a1e:	8e 93       	st	-X, r24
    1a20:	17 97       	sbiw	r26, 0x07	; 7
    1a22:	ce 01       	movw	r24, r28
    1a24:	df 91       	pop	r29
    1a26:	cf 91       	pop	r28
    1a28:	1f 91       	pop	r17
    1a2a:	0f 91       	pop	r16
    1a2c:	08 95       	ret

Disassembly of section .text.avrlibc:

00001eda <printf>:
    1eda:	a0 e0       	ldi	r26, 0x00	; 0
    1edc:	b0 e0       	ldi	r27, 0x00	; 0
    1ede:	e3 e7       	ldi	r30, 0x73	; 115
    1ee0:	ff e0       	ldi	r31, 0x0F	; 15
    1ee2:	0c 94 e0 0e 	jmp	0x1dc0	; 0x1dc0 <__prologue_saves__+0x20>
    1ee6:	9e 01       	movw	r18, r28
    1ee8:	2b 5f       	subi	r18, 0xFB	; 251
    1eea:	3f 4f       	sbci	r19, 0xFF	; 255
    1eec:	f9 01       	movw	r30, r18
    1eee:	41 91       	ld	r20, Z+
    1ef0:	51 91       	ld	r21, Z+
    1ef2:	61 91       	ld	r22, Z+
    1ef4:	9f 01       	movw	r18, r30
    1ef6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__iob+0x2>
    1efa:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__iob+0x3>
    1efe:	0e 94 05 01 	call	0x20a	; 0x20a <vfprintf>
    1f02:	e2 e0       	ldi	r30, 0x02	; 2
    1f04:	0c 94 18 0f 	jmp	0x1e30	; 0x1e30 <__epilogue_restores__+0x20>

Disassembly of section .text.avrlibc:

00001512 <__ultoa_invert>:
    1512:	fa 01       	movw	r30, r20
    1514:	aa 27       	eor	r26, r26
    1516:	28 30       	cpi	r18, 0x08	; 8
    1518:	51 f1       	breq	.+84     	; 0x156e <__ultoa_invert+0x5c>
    151a:	20 31       	cpi	r18, 0x10	; 16
    151c:	81 f1       	breq	.+96     	; 0x157e <__ultoa_invert+0x6c>
    151e:	e8 94       	clt
    1520:	6f 93       	push	r22
    1522:	6e 7f       	andi	r22, 0xFE	; 254
    1524:	6e 5f       	subi	r22, 0xFE	; 254
    1526:	7f 4f       	sbci	r23, 0xFF	; 255
    1528:	8f 4f       	sbci	r24, 0xFF	; 255
    152a:	9f 4f       	sbci	r25, 0xFF	; 255
    152c:	af 4f       	sbci	r26, 0xFF	; 255
    152e:	b1 e0       	ldi	r27, 0x01	; 1
    1530:	3e d0       	rcall	.+124    	; 0x15ae <__ultoa_invert+0x9c>
    1532:	b4 e0       	ldi	r27, 0x04	; 4
    1534:	3c d0       	rcall	.+120    	; 0x15ae <__ultoa_invert+0x9c>
    1536:	67 0f       	add	r22, r23
    1538:	78 1f       	adc	r23, r24
    153a:	89 1f       	adc	r24, r25
    153c:	9a 1f       	adc	r25, r26
    153e:	a1 1d       	adc	r26, r1
    1540:	68 0f       	add	r22, r24
    1542:	79 1f       	adc	r23, r25
    1544:	8a 1f       	adc	r24, r26
    1546:	91 1d       	adc	r25, r1
    1548:	a1 1d       	adc	r26, r1
    154a:	6a 0f       	add	r22, r26
    154c:	71 1d       	adc	r23, r1
    154e:	81 1d       	adc	r24, r1
    1550:	91 1d       	adc	r25, r1
    1552:	a1 1d       	adc	r26, r1
    1554:	20 d0       	rcall	.+64     	; 0x1596 <__ultoa_invert+0x84>
    1556:	09 f4       	brne	.+2      	; 0x155a <__ultoa_invert+0x48>
    1558:	68 94       	set
    155a:	3f 91       	pop	r19
    155c:	2a e0       	ldi	r18, 0x0A	; 10
    155e:	26 9f       	mul	r18, r22
    1560:	11 24       	eor	r1, r1
    1562:	30 19       	sub	r19, r0
    1564:	30 5d       	subi	r19, 0xD0	; 208
    1566:	31 93       	st	Z+, r19
    1568:	de f6       	brtc	.-74     	; 0x1520 <__ultoa_invert+0xe>
    156a:	cf 01       	movw	r24, r30
    156c:	08 95       	ret
    156e:	46 2f       	mov	r20, r22
    1570:	47 70       	andi	r20, 0x07	; 7
    1572:	40 5d       	subi	r20, 0xD0	; 208
    1574:	41 93       	st	Z+, r20
    1576:	b3 e0       	ldi	r27, 0x03	; 3
    1578:	0f d0       	rcall	.+30     	; 0x1598 <__ultoa_invert+0x86>
    157a:	c9 f7       	brne	.-14     	; 0x156e <__ultoa_invert+0x5c>
    157c:	f6 cf       	rjmp	.-20     	; 0x156a <__ultoa_invert+0x58>
    157e:	46 2f       	mov	r20, r22
    1580:	4f 70       	andi	r20, 0x0F	; 15
    1582:	40 5d       	subi	r20, 0xD0	; 208
    1584:	4a 33       	cpi	r20, 0x3A	; 58
    1586:	18 f0       	brcs	.+6      	; 0x158e <__ultoa_invert+0x7c>
    1588:	49 5d       	subi	r20, 0xD9	; 217
    158a:	31 fd       	sbrc	r19, 1
    158c:	40 52       	subi	r20, 0x20	; 32
    158e:	41 93       	st	Z+, r20
    1590:	02 d0       	rcall	.+4      	; 0x1596 <__ultoa_invert+0x84>
    1592:	a9 f7       	brne	.-22     	; 0x157e <__ultoa_invert+0x6c>
    1594:	ea cf       	rjmp	.-44     	; 0x156a <__ultoa_invert+0x58>
    1596:	b4 e0       	ldi	r27, 0x04	; 4
    1598:	a6 95       	lsr	r26
    159a:	97 95       	ror	r25
    159c:	87 95       	ror	r24
    159e:	77 95       	ror	r23
    15a0:	67 95       	ror	r22
    15a2:	ba 95       	dec	r27
    15a4:	c9 f7       	brne	.-14     	; 0x1598 <__ultoa_invert+0x86>
    15a6:	00 97       	sbiw	r24, 0x00	; 0
    15a8:	61 05       	cpc	r22, r1
    15aa:	71 05       	cpc	r23, r1
    15ac:	08 95       	ret
    15ae:	9b 01       	movw	r18, r22
    15b0:	ac 01       	movw	r20, r24
    15b2:	0a 2e       	mov	r0, r26
    15b4:	06 94       	lsr	r0
    15b6:	57 95       	ror	r21
    15b8:	47 95       	ror	r20
    15ba:	37 95       	ror	r19
    15bc:	27 95       	ror	r18
    15be:	ba 95       	dec	r27
    15c0:	c9 f7       	brne	.-14     	; 0x15b4 <__ultoa_invert+0xa2>
    15c2:	62 0f       	add	r22, r18
    15c4:	73 1f       	adc	r23, r19
    15c6:	84 1f       	adc	r24, r20
    15c8:	95 1f       	adc	r25, r21
    15ca:	a0 1d       	adc	r26, r0
    15cc:	08 95       	ret

Disassembly of section .text.avrlibc:

00001dd8 <calloc>:
    1dd8:	0f 93       	push	r16
    1dda:	1f 93       	push	r17
    1ddc:	cf 93       	push	r28
    1dde:	df 93       	push	r29
    1de0:	86 9f       	mul	r24, r22
    1de2:	80 01       	movw	r16, r0
    1de4:	87 9f       	mul	r24, r23
    1de6:	10 0d       	add	r17, r0
    1de8:	96 9f       	mul	r25, r22
    1dea:	10 0d       	add	r17, r0
    1dec:	11 24       	eor	r1, r1
    1dee:	c8 01       	movw	r24, r16
    1df0:	0e 94 01 06 	call	0xc02	; 0xc02 <malloc>
    1df4:	ec 01       	movw	r28, r24
    1df6:	00 97       	sbiw	r24, 0x00	; 0
    1df8:	29 f0       	breq	.+10     	; 0x1e04 <calloc+0x2c>
    1dfa:	a8 01       	movw	r20, r16
    1dfc:	60 e0       	ldi	r22, 0x00	; 0
    1dfe:	70 e0       	ldi	r23, 0x00	; 0
    1e00:	0e 94 21 10 	call	0x2042	; 0x2042 <memset>
    1e04:	ce 01       	movw	r24, r28
    1e06:	df 91       	pop	r29
    1e08:	cf 91       	pop	r28
    1e0a:	1f 91       	pop	r17
    1e0c:	0f 91       	pop	r16
    1e0e:	08 95       	ret

Disassembly of section .text.avrlibc:

00000c02 <malloc>:
 c02:	0f 93       	push	r16
 c04:	1f 93       	push	r17
 c06:	cf 93       	push	r28
 c08:	df 93       	push	r29
 c0a:	82 30       	cpi	r24, 0x02	; 2
 c0c:	91 05       	cpc	r25, r1
 c0e:	10 f4       	brcc	.+4      	; 0xc14 <malloc+0x12>
 c10:	82 e0       	ldi	r24, 0x02	; 2
 c12:	90 e0       	ldi	r25, 0x00	; 0
 c14:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__flp>
 c18:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <__flp+0x1>
 c1c:	20 e0       	ldi	r18, 0x00	; 0
 c1e:	30 e0       	ldi	r19, 0x00	; 0
 c20:	a0 e0       	ldi	r26, 0x00	; 0
 c22:	b0 e0       	ldi	r27, 0x00	; 0
 c24:	30 97       	sbiw	r30, 0x00	; 0
 c26:	19 f1       	breq	.+70     	; 0xc6e <malloc+0x6c>
 c28:	40 81       	ld	r20, Z
 c2a:	51 81       	ldd	r21, Z+1	; 0x01
 c2c:	02 81       	ldd	r16, Z+2	; 0x02
 c2e:	13 81       	ldd	r17, Z+3	; 0x03
 c30:	48 17       	cp	r20, r24
 c32:	59 07       	cpc	r21, r25
 c34:	c8 f0       	brcs	.+50     	; 0xc68 <malloc+0x66>
 c36:	84 17       	cp	r24, r20
 c38:	95 07       	cpc	r25, r21
 c3a:	69 f4       	brne	.+26     	; 0xc56 <malloc+0x54>
 c3c:	10 97       	sbiw	r26, 0x00	; 0
 c3e:	31 f0       	breq	.+12     	; 0xc4c <malloc+0x4a>
 c40:	12 96       	adiw	r26, 0x02	; 2
 c42:	0c 93       	st	X, r16
 c44:	12 97       	sbiw	r26, 0x02	; 2
 c46:	13 96       	adiw	r26, 0x03	; 3
 c48:	1c 93       	st	X, r17
 c4a:	27 c0       	rjmp	.+78     	; 0xc9a <malloc+0x98>
 c4c:	00 93 0a 01 	sts	0x010A, r16	; 0x80010a <__flp>
 c50:	10 93 0b 01 	sts	0x010B, r17	; 0x80010b <__flp+0x1>
 c54:	22 c0       	rjmp	.+68     	; 0xc9a <malloc+0x98>
 c56:	21 15       	cp	r18, r1
 c58:	31 05       	cpc	r19, r1
 c5a:	19 f0       	breq	.+6      	; 0xc62 <malloc+0x60>
 c5c:	42 17       	cp	r20, r18
 c5e:	53 07       	cpc	r21, r19
 c60:	18 f4       	brcc	.+6      	; 0xc68 <malloc+0x66>
 c62:	9a 01       	movw	r18, r20
 c64:	bd 01       	movw	r22, r26
 c66:	ef 01       	movw	r28, r30
 c68:	df 01       	movw	r26, r30
 c6a:	f8 01       	movw	r30, r16
 c6c:	db cf       	rjmp	.-74     	; 0xc24 <malloc+0x22>
 c6e:	21 15       	cp	r18, r1
 c70:	31 05       	cpc	r19, r1
 c72:	f9 f0       	breq	.+62     	; 0xcb2 <malloc+0xb0>
 c74:	28 1b       	sub	r18, r24
 c76:	39 0b       	sbc	r19, r25
 c78:	24 30       	cpi	r18, 0x04	; 4
 c7a:	31 05       	cpc	r19, r1
 c7c:	80 f4       	brcc	.+32     	; 0xc9e <malloc+0x9c>
 c7e:	8a 81       	ldd	r24, Y+2	; 0x02
 c80:	9b 81       	ldd	r25, Y+3	; 0x03
 c82:	61 15       	cp	r22, r1
 c84:	71 05       	cpc	r23, r1
 c86:	21 f0       	breq	.+8      	; 0xc90 <malloc+0x8e>
 c88:	fb 01       	movw	r30, r22
 c8a:	93 83       	std	Z+3, r25	; 0x03
 c8c:	82 83       	std	Z+2, r24	; 0x02
 c8e:	04 c0       	rjmp	.+8      	; 0xc98 <malloc+0x96>
 c90:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__flp+0x1>
 c94:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__flp>
 c98:	fe 01       	movw	r30, r28
 c9a:	32 96       	adiw	r30, 0x02	; 2
 c9c:	44 c0       	rjmp	.+136    	; 0xd26 <malloc+0x124>
 c9e:	fe 01       	movw	r30, r28
 ca0:	e2 0f       	add	r30, r18
 ca2:	f3 1f       	adc	r31, r19
 ca4:	81 93       	st	Z+, r24
 ca6:	91 93       	st	Z+, r25
 ca8:	22 50       	subi	r18, 0x02	; 2
 caa:	31 09       	sbc	r19, r1
 cac:	39 83       	std	Y+1, r19	; 0x01
 cae:	28 83       	st	Y, r18
 cb0:	3a c0       	rjmp	.+116    	; 0xd26 <malloc+0x124>
 cb2:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 cb6:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 cba:	23 2b       	or	r18, r19
 cbc:	41 f4       	brne	.+16     	; 0xcce <malloc+0xcc>
 cbe:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_start>
 cc2:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_start+0x1>
 cc6:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <__brkval+0x1>
 cca:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <__brkval>
 cce:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <_end>
 cd2:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <_end+0x1>
 cd6:	21 15       	cp	r18, r1
 cd8:	31 05       	cpc	r19, r1
 cda:	41 f4       	brne	.+16     	; 0xcec <malloc+0xea>
 cdc:	2d b7       	in	r18, 0x3d	; 61
 cde:	3e b7       	in	r19, 0x3e	; 62
 ce0:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <__malloc_margin>
 ce4:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <__malloc_margin+0x1>
 ce8:	24 1b       	sub	r18, r20
 cea:	35 0b       	sbc	r19, r21
 cec:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__brkval>
 cf0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__brkval+0x1>
 cf4:	e2 17       	cp	r30, r18
 cf6:	f3 07       	cpc	r31, r19
 cf8:	a0 f4       	brcc	.+40     	; 0xd22 <malloc+0x120>
 cfa:	2e 1b       	sub	r18, r30
 cfc:	3f 0b       	sbc	r19, r31
 cfe:	28 17       	cp	r18, r24
 d00:	39 07       	cpc	r19, r25
 d02:	78 f0       	brcs	.+30     	; 0xd22 <malloc+0x120>
 d04:	ac 01       	movw	r20, r24
 d06:	4e 5f       	subi	r20, 0xFE	; 254
 d08:	5f 4f       	sbci	r21, 0xFF	; 255
 d0a:	24 17       	cp	r18, r20
 d0c:	35 07       	cpc	r19, r21
 d0e:	48 f0       	brcs	.+18     	; 0xd22 <malloc+0x120>
 d10:	4e 0f       	add	r20, r30
 d12:	5f 1f       	adc	r21, r31
 d14:	50 93 09 01 	sts	0x0109, r21	; 0x800109 <__brkval+0x1>
 d18:	40 93 08 01 	sts	0x0108, r20	; 0x800108 <__brkval>
 d1c:	81 93       	st	Z+, r24
 d1e:	91 93       	st	Z+, r25
 d20:	02 c0       	rjmp	.+4      	; 0xd26 <malloc+0x124>
 d22:	e0 e0       	ldi	r30, 0x00	; 0
 d24:	f0 e0       	ldi	r31, 0x00	; 0
 d26:	cf 01       	movw	r24, r30
 d28:	df 91       	pop	r29
 d2a:	cf 91       	pop	r28
 d2c:	1f 91       	pop	r17
 d2e:	0f 91       	pop	r16
 d30:	08 95       	ret

00000d32 <free>:
 d32:	cf 93       	push	r28
 d34:	df 93       	push	r29
 d36:	00 97       	sbiw	r24, 0x00	; 0
 d38:	09 f4       	brne	.+2      	; 0xd3c <free+0xa>
 d3a:	81 c0       	rjmp	.+258    	; 0xe3e <free+0x10c>
 d3c:	fc 01       	movw	r30, r24
 d3e:	32 97       	sbiw	r30, 0x02	; 2
 d40:	13 82       	std	Z+3, r1	; 0x03
 d42:	12 82       	std	Z+2, r1	; 0x02
 d44:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <__flp>
 d48:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <__flp+0x1>
 d4c:	10 97       	sbiw	r26, 0x00	; 0
 d4e:	81 f4       	brne	.+32     	; 0xd70 <free+0x3e>
 d50:	20 81       	ld	r18, Z
 d52:	31 81       	ldd	r19, Z+1	; 0x01
 d54:	82 0f       	add	r24, r18
 d56:	93 1f       	adc	r25, r19
 d58:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 d5c:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 d60:	28 17       	cp	r18, r24
 d62:	39 07       	cpc	r19, r25
 d64:	51 f5       	brne	.+84     	; 0xdba <free+0x88>
 d66:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__brkval+0x1>
 d6a:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__brkval>
 d6e:	67 c0       	rjmp	.+206    	; 0xe3e <free+0x10c>
 d70:	ed 01       	movw	r28, r26
 d72:	20 e0       	ldi	r18, 0x00	; 0
 d74:	30 e0       	ldi	r19, 0x00	; 0
 d76:	ce 17       	cp	r28, r30
 d78:	df 07       	cpc	r29, r31
 d7a:	40 f4       	brcc	.+16     	; 0xd8c <free+0x5a>
 d7c:	4a 81       	ldd	r20, Y+2	; 0x02
 d7e:	5b 81       	ldd	r21, Y+3	; 0x03
 d80:	9e 01       	movw	r18, r28
 d82:	41 15       	cp	r20, r1
 d84:	51 05       	cpc	r21, r1
 d86:	f1 f0       	breq	.+60     	; 0xdc4 <free+0x92>
 d88:	ea 01       	movw	r28, r20
 d8a:	f5 cf       	rjmp	.-22     	; 0xd76 <free+0x44>
 d8c:	d3 83       	std	Z+3, r29	; 0x03
 d8e:	c2 83       	std	Z+2, r28	; 0x02
 d90:	40 81       	ld	r20, Z
 d92:	51 81       	ldd	r21, Z+1	; 0x01
 d94:	84 0f       	add	r24, r20
 d96:	95 1f       	adc	r25, r21
 d98:	c8 17       	cp	r28, r24
 d9a:	d9 07       	cpc	r29, r25
 d9c:	59 f4       	brne	.+22     	; 0xdb4 <free+0x82>
 d9e:	88 81       	ld	r24, Y
 da0:	99 81       	ldd	r25, Y+1	; 0x01
 da2:	84 0f       	add	r24, r20
 da4:	95 1f       	adc	r25, r21
 da6:	02 96       	adiw	r24, 0x02	; 2
 da8:	91 83       	std	Z+1, r25	; 0x01
 daa:	80 83       	st	Z, r24
 dac:	8a 81       	ldd	r24, Y+2	; 0x02
 dae:	9b 81       	ldd	r25, Y+3	; 0x03
 db0:	93 83       	std	Z+3, r25	; 0x03
 db2:	82 83       	std	Z+2, r24	; 0x02
 db4:	21 15       	cp	r18, r1
 db6:	31 05       	cpc	r19, r1
 db8:	29 f4       	brne	.+10     	; 0xdc4 <free+0x92>
 dba:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__flp+0x1>
 dbe:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__flp>
 dc2:	3d c0       	rjmp	.+122    	; 0xe3e <free+0x10c>
 dc4:	e9 01       	movw	r28, r18
 dc6:	fb 83       	std	Y+3, r31	; 0x03
 dc8:	ea 83       	std	Y+2, r30	; 0x02
 dca:	49 91       	ld	r20, Y+
 dcc:	59 91       	ld	r21, Y+
 dce:	c4 0f       	add	r28, r20
 dd0:	d5 1f       	adc	r29, r21
 dd2:	ec 17       	cp	r30, r28
 dd4:	fd 07       	cpc	r31, r29
 dd6:	61 f4       	brne	.+24     	; 0xdf0 <free+0xbe>
 dd8:	80 81       	ld	r24, Z
 dda:	91 81       	ldd	r25, Z+1	; 0x01
 ddc:	84 0f       	add	r24, r20
 dde:	95 1f       	adc	r25, r21
 de0:	02 96       	adiw	r24, 0x02	; 2
 de2:	e9 01       	movw	r28, r18
 de4:	99 83       	std	Y+1, r25	; 0x01
 de6:	88 83       	st	Y, r24
 de8:	82 81       	ldd	r24, Z+2	; 0x02
 dea:	93 81       	ldd	r25, Z+3	; 0x03
 dec:	9b 83       	std	Y+3, r25	; 0x03
 dee:	8a 83       	std	Y+2, r24	; 0x02
 df0:	e0 e0       	ldi	r30, 0x00	; 0
 df2:	f0 e0       	ldi	r31, 0x00	; 0
 df4:	12 96       	adiw	r26, 0x02	; 2
 df6:	8d 91       	ld	r24, X+
 df8:	9c 91       	ld	r25, X
 dfa:	13 97       	sbiw	r26, 0x03	; 3
 dfc:	00 97       	sbiw	r24, 0x00	; 0
 dfe:	19 f0       	breq	.+6      	; 0xe06 <free+0xd4>
 e00:	fd 01       	movw	r30, r26
 e02:	dc 01       	movw	r26, r24
 e04:	f7 cf       	rjmp	.-18     	; 0xdf4 <free+0xc2>
 e06:	8d 91       	ld	r24, X+
 e08:	9c 91       	ld	r25, X
 e0a:	11 97       	sbiw	r26, 0x01	; 1
 e0c:	9d 01       	movw	r18, r26
 e0e:	2e 5f       	subi	r18, 0xFE	; 254
 e10:	3f 4f       	sbci	r19, 0xFF	; 255
 e12:	82 0f       	add	r24, r18
 e14:	93 1f       	adc	r25, r19
 e16:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 e1a:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 e1e:	28 17       	cp	r18, r24
 e20:	39 07       	cpc	r19, r25
 e22:	69 f4       	brne	.+26     	; 0xe3e <free+0x10c>
 e24:	30 97       	sbiw	r30, 0x00	; 0
 e26:	29 f4       	brne	.+10     	; 0xe32 <free+0x100>
 e28:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <__flp+0x1>
 e2c:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__flp>
 e30:	02 c0       	rjmp	.+4      	; 0xe36 <free+0x104>
 e32:	13 82       	std	Z+3, r1	; 0x03
 e34:	12 82       	std	Z+2, r1	; 0x02
 e36:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <__brkval+0x1>
 e3a:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <__brkval>
 e3e:	df 91       	pop	r29
 e40:	cf 91       	pop	r28
 e42:	08 95       	ret

Disassembly of section .text.avrlibc:

00002042 <memset>:
    2042:	dc 01       	movw	r26, r24
    2044:	01 c0       	rjmp	.+2      	; 0x2048 <memset+0x6>
    2046:	6d 93       	st	X+, r22
    2048:	41 50       	subi	r20, 0x01	; 1
    204a:	50 40       	sbci	r21, 0x00	; 0
    204c:	e0 f7       	brcc	.-8      	; 0x2046 <memset+0x4>
    204e:	08 95       	ret
