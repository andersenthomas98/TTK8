
application.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000208e  2**0
                  ALLOC, LOAD, DATA
  1 .text         000001c8  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800100  00800100  0000208e  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  0000208e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001d8  00000000  00000000  000020e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002cfb  00000000  00000000  000022c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000e9e  00000000  00000000  00004fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001088  00000000  00000000  00005e5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000530  00000000  00000000  00006ee4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b8  00000000  00000000  00007414  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000107c  00000000  00000000  000077cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000148  00000000  00000000  00008848  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00001fb0  00001fb0  00002084  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00008990  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.encoder_init 0000002e  00001dd6  00001dd6  00001eaa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.encoder_read_tick 0000001e  00001ec2  00001ec2  00001f96  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.encoder_get_accumulated_ticks_left 00000046  00001af6  00001af6  00001bca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.encoder_get_accumulated_ticks_right 00000046  00001b3c  00001b3c  00001c10  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_1 0000009e  0000155e  0000155e  00001632  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_2 0000009e  000015fc  000015fc  000016d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.encoder_ticks_right 00000004  00800112  00800112  0000208e  2**0
                  ALLOC
 21 .bss.encoder_ticks_left 00000004  00800116  00800116  0000208e  2**0
                  ALLOC
 22 .text.abs     00000030  00001da6  00001da6  00001e7a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.motor_init 0000001e  00001ee0  00001ee0  00001fb4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.set_left_motor_dir 00000020  00001ea2  00001ea2  00001f76  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.motor_left 00000042  00001c0c  00001c0c  00001ce0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.pwm_init 0000001a  00001efe  00001efe  00001fd2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.pwm_set_duty_cycle_left 0000002c  00001e32  00001e32  00001f06  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.PID_controller_set_parameters 0000007c  000017be  000017be  00001892  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.PID_controller_init 00000064  0000199e  0000199e  00001a72  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.PID_controller_get_control_action 000002c4  00000936  00000936  00000a0a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.speed_estimator_init 00000072  0000192c  0000192c  00001a00  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.speed_estimator_left_rad_per_s 00000046  00001b82  00001b82  00001c56  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.__vector_11 0000014c  00000fec  00000fec  000010c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .bss.rad_per_s_right 00000004  0080011a  0080011a  0000208e  2**0
                  ALLOC
 35 .bss.rad_per_s_left 00000004  0080011e  0080011e  0000208e  2**0
                  ALLOC
 36 .bss.prev_ticks_left 00000002  00800126  00800126  0000208e  2**0
                  ALLOC
 37 .bss.prev_ticks_right 00000002  00800128  00800128  0000208e  2**0
                  ALLOC
 38 .bss.ticks_left 00000002  0080012a  0080012a  0000208e  2**0
                  ALLOC
 39 .bss.ticks_right 00000002  0080012c  0080012c  0000208e  2**0
                  ALLOC
 40 .text.timer_init 00000040  00001c4e  00001c4e  00001d22  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.timer_reset 0000004e  00001a60  00001a60  00001b34  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.timer_timeout 0000003c  00001c8e  00001c8e  00001d62  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.__vector_7 0000008c  00001732  00001732  00001806  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .bss.timer_flag 00000002  0080012e  0080012e  0000208e  2**0
                  ALLOC
 45 .bss.elapsed_ms 00000004  00800122  00800122  0000208e  2**0
                  ALLOC
 46 .text.usart_tx 0000000e  00001f18  00001f18  00001fec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.usart_rx 0000000e  00001f26  00001f26  00001ffa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.usart_init 00000022  00001e5e  00001e5e  00001f32  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .progmemx.data 00000021  000001c8  000001c8  0000029c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 50 .text.main    000000ea  00001138  00001138  0000120c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.avrlibc.fplib 0000000e  00001f34  00001f34  00002008  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.avrlibc.fplib 000000ce  000013d4  000013d4  000014a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.avrlibc.fplib 0000000a  00001f86  00001f86  0000205a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.avrlibc.fplib 00000008  00001f9a  00001f9a  0000206e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.avrlibc.fplib 000000de  00001222  00001222  000012f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.avrlibc.fplib 0000005e  00001a02  00001a02  00001ad6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.avrlibc.fplib 0000007a  0000183a  0000183a  0000190e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.avrlibc.fplib 00000048  00001aae  00001aae  00001b82  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.avrlibc.fplib 0000000c  00001f7a  00001f7a  0000204e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.avrlibc.fplib 00000006  00001faa  00001faa  0000207e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.avrlibc.fplib 0000000e  00001f42  00001f42  00002016  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.avrlibc.fplib 0000000e  00001f50  00001f50  00002024  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.avrlibc.fplib 00000022  00001e80  00001e80  00001f54  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.avrlibc.fplib 00000044  00001bc8  00001bc8  00001c9c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.avrlibc.fplib 0000000e  00001f5e  00001f5e  00002032  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.avrlibc.fplib 0000000a  00001f90  00001f90  00002064  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.avrlibc.fplib 00000008  00001fa2  00001fa2  00002076  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.avrlibc.fplib 000000d4  00001300  00001300  000013d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .progmemx.data 00000008  000001e9  000001e9  000002bd  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 70 .text.avrlibc 00000744  000001f2  000001f2  000002c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.libgcc.prologue 00000038  00001cca  00001cca  00001d9e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text.libgcc.prologue 00000036  00001d3a  00001d3a  00001e0e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.avrlibc 000001b0  00000e3c  00000e3c  00000f10  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.avrlibc 00000036  00001d70  00001d70  00001e44  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.avrlibc 00000098  0000169a  0000169a  0000176e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.avrlibc 00000078  000018b4  000018b4  00001988  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.avrlibc 0000002e  00001e04  00001e04  00001ed8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.avrlibc 000000bc  000014a2  000014a2  00001576  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.avrlibc 00000038  00001d02  00001d02  00001dd6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .data         00000006  0080010c  00001fb4  00002088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 81 .text.avrlibc 00000242  00000bfa  00000bfa  00000cce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.avrlibc 0000000e  00001f6c  00001f6c  00002040  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 ba 00 	jmp	0x174	; 0x174 <__ctors_end>
   4:	0c 94 af 0a 	jmp	0x155e	; 0x155e <__vector_1>
   8:	0c 94 fe 0a 	jmp	0x15fc	; 0x15fc <__vector_2>
   c:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  10:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  14:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  18:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  1c:	0c 94 99 0b 	jmp	0x1732	; 0x1732 <__vector_7>
  20:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  24:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  28:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  2c:	0c 94 f6 07 	jmp	0xfec	; 0xfec <__vector_11>
  30:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  34:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  38:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  3c:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  40:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  44:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  48:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  4c:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  50:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  54:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  58:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  5c:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  60:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>
  64:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 0c       	add	r0, r1
  6c:	80 01       	movw	r16, r0
  6e:	0c 01       	movw	r0, r24
  70:	12 00       	.word	0x0012	; ????
  72:	1f b4       	in	r1, 0x2f	; 47
  74:	01 12       	cpse	r0, r17
  76:	01 30       	cpi	r16, 0x01	; 1
  78:	80 00       	.word	0x0080	; ????

0000007a <__trampolines_end>:
  7a:	00 40       	sbci	r16, 0x00	; 0
  7c:	7a 10       	cpse	r7, r10
  7e:	f3 5a       	subi	r31, 0xA3	; 163
  80:	00 a0       	ldd	r0, Z+32	; 0x20
  82:	72 4e       	sbci	r23, 0xE2	; 226
  84:	18 09       	sbc	r17, r8
  86:	00 10       	cpse	r0, r0
  88:	a5 d4       	rcall	.+2378   	; 0x9d4 <PID_controller_get_control_action+0x9e>
  8a:	e8 00       	.word	0x00e8	; ????
  8c:	00 e8       	ldi	r16, 0x80	; 128
  8e:	76 48       	sbci	r23, 0x86	; 134
  90:	17 00       	.word	0x0017	; ????
  92:	00 e4       	ldi	r16, 0x40	; 64
  94:	0b 54       	subi	r16, 0x4B	; 75
  96:	02 00       	.word	0x0002	; ????
  98:	00 ca       	rjmp	.-3072   	; 0xfffff49a <__eeprom_end+0xff7ef49a>
  9a:	9a 3b       	cpi	r25, 0xBA	; 186
  9c:	00 00       	nop
  9e:	00 e1       	ldi	r16, 0x10	; 16
  a0:	f5 05       	cpc	r31, r5
  a2:	00 00       	nop
  a4:	80 96       	adiw	r24, 0x20	; 32
  a6:	98 00       	.word	0x0098	; ????
  a8:	00 00       	nop
  aa:	40 42       	sbci	r20, 0x20	; 32
  ac:	0f 00       	.word	0x000f	; ????
  ae:	00 00       	nop
  b0:	a0 86       	std	Z+8, r10	; 0x08
  b2:	01 00       	.word	0x0001	; ????
  b4:	00 00       	nop
  b6:	10 27       	eor	r17, r16
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	e8 03       	fmulsu	r22, r16
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	64 00       	.word	0x0064	; ????
  c4:	00 00       	nop
  c6:	00 00       	nop
  c8:	0a 00       	.word	0x000a	; ????
  ca:	00 00       	nop
  cc:	00 00       	nop
  ce:	01 00       	.word	0x0001	; ????
  d0:	00 00       	nop
  d2:	00 00       	nop
  d4:	2c 76       	andi	r18, 0x6C	; 108
  d6:	d8 88       	ldd	r13, Y+16	; 0x10
  d8:	dc 67       	ori	r29, 0x7C	; 124
  da:	4f 08       	sbc	r4, r15
  dc:	23 df       	rcall	.-442    	; 0xffffff24 <__eeprom_end+0xff7eff24>
  de:	c1 df       	rcall	.-126    	; 0x62 <__SREG__+0x23>
  e0:	ae 59       	subi	r26, 0x9E	; 158
  e2:	e1 b1       	in	r30, 0x01	; 1
  e4:	b7 96       	adiw	r30, 0x27	; 39
  e6:	e5 e3       	ldi	r30, 0x35	; 53
  e8:	e4 53       	subi	r30, 0x34	; 52
  ea:	c6 3a       	cpi	r28, 0xA6	; 166
  ec:	e6 51       	subi	r30, 0x16	; 22
  ee:	99 76       	andi	r25, 0x69	; 105
  f0:	96 e8       	ldi	r25, 0x86	; 134
  f2:	e6 c2       	rjmp	.+1484   	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
  f4:	84 26       	eor	r8, r20
  f6:	eb 89       	ldd	r30, Y+19	; 0x13
  f8:	8c 9b       	sbis	0x11, 4	; 17
  fa:	62 ed       	ldi	r22, 0xD2	; 210
  fc:	40 7c       	andi	r20, 0xC0	; 192
  fe:	6f fc       	.word	0xfc6f	; ????
 100:	ef bc       	out	0x2f, r14	; 47
 102:	9c 9f       	mul	r25, r28
 104:	40 f2       	brcs	.-112    	; 0x96 <__trampolines_end+0x1c>
 106:	ba a5       	ldd	r27, Y+42	; 0x2a
 108:	6f a5       	ldd	r22, Y+47	; 0x2f
 10a:	f4 90       	lpm	r15, Z
 10c:	05 5a       	subi	r16, 0xA5	; 165
 10e:	2a f7       	brpl	.-54     	; 0xda <__trampolines_end+0x60>
 110:	5c 93       	st	X, r21
 112:	6b 6c       	ori	r22, 0xCB	; 203
 114:	f9 67       	ori	r31, 0x79	; 121
 116:	6d c1       	rjmp	.+730    	; 0x3f2 <vfprintf+0x200>
 118:	1b fc       	.word	0xfc1b	; ????
 11a:	e0 e4       	ldi	r30, 0x40	; 64
 11c:	0d 47       	sbci	r16, 0x7D	; 125
 11e:	fe f5       	brtc	.+126    	; 0x19e <__do_copy_data+0x1e>
 120:	20 e6       	ldi	r18, 0x60	; 96
 122:	b5 00       	.word	0x00b5	; ????
 124:	d0 ed       	ldi	r29, 0xD0	; 208
 126:	90 2e       	mov	r9, r16
 128:	03 00       	.word	0x0003	; ????
 12a:	94 35       	cpi	r25, 0x54	; 84
 12c:	77 05       	cpc	r23, r7
 12e:	00 80       	ld	r0, Z
 130:	84 1e       	adc	r8, r20
 132:	08 00       	.word	0x0008	; ????
 134:	00 20       	and	r0, r0
 136:	4e 0a       	sbc	r4, r30
 138:	00 00       	nop
 13a:	00 c8       	rjmp	.-4096   	; 0xfffff13c <__eeprom_end+0xff7ef13c>
 13c:	0c 33       	cpi	r16, 0x3C	; 60
 13e:	33 33       	cpi	r19, 0x33	; 51
 140:	33 0f       	add	r19, r19
 142:	98 6e       	ori	r25, 0xE8	; 232
 144:	12 83       	std	Z+2, r17	; 0x02
 146:	11 41       	sbci	r17, 0x11	; 17
 148:	ef 8d       	ldd	r30, Y+31	; 0x1f
 14a:	21 14       	cp	r2, r1
 14c:	89 3b       	cpi	r24, 0xB9	; 185
 14e:	e6 55       	subi	r30, 0x56	; 86
 150:	16 cf       	rjmp	.-468    	; 0xffffff7e <__eeprom_end+0xff7eff7e>
 152:	fe e6       	ldi	r31, 0x6E	; 110
 154:	db 18       	sub	r13, r11
 156:	d1 84       	ldd	r13, Z+9	; 0x09
 158:	4b 38       	cpi	r20, 0x8B	; 139
 15a:	1b f7       	brvc	.-58     	; 0x122 <__trampolines_end+0xa8>
 15c:	7c 1d       	adc	r23, r12
 15e:	90 1d       	adc	r25, r0
 160:	a4 bb       	out	0x14, r26	; 20
 162:	e4 24       	eor	r14, r4
 164:	20 32       	cpi	r18, 0x20	; 32
 166:	84 72       	andi	r24, 0x24	; 36
 168:	5e 22       	and	r5, r30
 16a:	81 00       	.word	0x0081	; ????
 16c:	c9 f1       	breq	.+114    	; 0x1e0 <_etext+0x18>
 16e:	24 ec       	ldi	r18, 0xC4	; 196
 170:	a1 e5       	ldi	r26, 0x51	; 81
 172:	3d 27       	eor	r19, r29

00000174 <__ctors_end>:
 174:	11 24       	eor	r1, r1
 176:	1f be       	out	0x3f, r1	; 63
 178:	cf ef       	ldi	r28, 0xFF	; 255
 17a:	d8 e0       	ldi	r29, 0x08	; 8
 17c:	de bf       	out	0x3e, r29	; 62
 17e:	cd bf       	out	0x3d, r28	; 61

00000180 <__do_copy_data>:
 180:	e8 e6       	ldi	r30, 0x68	; 104
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	40 e0       	ldi	r20, 0x00	; 0
 186:	17 c0       	rjmp	.+46     	; 0x1b6 <__do_clear_bss+0x8>
 188:	b5 91       	lpm	r27, Z+
 18a:	a5 91       	lpm	r26, Z+
 18c:	35 91       	lpm	r19, Z+
 18e:	25 91       	lpm	r18, Z+
 190:	05 91       	lpm	r16, Z+
 192:	07 fd       	sbrc	r16, 7
 194:	0c c0       	rjmp	.+24     	; 0x1ae <__do_clear_bss>
 196:	95 91       	lpm	r25, Z+
 198:	85 91       	lpm	r24, Z+
 19a:	ef 01       	movw	r28, r30
 19c:	f9 2f       	mov	r31, r25
 19e:	e8 2f       	mov	r30, r24
 1a0:	05 90       	lpm	r0, Z+
 1a2:	0d 92       	st	X+, r0
 1a4:	a2 17       	cp	r26, r18
 1a6:	b3 07       	cpc	r27, r19
 1a8:	d9 f7       	brne	.-10     	; 0x1a0 <__do_copy_data+0x20>
 1aa:	fe 01       	movw	r30, r28
 1ac:	04 c0       	rjmp	.+8      	; 0x1b6 <__do_clear_bss+0x8>

000001ae <__do_clear_bss>:
 1ae:	1d 92       	st	X+, r1
 1b0:	a2 17       	cp	r26, r18
 1b2:	b3 07       	cpc	r27, r19
 1b4:	e1 f7       	brne	.-8      	; 0x1ae <__do_clear_bss>
 1b6:	e9 37       	cpi	r30, 0x79	; 121
 1b8:	f4 07       	cpc	r31, r20
 1ba:	31 f7       	brne	.-52     	; 0x188 <__do_copy_data+0x8>
 1bc:	0e 94 9c 08 	call	0x1138	; 0x1138 <main>
 1c0:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <_exit>

000001c4 <_exit>:
 1c4:	f8 94       	cli

000001c6 <__stop_program>:
 1c6:	ff cf       	rjmp	.-2      	; 0x1c6 <__stop_program>

Disassembly of section .text:

00001fb0 <__bad_interrupt>:
    1fb0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.encoder_init:

00001dd6 <encoder_init>:
static volatile long int encoder_ticks_left = 0;
static volatile long int encoder_ticks_right = 0;

void encoder_init(void) {
	
	cli();
    1dd6:	f8 94       	cli
	
	// Set digital inputs with internal pull-up (unsure if internal pull-up should be used)
	DDRD &= ~(1 << ENCA1);
    1dd8:	8a b1       	in	r24, 0x0a	; 10
    1dda:	8b 7f       	andi	r24, 0xFB	; 251
    1ddc:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA1);
    1dde:	8b b1       	in	r24, 0x0b	; 11
    1de0:	84 60       	ori	r24, 0x04	; 4
    1de2:	8b b9       	out	0x0b, r24	; 11
	
	DDRD &= ~(1 << ENCA2);
    1de4:	8a b1       	in	r24, 0x0a	; 10
    1de6:	87 7f       	andi	r24, 0xF7	; 247
    1de8:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA2);
    1dea:	8b b1       	in	r24, 0x0b	; 11
    1dec:	88 60       	ori	r24, 0x08	; 8
    1dee:	8b b9       	out	0x0b, r24	; 11
	
	// Rising edge of INT0 and INT1 will generate an interrupt request
	EICRA |= (1 << ISC00) | (1 << ISC01) | (1 << ISC10) | (1 << ISC11);
    1df0:	e9 e6       	ldi	r30, 0x69	; 105
    1df2:	f0 e0       	ldi	r31, 0x00	; 0
    1df4:	80 81       	ld	r24, Z
    1df6:	8f 60       	ori	r24, 0x0F	; 15
    1df8:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0) | (1 << INT1);
    1dfa:	8d b3       	in	r24, 0x1d	; 29
    1dfc:	83 60       	ori	r24, 0x03	; 3
    1dfe:	8d bb       	out	0x1d, r24	; 29
	
	// Enable global interrupts
	sei();
    1e00:	78 94       	sei
    1e02:	08 95       	ret

Disassembly of section .text.encoder_read_tick:

00001ec2 <encoder_read_tick>:
	
	
}

int encoder_read_tick(int encoder_pin) {
	if (PIND & (1<<encoder_pin)) {
    1ec2:	29 b1       	in	r18, 0x09	; 9
    1ec4:	30 e0       	ldi	r19, 0x00	; 0
    1ec6:	02 c0       	rjmp	.+4      	; 0x1ecc <encoder_read_tick+0xa>
    1ec8:	35 95       	asr	r19
    1eca:	27 95       	ror	r18
    1ecc:	8a 95       	dec	r24
    1ece:	e2 f7       	brpl	.-8      	; 0x1ec8 <encoder_read_tick+0x6>
    1ed0:	c9 01       	movw	r24, r18
    1ed2:	81 70       	andi	r24, 0x01	; 1
    1ed4:	99 27       	eor	r25, r25
    1ed6:	20 ff       	sbrs	r18, 0
    1ed8:	02 c0       	rjmp	.+4      	; 0x1ede <encoder_read_tick+0x1c>
		return 1;
    1eda:	81 e0       	ldi	r24, 0x01	; 1
    1edc:	90 e0       	ldi	r25, 0x00	; 0
	}
	return 0;
}
    1ede:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_left:

00001af6 <encoder_get_accumulated_ticks_left>:

long encoder_get_accumulated_ticks_left(void) {
    1af6:	cf 93       	push	r28
    1af8:	df 93       	push	r29
    1afa:	1f 92       	push	r1
    1afc:	cd b7       	in	r28, 0x3d	; 61
    1afe:	de b7       	in	r29, 0x3e	; 62
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1b00:	8f b7       	in	r24, 0x3f	; 63
    1b02:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1b04:	f8 94       	cli
    1b06:	81 e0       	ldi	r24, 0x01	; 1
    1b08:	09 c0       	rjmp	.+18     	; 0x1b1c <encoder_get_accumulated_ticks_left+0x26>
		ticks = encoder_ticks_left;
    1b0a:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <encoder_ticks_left>
    1b0e:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <encoder_ticks_left+0x1>
    1b12:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <encoder_ticks_left+0x2>
    1b16:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <encoder_ticks_left+0x3>
	return 0;
}

long encoder_get_accumulated_ticks_left(void) {
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1b1a:	80 e0       	ldi	r24, 0x00	; 0
    1b1c:	81 11       	cpse	r24, r1
    1b1e:	f5 cf       	rjmp	.-22     	; 0x1b0a <encoder_get_accumulated_ticks_left+0x14>
    1b20:	ce 01       	movw	r24, r28
    1b22:	01 96       	adiw	r24, 0x01	; 1
    1b24:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1b26:	fc 01       	movw	r30, r24
    1b28:	84 91       	lpm	r24, Z
    1b2a:	a7 fd       	sbrc	r26, 7
    1b2c:	80 81       	ld	r24, Z
    1b2e:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_left;
	}
	return ticks;
}
    1b30:	cb 01       	movw	r24, r22
    1b32:	ba 01       	movw	r22, r20
    1b34:	0f 90       	pop	r0
    1b36:	df 91       	pop	r29
    1b38:	cf 91       	pop	r28
    1b3a:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_right:

00001b3c <encoder_get_accumulated_ticks_right>:

long encoder_get_accumulated_ticks_right(void) {
    1b3c:	cf 93       	push	r28
    1b3e:	df 93       	push	r29
    1b40:	1f 92       	push	r1
    1b42:	cd b7       	in	r28, 0x3d	; 61
    1b44:	de b7       	in	r29, 0x3e	; 62
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1b46:	8f b7       	in	r24, 0x3f	; 63
    1b48:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1b4a:	f8 94       	cli
    1b4c:	81 e0       	ldi	r24, 0x01	; 1
    1b4e:	09 c0       	rjmp	.+18     	; 0x1b62 <encoder_get_accumulated_ticks_right+0x26>
		ticks = encoder_ticks_right;
    1b50:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <encoder_ticks_right>
    1b54:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <encoder_ticks_right+0x1>
    1b58:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <encoder_ticks_right+0x2>
    1b5c:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <encoder_ticks_right+0x3>
	return ticks;
}

long encoder_get_accumulated_ticks_right(void) {
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1b60:	80 e0       	ldi	r24, 0x00	; 0
    1b62:	81 11       	cpse	r24, r1
    1b64:	f5 cf       	rjmp	.-22     	; 0x1b50 <encoder_get_accumulated_ticks_right+0x14>
    1b66:	ce 01       	movw	r24, r28
    1b68:	01 96       	adiw	r24, 0x01	; 1
    1b6a:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1b6c:	fc 01       	movw	r30, r24
    1b6e:	84 91       	lpm	r24, Z
    1b70:	a7 fd       	sbrc	r26, 7
    1b72:	80 81       	ld	r24, Z
    1b74:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_right;
	}
	return ticks;
}
    1b76:	cb 01       	movw	r24, r22
    1b78:	ba 01       	movw	r22, r20
    1b7a:	0f 90       	pop	r0
    1b7c:	df 91       	pop	r29
    1b7e:	cf 91       	pop	r28
    1b80:	08 95       	ret

Disassembly of section .text.__vector_1:

0000155e <__vector_1>:



// Interrupt service routine for INT0
// Triggered on rising edge of channel A encoder signal for left wheel
ISR(INT0_vect) {
    155e:	1f 92       	push	r1
    1560:	0f 92       	push	r0
    1562:	0f b6       	in	r0, 0x3f	; 63
    1564:	0f 92       	push	r0
    1566:	11 24       	eor	r1, r1
    1568:	2f 93       	push	r18
    156a:	3f 93       	push	r19
    156c:	4f 93       	push	r20
    156e:	5f 93       	push	r21
    1570:	6f 93       	push	r22
    1572:	7f 93       	push	r23
    1574:	8f 93       	push	r24
    1576:	9f 93       	push	r25
    1578:	af 93       	push	r26
    157a:	bf 93       	push	r27
    157c:	ef 93       	push	r30
    157e:	ff 93       	push	r31
	int encb1 = encoder_read_tick(ENCB1);
    1580:	84 e0       	ldi	r24, 0x04	; 4
    1582:	90 e0       	ldi	r25, 0x00	; 0
    1584:	0e 94 61 0f 	call	0x1ec2	; 0x1ec2 <encoder_read_tick>
	if (encb1) {
    1588:	89 2b       	or	r24, r25
    158a:	a1 f0       	breq	.+40     	; 0x15b4 <__vector_1+0x56>
		encoder_ticks_left++;
    158c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <encoder_ticks_left>
    1590:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <encoder_ticks_left+0x1>
    1594:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <encoder_ticks_left+0x2>
    1598:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <encoder_ticks_left+0x3>
    159c:	01 96       	adiw	r24, 0x01	; 1
    159e:	a1 1d       	adc	r26, r1
    15a0:	b1 1d       	adc	r27, r1
    15a2:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <encoder_ticks_left>
    15a6:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <encoder_ticks_left+0x1>
    15aa:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <encoder_ticks_left+0x2>
    15ae:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <encoder_ticks_left+0x3>
    15b2:	13 c0       	rjmp	.+38     	; 0x15da <__vector_1+0x7c>
	} else {
		encoder_ticks_left--;
    15b4:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <encoder_ticks_left>
    15b8:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <encoder_ticks_left+0x1>
    15bc:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <encoder_ticks_left+0x2>
    15c0:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <encoder_ticks_left+0x3>
    15c4:	01 97       	sbiw	r24, 0x01	; 1
    15c6:	a1 09       	sbc	r26, r1
    15c8:	b1 09       	sbc	r27, r1
    15ca:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <encoder_ticks_left>
    15ce:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <encoder_ticks_left+0x1>
    15d2:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <encoder_ticks_left+0x2>
    15d6:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <encoder_ticks_left+0x3>
	}
}
    15da:	ff 91       	pop	r31
    15dc:	ef 91       	pop	r30
    15de:	bf 91       	pop	r27
    15e0:	af 91       	pop	r26
    15e2:	9f 91       	pop	r25
    15e4:	8f 91       	pop	r24
    15e6:	7f 91       	pop	r23
    15e8:	6f 91       	pop	r22
    15ea:	5f 91       	pop	r21
    15ec:	4f 91       	pop	r20
    15ee:	3f 91       	pop	r19
    15f0:	2f 91       	pop	r18
    15f2:	0f 90       	pop	r0
    15f4:	0f be       	out	0x3f, r0	; 63
    15f6:	0f 90       	pop	r0
    15f8:	1f 90       	pop	r1
    15fa:	18 95       	reti

Disassembly of section .text.__vector_2:

000015fc <__vector_2>:

// Interrupt service routine for INT1
// Triggered on rising edge of channel A encoder signal for right wheel
ISR(INT1_vect) {
    15fc:	1f 92       	push	r1
    15fe:	0f 92       	push	r0
    1600:	0f b6       	in	r0, 0x3f	; 63
    1602:	0f 92       	push	r0
    1604:	11 24       	eor	r1, r1
    1606:	2f 93       	push	r18
    1608:	3f 93       	push	r19
    160a:	4f 93       	push	r20
    160c:	5f 93       	push	r21
    160e:	6f 93       	push	r22
    1610:	7f 93       	push	r23
    1612:	8f 93       	push	r24
    1614:	9f 93       	push	r25
    1616:	af 93       	push	r26
    1618:	bf 93       	push	r27
    161a:	ef 93       	push	r30
    161c:	ff 93       	push	r31
	int encb2 = encoder_read_tick(ENCB2);
    161e:	87 e0       	ldi	r24, 0x07	; 7
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	0e 94 61 0f 	call	0x1ec2	; 0x1ec2 <encoder_read_tick>
	if (encb2) {
    1626:	89 2b       	or	r24, r25
    1628:	a1 f0       	breq	.+40     	; 0x1652 <__vector_2+0x56>
		encoder_ticks_right++;
    162a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_right>
    162e:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_right+0x1>
    1632:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <encoder_ticks_right+0x2>
    1636:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <encoder_ticks_right+0x3>
    163a:	01 96       	adiw	r24, 0x01	; 1
    163c:	a1 1d       	adc	r26, r1
    163e:	b1 1d       	adc	r27, r1
    1640:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <encoder_ticks_right>
    1644:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <encoder_ticks_right+0x1>
    1648:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <encoder_ticks_right+0x2>
    164c:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <encoder_ticks_right+0x3>
    1650:	13 c0       	rjmp	.+38     	; 0x1678 <__vector_2+0x7c>
		} 
	else {
		encoder_ticks_right--;
    1652:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_right>
    1656:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_right+0x1>
    165a:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <encoder_ticks_right+0x2>
    165e:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <encoder_ticks_right+0x3>
    1662:	01 97       	sbiw	r24, 0x01	; 1
    1664:	a1 09       	sbc	r26, r1
    1666:	b1 09       	sbc	r27, r1
    1668:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <encoder_ticks_right>
    166c:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <encoder_ticks_right+0x1>
    1670:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <encoder_ticks_right+0x2>
    1674:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <encoder_ticks_right+0x3>
	}
    1678:	ff 91       	pop	r31
    167a:	ef 91       	pop	r30
    167c:	bf 91       	pop	r27
    167e:	af 91       	pop	r26
    1680:	9f 91       	pop	r25
    1682:	8f 91       	pop	r24
    1684:	7f 91       	pop	r23
    1686:	6f 91       	pop	r22
    1688:	5f 91       	pop	r21
    168a:	4f 91       	pop	r20
    168c:	3f 91       	pop	r19
    168e:	2f 91       	pop	r18
    1690:	0f 90       	pop	r0
    1692:	0f be       	out	0x3f, r0	; 63
    1694:	0f 90       	pop	r0
    1696:	1f 90       	pop	r1
    1698:	18 95       	reti

Disassembly of section .text.abs:

00001da6 <abs>:
 *  Author: thoander
 */ 

#include "misc.h"

float abs(float val) {
    1da6:	cf 92       	push	r12
    1da8:	df 92       	push	r13
    1daa:	ef 92       	push	r14
    1dac:	ff 92       	push	r15
    1dae:	6b 01       	movw	r12, r22
    1db0:	7c 01       	movw	r14, r24
	if (val < 0) {
    1db2:	20 e0       	ldi	r18, 0x00	; 0
    1db4:	30 e0       	ldi	r19, 0x00	; 0
    1db6:	a9 01       	movw	r20, r18
    1db8:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__cmpsf2>
    1dbc:	88 23       	and	r24, r24
    1dbe:	24 f4       	brge	.+8      	; 0x1dc8 <abs+0x22>
		return val*(-1.0);
    1dc0:	c7 01       	movw	r24, r14
    1dc2:	b6 01       	movw	r22, r12
    1dc4:	90 58       	subi	r25, 0x80	; 128
    1dc6:	02 c0       	rjmp	.+4      	; 0x1dcc <abs+0x26>
	}
	return val;
    1dc8:	c7 01       	movw	r24, r14
    1dca:	b6 01       	movw	r22, r12
    1dcc:	ff 90       	pop	r15
    1dce:	ef 90       	pop	r14
    1dd0:	df 90       	pop	r13
    1dd2:	cf 90       	pop	r12
    1dd4:	08 95       	ret

Disassembly of section .text.motor_init:

00001ee0 <motor_init>:


void motor_init(void) {
	
	// For motor control
	pwm_init();
    1ee0:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <pwm_init>
	
	// Set direction control pins to L298N as outputs
	DDRC |= (1 << OUT1);
    1ee4:	87 b1       	in	r24, 0x07	; 7
    1ee6:	81 60       	ori	r24, 0x01	; 1
    1ee8:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT2);
    1eea:	87 b1       	in	r24, 0x07	; 7
    1eec:	82 60       	ori	r24, 0x02	; 2
    1eee:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT3);
    1ef0:	87 b1       	in	r24, 0x07	; 7
    1ef2:	84 60       	ori	r24, 0x04	; 4
    1ef4:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT4);
    1ef6:	87 b1       	in	r24, 0x07	; 7
    1ef8:	80 61       	ori	r24, 0x10	; 16
    1efa:	87 b9       	out	0x07, r24	; 7
    1efc:	08 95       	ret

Disassembly of section .text.set_left_motor_dir:

00001ea2 <set_left_motor_dir>:
}

void set_left_motor_dir(int dir) {
	if (dir == FORWARD) {
    1ea2:	01 97       	sbiw	r24, 0x01	; 1
    1ea4:	39 f4       	brne	.+14     	; 0x1eb4 <set_left_motor_dir+0x12>
		PORTC |= (1 << OUT1);
    1ea6:	88 b1       	in	r24, 0x08	; 8
    1ea8:	81 60       	ori	r24, 0x01	; 1
    1eaa:	88 b9       	out	0x08, r24	; 8
		PORTC &= ~(1 << OUT2);
    1eac:	88 b1       	in	r24, 0x08	; 8
    1eae:	8d 7f       	andi	r24, 0xFD	; 253
    1eb0:	88 b9       	out	0x08, r24	; 8
    1eb2:	08 95       	ret
	} else {
		PORTC &= ~(1 << OUT1);
    1eb4:	88 b1       	in	r24, 0x08	; 8
    1eb6:	8e 7f       	andi	r24, 0xFE	; 254
    1eb8:	88 b9       	out	0x08, r24	; 8
		PORTC |= (1 << OUT2);
    1eba:	88 b1       	in	r24, 0x08	; 8
    1ebc:	82 60       	ori	r24, 0x02	; 2
    1ebe:	88 b9       	out	0x08, r24	; 8
    1ec0:	08 95       	ret

Disassembly of section .text.motor_left:

00001c0c <motor_left>:
		PORTC &= ~(1 << OUT3);
		PORTC |= (1 << OUT4);
	}
}

void motor_left(float duty) {
    1c0c:	cf 92       	push	r12
    1c0e:	df 92       	push	r13
    1c10:	ef 92       	push	r14
    1c12:	ff 92       	push	r15
    1c14:	6b 01       	movw	r12, r22
    1c16:	7c 01       	movw	r14, r24
	if (duty < 0) {
    1c18:	20 e0       	ldi	r18, 0x00	; 0
    1c1a:	30 e0       	ldi	r19, 0x00	; 0
    1c1c:	a9 01       	movw	r20, r18
    1c1e:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__cmpsf2>
    1c22:	88 23       	and	r24, r24
    1c24:	2c f4       	brge	.+10     	; 0x1c30 <motor_left+0x24>
		set_left_motor_dir(BACKWARD);
    1c26:	80 e0       	ldi	r24, 0x00	; 0
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	0e 94 51 0f 	call	0x1ea2	; 0x1ea2 <set_left_motor_dir>
    1c2e:	04 c0       	rjmp	.+8      	; 0x1c38 <motor_left+0x2c>
	} else {
		set_left_motor_dir(FORWARD);
    1c30:	81 e0       	ldi	r24, 0x01	; 1
    1c32:	90 e0       	ldi	r25, 0x00	; 0
    1c34:	0e 94 51 0f 	call	0x1ea2	; 0x1ea2 <set_left_motor_dir>
	}
	float abs_duty = abs(duty);
    1c38:	c7 01       	movw	r24, r14
    1c3a:	b6 01       	movw	r22, r12
    1c3c:	0e 94 d3 0e 	call	0x1da6	; 0x1da6 <abs>
	pwm_set_duty_cycle_left(abs_duty);	
    1c40:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <pwm_set_duty_cycle_left>
}
    1c44:	ff 90       	pop	r15
    1c46:	ef 90       	pop	r14
    1c48:	df 90       	pop	r13
    1c4a:	cf 90       	pop	r12
    1c4c:	08 95       	ret

Disassembly of section .text.pwm_init:

00001efe <pwm_init>:
#include "pwm.h"

void pwm_init(void) {
	
	// Set as output (one for each wheel)
	DDRD |= (1 << PWM1);
    1efe:	8a b1       	in	r24, 0x0a	; 10
    1f00:	80 64       	ori	r24, 0x40	; 64
    1f02:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << PWM2);
    1f04:	8a b1       	in	r24, 0x0a	; 10
    1f06:	80 62       	ori	r24, 0x20	; 32
    1f08:	8a b9       	out	0x0a, r24	; 10
	TCCR0B |= (1 << CS02) | (1 << CS00); // 1024 prescalar
	*/
	
	// Phase correct PWM mode
	// PWM frequency will be (with no prescaler) 31kHz (outside audible spectrum)
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00);
    1f0a:	84 b5       	in	r24, 0x24	; 36
    1f0c:	81 6a       	ori	r24, 0xA1	; 161
    1f0e:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS00); // no pre-scaling
    1f10:	85 b5       	in	r24, 0x25	; 37
    1f12:	81 60       	ori	r24, 0x01	; 1
    1f14:	85 bd       	out	0x25, r24	; 37
    1f16:	08 95       	ret

Disassembly of section .text.pwm_set_duty_cycle_left:

00001e32 <pwm_set_duty_cycle_left>:
	
}

void pwm_set_duty_cycle_left(float d) {
	// value should be between 0-255
	float value = d / 100.0 * (255 - MIN_PWM_DUTY_LEFT) + MIN_PWM_DUTY_LEFT;
    1e32:	20 e0       	ldi	r18, 0x00	; 0
    1e34:	30 e0       	ldi	r19, 0x00	; 0
    1e36:	48 ec       	ldi	r20, 0xC8	; 200
    1e38:	52 e4       	ldi	r21, 0x42	; 66
    1e3a:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__divsf3>
    1e3e:	20 e0       	ldi	r18, 0x00	; 0
    1e40:	30 e0       	ldi	r19, 0x00	; 0
    1e42:	40 ef       	ldi	r20, 0xF0	; 240
    1e44:	52 e4       	ldi	r21, 0x42	; 66
    1e46:	0e 94 d1 0f 	call	0x1fa2	; 0x1fa2 <__mulsf3>
    1e4a:	20 e0       	ldi	r18, 0x00	; 0
    1e4c:	30 e0       	ldi	r19, 0x00	; 0
    1e4e:	47 e0       	ldi	r20, 0x07	; 7
    1e50:	53 e4       	ldi	r21, 0x43	; 67
    1e52:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <__addsf3>
	OCR0A = (uint8_t)value;
    1e56:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <__fixunssfsi>
    1e5a:	67 bd       	out	0x27, r22	; 39
    1e5c:	08 95       	ret

Disassembly of section .text.PID_controller_set_parameters:

000017be <PID_controller_set_parameters>:

void PID_controller_set_reference(PID_controller *pid, float ref) {
	pid->reference = ref;
}

void PID_controller_set_parameters(PID_controller *pid, float P, float I, float D, float loop_period) {
    17be:	8f 92       	push	r8
    17c0:	9f 92       	push	r9
    17c2:	af 92       	push	r10
    17c4:	bf 92       	push	r11
    17c6:	cf 92       	push	r12
    17c8:	df 92       	push	r13
    17ca:	ef 92       	push	r14
    17cc:	ff 92       	push	r15
    17ce:	0f 93       	push	r16
    17d0:	1f 93       	push	r17
    17d2:	cf 93       	push	r28
    17d4:	df 93       	push	r29
    17d6:	1f 92       	push	r1
    17d8:	cd b7       	in	r28, 0x3d	; 61
    17da:	de b7       	in	r29, 0x3e	; 62
    17dc:	fc 01       	movw	r30, r24
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    17de:	8f b7       	in	r24, 0x3f	; 63
    17e0:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    17e2:	f8 94       	cli
    17e4:	81 e0       	ldi	r24, 0x01	; 1
    17e6:	11 c0       	rjmp	.+34     	; 0x180a <PID_controller_set_parameters+0x4c>
		pid->Kp = P;
    17e8:	44 8b       	std	Z+20, r20	; 0x14
    17ea:	55 8b       	std	Z+21, r21	; 0x15
    17ec:	66 8b       	std	Z+22, r22	; 0x16
    17ee:	77 8b       	std	Z+23, r23	; 0x17
		pid->Ki = I;
    17f0:	00 8f       	std	Z+24, r16	; 0x18
    17f2:	11 8f       	std	Z+25, r17	; 0x19
    17f4:	22 8f       	std	Z+26, r18	; 0x1a
    17f6:	33 8f       	std	Z+27, r19	; 0x1b
		pid->Kd = D;
    17f8:	c4 8e       	std	Z+28, r12	; 0x1c
    17fa:	d5 8e       	std	Z+29, r13	; 0x1d
    17fc:	e6 8e       	std	Z+30, r14	; 0x1e
    17fe:	f7 8e       	std	Z+31, r15	; 0x1f
		pid->loop_period = loop_period;
    1800:	80 a2       	std	Z+32, r8	; 0x20
    1802:	91 a2       	std	Z+33, r9	; 0x21
    1804:	a2 a2       	std	Z+34, r10	; 0x22
    1806:	b3 a2       	std	Z+35, r11	; 0x23
void PID_controller_set_reference(PID_controller *pid, float ref) {
	pid->reference = ref;
}

void PID_controller_set_parameters(PID_controller *pid, float P, float I, float D, float loop_period) {
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1808:	80 e0       	ldi	r24, 0x00	; 0
    180a:	81 11       	cpse	r24, r1
    180c:	ed cf       	rjmp	.-38     	; 0x17e8 <PID_controller_set_parameters+0x2a>
    180e:	ce 01       	movw	r24, r28
    1810:	01 96       	adiw	r24, 0x01	; 1
    1812:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1814:	fc 01       	movw	r30, r24
    1816:	84 91       	lpm	r24, Z
    1818:	a7 fd       	sbrc	r26, 7
    181a:	80 81       	ld	r24, Z
    181c:	8f bf       	out	0x3f, r24	; 63
		pid->Kp = P;
		pid->Ki = I;
		pid->Kd = D;
		pid->loop_period = loop_period;
	}
}
    181e:	0f 90       	pop	r0
    1820:	df 91       	pop	r29
    1822:	cf 91       	pop	r28
    1824:	1f 91       	pop	r17
    1826:	0f 91       	pop	r16
    1828:	ff 90       	pop	r15
    182a:	ef 90       	pop	r14
    182c:	df 90       	pop	r13
    182e:	cf 90       	pop	r12
    1830:	bf 90       	pop	r11
    1832:	af 90       	pop	r10
    1834:	9f 90       	pop	r9
    1836:	8f 90       	pop	r8
    1838:	08 95       	ret

Disassembly of section .text.PID_controller_init:

0000199e <PID_controller_init>:

void PID_controller_init(PID_controller *pid) {
    199e:	fc 01       	movw	r30, r24
	pid->Kp = 0.0;
    19a0:	14 8a       	std	Z+20, r1	; 0x14
    19a2:	15 8a       	std	Z+21, r1	; 0x15
    19a4:	16 8a       	std	Z+22, r1	; 0x16
    19a6:	17 8a       	std	Z+23, r1	; 0x17
	pid->Ki = 0.0;
    19a8:	10 8e       	std	Z+24, r1	; 0x18
    19aa:	11 8e       	std	Z+25, r1	; 0x19
    19ac:	12 8e       	std	Z+26, r1	; 0x1a
    19ae:	13 8e       	std	Z+27, r1	; 0x1b
	pid->Kp = 0.0;
	pid->loop_period = 0.0;
    19b0:	10 a2       	std	Z+32, r1	; 0x20
    19b2:	11 a2       	std	Z+33, r1	; 0x21
    19b4:	12 a2       	std	Z+34, r1	; 0x22
    19b6:	13 a2       	std	Z+35, r1	; 0x23
	pid->reference = 0.0;
    19b8:	10 82       	st	Z, r1
    19ba:	11 82       	std	Z+1, r1	; 0x01
    19bc:	12 82       	std	Z+2, r1	; 0x02
    19be:	13 82       	std	Z+3, r1	; 0x03
	pid->prev_reference = 0.0;
    19c0:	14 82       	std	Z+4, r1	; 0x04
    19c2:	15 82       	std	Z+5, r1	; 0x05
    19c4:	16 82       	std	Z+6, r1	; 0x06
    19c6:	17 82       	std	Z+7, r1	; 0x07
	pid->error = 0.0;
    19c8:	10 86       	std	Z+8, r1	; 0x08
    19ca:	11 86       	std	Z+9, r1	; 0x09
    19cc:	12 86       	std	Z+10, r1	; 0x0a
    19ce:	13 86       	std	Z+11, r1	; 0x0b
	pid->prev_error = 0.0;
    19d0:	14 86       	std	Z+12, r1	; 0x0c
    19d2:	15 86       	std	Z+13, r1	; 0x0d
    19d4:	16 86       	std	Z+14, r1	; 0x0e
    19d6:	17 86       	std	Z+15, r1	; 0x0f
	pid->integral_error = 0.0;
    19d8:	10 8a       	std	Z+16, r1	; 0x10
    19da:	11 8a       	std	Z+17, r1	; 0x11
    19dc:	12 8a       	std	Z+18, r1	; 0x12
    19de:	13 8a       	std	Z+19, r1	; 0x13
	pid->max_control_action = 100;
    19e0:	80 e0       	ldi	r24, 0x00	; 0
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	a8 ec       	ldi	r26, 0xC8	; 200
    19e6:	b2 e4       	ldi	r27, 0x42	; 66
    19e8:	84 a3       	std	Z+36, r24	; 0x24
    19ea:	95 a3       	std	Z+37, r25	; 0x25
    19ec:	a6 a3       	std	Z+38, r26	; 0x26
    19ee:	b7 a3       	std	Z+39, r27	; 0x27
	pid->min_control_action = -100; 
    19f0:	80 e0       	ldi	r24, 0x00	; 0
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	a8 ec       	ldi	r26, 0xC8	; 200
    19f6:	b2 ec       	ldi	r27, 0xC2	; 194
    19f8:	80 a7       	std	Z+40, r24	; 0x28
    19fa:	91 a7       	std	Z+41, r25	; 0x29
    19fc:	a2 a7       	std	Z+42, r26	; 0x2a
    19fe:	b3 a7       	std	Z+43, r27	; 0x2b
    1a00:	08 95       	ret

Disassembly of section .text.PID_controller_get_control_action:

00000936 <PID_controller_get_control_action>:
float Kd = 0.0;



void PID_controller_set_reference(PID_controller *pid, float ref) {
	pid->reference = ref;
 936:	4f 92       	push	r4
 938:	5f 92       	push	r5
 93a:	6f 92       	push	r6
 93c:	7f 92       	push	r7
 93e:	8f 92       	push	r8
 940:	9f 92       	push	r9
 942:	af 92       	push	r10
 944:	bf 92       	push	r11
 946:	cf 92       	push	r12
 948:	df 92       	push	r13
 94a:	ef 92       	push	r14
 94c:	ff 92       	push	r15
 94e:	cf 93       	push	r28
 950:	df 93       	push	r29
 952:	cd b7       	in	r28, 0x3d	; 61
 954:	de b7       	in	r29, 0x3e	; 62
 956:	62 97       	sbiw	r28, 0x12	; 18
 958:	0f b6       	in	r0, 0x3f	; 63
 95a:	f8 94       	cli
 95c:	de bf       	out	0x3e, r29	; 62
 95e:	0f be       	out	0x3f, r0	; 63
 960:	cd bf       	out	0x3d, r28	; 61
 962:	9a 8b       	std	Y+18, r25	; 0x12
 964:	89 8b       	std	Y+17, r24	; 0x11
 966:	6a 01       	movw	r12, r20
 968:	7b 01       	movw	r14, r22
 96a:	dc 01       	movw	r26, r24
 96c:	90 96       	adiw	r26, 0x20	; 32
 96e:	8d 91       	ld	r24, X+
 970:	9d 91       	ld	r25, X+
 972:	0d 90       	ld	r0, X+
 974:	bc 91       	ld	r27, X
 976:	a0 2d       	mov	r26, r0
 978:	89 83       	std	Y+1, r24	; 0x01
 97a:	9a 83       	std	Y+2, r25	; 0x02
 97c:	ab 83       	std	Y+3, r26	; 0x03
 97e:	bc 83       	std	Y+4, r27	; 0x04
 980:	9a 01       	movw	r18, r20
 982:	ab 01       	movw	r20, r22
 984:	bc 01       	movw	r22, r24
 986:	cd 01       	movw	r24, r26
 988:	0e 94 d1 0f 	call	0x1fa2	; 0x1fa2 <__mulsf3>
 98c:	e9 89       	ldd	r30, Y+17	; 0x11
 98e:	fa 89       	ldd	r31, Y+18	; 0x12
 990:	20 89       	ldd	r18, Z+16	; 0x10
 992:	31 89       	ldd	r19, Z+17	; 0x11
 994:	42 89       	ldd	r20, Z+18	; 0x12
 996:	53 89       	ldd	r21, Z+19	; 0x13
 998:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <__addsf3>
 99c:	6d 83       	std	Y+5, r22	; 0x05
 99e:	7e 83       	std	Y+6, r23	; 0x06
 9a0:	8f 83       	std	Y+7, r24	; 0x07
 9a2:	98 87       	std	Y+8, r25	; 0x08
 9a4:	a9 89       	ldd	r26, Y+17	; 0x11
 9a6:	ba 89       	ldd	r27, Y+18	; 0x12
 9a8:	50 96       	adiw	r26, 0x10	; 16
 9aa:	6d 93       	st	X+, r22
 9ac:	7d 93       	st	X+, r23
 9ae:	8d 93       	st	X+, r24
 9b0:	9c 93       	st	X, r25
 9b2:	53 97       	sbiw	r26, 0x13	; 19
 9b4:	54 96       	adiw	r26, 0x14	; 20
 9b6:	2d 91       	ld	r18, X+
 9b8:	3d 91       	ld	r19, X+
 9ba:	4d 91       	ld	r20, X+
 9bc:	5c 91       	ld	r21, X
 9be:	57 97       	sbiw	r26, 0x17	; 23
 9c0:	c7 01       	movw	r24, r14
 9c2:	b6 01       	movw	r22, r12
 9c4:	0e 94 d1 0f 	call	0x1fa2	; 0x1fa2 <__mulsf3>
 9c8:	6d 87       	std	Y+13, r22	; 0x0d
 9ca:	7e 87       	std	Y+14, r23	; 0x0e
 9cc:	8f 87       	std	Y+15, r24	; 0x0f
 9ce:	98 8b       	std	Y+16, r25	; 0x10
 9d0:	a9 89       	ldd	r26, Y+17	; 0x11
 9d2:	ba 89       	ldd	r27, Y+18	; 0x12
 9d4:	58 96       	adiw	r26, 0x18	; 24
 9d6:	8d 91       	ld	r24, X+
 9d8:	9d 91       	ld	r25, X+
 9da:	0d 90       	ld	r0, X+
 9dc:	bc 91       	ld	r27, X
 9de:	a0 2d       	mov	r26, r0
 9e0:	89 87       	std	Y+9, r24	; 0x09
 9e2:	9a 87       	std	Y+10, r25	; 0x0a
 9e4:	ab 87       	std	Y+11, r26	; 0x0b
 9e6:	bc 87       	std	Y+12, r27	; 0x0c
 9e8:	9c 01       	movw	r18, r24
 9ea:	ad 01       	movw	r20, r26
 9ec:	6d 81       	ldd	r22, Y+5	; 0x05
 9ee:	7e 81       	ldd	r23, Y+6	; 0x06
 9f0:	8f 81       	ldd	r24, Y+7	; 0x07
 9f2:	98 85       	ldd	r25, Y+8	; 0x08
 9f4:	0e 94 d1 0f 	call	0x1fa2	; 0x1fa2 <__mulsf3>
 9f8:	2b 01       	movw	r4, r22
 9fa:	3c 01       	movw	r6, r24
 9fc:	e9 89       	ldd	r30, Y+17	; 0x11
 9fe:	fa 89       	ldd	r31, Y+18	; 0x12
 a00:	84 8c       	ldd	r8, Z+28	; 0x1c
 a02:	95 8c       	ldd	r9, Z+29	; 0x1d
 a04:	a6 8c       	ldd	r10, Z+30	; 0x1e
 a06:	b7 8c       	ldd	r11, Z+31	; 0x1f
 a08:	24 85       	ldd	r18, Z+12	; 0x0c
 a0a:	35 85       	ldd	r19, Z+13	; 0x0d
 a0c:	46 85       	ldd	r20, Z+14	; 0x0e
 a0e:	57 85       	ldd	r21, Z+15	; 0x0f
 a10:	c7 01       	movw	r24, r14
 a12:	b6 01       	movw	r22, r12
 a14:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__subsf3>
 a18:	9b 01       	movw	r18, r22
 a1a:	ac 01       	movw	r20, r24
 a1c:	c5 01       	movw	r24, r10
 a1e:	b4 01       	movw	r22, r8
 a20:	0e 94 d1 0f 	call	0x1fa2	; 0x1fa2 <__mulsf3>
 a24:	29 81       	ldd	r18, Y+1	; 0x01
 a26:	3a 81       	ldd	r19, Y+2	; 0x02
 a28:	4b 81       	ldd	r20, Y+3	; 0x03
 a2a:	5c 81       	ldd	r21, Y+4	; 0x04
 a2c:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__divsf3>
 a30:	4b 01       	movw	r8, r22
 a32:	5c 01       	movw	r10, r24
 a34:	a3 01       	movw	r20, r6
 a36:	92 01       	movw	r18, r4
 a38:	6d 85       	ldd	r22, Y+13	; 0x0d
 a3a:	7e 85       	ldd	r23, Y+14	; 0x0e
 a3c:	8f 85       	ldd	r24, Y+15	; 0x0f
 a3e:	98 89       	ldd	r25, Y+16	; 0x10
 a40:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <__addsf3>
 a44:	9b 01       	movw	r18, r22
 a46:	ac 01       	movw	r20, r24
 a48:	c5 01       	movw	r24, r10
 a4a:	b4 01       	movw	r22, r8
 a4c:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <__addsf3>
 a50:	b6 2e       	mov	r11, r22
 a52:	a7 2e       	mov	r10, r23
 a54:	98 2e       	mov	r9, r24
 a56:	89 2e       	mov	r8, r25
 a58:	a9 89       	ldd	r26, Y+17	; 0x11
 a5a:	ba 89       	ldd	r27, Y+18	; 0x12
 a5c:	94 96       	adiw	r26, 0x24	; 36
 a5e:	7c 90       	ld	r7, X
 a60:	94 97       	sbiw	r26, 0x24	; 36
 a62:	95 96       	adiw	r26, 0x25	; 37
 a64:	6c 90       	ld	r6, X
 a66:	95 97       	sbiw	r26, 0x25	; 37
 a68:	96 96       	adiw	r26, 0x26	; 38
 a6a:	5c 90       	ld	r5, X
 a6c:	96 97       	sbiw	r26, 0x26	; 38
 a6e:	97 96       	adiw	r26, 0x27	; 39
 a70:	4c 90       	ld	r4, X
 a72:	27 2d       	mov	r18, r7
 a74:	36 2d       	mov	r19, r6
 a76:	45 2d       	mov	r20, r5
 a78:	54 2d       	mov	r21, r4
 a7a:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__gesf2>
 a7e:	18 16       	cp	r1, r24
 a80:	dc f5       	brge	.+118    	; 0xaf8 <PID_controller_get_control_action+0x1c2>
 a82:	20 e0       	ldi	r18, 0x00	; 0
 a84:	30 e0       	ldi	r19, 0x00	; 0
 a86:	a9 01       	movw	r20, r18
 a88:	69 85       	ldd	r22, Y+9	; 0x09
 a8a:	7a 85       	ldd	r23, Y+10	; 0x0a
 a8c:	8b 85       	ldd	r24, Y+11	; 0x0b
 a8e:	9c 85       	ldd	r25, Y+12	; 0x0c
 a90:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__cmpsf2>
 a94:	88 23       	and	r24, r24
 a96:	09 f4       	brne	.+2      	; 0xa9a <PID_controller_get_control_action+0x164>
 a98:	86 c0       	rjmp	.+268    	; 0xba6 <PID_controller_get_control_action+0x270>
 a9a:	29 85       	ldd	r18, Y+9	; 0x09
 a9c:	3a 85       	ldd	r19, Y+10	; 0x0a
 a9e:	4b 85       	ldd	r20, Y+11	; 0x0b
 aa0:	5c 85       	ldd	r21, Y+12	; 0x0c
 aa2:	69 81       	ldd	r22, Y+1	; 0x01
 aa4:	7a 81       	ldd	r23, Y+2	; 0x02
 aa6:	8b 81       	ldd	r24, Y+3	; 0x03
 aa8:	9c 81       	ldd	r25, Y+4	; 0x04
 aaa:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__divsf3>
 aae:	69 83       	std	Y+1, r22	; 0x01
 ab0:	7a 83       	std	Y+2, r23	; 0x02
 ab2:	8b 83       	std	Y+3, r24	; 0x03
 ab4:	9c 83       	std	Y+4, r25	; 0x04
 ab6:	2b 2d       	mov	r18, r11
 ab8:	3a 2d       	mov	r19, r10
 aba:	49 2d       	mov	r20, r9
 abc:	58 2d       	mov	r21, r8
 abe:	67 2d       	mov	r22, r7
 ac0:	76 2d       	mov	r23, r6
 ac2:	85 2d       	mov	r24, r5
 ac4:	94 2d       	mov	r25, r4
 ac6:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__subsf3>
 aca:	9b 01       	movw	r18, r22
 acc:	ac 01       	movw	r20, r24
 ace:	69 81       	ldd	r22, Y+1	; 0x01
 ad0:	7a 81       	ldd	r23, Y+2	; 0x02
 ad2:	8b 81       	ldd	r24, Y+3	; 0x03
 ad4:	9c 81       	ldd	r25, Y+4	; 0x04
 ad6:	0e 94 d1 0f 	call	0x1fa2	; 0x1fa2 <__mulsf3>
 ada:	9b 01       	movw	r18, r22
 adc:	ac 01       	movw	r20, r24
 ade:	6d 81       	ldd	r22, Y+5	; 0x05
 ae0:	7e 81       	ldd	r23, Y+6	; 0x06
 ae2:	8f 81       	ldd	r24, Y+7	; 0x07
 ae4:	98 85       	ldd	r25, Y+8	; 0x08
 ae6:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__subsf3>
 aea:	e9 89       	ldd	r30, Y+17	; 0x11
 aec:	fa 89       	ldd	r31, Y+18	; 0x12
 aee:	60 8b       	std	Z+16, r22	; 0x10
 af0:	71 8b       	std	Z+17, r23	; 0x11
 af2:	82 8b       	std	Z+18, r24	; 0x12
 af4:	93 8b       	std	Z+19, r25	; 0x13
 af6:	57 c0       	rjmp	.+174    	; 0xba6 <PID_controller_get_control_action+0x270>
 af8:	a9 89       	ldd	r26, Y+17	; 0x11
 afa:	ba 89       	ldd	r27, Y+18	; 0x12
 afc:	98 96       	adiw	r26, 0x28	; 40
 afe:	7c 90       	ld	r7, X
 b00:	98 97       	sbiw	r26, 0x28	; 40
 b02:	99 96       	adiw	r26, 0x29	; 41
 b04:	6c 90       	ld	r6, X
 b06:	99 97       	sbiw	r26, 0x29	; 41
 b08:	9a 96       	adiw	r26, 0x2a	; 42
 b0a:	5c 90       	ld	r5, X
 b0c:	9a 97       	sbiw	r26, 0x2a	; 42
 b0e:	9b 96       	adiw	r26, 0x2b	; 43
 b10:	4c 90       	ld	r4, X
 b12:	27 2d       	mov	r18, r7
 b14:	36 2d       	mov	r19, r6
 b16:	45 2d       	mov	r20, r5
 b18:	54 2d       	mov	r21, r4
 b1a:	6b 2d       	mov	r22, r11
 b1c:	7a 2d       	mov	r23, r10
 b1e:	89 2d       	mov	r24, r9
 b20:	98 2d       	mov	r25, r8
 b22:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__cmpsf2>
 b26:	88 23       	and	r24, r24
 b28:	d4 f5       	brge	.+116    	; 0xb9e <PID_controller_get_control_action+0x268>
 b2a:	20 e0       	ldi	r18, 0x00	; 0
 b2c:	30 e0       	ldi	r19, 0x00	; 0
 b2e:	a9 01       	movw	r20, r18
 b30:	69 85       	ldd	r22, Y+9	; 0x09
 b32:	7a 85       	ldd	r23, Y+10	; 0x0a
 b34:	8b 85       	ldd	r24, Y+11	; 0x0b
 b36:	9c 85       	ldd	r25, Y+12	; 0x0c
 b38:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__cmpsf2>
 b3c:	88 23       	and	r24, r24
 b3e:	99 f1       	breq	.+102    	; 0xba6 <PID_controller_get_control_action+0x270>
 b40:	29 85       	ldd	r18, Y+9	; 0x09
 b42:	3a 85       	ldd	r19, Y+10	; 0x0a
 b44:	4b 85       	ldd	r20, Y+11	; 0x0b
 b46:	5c 85       	ldd	r21, Y+12	; 0x0c
 b48:	69 81       	ldd	r22, Y+1	; 0x01
 b4a:	7a 81       	ldd	r23, Y+2	; 0x02
 b4c:	8b 81       	ldd	r24, Y+3	; 0x03
 b4e:	9c 81       	ldd	r25, Y+4	; 0x04
 b50:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__divsf3>
 b54:	69 83       	std	Y+1, r22	; 0x01
 b56:	7a 83       	std	Y+2, r23	; 0x02
 b58:	8b 83       	std	Y+3, r24	; 0x03
 b5a:	9c 83       	std	Y+4, r25	; 0x04
 b5c:	2b 2d       	mov	r18, r11
 b5e:	3a 2d       	mov	r19, r10
 b60:	49 2d       	mov	r20, r9
 b62:	58 2d       	mov	r21, r8
 b64:	67 2d       	mov	r22, r7
 b66:	76 2d       	mov	r23, r6
 b68:	85 2d       	mov	r24, r5
 b6a:	94 2d       	mov	r25, r4
 b6c:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__subsf3>
 b70:	9b 01       	movw	r18, r22
 b72:	ac 01       	movw	r20, r24
 b74:	69 81       	ldd	r22, Y+1	; 0x01
 b76:	7a 81       	ldd	r23, Y+2	; 0x02
 b78:	8b 81       	ldd	r24, Y+3	; 0x03
 b7a:	9c 81       	ldd	r25, Y+4	; 0x04
 b7c:	0e 94 d1 0f 	call	0x1fa2	; 0x1fa2 <__mulsf3>
 b80:	9b 01       	movw	r18, r22
 b82:	ac 01       	movw	r20, r24
 b84:	6d 81       	ldd	r22, Y+5	; 0x05
 b86:	7e 81       	ldd	r23, Y+6	; 0x06
 b88:	8f 81       	ldd	r24, Y+7	; 0x07
 b8a:	98 85       	ldd	r25, Y+8	; 0x08
 b8c:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__subsf3>
 b90:	e9 89       	ldd	r30, Y+17	; 0x11
 b92:	fa 89       	ldd	r31, Y+18	; 0x12
 b94:	60 8b       	std	Z+16, r22	; 0x10
 b96:	71 8b       	std	Z+17, r23	; 0x11
 b98:	82 8b       	std	Z+18, r24	; 0x12
 b9a:	93 8b       	std	Z+19, r25	; 0x13
 b9c:	04 c0       	rjmp	.+8      	; 0xba6 <PID_controller_get_control_action+0x270>
 b9e:	7b 2c       	mov	r7, r11
 ba0:	6a 2c       	mov	r6, r10
 ba2:	59 2c       	mov	r5, r9
 ba4:	48 2c       	mov	r4, r8
 ba6:	a9 89       	ldd	r26, Y+17	; 0x11
 ba8:	ba 89       	ldd	r27, Y+18	; 0x12
 baa:	1c 96       	adiw	r26, 0x0c	; 12
 bac:	cd 92       	st	X+, r12
 bae:	dd 92       	st	X+, r13
 bb0:	ed 92       	st	X+, r14
 bb2:	fc 92       	st	X, r15
 bb4:	1f 97       	sbiw	r26, 0x0f	; 15
 bb6:	fd 01       	movw	r30, r26
 bb8:	80 81       	ld	r24, Z
 bba:	91 81       	ldd	r25, Z+1	; 0x01
 bbc:	a2 81       	ldd	r26, Z+2	; 0x02
 bbe:	b3 81       	ldd	r27, Z+3	; 0x03
 bc0:	84 83       	std	Z+4, r24	; 0x04
 bc2:	95 83       	std	Z+5, r25	; 0x05
 bc4:	a6 83       	std	Z+6, r26	; 0x06
 bc6:	b7 83       	std	Z+7, r27	; 0x07
 bc8:	67 2d       	mov	r22, r7
 bca:	76 2d       	mov	r23, r6
 bcc:	85 2d       	mov	r24, r5
 bce:	94 2d       	mov	r25, r4
 bd0:	62 96       	adiw	r28, 0x12	; 18
 bd2:	0f b6       	in	r0, 0x3f	; 63
 bd4:	f8 94       	cli
 bd6:	de bf       	out	0x3e, r29	; 62
 bd8:	0f be       	out	0x3f, r0	; 63
 bda:	cd bf       	out	0x3d, r28	; 61
 bdc:	df 91       	pop	r29
 bde:	cf 91       	pop	r28
 be0:	ff 90       	pop	r15
 be2:	ef 90       	pop	r14
 be4:	df 90       	pop	r13
 be6:	cf 90       	pop	r12
 be8:	bf 90       	pop	r11
 bea:	af 90       	pop	r10
 bec:	9f 90       	pop	r9
 bee:	8f 90       	pop	r8
 bf0:	7f 90       	pop	r7
 bf2:	6f 90       	pop	r6
 bf4:	5f 90       	pop	r5
 bf6:	4f 90       	pop	r4
 bf8:	08 95       	ret

Disassembly of section .text.speed_estimator_init:

0000192c <speed_estimator_init>:
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
		rad_per_s = rad_per_s_right;
	}
	return rad_per_s;
}
    192c:	cf 93       	push	r28
    192e:	df 93       	push	r29
    1930:	1f 92       	push	r1
    1932:	cd b7       	in	r28, 0x3d	; 61
    1934:	de b7       	in	r29, 0x3e	; 62
    1936:	0e 94 eb 0e 	call	0x1dd6	; 0x1dd6 <encoder_init>
    193a:	8f b7       	in	r24, 0x3f	; 63
    193c:	89 83       	std	Y+1, r24	; 0x01
    193e:	f8 94       	cli
    1940:	81 e0       	ldi	r24, 0x01	; 1
    1942:	0d c0       	rjmp	.+26     	; 0x195e <speed_estimator_init+0x32>
    1944:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <encoder_get_accumulated_ticks_right>
    1948:	70 93 2d 01 	sts	0x012D, r23	; 0x80012d <ticks_right+0x1>
    194c:	60 93 2c 01 	sts	0x012C, r22	; 0x80012c <ticks_right>
    1950:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <encoder_get_accumulated_ticks_left>
    1954:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <ticks_left+0x1>
    1958:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <ticks_left>
    195c:	80 e0       	ldi	r24, 0x00	; 0
    195e:	81 11       	cpse	r24, r1
    1960:	f1 cf       	rjmp	.-30     	; 0x1944 <speed_estimator_init+0x18>
    1962:	ce 01       	movw	r24, r28
    1964:	01 96       	adiw	r24, 0x01	; 1
    1966:	a0 e8       	ldi	r26, 0x80	; 128
    1968:	fc 01       	movw	r30, r24
    196a:	84 91       	lpm	r24, Z
    196c:	a7 fd       	sbrc	r26, 7
    196e:	80 81       	ld	r24, Z
    1970:	8f bf       	out	0x3f, r24	; 63
    1972:	f8 94       	cli
    1974:	84 e0       	ldi	r24, 0x04	; 4
    1976:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    197a:	81 ee       	ldi	r24, 0xE1	; 225
    197c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1980:	e1 e8       	ldi	r30, 0x81	; 129
    1982:	f0 e0       	ldi	r31, 0x00	; 0
    1984:	80 81       	ld	r24, Z
    1986:	8c 60       	ori	r24, 0x0C	; 12
    1988:	80 83       	st	Z, r24
    198a:	ef e6       	ldi	r30, 0x6F	; 111
    198c:	f0 e0       	ldi	r31, 0x00	; 0
    198e:	80 81       	ld	r24, Z
    1990:	82 60       	ori	r24, 0x02	; 2
    1992:	80 83       	st	Z, r24
    1994:	78 94       	sei
    1996:	0f 90       	pop	r0
    1998:	df 91       	pop	r29
    199a:	cf 91       	pop	r28
    199c:	08 95       	ret

Disassembly of section .text.speed_estimator_left_rad_per_s:

00001b82 <speed_estimator_left_rad_per_s>:

float speed_estimator_left_rad_per_s() {
    1b82:	cf 93       	push	r28
    1b84:	df 93       	push	r29
    1b86:	1f 92       	push	r1
    1b88:	cd b7       	in	r28, 0x3d	; 61
    1b8a:	de b7       	in	r29, 0x3e	; 62
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1b8c:	8f b7       	in	r24, 0x3f	; 63
    1b8e:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1b90:	f8 94       	cli
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	09 c0       	rjmp	.+18     	; 0x1ba8 <speed_estimator_left_rad_per_s+0x26>
		rad_per_s = rad_per_s_left;
    1b96:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <rad_per_s_left>
    1b9a:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <rad_per_s_left+0x1>
    1b9e:	60 91 20 01 	lds	r22, 0x0120	; 0x800120 <rad_per_s_left+0x2>
    1ba2:	70 91 21 01 	lds	r23, 0x0121	; 0x800121 <rad_per_s_left+0x3>
	return rad_per_s;
}

float speed_estimator_left_rad_per_s() {
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1ba6:	80 e0       	ldi	r24, 0x00	; 0
    1ba8:	81 11       	cpse	r24, r1
    1baa:	f5 cf       	rjmp	.-22     	; 0x1b96 <speed_estimator_left_rad_per_s+0x14>
    1bac:	ce 01       	movw	r24, r28
    1bae:	01 96       	adiw	r24, 0x01	; 1
    1bb0:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1bb2:	fc 01       	movw	r30, r24
    1bb4:	84 91       	lpm	r24, Z
    1bb6:	a7 fd       	sbrc	r26, 7
    1bb8:	80 81       	ld	r24, Z
    1bba:	8f bf       	out	0x3f, r24	; 63
		rad_per_s = rad_per_s_left;
	}
	return rad_per_s;
}
    1bbc:	cb 01       	movw	r24, r22
    1bbe:	ba 01       	movw	r22, r20
    1bc0:	0f 90       	pop	r0
    1bc2:	df 91       	pop	r29
    1bc4:	cf 91       	pop	r28
    1bc6:	08 95       	ret

Disassembly of section .text.__vector_11:

00000fec <__vector_11>:
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
		rad_per_s = rad_per_s_right;
	}
	return rad_per_s;
}
     fec:	1f 92       	push	r1
     fee:	0f 92       	push	r0
     ff0:	0f b6       	in	r0, 0x3f	; 63
     ff2:	0f 92       	push	r0
     ff4:	11 24       	eor	r1, r1
     ff6:	cf 92       	push	r12
     ff8:	df 92       	push	r13
     ffa:	ef 92       	push	r14
     ffc:	ff 92       	push	r15
     ffe:	2f 93       	push	r18
    1000:	3f 93       	push	r19
    1002:	4f 93       	push	r20
    1004:	5f 93       	push	r21
    1006:	6f 93       	push	r22
    1008:	7f 93       	push	r23
    100a:	8f 93       	push	r24
    100c:	9f 93       	push	r25
    100e:	af 93       	push	r26
    1010:	bf 93       	push	r27
    1012:	ef 93       	push	r30
    1014:	ff 93       	push	r31
    1016:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <ticks_right>
    101a:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <ticks_right+0x1>
    101e:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <prev_ticks_right+0x1>
    1022:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <prev_ticks_right>
    1026:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <encoder_get_accumulated_ticks_right>
    102a:	70 93 2d 01 	sts	0x012D, r23	; 0x80012d <ticks_right+0x1>
    102e:	60 93 2c 01 	sts	0x012C, r22	; 0x80012c <ticks_right>
    1032:	60 91 2c 01 	lds	r22, 0x012C	; 0x80012c <ticks_right>
    1036:	70 91 2d 01 	lds	r23, 0x012D	; 0x80012d <ticks_right+0x1>
    103a:	07 2e       	mov	r0, r23
    103c:	00 0c       	add	r0, r0
    103e:	88 0b       	sbc	r24, r24
    1040:	99 0b       	sbc	r25, r25
    1042:	0e 94 1f 0c 	call	0x183e	; 0x183e <__floatsisf>
    1046:	6b 01       	movw	r12, r22
    1048:	7c 01       	movw	r14, r24
    104a:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <prev_ticks_right>
    104e:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <prev_ticks_right+0x1>
    1052:	07 2e       	mov	r0, r23
    1054:	00 0c       	add	r0, r0
    1056:	88 0b       	sbc	r24, r24
    1058:	99 0b       	sbc	r25, r25
    105a:	0e 94 1f 0c 	call	0x183e	; 0x183e <__floatsisf>
    105e:	9b 01       	movw	r18, r22
    1060:	ac 01       	movw	r20, r24
    1062:	c7 01       	movw	r24, r14
    1064:	b6 01       	movw	r22, r12
    1066:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__subsf3>
    106a:	2b ed       	ldi	r18, 0xDB	; 219
    106c:	3f e0       	ldi	r19, 0x0F	; 15
    106e:	49 ec       	ldi	r20, 0xC9	; 201
    1070:	50 e4       	ldi	r21, 0x40	; 64
    1072:	0e 94 d1 0f 	call	0x1fa2	; 0x1fa2 <__mulsf3>
    1076:	20 e0       	ldi	r18, 0x00	; 0
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	48 e8       	ldi	r20, 0x88	; 136
    107c:	51 e4       	ldi	r21, 0x41	; 65
    107e:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__divsf3>
    1082:	60 93 1a 01 	sts	0x011A, r22	; 0x80011a <rad_per_s_right>
    1086:	70 93 1b 01 	sts	0x011B, r23	; 0x80011b <rad_per_s_right+0x1>
    108a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <rad_per_s_right+0x2>
    108e:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <rad_per_s_right+0x3>
    1092:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <ticks_left>
    1096:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <ticks_left+0x1>
    109a:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <prev_ticks_left+0x1>
    109e:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <prev_ticks_left>
    10a2:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <encoder_get_accumulated_ticks_left>
    10a6:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <ticks_left+0x1>
    10aa:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <ticks_left>
    10ae:	60 91 2a 01 	lds	r22, 0x012A	; 0x80012a <ticks_left>
    10b2:	70 91 2b 01 	lds	r23, 0x012B	; 0x80012b <ticks_left+0x1>
    10b6:	07 2e       	mov	r0, r23
    10b8:	00 0c       	add	r0, r0
    10ba:	88 0b       	sbc	r24, r24
    10bc:	99 0b       	sbc	r25, r25
    10be:	0e 94 1f 0c 	call	0x183e	; 0x183e <__floatsisf>
    10c2:	6b 01       	movw	r12, r22
    10c4:	7c 01       	movw	r14, r24
    10c6:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <prev_ticks_left>
    10ca:	70 91 27 01 	lds	r23, 0x0127	; 0x800127 <prev_ticks_left+0x1>
    10ce:	07 2e       	mov	r0, r23
    10d0:	00 0c       	add	r0, r0
    10d2:	88 0b       	sbc	r24, r24
    10d4:	99 0b       	sbc	r25, r25
    10d6:	0e 94 1f 0c 	call	0x183e	; 0x183e <__floatsisf>
    10da:	9b 01       	movw	r18, r22
    10dc:	ac 01       	movw	r20, r24
    10de:	c7 01       	movw	r24, r14
    10e0:	b6 01       	movw	r22, r12
    10e2:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__subsf3>
    10e6:	2b ed       	ldi	r18, 0xDB	; 219
    10e8:	3f e0       	ldi	r19, 0x0F	; 15
    10ea:	49 ec       	ldi	r20, 0xC9	; 201
    10ec:	50 e4       	ldi	r21, 0x40	; 64
    10ee:	0e 94 d1 0f 	call	0x1fa2	; 0x1fa2 <__mulsf3>
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	48 e8       	ldi	r20, 0x88	; 136
    10f8:	51 e4       	ldi	r21, 0x41	; 65
    10fa:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__divsf3>
    10fe:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <rad_per_s_left>
    1102:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <rad_per_s_left+0x1>
    1106:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <rad_per_s_left+0x2>
    110a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <rad_per_s_left+0x3>
    110e:	ff 91       	pop	r31
    1110:	ef 91       	pop	r30
    1112:	bf 91       	pop	r27
    1114:	af 91       	pop	r26
    1116:	9f 91       	pop	r25
    1118:	8f 91       	pop	r24
    111a:	7f 91       	pop	r23
    111c:	6f 91       	pop	r22
    111e:	5f 91       	pop	r21
    1120:	4f 91       	pop	r20
    1122:	3f 91       	pop	r19
    1124:	2f 91       	pop	r18
    1126:	ff 90       	pop	r15
    1128:	ef 90       	pop	r14
    112a:	df 90       	pop	r13
    112c:	cf 90       	pop	r12
    112e:	0f 90       	pop	r0
    1130:	0f be       	out	0x3f, r0	; 63
    1132:	0f 90       	pop	r0
    1134:	1f 90       	pop	r1
    1136:	18 95       	reti

Disassembly of section .text.timer_init:

00001c4e <timer_init>:
static volatile unsigned int timer_flag = 0;
unsigned int timeout_ms;

void timer_init(unsigned int timeout) {
	
	cli();
    1c4e:	f8 94       	cli
	
	timer_flag = 0;
    1c50:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <timer_flag+0x1>
    1c54:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <timer_flag>
	timeout_ms = timeout;
    1c58:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
    1c5c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	
	// Use 8-bit timer 2 for keeping-time
	TCCR2B = 0x00;
    1c60:	e1 eb       	ldi	r30, 0xB1	; 177
    1c62:	f0 e0       	ldi	r31, 0x00	; 0
    1c64:	10 82       	st	Z, r1
	TCNT2 = 0x00;
    1c66:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
	OCR2A = 0xF9;
    1c6a:	89 ef       	ldi	r24, 0xF9	; 249
    1c6c:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	TCCR2A |= (1 << WGM21) | (1 << CS22); // CTC (Clear timer on compare match with OCR2A), 64 as prescaler
    1c70:	a0 eb       	ldi	r26, 0xB0	; 176
    1c72:	b0 e0       	ldi	r27, 0x00	; 0
    1c74:	8c 91       	ld	r24, X
    1c76:	86 60       	ori	r24, 0x06	; 6
    1c78:	8c 93       	st	X, r24
	TCCR2B |= (1 << CS22);
    1c7a:	80 81       	ld	r24, Z
    1c7c:	84 60       	ori	r24, 0x04	; 4
    1c7e:	80 83       	st	Z, r24
	
	
	// Enable interrupt
	TIMSK2 |= (1 << OCIE2A);
    1c80:	e0 e7       	ldi	r30, 0x70	; 112
    1c82:	f0 e0       	ldi	r31, 0x00	; 0
    1c84:	80 81       	ld	r24, Z
    1c86:	82 60       	ori	r24, 0x02	; 2
    1c88:	80 83       	st	Z, r24
	
	// Enable interrupt
	TIMSK1 |= (1 << OCIE1A);
	//SREG |= (1 << 7);*/
	
	sei();
    1c8a:	78 94       	sei
    1c8c:	08 95       	ret

Disassembly of section .text.timer_reset:

00001a60 <timer_reset>:
		ms = elapsed_ms;
	}
	return ms;
}

void timer_reset(void) {
    1a60:	cf 93       	push	r28
    1a62:	df 93       	push	r29
    1a64:	1f 92       	push	r1
    1a66:	cd b7       	in	r28, 0x3d	; 61
    1a68:	de b7       	in	r29, 0x3e	; 62
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1a6a:	8f b7       	in	r24, 0x3f	; 63
    1a6c:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1a6e:	f8 94       	cli
    1a70:	81 e0       	ldi	r24, 0x01	; 1
    1a72:	0f c0       	rjmp	.+30     	; 0x1a92 <timer_reset+0x32>
		elapsed_ms = 0;
    1a74:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <elapsed_ms>
    1a78:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <elapsed_ms+0x1>
    1a7c:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <elapsed_ms+0x2>
    1a80:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <elapsed_ms+0x3>
		TCNT2 = 0x00;
    1a84:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
		timer_flag = 0;
    1a88:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <timer_flag+0x1>
    1a8c:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <timer_flag>
	}
	return ms;
}

void timer_reset(void) {
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1a90:	80 e0       	ldi	r24, 0x00	; 0
    1a92:	81 11       	cpse	r24, r1
    1a94:	ef cf       	rjmp	.-34     	; 0x1a74 <timer_reset+0x14>
    1a96:	ce 01       	movw	r24, r28
    1a98:	01 96       	adiw	r24, 0x01	; 1
    1a9a:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1a9c:	fc 01       	movw	r30, r24
    1a9e:	84 91       	lpm	r24, Z
    1aa0:	a7 fd       	sbrc	r26, 7
    1aa2:	80 81       	ld	r24, Z
    1aa4:	8f bf       	out	0x3f, r24	; 63
		elapsed_ms = 0;
		TCNT2 = 0x00;
		timer_flag = 0;
	}
}
    1aa6:	0f 90       	pop	r0
    1aa8:	df 91       	pop	r29
    1aaa:	cf 91       	pop	r28
    1aac:	08 95       	ret

Disassembly of section .text.timer_timeout:

00001c8e <timer_timeout>:

unsigned int timer_timeout(void) {
    1c8e:	cf 93       	push	r28
    1c90:	df 93       	push	r29
    1c92:	1f 92       	push	r1
    1c94:	cd b7       	in	r28, 0x3d	; 61
    1c96:	de b7       	in	r29, 0x3e	; 62
	unsigned int flag;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1c98:	8f b7       	in	r24, 0x3f	; 63
    1c9a:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1c9c:	f8 94       	cli
    1c9e:	91 e0       	ldi	r25, 0x01	; 1
    1ca0:	05 c0       	rjmp	.+10     	; 0x1cac <timer_timeout+0x1e>
		flag = timer_flag;
    1ca2:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <timer_flag>
    1ca6:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <timer_flag+0x1>
	}
}

unsigned int timer_timeout(void) {
	unsigned int flag;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	91 11       	cpse	r25, r1
    1cae:	f9 cf       	rjmp	.-14     	; 0x1ca2 <timer_timeout+0x14>
    1cb0:	ce 01       	movw	r24, r28
    1cb2:	01 96       	adiw	r24, 0x01	; 1
    1cb4:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1cb6:	fc 01       	movw	r30, r24
    1cb8:	84 91       	lpm	r24, Z
    1cba:	a7 fd       	sbrc	r26, 7
    1cbc:	80 81       	ld	r24, Z
    1cbe:	8f bf       	out	0x3f, r24	; 63
		flag = timer_flag;
	}
	return flag;
}
    1cc0:	c9 01       	movw	r24, r18
    1cc2:	0f 90       	pop	r0
    1cc4:	df 91       	pop	r29
    1cc6:	cf 91       	pop	r28
    1cc8:	08 95       	ret

Disassembly of section .text.__vector_7:

00001732 <__vector_7>:
	unsigned long ms;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
		ms = elapsed_ms;
	}
	return ms;
}
    1732:	1f 92       	push	r1
    1734:	0f 92       	push	r0
    1736:	0f b6       	in	r0, 0x3f	; 63
    1738:	0f 92       	push	r0
    173a:	11 24       	eor	r1, r1
    173c:	4f 93       	push	r20
    173e:	5f 93       	push	r21
    1740:	6f 93       	push	r22
    1742:	7f 93       	push	r23
    1744:	8f 93       	push	r24
    1746:	9f 93       	push	r25
    1748:	af 93       	push	r26
    174a:	bf 93       	push	r27
    174c:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <elapsed_ms>
    1750:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <elapsed_ms+0x1>
    1754:	a0 91 24 01 	lds	r26, 0x0124	; 0x800124 <elapsed_ms+0x2>
    1758:	b0 91 25 01 	lds	r27, 0x0125	; 0x800125 <elapsed_ms+0x3>
    175c:	01 96       	adiw	r24, 0x01	; 1
    175e:	a1 1d       	adc	r26, r1
    1760:	b1 1d       	adc	r27, r1
    1762:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <elapsed_ms>
    1766:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <elapsed_ms+0x1>
    176a:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <elapsed_ms+0x2>
    176e:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <elapsed_ms+0x3>
    1772:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
    1776:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
    177a:	a0 e0       	ldi	r26, 0x00	; 0
    177c:	b0 e0       	ldi	r27, 0x00	; 0
    177e:	40 91 22 01 	lds	r20, 0x0122	; 0x800122 <elapsed_ms>
    1782:	50 91 23 01 	lds	r21, 0x0123	; 0x800123 <elapsed_ms+0x1>
    1786:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <elapsed_ms+0x2>
    178a:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <elapsed_ms+0x3>
    178e:	48 17       	cp	r20, r24
    1790:	59 07       	cpc	r21, r25
    1792:	6a 07       	cpc	r22, r26
    1794:	7b 07       	cpc	r23, r27
    1796:	30 f0       	brcs	.+12     	; 0x17a4 <__vector_7+0x72>
    1798:	81 e0       	ldi	r24, 0x01	; 1
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <timer_flag+0x1>
    17a0:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <timer_flag>
    17a4:	bf 91       	pop	r27
    17a6:	af 91       	pop	r26
    17a8:	9f 91       	pop	r25
    17aa:	8f 91       	pop	r24
    17ac:	7f 91       	pop	r23
    17ae:	6f 91       	pop	r22
    17b0:	5f 91       	pop	r21
    17b2:	4f 91       	pop	r20
    17b4:	0f 90       	pop	r0
    17b6:	0f be       	out	0x3f, r0	; 63
    17b8:	0f 90       	pop	r0
    17ba:	1f 90       	pop	r1
    17bc:	18 95       	reti

Disassembly of section .text.usart_tx:

00001f18 <usart_tx>:

#include <avr/io.h>
#include "usart.h"

void usart_tx(unsigned char data) {
	while (! (UCSR0A & (1 << UDRE0))) {
    1f18:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    1f1c:	95 ff       	sbrs	r25, 5
    1f1e:	fc cf       	rjmp	.-8      	; 0x1f18 <usart_tx>
		// wait for buffer to empty
	}
	// Place data in buffer
	UDR0 = data;
    1f20:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    1f24:	08 95       	ret

Disassembly of section .text.usart_rx:

00001f26 <usart_rx>:
}

unsigned char usart_rx(void) {
	while(!(UCSR0A & (1 << RXC0))) {
    1f26:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    1f2a:	88 23       	and	r24, r24
    1f2c:	e4 f7       	brge	.-8      	; 0x1f26 <usart_rx>
		// Wait for data to be received
	}
	return UDR0;
    1f2e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
    1f32:	08 95       	ret

Disassembly of section .text.usart_init:

00001e5e <usart_init>:

void usart_init(unsigned int ubrr) {
	// Set baud rate
	UBRR0H = ubrr>>8;
    1e5e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = ubrr;
    1e62:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	// Enable rx and tx
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
    1e66:	88 e1       	ldi	r24, 0x18	; 24
    1e68:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	
	// Set frame format: 8data 2stop bit
	UCSR0C = (1 << USBS0) | (3 << UCSZ00);
    1e6c:	8e e0       	ldi	r24, 0x0E	; 14
    1e6e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	
	// Use printf for serial communication
	fdevopen(usart_tx, usart_rx);
    1e72:	63 e9       	ldi	r22, 0x93	; 147
    1e74:	7f e0       	ldi	r23, 0x0F	; 15
    1e76:	8c e8       	ldi	r24, 0x8C	; 140
    1e78:	9f e0       	ldi	r25, 0x0F	; 15
    1e7a:	0e 94 4d 0b 	call	0x169a	; 0x169a <fdevopen>
    1e7e:	08 95       	ret

Disassembly of section .text.main:

00001138 <main>:
#include "drivers/timer/timer.h"
#include "drivers/speed_estimator/speed_estimator.h"
#include "drivers/PID_controller/PID_controller.h"

int main(void)
{
    1138:	cf 93       	push	r28
    113a:	df 93       	push	r29
    113c:	cd b7       	in	r28, 0x3d	; 61
    113e:	de b7       	in	r29, 0x3e	; 62
    1140:	ac 97       	sbiw	r28, 0x2c	; 44
    1142:	0f b6       	in	r0, 0x3f	; 63
    1144:	f8 94       	cli
    1146:	de bf       	out	0x3e, r29	; 62
    1148:	0f be       	out	0x3f, r0	; 63
    114a:	cd bf       	out	0x3d, r28	; 61
	usart_init(UBRR);
    114c:	87 e6       	ldi	r24, 0x67	; 103
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	0e 94 2f 0f 	call	0x1e5e	; 0x1e5e <usart_init>
	speed_estimator_init();
    1154:	0e 94 96 0c 	call	0x192c	; 0x192c <speed_estimator_init>
	motor_init();
    1158:	0e 94 70 0f 	call	0x1ee0	; 0x1ee0 <motor_init>

	//encoder_init();
	
	timer_init(50); // Set control loop period to 50 ms (Obs: Should check if code takes longer time to run!)
    115c:	82 e3       	ldi	r24, 0x32	; 50
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	0e 94 27 0e 	call	0x1c4e	; 0x1c4e <timer_init>
	
	printf("Starting application\n\r");
    1164:	88 ec       	ldi	r24, 0xC8	; 200
    1166:	91 e0       	ldi	r25, 0x01	; 1
    1168:	a0 e0       	ldi	r26, 0x00	; 0
    116a:	af 93       	push	r26
    116c:	9f 93       	push	r25
    116e:	8f 93       	push	r24
    1170:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <printf>
	
	
	PID_controller left_motor;
	PID_controller_init(&left_motor);
    1174:	ce 01       	movw	r24, r28
    1176:	01 96       	adiw	r24, 0x01	; 1
    1178:	0e 94 cf 0c 	call	0x199e	; 0x199e <PID_controller_init>
	PID_controller_set_parameters(&left_motor, 90.0, 0.0, 0.0, 0.05);
    117c:	0f 2e       	mov	r0, r31
    117e:	fd ec       	ldi	r31, 0xCD	; 205
    1180:	8f 2e       	mov	r8, r31
    1182:	fc ec       	ldi	r31, 0xCC	; 204
    1184:	9f 2e       	mov	r9, r31
    1186:	fc e4       	ldi	r31, 0x4C	; 76
    1188:	af 2e       	mov	r10, r31
    118a:	fd e3       	ldi	r31, 0x3D	; 61
    118c:	bf 2e       	mov	r11, r31
    118e:	f0 2d       	mov	r31, r0
    1190:	c1 2c       	mov	r12, r1
    1192:	d1 2c       	mov	r13, r1
    1194:	76 01       	movw	r14, r12
    1196:	97 01       	movw	r18, r14
    1198:	86 01       	movw	r16, r12
    119a:	40 e0       	ldi	r20, 0x00	; 0
    119c:	50 e0       	ldi	r21, 0x00	; 0
    119e:	64 eb       	ldi	r22, 0xB4	; 180
    11a0:	72 e4       	ldi	r23, 0x42	; 66
    11a2:	ce 01       	movw	r24, r28
    11a4:	01 96       	adiw	r24, 0x01	; 1
    11a6:	0e 94 df 0b 	call	0x17be	; 0x17be <PID_controller_set_parameters>
    11aa:	0f 90       	pop	r0
    11ac:	0f 90       	pop	r0
    11ae:	0f 90       	pop	r0
	
	
	while(1)
	{
		// wheel speed control loop
		if (timer_timeout()) {
    11b0:	0e 94 47 0e 	call	0x1c8e	; 0x1c8e <timer_timeout>
    11b4:	89 2b       	or	r24, r25
    11b6:	e1 f3       	breq	.-8      	; 0x11b0 <main+0x78>
			timer_reset();
    11b8:	0e 94 30 0d 	call	0x1a60	; 0x1a60 <timer_reset>
	
			left_speed_rps = speed_estimator_left_rad_per_s();
    11bc:	0e 94 c1 0d 	call	0x1b82	; 0x1b82 <speed_estimator_left_rad_per_s>
    11c0:	9b 01       	movw	r18, r22
    11c2:	ac 01       	movw	r20, r24
			left_error_rps = left_speed_ref_rps - left_speed_rps;
    11c4:	68 e5       	ldi	r22, 0x58	; 88
    11c6:	70 ea       	ldi	r23, 0xA0	; 160
    11c8:	8b e0       	ldi	r24, 0x0B	; 11
    11ca:	91 e4       	ldi	r25, 0x41	; 65
    11cc:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__subsf3>
    11d0:	16 2f       	mov	r17, r22
    11d2:	07 2f       	mov	r16, r23
    11d4:	f8 2e       	mov	r15, r24
    11d6:	e9 2e       	mov	r14, r25
			left_u = PID_controller_get_control_action(&left_motor, left_error_rps);
    11d8:	98 2f       	mov	r25, r24
    11da:	41 2f       	mov	r20, r17
    11dc:	50 2f       	mov	r21, r16
    11de:	69 2f       	mov	r22, r25
    11e0:	7e 2d       	mov	r23, r14
    11e2:	ce 01       	movw	r24, r28
    11e4:	01 96       	adiw	r24, 0x01	; 1
    11e6:	0e 94 9b 04 	call	0x936	; 0x936 <PID_controller_get_control_action>
    11ea:	d6 2e       	mov	r13, r22
    11ec:	c7 2e       	mov	r12, r23
    11ee:	b8 2e       	mov	r11, r24
    11f0:	a9 2e       	mov	r10, r25
			motor_left(left_u);
    11f2:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <motor_left>

			printf("%f | %f\n\r", left_error_rps, left_u);
    11f6:	af 92       	push	r10
    11f8:	bf 92       	push	r11
    11fa:	cf 92       	push	r12
    11fc:	df 92       	push	r13
    11fe:	ef 92       	push	r14
    1200:	ff 92       	push	r15
    1202:	0f 93       	push	r16
    1204:	1f 93       	push	r17
    1206:	8f ed       	ldi	r24, 0xDF	; 223
    1208:	91 e0       	ldi	r25, 0x01	; 1
    120a:	a0 e0       	ldi	r26, 0x00	; 0
    120c:	af 93       	push	r26
    120e:	9f 93       	push	r25
    1210:	8f 93       	push	r24
    1212:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <printf>
    1216:	0f b6       	in	r0, 0x3f	; 63
    1218:	f8 94       	cli
    121a:	de bf       	out	0x3e, r29	; 62
    121c:	0f be       	out	0x3f, r0	; 63
    121e:	cd bf       	out	0x3d, r28	; 61
    1220:	c7 cf       	rjmp	.-114    	; 0x11b0 <main+0x78>

Disassembly of section .text.avrlibc.fplib:

00001f34 <__subsf3>:
    1f34:	50 58       	subi	r21, 0x80	; 128

00001f36 <__addsf3>:
    1f36:	bb 27       	eor	r27, r27
    1f38:	aa 27       	eor	r26, r26
    1f3a:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__addsf3x>
    1f3e:	0c 94 40 0f 	jmp	0x1e80	; 0x1e80 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

000013d4 <__addsf3x>:
    13d4:	11 c0       	rjmp	.+34     	; 0x13f8 <__addsf3x+0x24>
    13d6:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__fp_pscA>
    13da:	38 f0       	brcs	.+14     	; 0x13ea <__addsf3x+0x16>
    13dc:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <__fp_pscB>
    13e0:	20 f0       	brcs	.+8      	; 0x13ea <__addsf3x+0x16>
    13e2:	39 f4       	brne	.+14     	; 0x13f2 <__addsf3x+0x1e>
    13e4:	9f 3f       	cpi	r25, 0xFF	; 255
    13e6:	19 f4       	brne	.+6      	; 0x13ee <__addsf3x+0x1a>
    13e8:	26 f4       	brtc	.+8      	; 0x13f2 <__addsf3x+0x1e>
    13ea:	0c 94 d5 0f 	jmp	0x1faa	; 0x1faa <__fp_nan>
    13ee:	0e f4       	brtc	.+2      	; 0x13f2 <__addsf3x+0x1e>
    13f0:	e0 95       	com	r30
    13f2:	e7 fb       	bst	r30, 7
    13f4:	0c 94 bd 0f 	jmp	0x1f7a	; 0x1f7a <__fp_inf>
    13f8:	e9 2f       	mov	r30, r25
    13fa:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__fp_split3>
    13fe:	58 f3       	brcs	.-42     	; 0x13d6 <__addsf3x+0x2>
    1400:	ba 17       	cp	r27, r26
    1402:	62 07       	cpc	r22, r18
    1404:	73 07       	cpc	r23, r19
    1406:	84 07       	cpc	r24, r20
    1408:	95 07       	cpc	r25, r21
    140a:	20 f0       	brcs	.+8      	; 0x1414 <__addsf3x+0x40>
    140c:	79 f4       	brne	.+30     	; 0x142c <__addsf3x+0x58>
    140e:	a6 f5       	brtc	.+104    	; 0x1478 <__addsf3x+0xa4>
    1410:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <__fp_zero>
    1414:	0e f4       	brtc	.+2      	; 0x1418 <__addsf3x+0x44>
    1416:	e0 95       	com	r30
    1418:	0b 2e       	mov	r0, r27
    141a:	ba 2f       	mov	r27, r26
    141c:	a0 2d       	mov	r26, r0
    141e:	0b 01       	movw	r0, r22
    1420:	b9 01       	movw	r22, r18
    1422:	90 01       	movw	r18, r0
    1424:	0c 01       	movw	r0, r24
    1426:	ca 01       	movw	r24, r20
    1428:	a0 01       	movw	r20, r0
    142a:	11 24       	eor	r1, r1
    142c:	ff 27       	eor	r31, r31
    142e:	59 1b       	sub	r21, r25
    1430:	99 f0       	breq	.+38     	; 0x1458 <__addsf3x+0x84>
    1432:	59 3f       	cpi	r21, 0xF9	; 249
    1434:	50 f4       	brcc	.+20     	; 0x144a <__addsf3x+0x76>
    1436:	50 3e       	cpi	r21, 0xE0	; 224
    1438:	68 f1       	brcs	.+90     	; 0x1494 <__addsf3x+0xc0>
    143a:	1a 16       	cp	r1, r26
    143c:	f0 40       	sbci	r31, 0x00	; 0
    143e:	a2 2f       	mov	r26, r18
    1440:	23 2f       	mov	r18, r19
    1442:	34 2f       	mov	r19, r20
    1444:	44 27       	eor	r20, r20
    1446:	58 5f       	subi	r21, 0xF8	; 248
    1448:	f3 cf       	rjmp	.-26     	; 0x1430 <__addsf3x+0x5c>
    144a:	46 95       	lsr	r20
    144c:	37 95       	ror	r19
    144e:	27 95       	ror	r18
    1450:	a7 95       	ror	r26
    1452:	f0 40       	sbci	r31, 0x00	; 0
    1454:	53 95       	inc	r21
    1456:	c9 f7       	brne	.-14     	; 0x144a <__addsf3x+0x76>
    1458:	7e f4       	brtc	.+30     	; 0x1478 <__addsf3x+0xa4>
    145a:	1f 16       	cp	r1, r31
    145c:	ba 0b       	sbc	r27, r26
    145e:	62 0b       	sbc	r22, r18
    1460:	73 0b       	sbc	r23, r19
    1462:	84 0b       	sbc	r24, r20
    1464:	ba f0       	brmi	.+46     	; 0x1494 <__addsf3x+0xc0>
    1466:	91 50       	subi	r25, 0x01	; 1
    1468:	a1 f0       	breq	.+40     	; 0x1492 <__addsf3x+0xbe>
    146a:	ff 0f       	add	r31, r31
    146c:	bb 1f       	adc	r27, r27
    146e:	66 1f       	adc	r22, r22
    1470:	77 1f       	adc	r23, r23
    1472:	88 1f       	adc	r24, r24
    1474:	c2 f7       	brpl	.-16     	; 0x1466 <__addsf3x+0x92>
    1476:	0e c0       	rjmp	.+28     	; 0x1494 <__addsf3x+0xc0>
    1478:	ba 0f       	add	r27, r26
    147a:	62 1f       	adc	r22, r18
    147c:	73 1f       	adc	r23, r19
    147e:	84 1f       	adc	r24, r20
    1480:	48 f4       	brcc	.+18     	; 0x1494 <__addsf3x+0xc0>
    1482:	87 95       	ror	r24
    1484:	77 95       	ror	r23
    1486:	67 95       	ror	r22
    1488:	b7 95       	ror	r27
    148a:	f7 95       	ror	r31
    148c:	9e 3f       	cpi	r25, 0xFE	; 254
    148e:	08 f0       	brcs	.+2      	; 0x1492 <__addsf3x+0xbe>
    1490:	b0 cf       	rjmp	.-160    	; 0x13f2 <__addsf3x+0x1e>
    1492:	93 95       	inc	r25
    1494:	88 0f       	add	r24, r24
    1496:	08 f0       	brcs	.+2      	; 0x149a <__addsf3x+0xc6>
    1498:	99 27       	eor	r25, r25
    149a:	ee 0f       	add	r30, r30
    149c:	97 95       	ror	r25
    149e:	87 95       	ror	r24
    14a0:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f86 <__cmpsf2>:
    1f86:	0e 94 57 0d 	call	0x1aae	; 0x1aae <__fp_cmp>
    1f8a:	08 f4       	brcc	.+2      	; 0x1f8e <__cmpsf2+0x8>
    1f8c:	81 e0       	ldi	r24, 0x01	; 1
    1f8e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f9a <__divsf3>:
    1f9a:	0e 94 11 09 	call	0x1222	; 0x1222 <__divsf3x>
    1f9e:	0c 94 40 0f 	jmp	0x1e80	; 0x1e80 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001222 <__divsf3x>:
    1222:	10 c0       	rjmp	.+32     	; 0x1244 <__divsf3x+0x22>
    1224:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <__fp_pscB>
    1228:	58 f0       	brcs	.+22     	; 0x1240 <__divsf3x+0x1e>
    122a:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__fp_pscA>
    122e:	40 f0       	brcs	.+16     	; 0x1240 <__divsf3x+0x1e>
    1230:	29 f4       	brne	.+10     	; 0x123c <__divsf3x+0x1a>
    1232:	5f 3f       	cpi	r21, 0xFF	; 255
    1234:	29 f0       	breq	.+10     	; 0x1240 <__divsf3x+0x1e>
    1236:	0c 94 bd 0f 	jmp	0x1f7a	; 0x1f7a <__fp_inf>
    123a:	51 11       	cpse	r21, r1
    123c:	0c 94 b0 0f 	jmp	0x1f60	; 0x1f60 <__fp_szero>
    1240:	0c 94 d5 0f 	jmp	0x1faa	; 0x1faa <__fp_nan>
    1244:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__fp_split3>
    1248:	68 f3       	brcs	.-38     	; 0x1224 <__divsf3x+0x2>

0000124a <__divsf3_pse>:
    124a:	99 23       	and	r25, r25
    124c:	b1 f3       	breq	.-20     	; 0x123a <__divsf3x+0x18>
    124e:	55 23       	and	r21, r21
    1250:	91 f3       	breq	.-28     	; 0x1236 <__divsf3x+0x14>
    1252:	95 1b       	sub	r25, r21
    1254:	55 0b       	sbc	r21, r21
    1256:	bb 27       	eor	r27, r27
    1258:	aa 27       	eor	r26, r26
    125a:	62 17       	cp	r22, r18
    125c:	73 07       	cpc	r23, r19
    125e:	84 07       	cpc	r24, r20
    1260:	38 f0       	brcs	.+14     	; 0x1270 <__divsf3_pse+0x26>
    1262:	9f 5f       	subi	r25, 0xFF	; 255
    1264:	5f 4f       	sbci	r21, 0xFF	; 255
    1266:	22 0f       	add	r18, r18
    1268:	33 1f       	adc	r19, r19
    126a:	44 1f       	adc	r20, r20
    126c:	aa 1f       	adc	r26, r26
    126e:	a9 f3       	breq	.-22     	; 0x125a <__divsf3_pse+0x10>
    1270:	35 d0       	rcall	.+106    	; 0x12dc <__divsf3_pse+0x92>
    1272:	0e 2e       	mov	r0, r30
    1274:	3a f0       	brmi	.+14     	; 0x1284 <__divsf3_pse+0x3a>
    1276:	e0 e8       	ldi	r30, 0x80	; 128
    1278:	32 d0       	rcall	.+100    	; 0x12de <__divsf3_pse+0x94>
    127a:	91 50       	subi	r25, 0x01	; 1
    127c:	50 40       	sbci	r21, 0x00	; 0
    127e:	e6 95       	lsr	r30
    1280:	00 1c       	adc	r0, r0
    1282:	ca f7       	brpl	.-14     	; 0x1276 <__divsf3_pse+0x2c>
    1284:	2b d0       	rcall	.+86     	; 0x12dc <__divsf3_pse+0x92>
    1286:	fe 2f       	mov	r31, r30
    1288:	29 d0       	rcall	.+82     	; 0x12dc <__divsf3_pse+0x92>
    128a:	66 0f       	add	r22, r22
    128c:	77 1f       	adc	r23, r23
    128e:	88 1f       	adc	r24, r24
    1290:	bb 1f       	adc	r27, r27
    1292:	26 17       	cp	r18, r22
    1294:	37 07       	cpc	r19, r23
    1296:	48 07       	cpc	r20, r24
    1298:	ab 07       	cpc	r26, r27
    129a:	b0 e8       	ldi	r27, 0x80	; 128
    129c:	09 f0       	breq	.+2      	; 0x12a0 <__divsf3_pse+0x56>
    129e:	bb 0b       	sbc	r27, r27
    12a0:	80 2d       	mov	r24, r0
    12a2:	bf 01       	movw	r22, r30
    12a4:	ff 27       	eor	r31, r31
    12a6:	93 58       	subi	r25, 0x83	; 131
    12a8:	5f 4f       	sbci	r21, 0xFF	; 255
    12aa:	3a f0       	brmi	.+14     	; 0x12ba <__divsf3_pse+0x70>
    12ac:	9e 3f       	cpi	r25, 0xFE	; 254
    12ae:	51 05       	cpc	r21, r1
    12b0:	78 f0       	brcs	.+30     	; 0x12d0 <__divsf3_pse+0x86>
    12b2:	0c 94 bd 0f 	jmp	0x1f7a	; 0x1f7a <__fp_inf>
    12b6:	0c 94 b0 0f 	jmp	0x1f60	; 0x1f60 <__fp_szero>
    12ba:	5f 3f       	cpi	r21, 0xFF	; 255
    12bc:	e4 f3       	brlt	.-8      	; 0x12b6 <__divsf3_pse+0x6c>
    12be:	98 3e       	cpi	r25, 0xE8	; 232
    12c0:	d4 f3       	brlt	.-12     	; 0x12b6 <__divsf3_pse+0x6c>
    12c2:	86 95       	lsr	r24
    12c4:	77 95       	ror	r23
    12c6:	67 95       	ror	r22
    12c8:	b7 95       	ror	r27
    12ca:	f7 95       	ror	r31
    12cc:	9f 5f       	subi	r25, 0xFF	; 255
    12ce:	c9 f7       	brne	.-14     	; 0x12c2 <__divsf3_pse+0x78>
    12d0:	88 0f       	add	r24, r24
    12d2:	91 1d       	adc	r25, r1
    12d4:	96 95       	lsr	r25
    12d6:	87 95       	ror	r24
    12d8:	97 f9       	bld	r25, 7
    12da:	08 95       	ret
    12dc:	e1 e0       	ldi	r30, 0x01	; 1
    12de:	66 0f       	add	r22, r22
    12e0:	77 1f       	adc	r23, r23
    12e2:	88 1f       	adc	r24, r24
    12e4:	bb 1f       	adc	r27, r27
    12e6:	62 17       	cp	r22, r18
    12e8:	73 07       	cpc	r23, r19
    12ea:	84 07       	cpc	r24, r20
    12ec:	ba 07       	cpc	r27, r26
    12ee:	20 f0       	brcs	.+8      	; 0x12f8 <__divsf3_pse+0xae>
    12f0:	62 1b       	sub	r22, r18
    12f2:	73 0b       	sbc	r23, r19
    12f4:	84 0b       	sbc	r24, r20
    12f6:	ba 0b       	sbc	r27, r26
    12f8:	ee 1f       	adc	r30, r30
    12fa:	88 f7       	brcc	.-30     	; 0x12de <__divsf3_pse+0x94>
    12fc:	e0 95       	com	r30
    12fe:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001a02 <__fixunssfsi>:
    1a02:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <__fp_splitA>
    1a06:	88 f0       	brcs	.+34     	; 0x1a2a <__fixunssfsi+0x28>
    1a08:	9f 57       	subi	r25, 0x7F	; 127
    1a0a:	98 f0       	brcs	.+38     	; 0x1a32 <__fixunssfsi+0x30>
    1a0c:	b9 2f       	mov	r27, r25
    1a0e:	99 27       	eor	r25, r25
    1a10:	b7 51       	subi	r27, 0x17	; 23
    1a12:	b0 f0       	brcs	.+44     	; 0x1a40 <__fixunssfsi+0x3e>
    1a14:	e1 f0       	breq	.+56     	; 0x1a4e <__fixunssfsi+0x4c>
    1a16:	66 0f       	add	r22, r22
    1a18:	77 1f       	adc	r23, r23
    1a1a:	88 1f       	adc	r24, r24
    1a1c:	99 1f       	adc	r25, r25
    1a1e:	1a f0       	brmi	.+6      	; 0x1a26 <__fixunssfsi+0x24>
    1a20:	ba 95       	dec	r27
    1a22:	c9 f7       	brne	.-14     	; 0x1a16 <__fixunssfsi+0x14>
    1a24:	14 c0       	rjmp	.+40     	; 0x1a4e <__fixunssfsi+0x4c>
    1a26:	b1 30       	cpi	r27, 0x01	; 1
    1a28:	91 f0       	breq	.+36     	; 0x1a4e <__fixunssfsi+0x4c>
    1a2a:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <__fp_zero>
    1a2e:	b1 e0       	ldi	r27, 0x01	; 1
    1a30:	08 95       	ret
    1a32:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <__fp_zero>
    1a36:	67 2f       	mov	r22, r23
    1a38:	78 2f       	mov	r23, r24
    1a3a:	88 27       	eor	r24, r24
    1a3c:	b8 5f       	subi	r27, 0xF8	; 248
    1a3e:	39 f0       	breq	.+14     	; 0x1a4e <__fixunssfsi+0x4c>
    1a40:	b9 3f       	cpi	r27, 0xF9	; 249
    1a42:	cc f3       	brlt	.-14     	; 0x1a36 <__fixunssfsi+0x34>
    1a44:	86 95       	lsr	r24
    1a46:	77 95       	ror	r23
    1a48:	67 95       	ror	r22
    1a4a:	b3 95       	inc	r27
    1a4c:	d9 f7       	brne	.-10     	; 0x1a44 <__fixunssfsi+0x42>
    1a4e:	3e f4       	brtc	.+14     	; 0x1a5e <__fixunssfsi+0x5c>
    1a50:	90 95       	com	r25
    1a52:	80 95       	com	r24
    1a54:	70 95       	com	r23
    1a56:	61 95       	neg	r22
    1a58:	7f 4f       	sbci	r23, 0xFF	; 255
    1a5a:	8f 4f       	sbci	r24, 0xFF	; 255
    1a5c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a5e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000183a <__floatunsisf>:
    183a:	e8 94       	clt
    183c:	09 c0       	rjmp	.+18     	; 0x1850 <__floatsisf+0x12>

0000183e <__floatsisf>:
    183e:	97 fb       	bst	r25, 7
    1840:	3e f4       	brtc	.+14     	; 0x1850 <__floatsisf+0x12>
    1842:	90 95       	com	r25
    1844:	80 95       	com	r24
    1846:	70 95       	com	r23
    1848:	61 95       	neg	r22
    184a:	7f 4f       	sbci	r23, 0xFF	; 255
    184c:	8f 4f       	sbci	r24, 0xFF	; 255
    184e:	9f 4f       	sbci	r25, 0xFF	; 255
    1850:	99 23       	and	r25, r25
    1852:	a9 f0       	breq	.+42     	; 0x187e <__floatsisf+0x40>
    1854:	f9 2f       	mov	r31, r25
    1856:	96 e9       	ldi	r25, 0x96	; 150
    1858:	bb 27       	eor	r27, r27
    185a:	93 95       	inc	r25
    185c:	f6 95       	lsr	r31
    185e:	87 95       	ror	r24
    1860:	77 95       	ror	r23
    1862:	67 95       	ror	r22
    1864:	b7 95       	ror	r27
    1866:	f1 11       	cpse	r31, r1
    1868:	f8 cf       	rjmp	.-16     	; 0x185a <__floatsisf+0x1c>
    186a:	fa f4       	brpl	.+62     	; 0x18aa <__floatsisf+0x6c>
    186c:	bb 0f       	add	r27, r27
    186e:	11 f4       	brne	.+4      	; 0x1874 <__floatsisf+0x36>
    1870:	60 ff       	sbrs	r22, 0
    1872:	1b c0       	rjmp	.+54     	; 0x18aa <__floatsisf+0x6c>
    1874:	6f 5f       	subi	r22, 0xFF	; 255
    1876:	7f 4f       	sbci	r23, 0xFF	; 255
    1878:	8f 4f       	sbci	r24, 0xFF	; 255
    187a:	9f 4f       	sbci	r25, 0xFF	; 255
    187c:	16 c0       	rjmp	.+44     	; 0x18aa <__floatsisf+0x6c>
    187e:	88 23       	and	r24, r24
    1880:	11 f0       	breq	.+4      	; 0x1886 <__floatsisf+0x48>
    1882:	96 e9       	ldi	r25, 0x96	; 150
    1884:	11 c0       	rjmp	.+34     	; 0x18a8 <__floatsisf+0x6a>
    1886:	77 23       	and	r23, r23
    1888:	21 f0       	breq	.+8      	; 0x1892 <__floatsisf+0x54>
    188a:	9e e8       	ldi	r25, 0x8E	; 142
    188c:	87 2f       	mov	r24, r23
    188e:	76 2f       	mov	r23, r22
    1890:	05 c0       	rjmp	.+10     	; 0x189c <__floatsisf+0x5e>
    1892:	66 23       	and	r22, r22
    1894:	71 f0       	breq	.+28     	; 0x18b2 <__floatsisf+0x74>
    1896:	96 e8       	ldi	r25, 0x86	; 134
    1898:	86 2f       	mov	r24, r22
    189a:	70 e0       	ldi	r23, 0x00	; 0
    189c:	60 e0       	ldi	r22, 0x00	; 0
    189e:	2a f0       	brmi	.+10     	; 0x18aa <__floatsisf+0x6c>
    18a0:	9a 95       	dec	r25
    18a2:	66 0f       	add	r22, r22
    18a4:	77 1f       	adc	r23, r23
    18a6:	88 1f       	adc	r24, r24
    18a8:	da f7       	brpl	.-10     	; 0x18a0 <__floatsisf+0x62>
    18aa:	88 0f       	add	r24, r24
    18ac:	96 95       	lsr	r25
    18ae:	87 95       	ror	r24
    18b0:	97 f9       	bld	r25, 7
    18b2:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001aae <__fp_cmp>:
    1aae:	99 0f       	add	r25, r25
    1ab0:	00 08       	sbc	r0, r0
    1ab2:	55 0f       	add	r21, r21
    1ab4:	aa 0b       	sbc	r26, r26
    1ab6:	e0 e8       	ldi	r30, 0x80	; 128
    1ab8:	fe ef       	ldi	r31, 0xFE	; 254
    1aba:	16 16       	cp	r1, r22
    1abc:	17 06       	cpc	r1, r23
    1abe:	e8 07       	cpc	r30, r24
    1ac0:	f9 07       	cpc	r31, r25
    1ac2:	c0 f0       	brcs	.+48     	; 0x1af4 <__fp_cmp+0x46>
    1ac4:	12 16       	cp	r1, r18
    1ac6:	13 06       	cpc	r1, r19
    1ac8:	e4 07       	cpc	r30, r20
    1aca:	f5 07       	cpc	r31, r21
    1acc:	98 f0       	brcs	.+38     	; 0x1af4 <__fp_cmp+0x46>
    1ace:	62 1b       	sub	r22, r18
    1ad0:	73 0b       	sbc	r23, r19
    1ad2:	84 0b       	sbc	r24, r20
    1ad4:	95 0b       	sbc	r25, r21
    1ad6:	39 f4       	brne	.+14     	; 0x1ae6 <__fp_cmp+0x38>
    1ad8:	0a 26       	eor	r0, r26
    1ada:	61 f0       	breq	.+24     	; 0x1af4 <__fp_cmp+0x46>
    1adc:	23 2b       	or	r18, r19
    1ade:	24 2b       	or	r18, r20
    1ae0:	25 2b       	or	r18, r21
    1ae2:	21 f4       	brne	.+8      	; 0x1aec <__fp_cmp+0x3e>
    1ae4:	08 95       	ret
    1ae6:	0a 26       	eor	r0, r26
    1ae8:	09 f4       	brne	.+2      	; 0x1aec <__fp_cmp+0x3e>
    1aea:	a1 40       	sbci	r26, 0x01	; 1
    1aec:	a6 95       	lsr	r26
    1aee:	8f ef       	ldi	r24, 0xFF	; 255
    1af0:	81 1d       	adc	r24, r1
    1af2:	81 1d       	adc	r24, r1
    1af4:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f7a <__fp_inf>:
    1f7a:	97 f9       	bld	r25, 7
    1f7c:	9f 67       	ori	r25, 0x7F	; 127
    1f7e:	80 e8       	ldi	r24, 0x80	; 128
    1f80:	70 e0       	ldi	r23, 0x00	; 0
    1f82:	60 e0       	ldi	r22, 0x00	; 0
    1f84:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001faa <__fp_nan>:
    1faa:	9f ef       	ldi	r25, 0xFF	; 255
    1fac:	80 ec       	ldi	r24, 0xC0	; 192
    1fae:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f42 <__fp_pscA>:
    1f42:	00 24       	eor	r0, r0
    1f44:	0a 94       	dec	r0
    1f46:	16 16       	cp	r1, r22
    1f48:	17 06       	cpc	r1, r23
    1f4a:	18 06       	cpc	r1, r24
    1f4c:	09 06       	cpc	r0, r25
    1f4e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f50 <__fp_pscB>:
    1f50:	00 24       	eor	r0, r0
    1f52:	0a 94       	dec	r0
    1f54:	12 16       	cp	r1, r18
    1f56:	13 06       	cpc	r1, r19
    1f58:	14 06       	cpc	r1, r20
    1f5a:	05 06       	cpc	r0, r21
    1f5c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001e80 <__fp_round>:
    1e80:	09 2e       	mov	r0, r25
    1e82:	03 94       	inc	r0
    1e84:	00 0c       	add	r0, r0
    1e86:	11 f4       	brne	.+4      	; 0x1e8c <__fp_round+0xc>
    1e88:	88 23       	and	r24, r24
    1e8a:	52 f0       	brmi	.+20     	; 0x1ea0 <__fp_round+0x20>
    1e8c:	bb 0f       	add	r27, r27
    1e8e:	40 f4       	brcc	.+16     	; 0x1ea0 <__fp_round+0x20>
    1e90:	bf 2b       	or	r27, r31
    1e92:	11 f4       	brne	.+4      	; 0x1e98 <__fp_round+0x18>
    1e94:	60 ff       	sbrs	r22, 0
    1e96:	04 c0       	rjmp	.+8      	; 0x1ea0 <__fp_round+0x20>
    1e98:	6f 5f       	subi	r22, 0xFF	; 255
    1e9a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e9c:	8f 4f       	sbci	r24, 0xFF	; 255
    1e9e:	9f 4f       	sbci	r25, 0xFF	; 255
    1ea0:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001bc8 <__fp_split3>:
    1bc8:	57 fd       	sbrc	r21, 7
    1bca:	90 58       	subi	r25, 0x80	; 128
    1bcc:	44 0f       	add	r20, r20
    1bce:	55 1f       	adc	r21, r21
    1bd0:	59 f0       	breq	.+22     	; 0x1be8 <__fp_splitA+0x10>
    1bd2:	5f 3f       	cpi	r21, 0xFF	; 255
    1bd4:	71 f0       	breq	.+28     	; 0x1bf2 <__fp_splitA+0x1a>
    1bd6:	47 95       	ror	r20

00001bd8 <__fp_splitA>:
    1bd8:	88 0f       	add	r24, r24
    1bda:	97 fb       	bst	r25, 7
    1bdc:	99 1f       	adc	r25, r25
    1bde:	61 f0       	breq	.+24     	; 0x1bf8 <__fp_splitA+0x20>
    1be0:	9f 3f       	cpi	r25, 0xFF	; 255
    1be2:	79 f0       	breq	.+30     	; 0x1c02 <__fp_splitA+0x2a>
    1be4:	87 95       	ror	r24
    1be6:	08 95       	ret
    1be8:	12 16       	cp	r1, r18
    1bea:	13 06       	cpc	r1, r19
    1bec:	14 06       	cpc	r1, r20
    1bee:	55 1f       	adc	r21, r21
    1bf0:	f2 cf       	rjmp	.-28     	; 0x1bd6 <__fp_split3+0xe>
    1bf2:	46 95       	lsr	r20
    1bf4:	f1 df       	rcall	.-30     	; 0x1bd8 <__fp_splitA>
    1bf6:	08 c0       	rjmp	.+16     	; 0x1c08 <__fp_splitA+0x30>
    1bf8:	16 16       	cp	r1, r22
    1bfa:	17 06       	cpc	r1, r23
    1bfc:	18 06       	cpc	r1, r24
    1bfe:	99 1f       	adc	r25, r25
    1c00:	f1 cf       	rjmp	.-30     	; 0x1be4 <__fp_splitA+0xc>
    1c02:	86 95       	lsr	r24
    1c04:	71 05       	cpc	r23, r1
    1c06:	61 05       	cpc	r22, r1
    1c08:	08 94       	sec
    1c0a:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f5e <__fp_zero>:
    1f5e:	e8 94       	clt

00001f60 <__fp_szero>:
    1f60:	bb 27       	eor	r27, r27
    1f62:	66 27       	eor	r22, r22
    1f64:	77 27       	eor	r23, r23
    1f66:	cb 01       	movw	r24, r22
    1f68:	97 f9       	bld	r25, 7
    1f6a:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f90 <__gesf2>:
    1f90:	0e 94 57 0d 	call	0x1aae	; 0x1aae <__fp_cmp>
    1f94:	08 f4       	brcc	.+2      	; 0x1f98 <__gesf2+0x8>
    1f96:	8f ef       	ldi	r24, 0xFF	; 255
    1f98:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001fa2 <__mulsf3>:
    1fa2:	0e 94 80 09 	call	0x1300	; 0x1300 <__mulsf3x>
    1fa6:	0c 94 40 0f 	jmp	0x1e80	; 0x1e80 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001300 <__mulsf3x>:
    1300:	0f c0       	rjmp	.+30     	; 0x1320 <__mulsf3x+0x20>
    1302:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__fp_pscA>
    1306:	38 f0       	brcs	.+14     	; 0x1316 <__mulsf3x+0x16>
    1308:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <__fp_pscB>
    130c:	20 f0       	brcs	.+8      	; 0x1316 <__mulsf3x+0x16>
    130e:	95 23       	and	r25, r21
    1310:	11 f0       	breq	.+4      	; 0x1316 <__mulsf3x+0x16>
    1312:	0c 94 bd 0f 	jmp	0x1f7a	; 0x1f7a <__fp_inf>
    1316:	0c 94 d5 0f 	jmp	0x1faa	; 0x1faa <__fp_nan>
    131a:	11 24       	eor	r1, r1
    131c:	0c 94 b0 0f 	jmp	0x1f60	; 0x1f60 <__fp_szero>
    1320:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__fp_split3>
    1324:	70 f3       	brcs	.-36     	; 0x1302 <__mulsf3x+0x2>

00001326 <__mulsf3_pse>:
    1326:	95 9f       	mul	r25, r21
    1328:	c1 f3       	breq	.-16     	; 0x131a <__mulsf3x+0x1a>
    132a:	95 0f       	add	r25, r21
    132c:	50 e0       	ldi	r21, 0x00	; 0
    132e:	55 1f       	adc	r21, r21
    1330:	62 9f       	mul	r22, r18
    1332:	f0 01       	movw	r30, r0
    1334:	72 9f       	mul	r23, r18
    1336:	bb 27       	eor	r27, r27
    1338:	f0 0d       	add	r31, r0
    133a:	b1 1d       	adc	r27, r1
    133c:	63 9f       	mul	r22, r19
    133e:	aa 27       	eor	r26, r26
    1340:	f0 0d       	add	r31, r0
    1342:	b1 1d       	adc	r27, r1
    1344:	aa 1f       	adc	r26, r26
    1346:	64 9f       	mul	r22, r20
    1348:	66 27       	eor	r22, r22
    134a:	b0 0d       	add	r27, r0
    134c:	a1 1d       	adc	r26, r1
    134e:	66 1f       	adc	r22, r22
    1350:	82 9f       	mul	r24, r18
    1352:	22 27       	eor	r18, r18
    1354:	b0 0d       	add	r27, r0
    1356:	a1 1d       	adc	r26, r1
    1358:	62 1f       	adc	r22, r18
    135a:	73 9f       	mul	r23, r19
    135c:	b0 0d       	add	r27, r0
    135e:	a1 1d       	adc	r26, r1
    1360:	62 1f       	adc	r22, r18
    1362:	83 9f       	mul	r24, r19
    1364:	a0 0d       	add	r26, r0
    1366:	61 1d       	adc	r22, r1
    1368:	22 1f       	adc	r18, r18
    136a:	74 9f       	mul	r23, r20
    136c:	33 27       	eor	r19, r19
    136e:	a0 0d       	add	r26, r0
    1370:	61 1d       	adc	r22, r1
    1372:	23 1f       	adc	r18, r19
    1374:	84 9f       	mul	r24, r20
    1376:	60 0d       	add	r22, r0
    1378:	21 1d       	adc	r18, r1
    137a:	82 2f       	mov	r24, r18
    137c:	76 2f       	mov	r23, r22
    137e:	6a 2f       	mov	r22, r26
    1380:	11 24       	eor	r1, r1
    1382:	9f 57       	subi	r25, 0x7F	; 127
    1384:	50 40       	sbci	r21, 0x00	; 0
    1386:	9a f0       	brmi	.+38     	; 0x13ae <__mulsf3_pse+0x88>
    1388:	f1 f0       	breq	.+60     	; 0x13c6 <__mulsf3_pse+0xa0>
    138a:	88 23       	and	r24, r24
    138c:	4a f0       	brmi	.+18     	; 0x13a0 <__mulsf3_pse+0x7a>
    138e:	ee 0f       	add	r30, r30
    1390:	ff 1f       	adc	r31, r31
    1392:	bb 1f       	adc	r27, r27
    1394:	66 1f       	adc	r22, r22
    1396:	77 1f       	adc	r23, r23
    1398:	88 1f       	adc	r24, r24
    139a:	91 50       	subi	r25, 0x01	; 1
    139c:	50 40       	sbci	r21, 0x00	; 0
    139e:	a9 f7       	brne	.-22     	; 0x138a <__mulsf3_pse+0x64>
    13a0:	9e 3f       	cpi	r25, 0xFE	; 254
    13a2:	51 05       	cpc	r21, r1
    13a4:	80 f0       	brcs	.+32     	; 0x13c6 <__mulsf3_pse+0xa0>
    13a6:	0c 94 bd 0f 	jmp	0x1f7a	; 0x1f7a <__fp_inf>
    13aa:	0c 94 b0 0f 	jmp	0x1f60	; 0x1f60 <__fp_szero>
    13ae:	5f 3f       	cpi	r21, 0xFF	; 255
    13b0:	e4 f3       	brlt	.-8      	; 0x13aa <__mulsf3_pse+0x84>
    13b2:	98 3e       	cpi	r25, 0xE8	; 232
    13b4:	d4 f3       	brlt	.-12     	; 0x13aa <__mulsf3_pse+0x84>
    13b6:	86 95       	lsr	r24
    13b8:	77 95       	ror	r23
    13ba:	67 95       	ror	r22
    13bc:	b7 95       	ror	r27
    13be:	f7 95       	ror	r31
    13c0:	e7 95       	ror	r30
    13c2:	9f 5f       	subi	r25, 0xFF	; 255
    13c4:	c1 f7       	brne	.-16     	; 0x13b6 <__mulsf3_pse+0x90>
    13c6:	fe 2b       	or	r31, r30
    13c8:	88 0f       	add	r24, r24
    13ca:	91 1d       	adc	r25, r1
    13cc:	96 95       	lsr	r25
    13ce:	87 95       	ror	r24
    13d0:	97 f9       	bld	r25, 7
    13d2:	08 95       	ret

Disassembly of section .text.avrlibc:

000001f2 <vfprintf>:
 1f2:	a4 e1       	ldi	r26, 0x14	; 20
 1f4:	b0 e0       	ldi	r27, 0x00	; 0
 1f6:	ef ef       	ldi	r30, 0xFF	; 255
 1f8:	f0 e0       	ldi	r31, 0x00	; 0
 1fa:	0c 94 65 0e 	jmp	0x1cca	; 0x1cca <__prologue_saves__>
 1fe:	6c 01       	movw	r12, r24
 200:	1a 01       	movw	r2, r20
 202:	46 2e       	mov	r4, r22
 204:	59 01       	movw	r10, r18
 206:	fc 01       	movw	r30, r24
 208:	10 86       	std	Z+8, r1	; 0x08
 20a:	17 82       	std	Z+7, r1	; 0x07
 20c:	84 81       	ldd	r24, Z+4	; 0x04
 20e:	81 ff       	sbrs	r24, 1
 210:	62 c3       	rjmp	.+1732   	; 0x8d6 <__DATA_REGION_LENGTH__+0xd6>
 212:	ce 01       	movw	r24, r28
 214:	01 96       	adiw	r24, 0x01	; 1
 216:	9d 87       	std	Y+13, r25	; 0x0d
 218:	8c 87       	std	Y+12, r24	; 0x0c
 21a:	a0 e8       	ldi	r26, 0x80	; 128
 21c:	8a 8b       	std	Y+18, r24	; 0x12
 21e:	9b 8b       	std	Y+19, r25	; 0x13
 220:	ac 8b       	std	Y+20, r26	; 0x14
 222:	f1 01       	movw	r30, r2
 224:	84 91       	lpm	r24, Z
 226:	47 fc       	sbrc	r4, 7
 228:	80 81       	ld	r24, Z
 22a:	88 23       	and	r24, r24
 22c:	09 f4       	brne	.+2      	; 0x230 <vfprintf+0x3e>
 22e:	4f c3       	rjmp	.+1694   	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 230:	44 2d       	mov	r20, r4
 232:	91 01       	movw	r18, r2
 234:	2f 5f       	subi	r18, 0xFF	; 255
 236:	3f 4f       	sbci	r19, 0xFF	; 255
 238:	4f 4f       	sbci	r20, 0xFF	; 255
 23a:	85 32       	cpi	r24, 0x25	; 37
 23c:	19 f0       	breq	.+6      	; 0x244 <vfprintf+0x52>
 23e:	19 01       	movw	r2, r18
 240:	44 2e       	mov	r4, r20
 242:	0a c0       	rjmp	.+20     	; 0x258 <vfprintf+0x66>
 244:	f9 01       	movw	r30, r18
 246:	84 91       	lpm	r24, Z
 248:	47 fd       	sbrc	r20, 7
 24a:	80 81       	ld	r24, Z
 24c:	92 e0       	ldi	r25, 0x02	; 2
 24e:	29 0e       	add	r2, r25
 250:	31 1c       	adc	r3, r1
 252:	41 1c       	adc	r4, r1
 254:	85 32       	cpi	r24, 0x25	; 37
 256:	49 f4       	brne	.+18     	; 0x26a <vfprintf+0x78>
 258:	b6 01       	movw	r22, r12
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 260:	bf 86       	std	Y+15, r11	; 0x0f
 262:	ae 86       	std	Y+14, r10	; 0x0e
 264:	ae 84       	ldd	r10, Y+14	; 0x0e
 266:	bf 84       	ldd	r11, Y+15	; 0x0f
 268:	dc cf       	rjmp	.-72     	; 0x222 <vfprintf+0x30>
 26a:	10 e0       	ldi	r17, 0x00	; 0
 26c:	f1 2c       	mov	r15, r1
 26e:	00 e0       	ldi	r16, 0x00	; 0
 270:	00 32       	cpi	r16, 0x20	; 32
 272:	a0 f4       	brcc	.+40     	; 0x29c <vfprintf+0xaa>
 274:	8b 32       	cpi	r24, 0x2B	; 43
 276:	69 f0       	breq	.+26     	; 0x292 <vfprintf+0xa0>
 278:	30 f4       	brcc	.+12     	; 0x286 <vfprintf+0x94>
 27a:	80 32       	cpi	r24, 0x20	; 32
 27c:	59 f0       	breq	.+22     	; 0x294 <vfprintf+0xa2>
 27e:	83 32       	cpi	r24, 0x23	; 35
 280:	69 f4       	brne	.+26     	; 0x29c <vfprintf+0xaa>
 282:	00 61       	ori	r16, 0x10	; 16
 284:	2c c0       	rjmp	.+88     	; 0x2de <vfprintf+0xec>
 286:	8d 32       	cpi	r24, 0x2D	; 45
 288:	39 f0       	breq	.+14     	; 0x298 <vfprintf+0xa6>
 28a:	80 33       	cpi	r24, 0x30	; 48
 28c:	39 f4       	brne	.+14     	; 0x29c <vfprintf+0xaa>
 28e:	01 60       	ori	r16, 0x01	; 1
 290:	26 c0       	rjmp	.+76     	; 0x2de <vfprintf+0xec>
 292:	02 60       	ori	r16, 0x02	; 2
 294:	04 60       	ori	r16, 0x04	; 4
 296:	23 c0       	rjmp	.+70     	; 0x2de <vfprintf+0xec>
 298:	08 60       	ori	r16, 0x08	; 8
 29a:	21 c0       	rjmp	.+66     	; 0x2de <vfprintf+0xec>
 29c:	07 fd       	sbrc	r16, 7
 29e:	29 c0       	rjmp	.+82     	; 0x2f2 <vfprintf+0x100>
 2a0:	90 ed       	ldi	r25, 0xD0	; 208
 2a2:	98 0f       	add	r25, r24
 2a4:	9a 30       	cpi	r25, 0x0A	; 10
 2a6:	78 f4       	brcc	.+30     	; 0x2c6 <vfprintf+0xd4>
 2a8:	06 ff       	sbrs	r16, 6
 2aa:	06 c0       	rjmp	.+12     	; 0x2b8 <vfprintf+0xc6>
 2ac:	aa e0       	ldi	r26, 0x0A	; 10
 2ae:	1a 9f       	mul	r17, r26
 2b0:	90 0d       	add	r25, r0
 2b2:	11 24       	eor	r1, r1
 2b4:	19 2f       	mov	r17, r25
 2b6:	13 c0       	rjmp	.+38     	; 0x2de <vfprintf+0xec>
 2b8:	ea e0       	ldi	r30, 0x0A	; 10
 2ba:	fe 9e       	mul	r15, r30
 2bc:	90 0d       	add	r25, r0
 2be:	11 24       	eor	r1, r1
 2c0:	f9 2e       	mov	r15, r25
 2c2:	00 62       	ori	r16, 0x20	; 32
 2c4:	0c c0       	rjmp	.+24     	; 0x2de <vfprintf+0xec>
 2c6:	8e 32       	cpi	r24, 0x2E	; 46
 2c8:	21 f4       	brne	.+8      	; 0x2d2 <vfprintf+0xe0>
 2ca:	06 fd       	sbrc	r16, 6
 2cc:	00 c3       	rjmp	.+1536   	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 2ce:	00 64       	ori	r16, 0x40	; 64
 2d0:	06 c0       	rjmp	.+12     	; 0x2de <vfprintf+0xec>
 2d2:	8c 36       	cpi	r24, 0x6C	; 108
 2d4:	11 f4       	brne	.+4      	; 0x2da <vfprintf+0xe8>
 2d6:	00 68       	ori	r16, 0x80	; 128
 2d8:	02 c0       	rjmp	.+4      	; 0x2de <vfprintf+0xec>
 2da:	88 36       	cpi	r24, 0x68	; 104
 2dc:	51 f4       	brne	.+20     	; 0x2f2 <vfprintf+0x100>
 2de:	f1 01       	movw	r30, r2
 2e0:	84 91       	lpm	r24, Z
 2e2:	47 fc       	sbrc	r4, 7
 2e4:	80 81       	ld	r24, Z
 2e6:	ff ef       	ldi	r31, 0xFF	; 255
 2e8:	2f 1a       	sub	r2, r31
 2ea:	3f 0a       	sbc	r3, r31
 2ec:	4f 0a       	sbc	r4, r31
 2ee:	81 11       	cpse	r24, r1
 2f0:	bf cf       	rjmp	.-130    	; 0x270 <vfprintf+0x7e>
 2f2:	9b eb       	ldi	r25, 0xBB	; 187
 2f4:	98 0f       	add	r25, r24
 2f6:	93 30       	cpi	r25, 0x03	; 3
 2f8:	18 f4       	brcc	.+6      	; 0x300 <vfprintf+0x10e>
 2fa:	00 61       	ori	r16, 0x10	; 16
 2fc:	80 5e       	subi	r24, 0xE0	; 224
 2fe:	06 c0       	rjmp	.+12     	; 0x30c <vfprintf+0x11a>
 300:	9b e9       	ldi	r25, 0x9B	; 155
 302:	98 0f       	add	r25, r24
 304:	93 30       	cpi	r25, 0x03	; 3
 306:	08 f0       	brcs	.+2      	; 0x30a <vfprintf+0x118>
 308:	66 c1       	rjmp	.+716    	; 0x5d6 <__EEPROM_REGION_LENGTH__+0x1d6>
 30a:	0f 7e       	andi	r16, 0xEF	; 239
 30c:	06 ff       	sbrs	r16, 6
 30e:	16 e0       	ldi	r17, 0x06	; 6
 310:	0f 73       	andi	r16, 0x3F	; 63
 312:	70 2e       	mov	r7, r16
 314:	85 36       	cpi	r24, 0x65	; 101
 316:	21 f4       	brne	.+8      	; 0x320 <vfprintf+0x12e>
 318:	20 2f       	mov	r18, r16
 31a:	20 64       	ori	r18, 0x40	; 64
 31c:	72 2e       	mov	r7, r18
 31e:	08 c0       	rjmp	.+16     	; 0x330 <vfprintf+0x13e>
 320:	86 36       	cpi	r24, 0x66	; 102
 322:	21 f4       	brne	.+8      	; 0x32c <vfprintf+0x13a>
 324:	80 2f       	mov	r24, r16
 326:	80 68       	ori	r24, 0x80	; 128
 328:	78 2e       	mov	r7, r24
 32a:	02 c0       	rjmp	.+4      	; 0x330 <vfprintf+0x13e>
 32c:	11 11       	cpse	r17, r1
 32e:	11 50       	subi	r17, 0x01	; 1
 330:	77 fe       	sbrs	r7, 7
 332:	07 c0       	rjmp	.+14     	; 0x342 <vfprintf+0x150>
 334:	1c 33       	cpi	r17, 0x3C	; 60
 336:	50 f4       	brcc	.+20     	; 0x34c <vfprintf+0x15a>
 338:	ee 24       	eor	r14, r14
 33a:	e3 94       	inc	r14
 33c:	e1 0e       	add	r14, r17
 33e:	27 e0       	ldi	r18, 0x07	; 7
 340:	0b c0       	rjmp	.+22     	; 0x358 <vfprintf+0x166>
 342:	18 30       	cpi	r17, 0x08	; 8
 344:	38 f0       	brcs	.+14     	; 0x354 <vfprintf+0x162>
 346:	27 e0       	ldi	r18, 0x07	; 7
 348:	17 e0       	ldi	r17, 0x07	; 7
 34a:	05 c0       	rjmp	.+10     	; 0x356 <vfprintf+0x164>
 34c:	27 e0       	ldi	r18, 0x07	; 7
 34e:	6c e3       	ldi	r22, 0x3C	; 60
 350:	e6 2e       	mov	r14, r22
 352:	02 c0       	rjmp	.+4      	; 0x358 <vfprintf+0x166>
 354:	21 2f       	mov	r18, r17
 356:	e1 2c       	mov	r14, r1
 358:	f5 01       	movw	r30, r10
 35a:	34 96       	adiw	r30, 0x04	; 4
 35c:	ff 87       	std	Y+15, r31	; 0x0f
 35e:	ee 87       	std	Y+14, r30	; 0x0e
 360:	f5 01       	movw	r30, r10
 362:	60 81       	ld	r22, Z
 364:	71 81       	ldd	r23, Z+1	; 0x01
 366:	82 81       	ldd	r24, Z+2	; 0x02
 368:	93 81       	ldd	r25, Z+3	; 0x03
 36a:	0e 2d       	mov	r16, r14
 36c:	ae 01       	movw	r20, r28
 36e:	4f 5f       	subi	r20, 0xFF	; 255
 370:	5f 4f       	sbci	r21, 0xFF	; 255
 372:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__ftoa_engine>
 376:	5c 01       	movw	r10, r24
 378:	59 80       	ldd	r5, Y+1	; 0x01
 37a:	50 fe       	sbrs	r5, 0
 37c:	02 c0       	rjmp	.+4      	; 0x382 <vfprintf+0x190>
 37e:	53 fe       	sbrs	r5, 3
 380:	06 c0       	rjmp	.+12     	; 0x38e <vfprintf+0x19c>
 382:	71 fc       	sbrc	r7, 1
 384:	06 c0       	rjmp	.+12     	; 0x392 <vfprintf+0x1a0>
 386:	72 fe       	sbrs	r7, 2
 388:	06 c0       	rjmp	.+12     	; 0x396 <vfprintf+0x1a4>
 38a:	00 e2       	ldi	r16, 0x20	; 32
 38c:	05 c0       	rjmp	.+10     	; 0x398 <vfprintf+0x1a6>
 38e:	0d e2       	ldi	r16, 0x2D	; 45
 390:	03 c0       	rjmp	.+6      	; 0x398 <vfprintf+0x1a6>
 392:	0b e2       	ldi	r16, 0x2B	; 43
 394:	01 c0       	rjmp	.+2      	; 0x398 <vfprintf+0x1a6>
 396:	00 e0       	ldi	r16, 0x00	; 0
 398:	85 2d       	mov	r24, r5
 39a:	8c 70       	andi	r24, 0x0C	; 12
 39c:	19 f0       	breq	.+6      	; 0x3a4 <vfprintf+0x1b2>
 39e:	01 11       	cpse	r16, r1
 3a0:	73 c2       	rjmp	.+1254   	; 0x888 <__DATA_REGION_LENGTH__+0x88>
 3a2:	be c2       	rjmp	.+1404   	; 0x920 <__stack+0x21>
 3a4:	77 fe       	sbrs	r7, 7
 3a6:	0f c0       	rjmp	.+30     	; 0x3c6 <vfprintf+0x1d4>
 3a8:	ea 0c       	add	r14, r10
 3aa:	54 fe       	sbrs	r5, 4
 3ac:	04 c0       	rjmp	.+8      	; 0x3b6 <vfprintf+0x1c4>
 3ae:	8a 81       	ldd	r24, Y+2	; 0x02
 3b0:	81 33       	cpi	r24, 0x31	; 49
 3b2:	09 f4       	brne	.+2      	; 0x3b6 <vfprintf+0x1c4>
 3b4:	ea 94       	dec	r14
 3b6:	1e 14       	cp	r1, r14
 3b8:	74 f5       	brge	.+92     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 3ba:	28 e0       	ldi	r18, 0x08	; 8
 3bc:	2e 15       	cp	r18, r14
 3be:	78 f5       	brcc	.+94     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3c0:	38 e0       	ldi	r19, 0x08	; 8
 3c2:	e3 2e       	mov	r14, r19
 3c4:	2c c0       	rjmp	.+88     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3c6:	76 fc       	sbrc	r7, 6
 3c8:	2a c0       	rjmp	.+84     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3ca:	81 2f       	mov	r24, r17
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	8a 15       	cp	r24, r10
 3d0:	9b 05       	cpc	r25, r11
 3d2:	9c f0       	brlt	.+38     	; 0x3fa <vfprintf+0x208>
 3d4:	8c ef       	ldi	r24, 0xFC	; 252
 3d6:	a8 16       	cp	r10, r24
 3d8:	8f ef       	ldi	r24, 0xFF	; 255
 3da:	b8 06       	cpc	r11, r24
 3dc:	74 f0       	brlt	.+28     	; 0x3fa <vfprintf+0x208>
 3de:	97 2d       	mov	r25, r7
 3e0:	90 68       	ori	r25, 0x80	; 128
 3e2:	79 2e       	mov	r7, r25
 3e4:	0a c0       	rjmp	.+20     	; 0x3fa <vfprintf+0x208>
 3e6:	e2 e0       	ldi	r30, 0x02	; 2
 3e8:	f0 e0       	ldi	r31, 0x00	; 0
 3ea:	ec 0f       	add	r30, r28
 3ec:	fd 1f       	adc	r31, r29
 3ee:	e1 0f       	add	r30, r17
 3f0:	f1 1d       	adc	r31, r1
 3f2:	80 81       	ld	r24, Z
 3f4:	80 33       	cpi	r24, 0x30	; 48
 3f6:	19 f4       	brne	.+6      	; 0x3fe <vfprintf+0x20c>
 3f8:	11 50       	subi	r17, 0x01	; 1
 3fa:	11 11       	cpse	r17, r1
 3fc:	f4 cf       	rjmp	.-24     	; 0x3e6 <vfprintf+0x1f4>
 3fe:	77 fe       	sbrs	r7, 7
 400:	0e c0       	rjmp	.+28     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 402:	ee 24       	eor	r14, r14
 404:	e3 94       	inc	r14
 406:	e1 0e       	add	r14, r17
 408:	81 2f       	mov	r24, r17
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	a8 16       	cp	r10, r24
 40e:	b9 06       	cpc	r11, r25
 410:	2c f4       	brge	.+10     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 412:	1a 19       	sub	r17, r10
 414:	04 c0       	rjmp	.+8      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 416:	ee 24       	eor	r14, r14
 418:	e3 94       	inc	r14
 41a:	01 c0       	rjmp	.+2      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 41c:	10 e0       	ldi	r17, 0x00	; 0
 41e:	77 fe       	sbrs	r7, 7
 420:	06 c0       	rjmp	.+12     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 422:	1a 14       	cp	r1, r10
 424:	1b 04       	cpc	r1, r11
 426:	34 f4       	brge	.+12     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 428:	c5 01       	movw	r24, r10
 42a:	01 96       	adiw	r24, 0x01	; 1
 42c:	05 c0       	rjmp	.+10     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 42e:	85 e0       	ldi	r24, 0x05	; 5
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	02 c0       	rjmp	.+4      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	01 11       	cpse	r16, r1
 43a:	01 96       	adiw	r24, 0x01	; 1
 43c:	11 23       	and	r17, r17
 43e:	31 f0       	breq	.+12     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 440:	21 2f       	mov	r18, r17
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	2f 5f       	subi	r18, 0xFF	; 255
 446:	3f 4f       	sbci	r19, 0xFF	; 255
 448:	82 0f       	add	r24, r18
 44a:	93 1f       	adc	r25, r19
 44c:	2f 2d       	mov	r18, r15
 44e:	30 e0       	ldi	r19, 0x00	; 0
 450:	82 17       	cp	r24, r18
 452:	93 07       	cpc	r25, r19
 454:	14 f4       	brge	.+4      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 456:	f8 1a       	sub	r15, r24
 458:	01 c0       	rjmp	.+2      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 45a:	f1 2c       	mov	r15, r1
 45c:	87 2d       	mov	r24, r7
 45e:	89 70       	andi	r24, 0x09	; 9
 460:	49 f4       	brne	.+18     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 462:	ff 20       	and	r15, r15
 464:	39 f0       	breq	.+14     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 466:	b6 01       	movw	r22, r12
 468:	80 e2       	ldi	r24, 0x20	; 32
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 470:	fa 94       	dec	r15
 472:	f7 cf       	rjmp	.-18     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 474:	00 23       	and	r16, r16
 476:	29 f0       	breq	.+10     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 478:	b6 01       	movw	r22, r12
 47a:	80 2f       	mov	r24, r16
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 482:	73 fc       	sbrc	r7, 3
 484:	09 c0       	rjmp	.+18     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 486:	ff 20       	and	r15, r15
 488:	39 f0       	breq	.+14     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 48a:	b6 01       	movw	r22, r12
 48c:	80 e3       	ldi	r24, 0x30	; 48
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 494:	fa 94       	dec	r15
 496:	f7 cf       	rjmp	.-18     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 498:	77 fe       	sbrs	r7, 7
 49a:	49 c0       	rjmp	.+146    	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 49c:	35 01       	movw	r6, r10
 49e:	b7 fe       	sbrs	r11, 7
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4a2:	61 2c       	mov	r6, r1
 4a4:	71 2c       	mov	r7, r1
 4a6:	c5 01       	movw	r24, r10
 4a8:	86 19       	sub	r24, r6
 4aa:	97 09       	sbc	r25, r7
 4ac:	88 24       	eor	r8, r8
 4ae:	83 94       	inc	r8
 4b0:	91 2c       	mov	r9, r1
 4b2:	8c 0e       	add	r8, r28
 4b4:	9d 1e       	adc	r9, r29
 4b6:	88 0e       	add	r8, r24
 4b8:	99 1e       	adc	r9, r25
 4ba:	f5 01       	movw	r30, r10
 4bc:	ee 19       	sub	r30, r14
 4be:	f1 09       	sbc	r31, r1
 4c0:	f9 8b       	std	Y+17, r31	; 0x11
 4c2:	e8 8b       	std	Y+16, r30	; 0x10
 4c4:	01 2f       	mov	r16, r17
 4c6:	10 e0       	ldi	r17, 0x00	; 0
 4c8:	11 95       	neg	r17
 4ca:	01 95       	neg	r16
 4cc:	11 09       	sbc	r17, r1
 4ce:	ff ef       	ldi	r31, 0xFF	; 255
 4d0:	6f 16       	cp	r6, r31
 4d2:	7f 06       	cpc	r7, r31
 4d4:	29 f4       	brne	.+10     	; 0x4e0 <__EEPROM_REGION_LENGTH__+0xe0>
 4d6:	b6 01       	movw	r22, r12
 4d8:	8e e2       	ldi	r24, 0x2E	; 46
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 4e0:	a6 14       	cp	r10, r6
 4e2:	b7 04       	cpc	r11, r7
 4e4:	44 f0       	brlt	.+16     	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
 4e6:	88 89       	ldd	r24, Y+16	; 0x10
 4e8:	99 89       	ldd	r25, Y+17	; 0x11
 4ea:	86 15       	cp	r24, r6
 4ec:	97 05       	cpc	r25, r7
 4ee:	1c f4       	brge	.+6      	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
 4f0:	f4 01       	movw	r30, r8
 4f2:	81 81       	ldd	r24, Z+1	; 0x01
 4f4:	01 c0       	rjmp	.+2      	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 4f6:	80 e3       	ldi	r24, 0x30	; 48
 4f8:	f1 e0       	ldi	r31, 0x01	; 1
 4fa:	6f 1a       	sub	r6, r31
 4fc:	71 08       	sbc	r7, r1
 4fe:	2f ef       	ldi	r18, 0xFF	; 255
 500:	82 1a       	sub	r8, r18
 502:	92 0a       	sbc	r9, r18
 504:	60 16       	cp	r6, r16
 506:	71 06       	cpc	r7, r17
 508:	2c f0       	brlt	.+10     	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
 50a:	b6 01       	movw	r22, r12
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 512:	dd cf       	rjmp	.-70     	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 514:	a6 14       	cp	r10, r6
 516:	b7 04       	cpc	r11, r7
 518:	39 f4       	brne	.+14     	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 51a:	9a 81       	ldd	r25, Y+2	; 0x02
 51c:	96 33       	cpi	r25, 0x36	; 54
 51e:	18 f4       	brcc	.+6      	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 520:	95 33       	cpi	r25, 0x35	; 53
 522:	11 f4       	brne	.+4      	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 524:	54 fe       	sbrs	r5, 4
 526:	81 e3       	ldi	r24, 0x31	; 49
 528:	b6 01       	movw	r22, r12
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	51 c0       	rjmp	.+162    	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 52e:	8a 81       	ldd	r24, Y+2	; 0x02
 530:	81 33       	cpi	r24, 0x31	; 49
 532:	19 f0       	breq	.+6      	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
 534:	95 2d       	mov	r25, r5
 536:	9f 7e       	andi	r25, 0xEF	; 239
 538:	59 2e       	mov	r5, r25
 53a:	b6 01       	movw	r22, r12
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 542:	11 11       	cpse	r17, r1
 544:	05 c0       	rjmp	.+10     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
 546:	74 fc       	sbrc	r7, 4
 548:	1c c0       	rjmp	.+56     	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
 54a:	85 e6       	ldi	r24, 0x65	; 101
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	1b c0       	rjmp	.+54     	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
 550:	b6 01       	movw	r22, r12
 552:	8e e2       	ldi	r24, 0x2E	; 46
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 55a:	02 e0       	ldi	r16, 0x02	; 2
 55c:	01 0f       	add	r16, r17
 55e:	82 e0       	ldi	r24, 0x02	; 2
 560:	11 e0       	ldi	r17, 0x01	; 1
 562:	18 0f       	add	r17, r24
 564:	e1 e0       	ldi	r30, 0x01	; 1
 566:	f0 e0       	ldi	r31, 0x00	; 0
 568:	ec 0f       	add	r30, r28
 56a:	fd 1f       	adc	r31, r29
 56c:	e8 0f       	add	r30, r24
 56e:	f1 1d       	adc	r31, r1
 570:	80 81       	ld	r24, Z
 572:	b6 01       	movw	r22, r12
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 57a:	81 2f       	mov	r24, r17
 57c:	10 13       	cpse	r17, r16
 57e:	f0 cf       	rjmp	.-32     	; 0x560 <__EEPROM_REGION_LENGTH__+0x160>
 580:	e2 cf       	rjmp	.-60     	; 0x546 <__EEPROM_REGION_LENGTH__+0x146>
 582:	85 e4       	ldi	r24, 0x45	; 69
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	b6 01       	movw	r22, r12
 588:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 58c:	b7 fc       	sbrc	r11, 7
 58e:	05 c0       	rjmp	.+10     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 590:	a1 14       	cp	r10, r1
 592:	b1 04       	cpc	r11, r1
 594:	39 f4       	brne	.+14     	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
 596:	54 fe       	sbrs	r5, 4
 598:	05 c0       	rjmp	.+10     	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
 59a:	b1 94       	neg	r11
 59c:	a1 94       	neg	r10
 59e:	b1 08       	sbc	r11, r1
 5a0:	8d e2       	ldi	r24, 0x2D	; 45
 5a2:	01 c0       	rjmp	.+2      	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 5a4:	8b e2       	ldi	r24, 0x2B	; 43
 5a6:	b6 01       	movw	r22, r12
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 5ae:	80 e3       	ldi	r24, 0x30	; 48
 5b0:	ea e0       	ldi	r30, 0x0A	; 10
 5b2:	ae 16       	cp	r10, r30
 5b4:	b1 04       	cpc	r11, r1
 5b6:	2c f0       	brlt	.+10     	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
 5b8:	8f 5f       	subi	r24, 0xFF	; 255
 5ba:	aa e0       	ldi	r26, 0x0A	; 10
 5bc:	aa 1a       	sub	r10, r26
 5be:	b1 08       	sbc	r11, r1
 5c0:	f7 cf       	rjmp	.-18     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 5c2:	b6 01       	movw	r22, r12
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 5ca:	b6 01       	movw	r22, r12
 5cc:	c5 01       	movw	r24, r10
 5ce:	c0 96       	adiw	r24, 0x30	; 48
 5d0:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 5d4:	72 c1       	rjmp	.+740    	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 5d6:	83 36       	cpi	r24, 0x63	; 99
 5d8:	31 f0       	breq	.+12     	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5da:	83 37       	cpi	r24, 0x73	; 115
 5dc:	91 f0       	breq	.+36     	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
 5de:	83 35       	cpi	r24, 0x53	; 83
 5e0:	09 f0       	breq	.+2      	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
 5e2:	5d c0       	rjmp	.+186    	; 0x69e <__EEPROM_REGION_LENGTH__+0x29e>
 5e4:	24 c0       	rjmp	.+72     	; 0x62e <__EEPROM_REGION_LENGTH__+0x22e>
 5e6:	c5 01       	movw	r24, r10
 5e8:	02 96       	adiw	r24, 0x02	; 2
 5ea:	9f 87       	std	Y+15, r25	; 0x0f
 5ec:	8e 87       	std	Y+14, r24	; 0x0e
 5ee:	f5 01       	movw	r30, r10
 5f0:	80 81       	ld	r24, Z
 5f2:	89 83       	std	Y+1, r24	; 0x01
 5f4:	6a 88       	ldd	r6, Y+18	; 0x12
 5f6:	7b 88       	ldd	r7, Y+19	; 0x13
 5f8:	8c 88       	ldd	r8, Y+20	; 0x14
 5fa:	aa 24       	eor	r10, r10
 5fc:	a3 94       	inc	r10
 5fe:	b1 2c       	mov	r11, r1
 600:	14 c0       	rjmp	.+40     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
 602:	c5 01       	movw	r24, r10
 604:	03 96       	adiw	r24, 0x03	; 3
 606:	9f 87       	std	Y+15, r25	; 0x0f
 608:	8e 87       	std	Y+14, r24	; 0x0e
 60a:	f5 01       	movw	r30, r10
 60c:	60 80       	ld	r6, Z
 60e:	71 80       	ldd	r7, Z+1	; 0x01
 610:	82 80       	ldd	r8, Z+2	; 0x02
 612:	06 ff       	sbrs	r16, 6
 614:	03 c0       	rjmp	.+6      	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
 616:	41 2f       	mov	r20, r17
 618:	50 e0       	ldi	r21, 0x00	; 0
 61a:	02 c0       	rjmp	.+4      	; 0x620 <__EEPROM_REGION_LENGTH__+0x220>
 61c:	4f ef       	ldi	r20, 0xFF	; 255
 61e:	5f ef       	ldi	r21, 0xFF	; 255
 620:	88 2d       	mov	r24, r8
 622:	b3 01       	movw	r22, r6
 624:	0e 94 b8 0e 	call	0x1d70	; 0x1d70 <strnlen>
 628:	5c 01       	movw	r10, r24
 62a:	0f 77       	andi	r16, 0x7F	; 127
 62c:	15 c0       	rjmp	.+42     	; 0x658 <__EEPROM_REGION_LENGTH__+0x258>
 62e:	c5 01       	movw	r24, r10
 630:	03 96       	adiw	r24, 0x03	; 3
 632:	9f 87       	std	Y+15, r25	; 0x0f
 634:	8e 87       	std	Y+14, r24	; 0x0e
 636:	f5 01       	movw	r30, r10
 638:	60 80       	ld	r6, Z
 63a:	71 80       	ldd	r7, Z+1	; 0x01
 63c:	82 80       	ldd	r8, Z+2	; 0x02
 63e:	06 ff       	sbrs	r16, 6
 640:	03 c0       	rjmp	.+6      	; 0x648 <__EEPROM_REGION_LENGTH__+0x248>
 642:	41 2f       	mov	r20, r17
 644:	50 e0       	ldi	r21, 0x00	; 0
 646:	02 c0       	rjmp	.+4      	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 648:	4f ef       	ldi	r20, 0xFF	; 255
 64a:	5f ef       	ldi	r21, 0xFF	; 255
 64c:	88 2d       	mov	r24, r8
 64e:	b3 01       	movw	r22, r6
 650:	0e 94 b8 0e 	call	0x1d70	; 0x1d70 <strnlen>
 654:	5c 01       	movw	r10, r24
 656:	00 68       	ori	r16, 0x80	; 128
 658:	03 fd       	sbrc	r16, 3
 65a:	1d c0       	rjmp	.+58     	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
 65c:	8f 2d       	mov	r24, r15
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	a8 16       	cp	r10, r24
 662:	b9 06       	cpc	r11, r25
 664:	c0 f4       	brcc	.+48     	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
 666:	b6 01       	movw	r22, r12
 668:	80 e2       	ldi	r24, 0x20	; 32
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 670:	fa 94       	dec	r15
 672:	f4 cf       	rjmp	.-24     	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
 674:	f3 01       	movw	r30, r6
 676:	84 91       	lpm	r24, Z
 678:	87 fc       	sbrc	r8, 7
 67a:	80 81       	ld	r24, Z
 67c:	ff ef       	ldi	r31, 0xFF	; 255
 67e:	6f 1a       	sub	r6, r31
 680:	7f 0a       	sbc	r7, r31
 682:	8f 0a       	sbc	r8, r31
 684:	b6 01       	movw	r22, r12
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 68c:	f1 10       	cpse	r15, r1
 68e:	fa 94       	dec	r15
 690:	21 e0       	ldi	r18, 0x01	; 1
 692:	a2 1a       	sub	r10, r18
 694:	b1 08       	sbc	r11, r1
 696:	a1 14       	cp	r10, r1
 698:	b1 04       	cpc	r11, r1
 69a:	61 f7       	brne	.-40     	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
 69c:	0e c1       	rjmp	.+540    	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 69e:	84 36       	cpi	r24, 0x64	; 100
 6a0:	11 f0       	breq	.+4      	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
 6a2:	89 36       	cpi	r24, 0x69	; 105
 6a4:	79 f5       	brne	.+94     	; 0x704 <__EEPROM_REGION_LENGTH__+0x304>
 6a6:	c5 01       	movw	r24, r10
 6a8:	07 ff       	sbrs	r16, 7
 6aa:	09 c0       	rjmp	.+18     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
 6ac:	04 96       	adiw	r24, 0x04	; 4
 6ae:	9f 87       	std	Y+15, r25	; 0x0f
 6b0:	8e 87       	std	Y+14, r24	; 0x0e
 6b2:	f5 01       	movw	r30, r10
 6b4:	60 81       	ld	r22, Z
 6b6:	71 81       	ldd	r23, Z+1	; 0x01
 6b8:	82 81       	ldd	r24, Z+2	; 0x02
 6ba:	93 81       	ldd	r25, Z+3	; 0x03
 6bc:	0a c0       	rjmp	.+20     	; 0x6d2 <__EEPROM_REGION_LENGTH__+0x2d2>
 6be:	02 96       	adiw	r24, 0x02	; 2
 6c0:	9f 87       	std	Y+15, r25	; 0x0f
 6c2:	8e 87       	std	Y+14, r24	; 0x0e
 6c4:	f5 01       	movw	r30, r10
 6c6:	60 81       	ld	r22, Z
 6c8:	71 81       	ldd	r23, Z+1	; 0x01
 6ca:	07 2e       	mov	r0, r23
 6cc:	00 0c       	add	r0, r0
 6ce:	88 0b       	sbc	r24, r24
 6d0:	99 0b       	sbc	r25, r25
 6d2:	0f 76       	andi	r16, 0x6F	; 111
 6d4:	e0 2e       	mov	r14, r16
 6d6:	97 ff       	sbrs	r25, 7
 6d8:	0a c0       	rjmp	.+20     	; 0x6ee <__EEPROM_REGION_LENGTH__+0x2ee>
 6da:	90 95       	com	r25
 6dc:	80 95       	com	r24
 6de:	70 95       	com	r23
 6e0:	61 95       	neg	r22
 6e2:	7f 4f       	sbci	r23, 0xFF	; 255
 6e4:	8f 4f       	sbci	r24, 0xFF	; 255
 6e6:	9f 4f       	sbci	r25, 0xFF	; 255
 6e8:	f0 2f       	mov	r31, r16
 6ea:	f0 68       	ori	r31, 0x80	; 128
 6ec:	ef 2e       	mov	r14, r31
 6ee:	2a e0       	ldi	r18, 0x0A	; 10
 6f0:	30 e0       	ldi	r19, 0x00	; 0
 6f2:	ae 01       	movw	r20, r28
 6f4:	4f 5f       	subi	r20, 0xFF	; 255
 6f6:	5f 4f       	sbci	r21, 0xFF	; 255
 6f8:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__ultoa_invert>
 6fc:	a8 2e       	mov	r10, r24
 6fe:	2c 85       	ldd	r18, Y+12	; 0x0c
 700:	a2 1a       	sub	r10, r18
 702:	4b c0       	rjmp	.+150    	; 0x79a <__EEPROM_REGION_LENGTH__+0x39a>
 704:	85 37       	cpi	r24, 0x75	; 117
 706:	29 f4       	brne	.+10     	; 0x712 <__EEPROM_REGION_LENGTH__+0x312>
 708:	0f 7e       	andi	r16, 0xEF	; 239
 70a:	e0 2e       	mov	r14, r16
 70c:	2a e0       	ldi	r18, 0x0A	; 10
 70e:	30 e0       	ldi	r19, 0x00	; 0
 710:	25 c0       	rjmp	.+74     	; 0x75c <__EEPROM_REGION_LENGTH__+0x35c>
 712:	90 2f       	mov	r25, r16
 714:	99 7f       	andi	r25, 0xF9	; 249
 716:	e9 2e       	mov	r14, r25
 718:	8f 36       	cpi	r24, 0x6F	; 111
 71a:	c1 f0       	breq	.+48     	; 0x74c <__EEPROM_REGION_LENGTH__+0x34c>
 71c:	18 f4       	brcc	.+6      	; 0x724 <__EEPROM_REGION_LENGTH__+0x324>
 71e:	88 35       	cpi	r24, 0x58	; 88
 720:	79 f0       	breq	.+30     	; 0x740 <__EEPROM_REGION_LENGTH__+0x340>
 722:	d5 c0       	rjmp	.+426    	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 724:	80 37       	cpi	r24, 0x70	; 112
 726:	19 f0       	breq	.+6      	; 0x72e <__EEPROM_REGION_LENGTH__+0x32e>
 728:	88 37       	cpi	r24, 0x78	; 120
 72a:	21 f0       	breq	.+8      	; 0x734 <__EEPROM_REGION_LENGTH__+0x334>
 72c:	d0 c0       	rjmp	.+416    	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 72e:	a9 2f       	mov	r26, r25
 730:	a0 61       	ori	r26, 0x10	; 16
 732:	ea 2e       	mov	r14, r26
 734:	e4 fe       	sbrs	r14, 4
 736:	0d c0       	rjmp	.+26     	; 0x752 <__EEPROM_REGION_LENGTH__+0x352>
 738:	ee 2d       	mov	r30, r14
 73a:	e4 60       	ori	r30, 0x04	; 4
 73c:	ee 2e       	mov	r14, r30
 73e:	09 c0       	rjmp	.+18     	; 0x752 <__EEPROM_REGION_LENGTH__+0x352>
 740:	04 ff       	sbrs	r16, 4
 742:	0a c0       	rjmp	.+20     	; 0x758 <__EEPROM_REGION_LENGTH__+0x358>
 744:	f9 2f       	mov	r31, r25
 746:	f6 60       	ori	r31, 0x06	; 6
 748:	ef 2e       	mov	r14, r31
 74a:	06 c0       	rjmp	.+12     	; 0x758 <__EEPROM_REGION_LENGTH__+0x358>
 74c:	28 e0       	ldi	r18, 0x08	; 8
 74e:	30 e0       	ldi	r19, 0x00	; 0
 750:	05 c0       	rjmp	.+10     	; 0x75c <__EEPROM_REGION_LENGTH__+0x35c>
 752:	20 e1       	ldi	r18, 0x10	; 16
 754:	30 e0       	ldi	r19, 0x00	; 0
 756:	02 c0       	rjmp	.+4      	; 0x75c <__EEPROM_REGION_LENGTH__+0x35c>
 758:	20 e1       	ldi	r18, 0x10	; 16
 75a:	32 e0       	ldi	r19, 0x02	; 2
 75c:	c5 01       	movw	r24, r10
 75e:	e7 fe       	sbrs	r14, 7
 760:	09 c0       	rjmp	.+18     	; 0x774 <__EEPROM_REGION_LENGTH__+0x374>
 762:	04 96       	adiw	r24, 0x04	; 4
 764:	9f 87       	std	Y+15, r25	; 0x0f
 766:	8e 87       	std	Y+14, r24	; 0x0e
 768:	f5 01       	movw	r30, r10
 76a:	60 81       	ld	r22, Z
 76c:	71 81       	ldd	r23, Z+1	; 0x01
 76e:	82 81       	ldd	r24, Z+2	; 0x02
 770:	93 81       	ldd	r25, Z+3	; 0x03
 772:	08 c0       	rjmp	.+16     	; 0x784 <__EEPROM_REGION_LENGTH__+0x384>
 774:	02 96       	adiw	r24, 0x02	; 2
 776:	9f 87       	std	Y+15, r25	; 0x0f
 778:	8e 87       	std	Y+14, r24	; 0x0e
 77a:	f5 01       	movw	r30, r10
 77c:	60 81       	ld	r22, Z
 77e:	71 81       	ldd	r23, Z+1	; 0x01
 780:	80 e0       	ldi	r24, 0x00	; 0
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	ae 01       	movw	r20, r28
 786:	4f 5f       	subi	r20, 0xFF	; 255
 788:	5f 4f       	sbci	r21, 0xFF	; 255
 78a:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__ultoa_invert>
 78e:	a8 2e       	mov	r10, r24
 790:	fc 85       	ldd	r31, Y+12	; 0x0c
 792:	af 1a       	sub	r10, r31
 794:	2e 2d       	mov	r18, r14
 796:	2f 77       	andi	r18, 0x7F	; 127
 798:	e2 2e       	mov	r14, r18
 79a:	e6 fe       	sbrs	r14, 6
 79c:	0b c0       	rjmp	.+22     	; 0x7b4 <__EEPROM_REGION_LENGTH__+0x3b4>
 79e:	0e 2d       	mov	r16, r14
 7a0:	0e 7f       	andi	r16, 0xFE	; 254
 7a2:	a1 16       	cp	r10, r17
 7a4:	50 f4       	brcc	.+20     	; 0x7ba <__EEPROM_REGION_LENGTH__+0x3ba>
 7a6:	e4 fe       	sbrs	r14, 4
 7a8:	0a c0       	rjmp	.+20     	; 0x7be <__EEPROM_REGION_LENGTH__+0x3be>
 7aa:	e2 fc       	sbrc	r14, 2
 7ac:	08 c0       	rjmp	.+16     	; 0x7be <__EEPROM_REGION_LENGTH__+0x3be>
 7ae:	0e 2d       	mov	r16, r14
 7b0:	0e 7e       	andi	r16, 0xEE	; 238
 7b2:	05 c0       	rjmp	.+10     	; 0x7be <__EEPROM_REGION_LENGTH__+0x3be>
 7b4:	ba 2c       	mov	r11, r10
 7b6:	0e 2d       	mov	r16, r14
 7b8:	03 c0       	rjmp	.+6      	; 0x7c0 <__EEPROM_REGION_LENGTH__+0x3c0>
 7ba:	ba 2c       	mov	r11, r10
 7bc:	01 c0       	rjmp	.+2      	; 0x7c0 <__EEPROM_REGION_LENGTH__+0x3c0>
 7be:	b1 2e       	mov	r11, r17
 7c0:	04 ff       	sbrs	r16, 4
 7c2:	0d c0       	rjmp	.+26     	; 0x7de <__EEPROM_REGION_LENGTH__+0x3de>
 7c4:	fe 01       	movw	r30, r28
 7c6:	ea 0d       	add	r30, r10
 7c8:	f1 1d       	adc	r31, r1
 7ca:	80 81       	ld	r24, Z
 7cc:	80 33       	cpi	r24, 0x30	; 48
 7ce:	11 f4       	brne	.+4      	; 0x7d4 <__EEPROM_REGION_LENGTH__+0x3d4>
 7d0:	09 7e       	andi	r16, 0xE9	; 233
 7d2:	09 c0       	rjmp	.+18     	; 0x7e6 <__EEPROM_REGION_LENGTH__+0x3e6>
 7d4:	02 ff       	sbrs	r16, 2
 7d6:	06 c0       	rjmp	.+12     	; 0x7e4 <__EEPROM_REGION_LENGTH__+0x3e4>
 7d8:	b3 94       	inc	r11
 7da:	b3 94       	inc	r11
 7dc:	04 c0       	rjmp	.+8      	; 0x7e6 <__EEPROM_REGION_LENGTH__+0x3e6>
 7de:	80 2f       	mov	r24, r16
 7e0:	86 78       	andi	r24, 0x86	; 134
 7e2:	09 f0       	breq	.+2      	; 0x7e6 <__EEPROM_REGION_LENGTH__+0x3e6>
 7e4:	b3 94       	inc	r11
 7e6:	03 fd       	sbrc	r16, 3
 7e8:	11 c0       	rjmp	.+34     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 7ea:	00 ff       	sbrs	r16, 0
 7ec:	06 c0       	rjmp	.+12     	; 0x7fa <__EEPROM_REGION_LENGTH__+0x3fa>
 7ee:	bf 14       	cp	r11, r15
 7f0:	88 f4       	brcc	.+34     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 7f2:	fa 0c       	add	r15, r10
 7f4:	1f 2d       	mov	r17, r15
 7f6:	1b 19       	sub	r17, r11
 7f8:	0e c0       	rjmp	.+28     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 7fa:	bf 14       	cp	r11, r15
 7fc:	60 f4       	brcc	.+24     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 7fe:	b6 01       	movw	r22, r12
 800:	80 e2       	ldi	r24, 0x20	; 32
 802:	90 e0       	ldi	r25, 0x00	; 0
 804:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 808:	b3 94       	inc	r11
 80a:	f7 cf       	rjmp	.-18     	; 0x7fa <__EEPROM_REGION_LENGTH__+0x3fa>
 80c:	bf 14       	cp	r11, r15
 80e:	18 f4       	brcc	.+6      	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 810:	fb 18       	sub	r15, r11
 812:	02 c0       	rjmp	.+4      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 814:	1a 2d       	mov	r17, r10
 816:	f1 2c       	mov	r15, r1
 818:	04 ff       	sbrs	r16, 4
 81a:	10 c0       	rjmp	.+32     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 81c:	b6 01       	movw	r22, r12
 81e:	80 e3       	ldi	r24, 0x30	; 48
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 826:	02 ff       	sbrs	r16, 2
 828:	17 c0       	rjmp	.+46     	; 0x858 <__DATA_REGION_LENGTH__+0x58>
 82a:	01 fd       	sbrc	r16, 1
 82c:	03 c0       	rjmp	.+6      	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 82e:	88 e7       	ldi	r24, 0x78	; 120
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	02 c0       	rjmp	.+4      	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 834:	88 e5       	ldi	r24, 0x58	; 88
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	b6 01       	movw	r22, r12
 83a:	0c c0       	rjmp	.+24     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 83c:	80 2f       	mov	r24, r16
 83e:	86 78       	andi	r24, 0x86	; 134
 840:	59 f0       	breq	.+22     	; 0x858 <__DATA_REGION_LENGTH__+0x58>
 842:	01 ff       	sbrs	r16, 1
 844:	02 c0       	rjmp	.+4      	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 846:	8b e2       	ldi	r24, 0x2B	; 43
 848:	01 c0       	rjmp	.+2      	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 84a:	80 e2       	ldi	r24, 0x20	; 32
 84c:	07 fd       	sbrc	r16, 7
 84e:	8d e2       	ldi	r24, 0x2D	; 45
 850:	b6 01       	movw	r22, r12
 852:	90 e0       	ldi	r25, 0x00	; 0
 854:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 858:	a1 16       	cp	r10, r17
 85a:	38 f4       	brcc	.+14     	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 85c:	b6 01       	movw	r22, r12
 85e:	80 e3       	ldi	r24, 0x30	; 48
 860:	90 e0       	ldi	r25, 0x00	; 0
 862:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 866:	11 50       	subi	r17, 0x01	; 1
 868:	f7 cf       	rjmp	.-18     	; 0x858 <__DATA_REGION_LENGTH__+0x58>
 86a:	aa 94       	dec	r10
 86c:	e1 e0       	ldi	r30, 0x01	; 1
 86e:	f0 e0       	ldi	r31, 0x00	; 0
 870:	ec 0f       	add	r30, r28
 872:	fd 1f       	adc	r31, r29
 874:	ea 0d       	add	r30, r10
 876:	f1 1d       	adc	r31, r1
 878:	80 81       	ld	r24, Z
 87a:	b6 01       	movw	r22, r12
 87c:	90 e0       	ldi	r25, 0x00	; 0
 87e:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 882:	a1 10       	cpse	r10, r1
 884:	f2 cf       	rjmp	.-28     	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 886:	19 c0       	rjmp	.+50     	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 888:	f4 e0       	ldi	r31, 0x04	; 4
 88a:	ff 15       	cp	r31, r15
 88c:	80 f5       	brcc	.+96     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 88e:	84 e0       	ldi	r24, 0x04	; 4
 890:	f8 1a       	sub	r15, r24
 892:	73 fe       	sbrs	r7, 3
 894:	23 c0       	rjmp	.+70     	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
 896:	01 11       	cpse	r16, r1
 898:	2b c0       	rjmp	.+86     	; 0x8f0 <__DATA_REGION_LENGTH__+0xf0>
 89a:	53 fe       	sbrs	r5, 3
 89c:	2f c0       	rjmp	.+94     	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 89e:	5d ee       	ldi	r21, 0xED	; 237
 8a0:	85 2e       	mov	r8, r21
 8a2:	51 e0       	ldi	r21, 0x01	; 1
 8a4:	95 2e       	mov	r9, r21
 8a6:	50 e0       	ldi	r21, 0x00	; 0
 8a8:	a5 2e       	mov	r10, r21
 8aa:	07 2d       	mov	r16, r7
 8ac:	00 71       	andi	r16, 0x10	; 16
 8ae:	f4 01       	movw	r30, r8
 8b0:	84 91       	lpm	r24, Z
 8b2:	a7 fc       	sbrc	r10, 7
 8b4:	80 81       	ld	r24, Z
 8b6:	81 11       	cpse	r24, r1
 8b8:	28 c0       	rjmp	.+80     	; 0x90a <__stack+0xb>
 8ba:	ff 20       	and	r15, r15
 8bc:	09 f4       	brne	.+2      	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
 8be:	d2 cc       	rjmp	.-1628   	; 0x264 <vfprintf+0x72>
 8c0:	b6 01       	movw	r22, r12
 8c2:	80 e2       	ldi	r24, 0x20	; 32
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 8ca:	fa 94       	dec	r15
 8cc:	f6 cf       	rjmp	.-20     	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 8ce:	f6 01       	movw	r30, r12
 8d0:	87 81       	ldd	r24, Z+7	; 0x07
 8d2:	90 85       	ldd	r25, Z+8	; 0x08
 8d4:	2c c0       	rjmp	.+88     	; 0x92e <__stack+0x2f>
 8d6:	8f ef       	ldi	r24, 0xFF	; 255
 8d8:	9f ef       	ldi	r25, 0xFF	; 255
 8da:	29 c0       	rjmp	.+82     	; 0x92e <__stack+0x2f>
 8dc:	b6 01       	movw	r22, r12
 8de:	80 e2       	ldi	r24, 0x20	; 32
 8e0:	90 e0       	ldi	r25, 0x00	; 0
 8e2:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 8e6:	fa 94       	dec	r15
 8e8:	f1 10       	cpse	r15, r1
 8ea:	f8 cf       	rjmp	.-16     	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
 8ec:	d4 cf       	rjmp	.-88     	; 0x896 <__DATA_REGION_LENGTH__+0x96>
 8ee:	f1 2c       	mov	r15, r1
 8f0:	b6 01       	movw	r22, r12
 8f2:	80 2f       	mov	r24, r16
 8f4:	90 e0       	ldi	r25, 0x00	; 0
 8f6:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 8fa:	cf cf       	rjmp	.-98     	; 0x89a <__DATA_REGION_LENGTH__+0x9a>
 8fc:	49 ee       	ldi	r20, 0xE9	; 233
 8fe:	84 2e       	mov	r8, r20
 900:	41 e0       	ldi	r20, 0x01	; 1
 902:	94 2e       	mov	r9, r20
 904:	40 e0       	ldi	r20, 0x00	; 0
 906:	a4 2e       	mov	r10, r20
 908:	d0 cf       	rjmp	.-96     	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
 90a:	01 11       	cpse	r16, r1
 90c:	80 52       	subi	r24, 0x20	; 32
 90e:	b6 01       	movw	r22, r12
 910:	90 e0       	ldi	r25, 0x00	; 0
 912:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <fputc>
 916:	ff ef       	ldi	r31, 0xFF	; 255
 918:	8f 1a       	sub	r8, r31
 91a:	9f 0a       	sbc	r9, r31
 91c:	af 0a       	sbc	r10, r31
 91e:	c7 cf       	rjmp	.-114    	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 920:	23 e0       	ldi	r18, 0x03	; 3
 922:	2f 15       	cp	r18, r15
 924:	10 f4       	brcc	.+4      	; 0x92a <__stack+0x2b>
 926:	83 e0       	ldi	r24, 0x03	; 3
 928:	b3 cf       	rjmp	.-154    	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 92a:	f1 2c       	mov	r15, r1
 92c:	b6 cf       	rjmp	.-148    	; 0x89a <__DATA_REGION_LENGTH__+0x9a>
 92e:	64 96       	adiw	r28, 0x14	; 20
 930:	e2 e1       	ldi	r30, 0x12	; 18
 932:	0c 94 9d 0e 	jmp	0x1d3a	; 0x1d3a <__epilogue_restores__>

Disassembly of section .text.libgcc.prologue:

00001cca <__prologue_saves__>:
    1cca:	2f 92       	push	r2
    1ccc:	3f 92       	push	r3
    1cce:	4f 92       	push	r4
    1cd0:	5f 92       	push	r5
    1cd2:	6f 92       	push	r6
    1cd4:	7f 92       	push	r7
    1cd6:	8f 92       	push	r8
    1cd8:	9f 92       	push	r9
    1cda:	af 92       	push	r10
    1cdc:	bf 92       	push	r11
    1cde:	cf 92       	push	r12
    1ce0:	df 92       	push	r13
    1ce2:	ef 92       	push	r14
    1ce4:	ff 92       	push	r15
    1ce6:	0f 93       	push	r16
    1ce8:	1f 93       	push	r17
    1cea:	cf 93       	push	r28
    1cec:	df 93       	push	r29
    1cee:	cd b7       	in	r28, 0x3d	; 61
    1cf0:	de b7       	in	r29, 0x3e	; 62
    1cf2:	ca 1b       	sub	r28, r26
    1cf4:	db 0b       	sbc	r29, r27
    1cf6:	0f b6       	in	r0, 0x3f	; 63
    1cf8:	f8 94       	cli
    1cfa:	de bf       	out	0x3e, r29	; 62
    1cfc:	0f be       	out	0x3f, r0	; 63
    1cfe:	cd bf       	out	0x3d, r28	; 61
    1d00:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00001d3a <__epilogue_restores__>:
    1d3a:	2a 88       	ldd	r2, Y+18	; 0x12
    1d3c:	39 88       	ldd	r3, Y+17	; 0x11
    1d3e:	48 88       	ldd	r4, Y+16	; 0x10
    1d40:	5f 84       	ldd	r5, Y+15	; 0x0f
    1d42:	6e 84       	ldd	r6, Y+14	; 0x0e
    1d44:	7d 84       	ldd	r7, Y+13	; 0x0d
    1d46:	8c 84       	ldd	r8, Y+12	; 0x0c
    1d48:	9b 84       	ldd	r9, Y+11	; 0x0b
    1d4a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1d4c:	b9 84       	ldd	r11, Y+9	; 0x09
    1d4e:	c8 84       	ldd	r12, Y+8	; 0x08
    1d50:	df 80       	ldd	r13, Y+7	; 0x07
    1d52:	ee 80       	ldd	r14, Y+6	; 0x06
    1d54:	fd 80       	ldd	r15, Y+5	; 0x05
    1d56:	0c 81       	ldd	r16, Y+4	; 0x04
    1d58:	1b 81       	ldd	r17, Y+3	; 0x03
    1d5a:	aa 81       	ldd	r26, Y+2	; 0x02
    1d5c:	b9 81       	ldd	r27, Y+1	; 0x01
    1d5e:	ce 0f       	add	r28, r30
    1d60:	d1 1d       	adc	r29, r1
    1d62:	0f b6       	in	r0, 0x3f	; 63
    1d64:	f8 94       	cli
    1d66:	de bf       	out	0x3e, r29	; 62
    1d68:	0f be       	out	0x3f, r0	; 63
    1d6a:	cd bf       	out	0x3d, r28	; 61
    1d6c:	ed 01       	movw	r28, r26
    1d6e:	08 95       	ret

Disassembly of section .text.avrlibc:

00000e3c <__ftoa_engine>:
 e3c:	28 30       	cpi	r18, 0x08	; 8
 e3e:	08 f0       	brcs	.+2      	; 0xe42 <__ftoa_engine+0x6>
 e40:	27 e0       	ldi	r18, 0x07	; 7
 e42:	33 27       	eor	r19, r19
 e44:	da 01       	movw	r26, r20
 e46:	99 0f       	add	r25, r25
 e48:	31 1d       	adc	r19, r1
 e4a:	87 fd       	sbrc	r24, 7
 e4c:	91 60       	ori	r25, 0x01	; 1
 e4e:	00 96       	adiw	r24, 0x00	; 0
 e50:	61 05       	cpc	r22, r1
 e52:	71 05       	cpc	r23, r1
 e54:	39 f4       	brne	.+14     	; 0xe64 <__ftoa_engine+0x28>
 e56:	32 60       	ori	r19, 0x02	; 2
 e58:	2e 5f       	subi	r18, 0xFE	; 254
 e5a:	3d 93       	st	X+, r19
 e5c:	30 e3       	ldi	r19, 0x30	; 48
 e5e:	2a 95       	dec	r18
 e60:	e1 f7       	brne	.-8      	; 0xe5a <__ftoa_engine+0x1e>
 e62:	08 95       	ret
 e64:	9f 3f       	cpi	r25, 0xFF	; 255
 e66:	30 f0       	brcs	.+12     	; 0xe74 <__ftoa_engine+0x38>
 e68:	80 38       	cpi	r24, 0x80	; 128
 e6a:	71 05       	cpc	r23, r1
 e6c:	61 05       	cpc	r22, r1
 e6e:	09 f0       	breq	.+2      	; 0xe72 <__ftoa_engine+0x36>
 e70:	3c 5f       	subi	r19, 0xFC	; 252
 e72:	3c 5f       	subi	r19, 0xFC	; 252
 e74:	3d 93       	st	X+, r19
 e76:	91 30       	cpi	r25, 0x01	; 1
 e78:	08 f0       	brcs	.+2      	; 0xe7c <__ftoa_engine+0x40>
 e7a:	80 68       	ori	r24, 0x80	; 128
 e7c:	91 1d       	adc	r25, r1
 e7e:	df 93       	push	r29
 e80:	cf 93       	push	r28
 e82:	1f 93       	push	r17
 e84:	0f 93       	push	r16
 e86:	ff 92       	push	r15
 e88:	ef 92       	push	r14
 e8a:	19 2f       	mov	r17, r25
 e8c:	98 7f       	andi	r25, 0xF8	; 248
 e8e:	96 95       	lsr	r25
 e90:	e9 2f       	mov	r30, r25
 e92:	96 95       	lsr	r25
 e94:	96 95       	lsr	r25
 e96:	e9 0f       	add	r30, r25
 e98:	ff 27       	eor	r31, r31
 e9a:	ec 52       	subi	r30, 0x2C	; 44
 e9c:	ff 4f       	sbci	r31, 0xFF	; 255
 e9e:	99 27       	eor	r25, r25
 ea0:	33 27       	eor	r19, r19
 ea2:	ee 24       	eor	r14, r14
 ea4:	ff 24       	eor	r15, r15
 ea6:	a7 01       	movw	r20, r14
 ea8:	e7 01       	movw	r28, r14
 eaa:	05 90       	lpm	r0, Z+
 eac:	08 94       	sec
 eae:	07 94       	ror	r0
 eb0:	28 f4       	brcc	.+10     	; 0xebc <__ftoa_engine+0x80>
 eb2:	36 0f       	add	r19, r22
 eb4:	e7 1e       	adc	r14, r23
 eb6:	f8 1e       	adc	r15, r24
 eb8:	49 1f       	adc	r20, r25
 eba:	51 1d       	adc	r21, r1
 ebc:	66 0f       	add	r22, r22
 ebe:	77 1f       	adc	r23, r23
 ec0:	88 1f       	adc	r24, r24
 ec2:	99 1f       	adc	r25, r25
 ec4:	06 94       	lsr	r0
 ec6:	a1 f7       	brne	.-24     	; 0xeb0 <__ftoa_engine+0x74>
 ec8:	05 90       	lpm	r0, Z+
 eca:	07 94       	ror	r0
 ecc:	28 f4       	brcc	.+10     	; 0xed8 <__ftoa_engine+0x9c>
 ece:	e7 0e       	add	r14, r23
 ed0:	f8 1e       	adc	r15, r24
 ed2:	49 1f       	adc	r20, r25
 ed4:	56 1f       	adc	r21, r22
 ed6:	c1 1d       	adc	r28, r1
 ed8:	77 0f       	add	r23, r23
 eda:	88 1f       	adc	r24, r24
 edc:	99 1f       	adc	r25, r25
 ede:	66 1f       	adc	r22, r22
 ee0:	06 94       	lsr	r0
 ee2:	a1 f7       	brne	.-24     	; 0xecc <__ftoa_engine+0x90>
 ee4:	05 90       	lpm	r0, Z+
 ee6:	07 94       	ror	r0
 ee8:	28 f4       	brcc	.+10     	; 0xef4 <__ftoa_engine+0xb8>
 eea:	f8 0e       	add	r15, r24
 eec:	49 1f       	adc	r20, r25
 eee:	56 1f       	adc	r21, r22
 ef0:	c7 1f       	adc	r28, r23
 ef2:	d1 1d       	adc	r29, r1
 ef4:	88 0f       	add	r24, r24
 ef6:	99 1f       	adc	r25, r25
 ef8:	66 1f       	adc	r22, r22
 efa:	77 1f       	adc	r23, r23
 efc:	06 94       	lsr	r0
 efe:	a1 f7       	brne	.-24     	; 0xee8 <__ftoa_engine+0xac>
 f00:	05 90       	lpm	r0, Z+
 f02:	07 94       	ror	r0
 f04:	20 f4       	brcc	.+8      	; 0xf0e <__ftoa_engine+0xd2>
 f06:	49 0f       	add	r20, r25
 f08:	56 1f       	adc	r21, r22
 f0a:	c7 1f       	adc	r28, r23
 f0c:	d8 1f       	adc	r29, r24
 f0e:	99 0f       	add	r25, r25
 f10:	66 1f       	adc	r22, r22
 f12:	77 1f       	adc	r23, r23
 f14:	88 1f       	adc	r24, r24
 f16:	06 94       	lsr	r0
 f18:	a9 f7       	brne	.-22     	; 0xf04 <__ftoa_engine+0xc8>
 f1a:	84 91       	lpm	r24, Z
 f1c:	10 95       	com	r17
 f1e:	17 70       	andi	r17, 0x07	; 7
 f20:	41 f0       	breq	.+16     	; 0xf32 <__ftoa_engine+0xf6>
 f22:	d6 95       	lsr	r29
 f24:	c7 95       	ror	r28
 f26:	57 95       	ror	r21
 f28:	47 95       	ror	r20
 f2a:	f7 94       	ror	r15
 f2c:	e7 94       	ror	r14
 f2e:	1a 95       	dec	r17
 f30:	c1 f7       	brne	.-16     	; 0xf22 <__ftoa_engine+0xe6>
 f32:	ea e7       	ldi	r30, 0x7A	; 122
 f34:	f0 e0       	ldi	r31, 0x00	; 0
 f36:	68 94       	set
 f38:	15 90       	lpm	r1, Z+
 f3a:	15 91       	lpm	r17, Z+
 f3c:	35 91       	lpm	r19, Z+
 f3e:	65 91       	lpm	r22, Z+
 f40:	95 91       	lpm	r25, Z+
 f42:	05 90       	lpm	r0, Z+
 f44:	7f e2       	ldi	r23, 0x2F	; 47
 f46:	73 95       	inc	r23
 f48:	e1 18       	sub	r14, r1
 f4a:	f1 0a       	sbc	r15, r17
 f4c:	43 0b       	sbc	r20, r19
 f4e:	56 0b       	sbc	r21, r22
 f50:	c9 0b       	sbc	r28, r25
 f52:	d0 09       	sbc	r29, r0
 f54:	c0 f7       	brcc	.-16     	; 0xf46 <__ftoa_engine+0x10a>
 f56:	e1 0c       	add	r14, r1
 f58:	f1 1e       	adc	r15, r17
 f5a:	43 1f       	adc	r20, r19
 f5c:	56 1f       	adc	r21, r22
 f5e:	c9 1f       	adc	r28, r25
 f60:	d0 1d       	adc	r29, r0
 f62:	7e f4       	brtc	.+30     	; 0xf82 <__ftoa_engine+0x146>
 f64:	70 33       	cpi	r23, 0x30	; 48
 f66:	11 f4       	brne	.+4      	; 0xf6c <__ftoa_engine+0x130>
 f68:	8a 95       	dec	r24
 f6a:	e6 cf       	rjmp	.-52     	; 0xf38 <__ftoa_engine+0xfc>
 f6c:	e8 94       	clt
 f6e:	01 50       	subi	r16, 0x01	; 1
 f70:	30 f0       	brcs	.+12     	; 0xf7e <__ftoa_engine+0x142>
 f72:	08 0f       	add	r16, r24
 f74:	0a f4       	brpl	.+2      	; 0xf78 <__ftoa_engine+0x13c>
 f76:	00 27       	eor	r16, r16
 f78:	02 17       	cp	r16, r18
 f7a:	08 f4       	brcc	.+2      	; 0xf7e <__ftoa_engine+0x142>
 f7c:	20 2f       	mov	r18, r16
 f7e:	23 95       	inc	r18
 f80:	02 2f       	mov	r16, r18
 f82:	7a 33       	cpi	r23, 0x3A	; 58
 f84:	28 f0       	brcs	.+10     	; 0xf90 <__ftoa_engine+0x154>
 f86:	79 e3       	ldi	r23, 0x39	; 57
 f88:	7d 93       	st	X+, r23
 f8a:	2a 95       	dec	r18
 f8c:	e9 f7       	brne	.-6      	; 0xf88 <__ftoa_engine+0x14c>
 f8e:	10 c0       	rjmp	.+32     	; 0xfb0 <__ftoa_engine+0x174>
 f90:	7d 93       	st	X+, r23
 f92:	2a 95       	dec	r18
 f94:	89 f6       	brne	.-94     	; 0xf38 <__ftoa_engine+0xfc>
 f96:	06 94       	lsr	r0
 f98:	97 95       	ror	r25
 f9a:	67 95       	ror	r22
 f9c:	37 95       	ror	r19
 f9e:	17 95       	ror	r17
 fa0:	17 94       	ror	r1
 fa2:	e1 18       	sub	r14, r1
 fa4:	f1 0a       	sbc	r15, r17
 fa6:	43 0b       	sbc	r20, r19
 fa8:	56 0b       	sbc	r21, r22
 faa:	c9 0b       	sbc	r28, r25
 fac:	d0 09       	sbc	r29, r0
 fae:	98 f0       	brcs	.+38     	; 0xfd6 <__ftoa_engine+0x19a>
 fb0:	23 95       	inc	r18
 fb2:	7e 91       	ld	r23, -X
 fb4:	73 95       	inc	r23
 fb6:	7a 33       	cpi	r23, 0x3A	; 58
 fb8:	08 f0       	brcs	.+2      	; 0xfbc <__ftoa_engine+0x180>
 fba:	70 e3       	ldi	r23, 0x30	; 48
 fbc:	7c 93       	st	X, r23
 fbe:	20 13       	cpse	r18, r16
 fc0:	b8 f7       	brcc	.-18     	; 0xfb0 <__ftoa_engine+0x174>
 fc2:	7e 91       	ld	r23, -X
 fc4:	70 61       	ori	r23, 0x10	; 16
 fc6:	7d 93       	st	X+, r23
 fc8:	30 f0       	brcs	.+12     	; 0xfd6 <__ftoa_engine+0x19a>
 fca:	83 95       	inc	r24
 fcc:	71 e3       	ldi	r23, 0x31	; 49
 fce:	7d 93       	st	X+, r23
 fd0:	70 e3       	ldi	r23, 0x30	; 48
 fd2:	2a 95       	dec	r18
 fd4:	e1 f7       	brne	.-8      	; 0xfce <__ftoa_engine+0x192>
 fd6:	11 24       	eor	r1, r1
 fd8:	ef 90       	pop	r14
 fda:	ff 90       	pop	r15
 fdc:	0f 91       	pop	r16
 fde:	1f 91       	pop	r17
 fe0:	cf 91       	pop	r28
 fe2:	df 91       	pop	r29
 fe4:	99 27       	eor	r25, r25
 fe6:	87 fd       	sbrc	r24, 7
 fe8:	90 95       	com	r25
 fea:	08 95       	ret

Disassembly of section .text.avrlibc:

00001d70 <strnlen>:
    1d70:	cf 92       	push	r12
    1d72:	df 92       	push	r13
    1d74:	ef 92       	push	r14
    1d76:	6b 01       	movw	r12, r22
    1d78:	e8 2e       	mov	r14, r24
    1d7a:	a8 2f       	mov	r26, r24
    1d7c:	cb 01       	movw	r24, r22
    1d7e:	41 15       	cp	r20, r1
    1d80:	51 05       	cpc	r21, r1
    1d82:	31 f4       	brne	.+12     	; 0x1d90 <strnlen+0x20>
    1d84:	8c 19       	sub	r24, r12
    1d86:	9d 09       	sbc	r25, r13
    1d88:	ef 90       	pop	r14
    1d8a:	df 90       	pop	r13
    1d8c:	cf 90       	pop	r12
    1d8e:	08 95       	ret
    1d90:	fc 01       	movw	r30, r24
    1d92:	24 91       	lpm	r18, Z
    1d94:	a7 fd       	sbrc	r26, 7
    1d96:	20 81       	ld	r18, Z
    1d98:	22 23       	and	r18, r18
    1d9a:	a1 f3       	breq	.-24     	; 0x1d84 <strnlen+0x14>
    1d9c:	01 96       	adiw	r24, 0x01	; 1
    1d9e:	a1 1d       	adc	r26, r1
    1da0:	41 50       	subi	r20, 0x01	; 1
    1da2:	51 09       	sbc	r21, r1
    1da4:	ec cf       	rjmp	.-40     	; 0x1d7e <strnlen+0xe>

Disassembly of section .text.avrlibc:

0000169a <fdevopen>:
    169a:	0f 93       	push	r16
    169c:	1f 93       	push	r17
    169e:	cf 93       	push	r28
    16a0:	df 93       	push	r29
    16a2:	00 97       	sbiw	r24, 0x00	; 0
    16a4:	31 f4       	brne	.+12     	; 0x16b2 <fdevopen+0x18>
    16a6:	61 15       	cp	r22, r1
    16a8:	71 05       	cpc	r23, r1
    16aa:	19 f4       	brne	.+6      	; 0x16b2 <fdevopen+0x18>
    16ac:	80 e0       	ldi	r24, 0x00	; 0
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	3b c0       	rjmp	.+118    	; 0x1728 <fdevopen+0x8e>
    16b2:	8b 01       	movw	r16, r22
    16b4:	ec 01       	movw	r28, r24
    16b6:	6f e0       	ldi	r22, 0x0F	; 15
    16b8:	70 e0       	ldi	r23, 0x00	; 0
    16ba:	81 e0       	ldi	r24, 0x01	; 1
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <calloc>
    16c2:	fc 01       	movw	r30, r24
    16c4:	89 2b       	or	r24, r25
    16c6:	91 f3       	breq	.-28     	; 0x16ac <fdevopen+0x12>
    16c8:	80 e8       	ldi	r24, 0x80	; 128
    16ca:	84 83       	std	Z+4, r24	; 0x04
    16cc:	01 15       	cp	r16, r1
    16ce:	11 05       	cpc	r17, r1
    16d0:	69 f0       	breq	.+26     	; 0x16ec <fdevopen+0x52>
    16d2:	14 87       	std	Z+12, r17	; 0x0c
    16d4:	03 87       	std	Z+11, r16	; 0x0b
    16d6:	81 e8       	ldi	r24, 0x81	; 129
    16d8:	84 83       	std	Z+4, r24	; 0x04
    16da:	a2 e0       	ldi	r26, 0x02	; 2
    16dc:	b1 e0       	ldi	r27, 0x01	; 1
    16de:	8d 91       	ld	r24, X+
    16e0:	9c 91       	ld	r25, X
    16e2:	11 97       	sbiw	r26, 0x01	; 1
    16e4:	89 2b       	or	r24, r25
    16e6:	11 f4       	brne	.+4      	; 0x16ec <fdevopen+0x52>
    16e8:	ed 93       	st	X+, r30
    16ea:	fc 93       	st	X, r31
    16ec:	20 97       	sbiw	r28, 0x00	; 0
    16ee:	d9 f0       	breq	.+54     	; 0x1726 <fdevopen+0x8c>
    16f0:	d2 87       	std	Z+10, r29	; 0x0a
    16f2:	c1 87       	std	Z+9, r28	; 0x09
    16f4:	84 81       	ldd	r24, Z+4	; 0x04
    16f6:	82 60       	ori	r24, 0x02	; 2
    16f8:	84 83       	std	Z+4, r24	; 0x04
    16fa:	a2 e0       	ldi	r26, 0x02	; 2
    16fc:	b1 e0       	ldi	r27, 0x01	; 1
    16fe:	12 96       	adiw	r26, 0x02	; 2
    1700:	8d 91       	ld	r24, X+
    1702:	9c 91       	ld	r25, X
    1704:	13 97       	sbiw	r26, 0x03	; 3
    1706:	89 2b       	or	r24, r25
    1708:	71 f4       	brne	.+28     	; 0x1726 <fdevopen+0x8c>
    170a:	13 96       	adiw	r26, 0x03	; 3
    170c:	fc 93       	st	X, r31
    170e:	ee 93       	st	-X, r30
    1710:	12 97       	sbiw	r26, 0x02	; 2
    1712:	14 96       	adiw	r26, 0x04	; 4
    1714:	8d 91       	ld	r24, X+
    1716:	9c 91       	ld	r25, X
    1718:	15 97       	sbiw	r26, 0x05	; 5
    171a:	89 2b       	or	r24, r25
    171c:	21 f4       	brne	.+8      	; 0x1726 <fdevopen+0x8c>
    171e:	15 96       	adiw	r26, 0x05	; 5
    1720:	fc 93       	st	X, r31
    1722:	ee 93       	st	-X, r30
    1724:	14 97       	sbiw	r26, 0x04	; 4
    1726:	cf 01       	movw	r24, r30
    1728:	df 91       	pop	r29
    172a:	cf 91       	pop	r28
    172c:	1f 91       	pop	r17
    172e:	0f 91       	pop	r16
    1730:	08 95       	ret

Disassembly of section .text.avrlibc:

000018b4 <fputc>:
    18b4:	0f 93       	push	r16
    18b6:	1f 93       	push	r17
    18b8:	cf 93       	push	r28
    18ba:	df 93       	push	r29
    18bc:	fb 01       	movw	r30, r22
    18be:	24 81       	ldd	r18, Z+4	; 0x04
    18c0:	21 fd       	sbrc	r18, 1
    18c2:	03 c0       	rjmp	.+6      	; 0x18ca <fputc+0x16>
    18c4:	8f ef       	ldi	r24, 0xFF	; 255
    18c6:	9f ef       	ldi	r25, 0xFF	; 255
    18c8:	2c c0       	rjmp	.+88     	; 0x1922 <fputc+0x6e>
    18ca:	22 ff       	sbrs	r18, 2
    18cc:	16 c0       	rjmp	.+44     	; 0x18fa <fputc+0x46>
    18ce:	47 81       	ldd	r20, Z+7	; 0x07
    18d0:	50 85       	ldd	r21, Z+8	; 0x08
    18d2:	25 81       	ldd	r18, Z+5	; 0x05
    18d4:	36 81       	ldd	r19, Z+6	; 0x06
    18d6:	42 17       	cp	r20, r18
    18d8:	53 07       	cpc	r21, r19
    18da:	44 f4       	brge	.+16     	; 0x18ec <fputc+0x38>
    18dc:	a0 81       	ld	r26, Z
    18de:	b1 81       	ldd	r27, Z+1	; 0x01
    18e0:	9d 01       	movw	r18, r26
    18e2:	2f 5f       	subi	r18, 0xFF	; 255
    18e4:	3f 4f       	sbci	r19, 0xFF	; 255
    18e6:	31 83       	std	Z+1, r19	; 0x01
    18e8:	20 83       	st	Z, r18
    18ea:	8c 93       	st	X, r24
    18ec:	27 81       	ldd	r18, Z+7	; 0x07
    18ee:	30 85       	ldd	r19, Z+8	; 0x08
    18f0:	2f 5f       	subi	r18, 0xFF	; 255
    18f2:	3f 4f       	sbci	r19, 0xFF	; 255
    18f4:	30 87       	std	Z+8, r19	; 0x08
    18f6:	27 83       	std	Z+7, r18	; 0x07
    18f8:	14 c0       	rjmp	.+40     	; 0x1922 <fputc+0x6e>
    18fa:	8b 01       	movw	r16, r22
    18fc:	ec 01       	movw	r28, r24
    18fe:	fb 01       	movw	r30, r22
    1900:	01 84       	ldd	r0, Z+9	; 0x09
    1902:	f2 85       	ldd	r31, Z+10	; 0x0a
    1904:	e0 2d       	mov	r30, r0
    1906:	09 95       	icall
    1908:	89 2b       	or	r24, r25
    190a:	e1 f6       	brne	.-72     	; 0x18c4 <fputc+0x10>
    190c:	d8 01       	movw	r26, r16
    190e:	17 96       	adiw	r26, 0x07	; 7
    1910:	8d 91       	ld	r24, X+
    1912:	9c 91       	ld	r25, X
    1914:	18 97       	sbiw	r26, 0x08	; 8
    1916:	01 96       	adiw	r24, 0x01	; 1
    1918:	18 96       	adiw	r26, 0x08	; 8
    191a:	9c 93       	st	X, r25
    191c:	8e 93       	st	-X, r24
    191e:	17 97       	sbiw	r26, 0x07	; 7
    1920:	ce 01       	movw	r24, r28
    1922:	df 91       	pop	r29
    1924:	cf 91       	pop	r28
    1926:	1f 91       	pop	r17
    1928:	0f 91       	pop	r16
    192a:	08 95       	ret

Disassembly of section .text.avrlibc:

00001e04 <printf>:
    1e04:	a0 e0       	ldi	r26, 0x00	; 0
    1e06:	b0 e0       	ldi	r27, 0x00	; 0
    1e08:	e8 e0       	ldi	r30, 0x08	; 8
    1e0a:	ff e0       	ldi	r31, 0x0F	; 15
    1e0c:	0c 94 75 0e 	jmp	0x1cea	; 0x1cea <__prologue_saves__+0x20>
    1e10:	9e 01       	movw	r18, r28
    1e12:	2b 5f       	subi	r18, 0xFB	; 251
    1e14:	3f 4f       	sbci	r19, 0xFF	; 255
    1e16:	f9 01       	movw	r30, r18
    1e18:	41 91       	ld	r20, Z+
    1e1a:	51 91       	ld	r21, Z+
    1e1c:	61 91       	ld	r22, Z+
    1e1e:	9f 01       	movw	r18, r30
    1e20:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__iob+0x2>
    1e24:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__iob+0x3>
    1e28:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <vfprintf>
    1e2c:	e2 e0       	ldi	r30, 0x02	; 2
    1e2e:	0c 94 ad 0e 	jmp	0x1d5a	; 0x1d5a <__epilogue_restores__+0x20>

Disassembly of section .text.avrlibc:

000014a2 <__ultoa_invert>:
    14a2:	fa 01       	movw	r30, r20
    14a4:	aa 27       	eor	r26, r26
    14a6:	28 30       	cpi	r18, 0x08	; 8
    14a8:	51 f1       	breq	.+84     	; 0x14fe <__ultoa_invert+0x5c>
    14aa:	20 31       	cpi	r18, 0x10	; 16
    14ac:	81 f1       	breq	.+96     	; 0x150e <__ultoa_invert+0x6c>
    14ae:	e8 94       	clt
    14b0:	6f 93       	push	r22
    14b2:	6e 7f       	andi	r22, 0xFE	; 254
    14b4:	6e 5f       	subi	r22, 0xFE	; 254
    14b6:	7f 4f       	sbci	r23, 0xFF	; 255
    14b8:	8f 4f       	sbci	r24, 0xFF	; 255
    14ba:	9f 4f       	sbci	r25, 0xFF	; 255
    14bc:	af 4f       	sbci	r26, 0xFF	; 255
    14be:	b1 e0       	ldi	r27, 0x01	; 1
    14c0:	3e d0       	rcall	.+124    	; 0x153e <__ultoa_invert+0x9c>
    14c2:	b4 e0       	ldi	r27, 0x04	; 4
    14c4:	3c d0       	rcall	.+120    	; 0x153e <__ultoa_invert+0x9c>
    14c6:	67 0f       	add	r22, r23
    14c8:	78 1f       	adc	r23, r24
    14ca:	89 1f       	adc	r24, r25
    14cc:	9a 1f       	adc	r25, r26
    14ce:	a1 1d       	adc	r26, r1
    14d0:	68 0f       	add	r22, r24
    14d2:	79 1f       	adc	r23, r25
    14d4:	8a 1f       	adc	r24, r26
    14d6:	91 1d       	adc	r25, r1
    14d8:	a1 1d       	adc	r26, r1
    14da:	6a 0f       	add	r22, r26
    14dc:	71 1d       	adc	r23, r1
    14de:	81 1d       	adc	r24, r1
    14e0:	91 1d       	adc	r25, r1
    14e2:	a1 1d       	adc	r26, r1
    14e4:	20 d0       	rcall	.+64     	; 0x1526 <__ultoa_invert+0x84>
    14e6:	09 f4       	brne	.+2      	; 0x14ea <__ultoa_invert+0x48>
    14e8:	68 94       	set
    14ea:	3f 91       	pop	r19
    14ec:	2a e0       	ldi	r18, 0x0A	; 10
    14ee:	26 9f       	mul	r18, r22
    14f0:	11 24       	eor	r1, r1
    14f2:	30 19       	sub	r19, r0
    14f4:	30 5d       	subi	r19, 0xD0	; 208
    14f6:	31 93       	st	Z+, r19
    14f8:	de f6       	brtc	.-74     	; 0x14b0 <__ultoa_invert+0xe>
    14fa:	cf 01       	movw	r24, r30
    14fc:	08 95       	ret
    14fe:	46 2f       	mov	r20, r22
    1500:	47 70       	andi	r20, 0x07	; 7
    1502:	40 5d       	subi	r20, 0xD0	; 208
    1504:	41 93       	st	Z+, r20
    1506:	b3 e0       	ldi	r27, 0x03	; 3
    1508:	0f d0       	rcall	.+30     	; 0x1528 <__ultoa_invert+0x86>
    150a:	c9 f7       	brne	.-14     	; 0x14fe <__ultoa_invert+0x5c>
    150c:	f6 cf       	rjmp	.-20     	; 0x14fa <__ultoa_invert+0x58>
    150e:	46 2f       	mov	r20, r22
    1510:	4f 70       	andi	r20, 0x0F	; 15
    1512:	40 5d       	subi	r20, 0xD0	; 208
    1514:	4a 33       	cpi	r20, 0x3A	; 58
    1516:	18 f0       	brcs	.+6      	; 0x151e <__ultoa_invert+0x7c>
    1518:	49 5d       	subi	r20, 0xD9	; 217
    151a:	31 fd       	sbrc	r19, 1
    151c:	40 52       	subi	r20, 0x20	; 32
    151e:	41 93       	st	Z+, r20
    1520:	02 d0       	rcall	.+4      	; 0x1526 <__ultoa_invert+0x84>
    1522:	a9 f7       	brne	.-22     	; 0x150e <__ultoa_invert+0x6c>
    1524:	ea cf       	rjmp	.-44     	; 0x14fa <__ultoa_invert+0x58>
    1526:	b4 e0       	ldi	r27, 0x04	; 4
    1528:	a6 95       	lsr	r26
    152a:	97 95       	ror	r25
    152c:	87 95       	ror	r24
    152e:	77 95       	ror	r23
    1530:	67 95       	ror	r22
    1532:	ba 95       	dec	r27
    1534:	c9 f7       	brne	.-14     	; 0x1528 <__ultoa_invert+0x86>
    1536:	00 97       	sbiw	r24, 0x00	; 0
    1538:	61 05       	cpc	r22, r1
    153a:	71 05       	cpc	r23, r1
    153c:	08 95       	ret
    153e:	9b 01       	movw	r18, r22
    1540:	ac 01       	movw	r20, r24
    1542:	0a 2e       	mov	r0, r26
    1544:	06 94       	lsr	r0
    1546:	57 95       	ror	r21
    1548:	47 95       	ror	r20
    154a:	37 95       	ror	r19
    154c:	27 95       	ror	r18
    154e:	ba 95       	dec	r27
    1550:	c9 f7       	brne	.-14     	; 0x1544 <__ultoa_invert+0xa2>
    1552:	62 0f       	add	r22, r18
    1554:	73 1f       	adc	r23, r19
    1556:	84 1f       	adc	r24, r20
    1558:	95 1f       	adc	r25, r21
    155a:	a0 1d       	adc	r26, r0
    155c:	08 95       	ret

Disassembly of section .text.avrlibc:

00001d02 <calloc>:
    1d02:	0f 93       	push	r16
    1d04:	1f 93       	push	r17
    1d06:	cf 93       	push	r28
    1d08:	df 93       	push	r29
    1d0a:	86 9f       	mul	r24, r22
    1d0c:	80 01       	movw	r16, r0
    1d0e:	87 9f       	mul	r24, r23
    1d10:	10 0d       	add	r17, r0
    1d12:	96 9f       	mul	r25, r22
    1d14:	10 0d       	add	r17, r0
    1d16:	11 24       	eor	r1, r1
    1d18:	c8 01       	movw	r24, r16
    1d1a:	0e 94 fd 05 	call	0xbfa	; 0xbfa <malloc>
    1d1e:	ec 01       	movw	r28, r24
    1d20:	00 97       	sbiw	r24, 0x00	; 0
    1d22:	29 f0       	breq	.+10     	; 0x1d2e <calloc+0x2c>
    1d24:	a8 01       	movw	r20, r16
    1d26:	60 e0       	ldi	r22, 0x00	; 0
    1d28:	70 e0       	ldi	r23, 0x00	; 0
    1d2a:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <memset>
    1d2e:	ce 01       	movw	r24, r28
    1d30:	df 91       	pop	r29
    1d32:	cf 91       	pop	r28
    1d34:	1f 91       	pop	r17
    1d36:	0f 91       	pop	r16
    1d38:	08 95       	ret

Disassembly of section .text.avrlibc:

00000bfa <malloc>:
 bfa:	0f 93       	push	r16
 bfc:	1f 93       	push	r17
 bfe:	cf 93       	push	r28
 c00:	df 93       	push	r29
 c02:	82 30       	cpi	r24, 0x02	; 2
 c04:	91 05       	cpc	r25, r1
 c06:	10 f4       	brcc	.+4      	; 0xc0c <malloc+0x12>
 c08:	82 e0       	ldi	r24, 0x02	; 2
 c0a:	90 e0       	ldi	r25, 0x00	; 0
 c0c:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__flp>
 c10:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <__flp+0x1>
 c14:	20 e0       	ldi	r18, 0x00	; 0
 c16:	30 e0       	ldi	r19, 0x00	; 0
 c18:	a0 e0       	ldi	r26, 0x00	; 0
 c1a:	b0 e0       	ldi	r27, 0x00	; 0
 c1c:	30 97       	sbiw	r30, 0x00	; 0
 c1e:	19 f1       	breq	.+70     	; 0xc66 <malloc+0x6c>
 c20:	40 81       	ld	r20, Z
 c22:	51 81       	ldd	r21, Z+1	; 0x01
 c24:	02 81       	ldd	r16, Z+2	; 0x02
 c26:	13 81       	ldd	r17, Z+3	; 0x03
 c28:	48 17       	cp	r20, r24
 c2a:	59 07       	cpc	r21, r25
 c2c:	c8 f0       	brcs	.+50     	; 0xc60 <malloc+0x66>
 c2e:	84 17       	cp	r24, r20
 c30:	95 07       	cpc	r25, r21
 c32:	69 f4       	brne	.+26     	; 0xc4e <malloc+0x54>
 c34:	10 97       	sbiw	r26, 0x00	; 0
 c36:	31 f0       	breq	.+12     	; 0xc44 <malloc+0x4a>
 c38:	12 96       	adiw	r26, 0x02	; 2
 c3a:	0c 93       	st	X, r16
 c3c:	12 97       	sbiw	r26, 0x02	; 2
 c3e:	13 96       	adiw	r26, 0x03	; 3
 c40:	1c 93       	st	X, r17
 c42:	27 c0       	rjmp	.+78     	; 0xc92 <malloc+0x98>
 c44:	00 93 0a 01 	sts	0x010A, r16	; 0x80010a <__flp>
 c48:	10 93 0b 01 	sts	0x010B, r17	; 0x80010b <__flp+0x1>
 c4c:	22 c0       	rjmp	.+68     	; 0xc92 <malloc+0x98>
 c4e:	21 15       	cp	r18, r1
 c50:	31 05       	cpc	r19, r1
 c52:	19 f0       	breq	.+6      	; 0xc5a <malloc+0x60>
 c54:	42 17       	cp	r20, r18
 c56:	53 07       	cpc	r21, r19
 c58:	18 f4       	brcc	.+6      	; 0xc60 <malloc+0x66>
 c5a:	9a 01       	movw	r18, r20
 c5c:	bd 01       	movw	r22, r26
 c5e:	ef 01       	movw	r28, r30
 c60:	df 01       	movw	r26, r30
 c62:	f8 01       	movw	r30, r16
 c64:	db cf       	rjmp	.-74     	; 0xc1c <malloc+0x22>
 c66:	21 15       	cp	r18, r1
 c68:	31 05       	cpc	r19, r1
 c6a:	f9 f0       	breq	.+62     	; 0xcaa <malloc+0xb0>
 c6c:	28 1b       	sub	r18, r24
 c6e:	39 0b       	sbc	r19, r25
 c70:	24 30       	cpi	r18, 0x04	; 4
 c72:	31 05       	cpc	r19, r1
 c74:	80 f4       	brcc	.+32     	; 0xc96 <malloc+0x9c>
 c76:	8a 81       	ldd	r24, Y+2	; 0x02
 c78:	9b 81       	ldd	r25, Y+3	; 0x03
 c7a:	61 15       	cp	r22, r1
 c7c:	71 05       	cpc	r23, r1
 c7e:	21 f0       	breq	.+8      	; 0xc88 <malloc+0x8e>
 c80:	fb 01       	movw	r30, r22
 c82:	93 83       	std	Z+3, r25	; 0x03
 c84:	82 83       	std	Z+2, r24	; 0x02
 c86:	04 c0       	rjmp	.+8      	; 0xc90 <malloc+0x96>
 c88:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__flp+0x1>
 c8c:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__flp>
 c90:	fe 01       	movw	r30, r28
 c92:	32 96       	adiw	r30, 0x02	; 2
 c94:	44 c0       	rjmp	.+136    	; 0xd1e <malloc+0x124>
 c96:	fe 01       	movw	r30, r28
 c98:	e2 0f       	add	r30, r18
 c9a:	f3 1f       	adc	r31, r19
 c9c:	81 93       	st	Z+, r24
 c9e:	91 93       	st	Z+, r25
 ca0:	22 50       	subi	r18, 0x02	; 2
 ca2:	31 09       	sbc	r19, r1
 ca4:	39 83       	std	Y+1, r19	; 0x01
 ca6:	28 83       	st	Y, r18
 ca8:	3a c0       	rjmp	.+116    	; 0xd1e <malloc+0x124>
 caa:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 cae:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 cb2:	23 2b       	or	r18, r19
 cb4:	41 f4       	brne	.+16     	; 0xcc6 <malloc+0xcc>
 cb6:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_start>
 cba:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_start+0x1>
 cbe:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <__brkval+0x1>
 cc2:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <__brkval>
 cc6:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <_end>
 cca:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <_end+0x1>
 cce:	21 15       	cp	r18, r1
 cd0:	31 05       	cpc	r19, r1
 cd2:	41 f4       	brne	.+16     	; 0xce4 <malloc+0xea>
 cd4:	2d b7       	in	r18, 0x3d	; 61
 cd6:	3e b7       	in	r19, 0x3e	; 62
 cd8:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <__malloc_margin>
 cdc:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <__malloc_margin+0x1>
 ce0:	24 1b       	sub	r18, r20
 ce2:	35 0b       	sbc	r19, r21
 ce4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__brkval>
 ce8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__brkval+0x1>
 cec:	e2 17       	cp	r30, r18
 cee:	f3 07       	cpc	r31, r19
 cf0:	a0 f4       	brcc	.+40     	; 0xd1a <malloc+0x120>
 cf2:	2e 1b       	sub	r18, r30
 cf4:	3f 0b       	sbc	r19, r31
 cf6:	28 17       	cp	r18, r24
 cf8:	39 07       	cpc	r19, r25
 cfa:	78 f0       	brcs	.+30     	; 0xd1a <malloc+0x120>
 cfc:	ac 01       	movw	r20, r24
 cfe:	4e 5f       	subi	r20, 0xFE	; 254
 d00:	5f 4f       	sbci	r21, 0xFF	; 255
 d02:	24 17       	cp	r18, r20
 d04:	35 07       	cpc	r19, r21
 d06:	48 f0       	brcs	.+18     	; 0xd1a <malloc+0x120>
 d08:	4e 0f       	add	r20, r30
 d0a:	5f 1f       	adc	r21, r31
 d0c:	50 93 09 01 	sts	0x0109, r21	; 0x800109 <__brkval+0x1>
 d10:	40 93 08 01 	sts	0x0108, r20	; 0x800108 <__brkval>
 d14:	81 93       	st	Z+, r24
 d16:	91 93       	st	Z+, r25
 d18:	02 c0       	rjmp	.+4      	; 0xd1e <malloc+0x124>
 d1a:	e0 e0       	ldi	r30, 0x00	; 0
 d1c:	f0 e0       	ldi	r31, 0x00	; 0
 d1e:	cf 01       	movw	r24, r30
 d20:	df 91       	pop	r29
 d22:	cf 91       	pop	r28
 d24:	1f 91       	pop	r17
 d26:	0f 91       	pop	r16
 d28:	08 95       	ret

00000d2a <free>:
 d2a:	cf 93       	push	r28
 d2c:	df 93       	push	r29
 d2e:	00 97       	sbiw	r24, 0x00	; 0
 d30:	09 f4       	brne	.+2      	; 0xd34 <free+0xa>
 d32:	81 c0       	rjmp	.+258    	; 0xe36 <free+0x10c>
 d34:	fc 01       	movw	r30, r24
 d36:	32 97       	sbiw	r30, 0x02	; 2
 d38:	13 82       	std	Z+3, r1	; 0x03
 d3a:	12 82       	std	Z+2, r1	; 0x02
 d3c:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <__flp>
 d40:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <__flp+0x1>
 d44:	10 97       	sbiw	r26, 0x00	; 0
 d46:	81 f4       	brne	.+32     	; 0xd68 <free+0x3e>
 d48:	20 81       	ld	r18, Z
 d4a:	31 81       	ldd	r19, Z+1	; 0x01
 d4c:	82 0f       	add	r24, r18
 d4e:	93 1f       	adc	r25, r19
 d50:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 d54:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 d58:	28 17       	cp	r18, r24
 d5a:	39 07       	cpc	r19, r25
 d5c:	51 f5       	brne	.+84     	; 0xdb2 <free+0x88>
 d5e:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__brkval+0x1>
 d62:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__brkval>
 d66:	67 c0       	rjmp	.+206    	; 0xe36 <free+0x10c>
 d68:	ed 01       	movw	r28, r26
 d6a:	20 e0       	ldi	r18, 0x00	; 0
 d6c:	30 e0       	ldi	r19, 0x00	; 0
 d6e:	ce 17       	cp	r28, r30
 d70:	df 07       	cpc	r29, r31
 d72:	40 f4       	brcc	.+16     	; 0xd84 <free+0x5a>
 d74:	4a 81       	ldd	r20, Y+2	; 0x02
 d76:	5b 81       	ldd	r21, Y+3	; 0x03
 d78:	9e 01       	movw	r18, r28
 d7a:	41 15       	cp	r20, r1
 d7c:	51 05       	cpc	r21, r1
 d7e:	f1 f0       	breq	.+60     	; 0xdbc <free+0x92>
 d80:	ea 01       	movw	r28, r20
 d82:	f5 cf       	rjmp	.-22     	; 0xd6e <free+0x44>
 d84:	d3 83       	std	Z+3, r29	; 0x03
 d86:	c2 83       	std	Z+2, r28	; 0x02
 d88:	40 81       	ld	r20, Z
 d8a:	51 81       	ldd	r21, Z+1	; 0x01
 d8c:	84 0f       	add	r24, r20
 d8e:	95 1f       	adc	r25, r21
 d90:	c8 17       	cp	r28, r24
 d92:	d9 07       	cpc	r29, r25
 d94:	59 f4       	brne	.+22     	; 0xdac <free+0x82>
 d96:	88 81       	ld	r24, Y
 d98:	99 81       	ldd	r25, Y+1	; 0x01
 d9a:	84 0f       	add	r24, r20
 d9c:	95 1f       	adc	r25, r21
 d9e:	02 96       	adiw	r24, 0x02	; 2
 da0:	91 83       	std	Z+1, r25	; 0x01
 da2:	80 83       	st	Z, r24
 da4:	8a 81       	ldd	r24, Y+2	; 0x02
 da6:	9b 81       	ldd	r25, Y+3	; 0x03
 da8:	93 83       	std	Z+3, r25	; 0x03
 daa:	82 83       	std	Z+2, r24	; 0x02
 dac:	21 15       	cp	r18, r1
 dae:	31 05       	cpc	r19, r1
 db0:	29 f4       	brne	.+10     	; 0xdbc <free+0x92>
 db2:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__flp+0x1>
 db6:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__flp>
 dba:	3d c0       	rjmp	.+122    	; 0xe36 <free+0x10c>
 dbc:	e9 01       	movw	r28, r18
 dbe:	fb 83       	std	Y+3, r31	; 0x03
 dc0:	ea 83       	std	Y+2, r30	; 0x02
 dc2:	49 91       	ld	r20, Y+
 dc4:	59 91       	ld	r21, Y+
 dc6:	c4 0f       	add	r28, r20
 dc8:	d5 1f       	adc	r29, r21
 dca:	ec 17       	cp	r30, r28
 dcc:	fd 07       	cpc	r31, r29
 dce:	61 f4       	brne	.+24     	; 0xde8 <free+0xbe>
 dd0:	80 81       	ld	r24, Z
 dd2:	91 81       	ldd	r25, Z+1	; 0x01
 dd4:	84 0f       	add	r24, r20
 dd6:	95 1f       	adc	r25, r21
 dd8:	02 96       	adiw	r24, 0x02	; 2
 dda:	e9 01       	movw	r28, r18
 ddc:	99 83       	std	Y+1, r25	; 0x01
 dde:	88 83       	st	Y, r24
 de0:	82 81       	ldd	r24, Z+2	; 0x02
 de2:	93 81       	ldd	r25, Z+3	; 0x03
 de4:	9b 83       	std	Y+3, r25	; 0x03
 de6:	8a 83       	std	Y+2, r24	; 0x02
 de8:	e0 e0       	ldi	r30, 0x00	; 0
 dea:	f0 e0       	ldi	r31, 0x00	; 0
 dec:	12 96       	adiw	r26, 0x02	; 2
 dee:	8d 91       	ld	r24, X+
 df0:	9c 91       	ld	r25, X
 df2:	13 97       	sbiw	r26, 0x03	; 3
 df4:	00 97       	sbiw	r24, 0x00	; 0
 df6:	19 f0       	breq	.+6      	; 0xdfe <free+0xd4>
 df8:	fd 01       	movw	r30, r26
 dfa:	dc 01       	movw	r26, r24
 dfc:	f7 cf       	rjmp	.-18     	; 0xdec <free+0xc2>
 dfe:	8d 91       	ld	r24, X+
 e00:	9c 91       	ld	r25, X
 e02:	11 97       	sbiw	r26, 0x01	; 1
 e04:	9d 01       	movw	r18, r26
 e06:	2e 5f       	subi	r18, 0xFE	; 254
 e08:	3f 4f       	sbci	r19, 0xFF	; 255
 e0a:	82 0f       	add	r24, r18
 e0c:	93 1f       	adc	r25, r19
 e0e:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 e12:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 e16:	28 17       	cp	r18, r24
 e18:	39 07       	cpc	r19, r25
 e1a:	69 f4       	brne	.+26     	; 0xe36 <free+0x10c>
 e1c:	30 97       	sbiw	r30, 0x00	; 0
 e1e:	29 f4       	brne	.+10     	; 0xe2a <free+0x100>
 e20:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <__flp+0x1>
 e24:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__flp>
 e28:	02 c0       	rjmp	.+4      	; 0xe2e <free+0x104>
 e2a:	13 82       	std	Z+3, r1	; 0x03
 e2c:	12 82       	std	Z+2, r1	; 0x02
 e2e:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <__brkval+0x1>
 e32:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <__brkval>
 e36:	df 91       	pop	r29
 e38:	cf 91       	pop	r28
 e3a:	08 95       	ret

Disassembly of section .text.avrlibc:

00001f6c <memset>:
    1f6c:	dc 01       	movw	r26, r24
    1f6e:	01 c0       	rjmp	.+2      	; 0x1f72 <memset+0x6>
    1f70:	6d 93       	st	X+, r22
    1f72:	41 50       	subi	r20, 0x01	; 1
    1f74:	50 40       	sbci	r21, 0x00	; 0
    1f76:	e0 f7       	brcc	.-8      	; 0x1f70 <memset+0x4>
    1f78:	08 95       	ret
