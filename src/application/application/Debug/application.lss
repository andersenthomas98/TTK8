
application.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00002366  2**0
                  ALLOC, LOAD, DATA
  1 .text         000001d4  00000000  00000000  00000114  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800100  00800100  00002366  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00002366  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001d8  00000000  00000000  000023c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002f35  00000000  00000000  00002599  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000eaf  00000000  00000000  000054ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000010cb  00000000  00000000  0000637d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000053c  00000000  00000000  00007448  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f9  00000000  00000000  00007984  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000012d1  00000000  00000000  00007d7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000148  00000000  00000000  0000904e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00002240  00002240  00002354  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00009198  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.encoder_init 0000002e  0000201a  0000201a  0000212e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.encoder_read_tick 0000001e  00002152  00002152  00002266  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.encoder_get_accumulated_ticks_left 00000046  00001c6c  00001c6c  00001d80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.encoder_get_accumulated_ticks_right 00000046  00001cb2  00001cb2  00001dc6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_1 0000009e  00001738  00001738  0000184c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_2 0000009e  000017d6  000017d6  000018ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.encoder_ticks_right 00000004  00800112  00800112  00002366  2**0
                  ALLOC
 21 .bss.encoder_ticks_left 00000004  00800116  00800116  00002366  2**0
                  ALLOC
 22 .text.abs     00000030  00001fea  00001fea  000020fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.motor_init 0000001e  00002170  00002170  00002284  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.set_left_motor_dir 00000020  00002112  00002112  00002226  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.set_right_motor_dir 00000020  00002132  00002132  00002246  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.motor_left 00000042  00001e0e  00001e0e  00001f22  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.motor_right 00000042  00001e50  00001e50  00001f64  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.pwm_init 0000001a  0000218e  0000218e  000022a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.pwm_set_duty_cycle_left 0000002c  00002076  00002076  0000218a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.pwm_set_duty_cycle_right 0000002c  000020a2  000020a2  000021b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.PID_controller_set_parameters 0000007c  0000199e  0000199e  00001ab2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.PID_controller_init 0000006c  00001b0c  00001b0c  00001c20  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.PID_controller_get_control_action 0000020e  00000df8  00000df8  00000f0c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.speed_estimator_init 00000092  0000190c  0000190c  00001a20  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.speed_estimator_right_rad_per_s 00000046  00001cf8  00001cf8  00001e0c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.speed_estimator_left_rad_per_s 00000046  00001d3e  00001d3e  00001e52  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.__vector_11 00000194  000011b6  000011b6  000012ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .data.ticks_per_rot_right 00000004  0080011a  0000224a  0000235e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 39 .data.ticks_per_rot_left 00000004  0080011e  0000224e  00002362  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 40 .bss.rad_per_s_right 00000004  00800122  00800122  00002366  2**0
                  ALLOC
 41 .bss.rad_per_s_left 00000004  00800126  00800126  00002366  2**0
                  ALLOC
 42 .bss.prev_ticks_left 00000002  00800132  00800132  00002366  2**0
                  ALLOC
 43 .bss.prev_ticks_right 00000002  00800134  00800134  00002366  2**0
                  ALLOC
 44 .bss.ticks_left 00000002  00800136  00800136  00002366  2**0
                  ALLOC
 45 .bss.ticks_right 00000002  00800138  00800138  00002366  2**0
                  ALLOC
 46 .text.timer_init 00000040  00001e92  00001e92  00001fa6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.timer_get_elapsed_ms 00000046  00001d84  00001d84  00001e98  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.timer_reset 0000004e  00001bd6  00001bd6  00001cea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.timer_timeout 0000003c  00001ed2  00001ed2  00001fe6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.__vector_7 000000b2  00001686  00001686  0000179a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .bss.timer_flag 00000002  0080013a  0080013a  00002366  2**0
                  ALLOC
 52 .bss.elapsed_ms_since_init 00000004  0080012a  0080012a  00002366  2**0
                  ALLOC
 53 .bss.elapsed_ms 00000004  0080012e  0080012e  00002366  2**0
                  ALLOC
 54 .text.usart_tx 0000000e  000021a8  000021a8  000022bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.usart_rx 0000000e  000021b6  000021b6  000022ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.usart_init 00000022  000020ce  000020ce  000021e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .progmemx.data 00000069  000001d4  000001d4  000002e8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 58 .text.main    0000022c  00000bcc  00000bcc  00000ce0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.avrlibc.fplib 0000000e  000021c4  000021c4  000022d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.avrlibc.fplib 000000ce  000014fc  000014fc  00001610  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.avrlibc.fplib 0000000a  00002216  00002216  0000232a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.avrlibc.fplib 00000008  0000222a  0000222a  0000233e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.avrlibc.fplib 000000de  0000134a  0000134a  0000145e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.avrlibc.fplib 0000005e  00001b78  00001b78  00001c8c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.avrlibc.fplib 0000007a  00001a1a  00001a1a  00001b2e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.avrlibc.fplib 00000048  00001c24  00001c24  00001d38  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.avrlibc.fplib 0000000c  0000220a  0000220a  0000231e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.avrlibc.fplib 00000006  0000223a  0000223a  0000234e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.avrlibc.fplib 0000000e  000021d2  000021d2  000022e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text.avrlibc.fplib 0000000e  000021e0  000021e0  000022f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.avrlibc.fplib 00000022  000020f0  000020f0  00002204  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text.avrlibc.fplib 00000044  00001dca  00001dca  00001ede  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.avrlibc.fplib 0000000e  000021ee  000021ee  00002302  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.avrlibc.fplib 0000000a  00002220  00002220  00002334  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.avrlibc.fplib 00000008  00002232  00002232  00002346  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.avrlibc.fplib 000000d4  00001428  00001428  0000153c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .progmemx.data 00000008  0000023d  0000023d  00000351  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 78 .text.avrlibc 00000744  00000246  00000246  0000035a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.libgcc.prologue 00000038  00001f0e  00001f0e  00002022  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.libgcc.prologue 00000036  00001f7e  00001f7e  00002092  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.avrlibc 000001b0  00001006  00001006  0000111a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.avrlibc 00000036  00001fb4  00001fb4  000020c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.avrlibc 00000098  00001874  00001874  00001988  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .text.avrlibc 00000078  00001a94  00001a94  00001ba8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 .text.avrlibc 0000002e  00002048  00002048  0000215c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 .text.avrlibc 000000bc  000015ca  000015ca  000016de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 .text.avrlibc 00000038  00001f46  00001f46  0000205a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 .data         00000006  0080010c  00002244  00002358  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 89 .text.avrlibc 00000242  0000098a  0000098a  00000a9e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 .text.avrlibc 0000000e  000021fc  000021fc  00002310  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 c0 00 	jmp	0x180	; 0x180 <__ctors_end>
   4:	0c 94 9c 0b 	jmp	0x1738	; 0x1738 <__vector_1>
   8:	0c 94 eb 0b 	jmp	0x17d6	; 0x17d6 <__vector_2>
   c:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  10:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  14:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  18:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  1c:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__vector_7>
  20:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  24:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  28:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  2c:	0c 94 db 08 	jmp	0x11b6	; 0x11b6 <__vector_11>
  30:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  34:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  38:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  3c:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  40:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  44:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  48:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  4c:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  50:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  54:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  58:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  5c:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  60:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>
  64:	0c 94 20 11 	jmp	0x2240	; 0x2240 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 0c       	add	r0, r1
  6c:	80 01       	movw	r16, r0
  6e:	0c 01       	movw	r0, r24
  70:	12 00       	.word	0x0012	; ????
  72:	22 44       	sbci	r18, 0x42	; 66
  74:	01 12       	cpse	r0, r17
  76:	01 1a       	sub	r0, r17
  78:	80 01       	movw	r16, r0
  7a:	1a 01       	movw	r2, r20
  7c:	22 00       	.word	0x0022	; ????
  7e:	22 4a       	sbci	r18, 0xA2	; 162
  80:	01 22       	and	r0, r17
  82:	01 3c       	cpi	r16, 0xC1	; 193
  84:	80 00       	.word	0x0080	; ????

00000086 <__trampolines_end>:
  86:	00 40       	sbci	r16, 0x00	; 0
  88:	7a 10       	cpse	r7, r10
  8a:	f3 5a       	subi	r31, 0xA3	; 163
  8c:	00 a0       	ldd	r0, Z+32	; 0x20
  8e:	72 4e       	sbci	r23, 0xE2	; 226
  90:	18 09       	sbc	r17, r8
  92:	00 10       	cpse	r0, r0
  94:	a5 d4       	rcall	.+2378   	; 0x9e0 <malloc+0x56>
  96:	e8 00       	.word	0x00e8	; ????
  98:	00 e8       	ldi	r16, 0x80	; 128
  9a:	76 48       	sbci	r23, 0x86	; 134
  9c:	17 00       	.word	0x0017	; ????
  9e:	00 e4       	ldi	r16, 0x40	; 64
  a0:	0b 54       	subi	r16, 0x4B	; 75
  a2:	02 00       	.word	0x0002	; ????
  a4:	00 ca       	rjmp	.-3072   	; 0xfffff4a6 <__eeprom_end+0xff7ef4a6>
  a6:	9a 3b       	cpi	r25, 0xBA	; 186
  a8:	00 00       	nop
  aa:	00 e1       	ldi	r16, 0x10	; 16
  ac:	f5 05       	cpc	r31, r5
  ae:	00 00       	nop
  b0:	80 96       	adiw	r24, 0x20	; 32
  b2:	98 00       	.word	0x0098	; ????
  b4:	00 00       	nop
  b6:	40 42       	sbci	r20, 0x20	; 32
  b8:	0f 00       	.word	0x000f	; ????
  ba:	00 00       	nop
  bc:	a0 86       	std	Z+8, r10	; 0x08
  be:	01 00       	.word	0x0001	; ????
  c0:	00 00       	nop
  c2:	10 27       	eor	r17, r16
  c4:	00 00       	nop
  c6:	00 00       	nop
  c8:	e8 03       	fmulsu	r22, r16
  ca:	00 00       	nop
  cc:	00 00       	nop
  ce:	64 00       	.word	0x0064	; ????
  d0:	00 00       	nop
  d2:	00 00       	nop
  d4:	0a 00       	.word	0x000a	; ????
  d6:	00 00       	nop
  d8:	00 00       	nop
  da:	01 00       	.word	0x0001	; ????
  dc:	00 00       	nop
  de:	00 00       	nop
  e0:	2c 76       	andi	r18, 0x6C	; 108
  e2:	d8 88       	ldd	r13, Y+16	; 0x10
  e4:	dc 67       	ori	r29, 0x7C	; 124
  e6:	4f 08       	sbc	r4, r15
  e8:	23 df       	rcall	.-442    	; 0xffffff30 <__eeprom_end+0xff7eff30>
  ea:	c1 df       	rcall	.-126    	; 0x6e <.dinit+0x6>
  ec:	ae 59       	subi	r26, 0x9E	; 158
  ee:	e1 b1       	in	r30, 0x01	; 1
  f0:	b7 96       	adiw	r30, 0x27	; 39
  f2:	e5 e3       	ldi	r30, 0x35	; 53
  f4:	e4 53       	subi	r30, 0x34	; 52
  f6:	c6 3a       	cpi	r28, 0xA6	; 166
  f8:	e6 51       	subi	r30, 0x16	; 22
  fa:	99 76       	andi	r25, 0x69	; 105
  fc:	96 e8       	ldi	r25, 0x86	; 134
  fe:	e6 c2       	rjmp	.+1484   	; 0x6cc <__EEPROM_REGION_LENGTH__+0x2cc>
 100:	84 26       	eor	r8, r20
 102:	eb 89       	ldd	r30, Y+19	; 0x13
 104:	8c 9b       	sbis	0x11, 4	; 17
 106:	62 ed       	ldi	r22, 0xD2	; 210
 108:	40 7c       	andi	r20, 0xC0	; 192
 10a:	6f fc       	.word	0xfc6f	; ????
 10c:	ef bc       	out	0x2f, r14	; 47
 10e:	9c 9f       	mul	r25, r28
 110:	40 f2       	brcs	.-112    	; 0xa2 <__trampolines_end+0x1c>
 112:	ba a5       	ldd	r27, Y+42	; 0x2a
 114:	6f a5       	ldd	r22, Y+47	; 0x2f
 116:	f4 90       	lpm	r15, Z
 118:	05 5a       	subi	r16, 0xA5	; 165
 11a:	2a f7       	brpl	.-54     	; 0xe6 <__trampolines_end+0x60>
 11c:	5c 93       	st	X, r21
 11e:	6b 6c       	ori	r22, 0xCB	; 203
 120:	f9 67       	ori	r31, 0x79	; 121
 122:	6d c1       	rjmp	.+730    	; 0x3fe <vfprintf+0x1b8>
 124:	1b fc       	.word	0xfc1b	; ????
 126:	e0 e4       	ldi	r30, 0x40	; 64
 128:	0d 47       	sbci	r16, 0x7D	; 125
 12a:	fe f5       	brtc	.+126    	; 0x1aa <__do_copy_data+0x1e>
 12c:	20 e6       	ldi	r18, 0x60	; 96
 12e:	b5 00       	.word	0x00b5	; ????
 130:	d0 ed       	ldi	r29, 0xD0	; 208
 132:	90 2e       	mov	r9, r16
 134:	03 00       	.word	0x0003	; ????
 136:	94 35       	cpi	r25, 0x54	; 84
 138:	77 05       	cpc	r23, r7
 13a:	00 80       	ld	r0, Z
 13c:	84 1e       	adc	r8, r20
 13e:	08 00       	.word	0x0008	; ????
 140:	00 20       	and	r0, r0
 142:	4e 0a       	sbc	r4, r30
 144:	00 00       	nop
 146:	00 c8       	rjmp	.-4096   	; 0xfffff148 <__eeprom_end+0xff7ef148>
 148:	0c 33       	cpi	r16, 0x3C	; 60
 14a:	33 33       	cpi	r19, 0x33	; 51
 14c:	33 0f       	add	r19, r19
 14e:	98 6e       	ori	r25, 0xE8	; 232
 150:	12 83       	std	Z+2, r17	; 0x02
 152:	11 41       	sbci	r17, 0x11	; 17
 154:	ef 8d       	ldd	r30, Y+31	; 0x1f
 156:	21 14       	cp	r2, r1
 158:	89 3b       	cpi	r24, 0xB9	; 185
 15a:	e6 55       	subi	r30, 0x56	; 86
 15c:	16 cf       	rjmp	.-468    	; 0xffffff8a <__eeprom_end+0xff7eff8a>
 15e:	fe e6       	ldi	r31, 0x6E	; 110
 160:	db 18       	sub	r13, r11
 162:	d1 84       	ldd	r13, Z+9	; 0x09
 164:	4b 38       	cpi	r20, 0x8B	; 139
 166:	1b f7       	brvc	.-58     	; 0x12e <__trampolines_end+0xa8>
 168:	7c 1d       	adc	r23, r12
 16a:	90 1d       	adc	r25, r0
 16c:	a4 bb       	out	0x14, r26	; 20
 16e:	e4 24       	eor	r14, r4
 170:	20 32       	cpi	r18, 0x20	; 32
 172:	84 72       	andi	r24, 0x24	; 36
 174:	5e 22       	and	r5, r30
 176:	81 00       	.word	0x0081	; ????
 178:	c9 f1       	breq	.+114    	; 0x1ec <_etext+0x18>
 17a:	24 ec       	ldi	r18, 0xC4	; 196
 17c:	a1 e5       	ldi	r26, 0x51	; 81
 17e:	3d 27       	eor	r19, r29

00000180 <__ctors_end>:
 180:	11 24       	eor	r1, r1
 182:	1f be       	out	0x3f, r1	; 63
 184:	cf ef       	ldi	r28, 0xFF	; 255
 186:	d8 e0       	ldi	r29, 0x08	; 8
 188:	de bf       	out	0x3e, r29	; 62
 18a:	cd bf       	out	0x3d, r28	; 61

0000018c <__do_copy_data>:
 18c:	e8 e6       	ldi	r30, 0x68	; 104
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	40 e0       	ldi	r20, 0x00	; 0
 192:	17 c0       	rjmp	.+46     	; 0x1c2 <__do_clear_bss+0x8>
 194:	b5 91       	lpm	r27, Z+
 196:	a5 91       	lpm	r26, Z+
 198:	35 91       	lpm	r19, Z+
 19a:	25 91       	lpm	r18, Z+
 19c:	05 91       	lpm	r16, Z+
 19e:	07 fd       	sbrc	r16, 7
 1a0:	0c c0       	rjmp	.+24     	; 0x1ba <__do_clear_bss>
 1a2:	95 91       	lpm	r25, Z+
 1a4:	85 91       	lpm	r24, Z+
 1a6:	ef 01       	movw	r28, r30
 1a8:	f9 2f       	mov	r31, r25
 1aa:	e8 2f       	mov	r30, r24
 1ac:	05 90       	lpm	r0, Z+
 1ae:	0d 92       	st	X+, r0
 1b0:	a2 17       	cp	r26, r18
 1b2:	b3 07       	cpc	r27, r19
 1b4:	d9 f7       	brne	.-10     	; 0x1ac <__do_copy_data+0x20>
 1b6:	fe 01       	movw	r30, r28
 1b8:	04 c0       	rjmp	.+8      	; 0x1c2 <__do_clear_bss+0x8>

000001ba <__do_clear_bss>:
 1ba:	1d 92       	st	X+, r1
 1bc:	a2 17       	cp	r26, r18
 1be:	b3 07       	cpc	r27, r19
 1c0:	e1 f7       	brne	.-8      	; 0x1ba <__do_clear_bss>
 1c2:	e5 38       	cpi	r30, 0x85	; 133
 1c4:	f4 07       	cpc	r31, r20
 1c6:	31 f7       	brne	.-52     	; 0x194 <__do_copy_data+0x8>
 1c8:	0e 94 e6 05 	call	0xbcc	; 0xbcc <main>
 1cc:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <_exit>

000001d0 <_exit>:
 1d0:	f8 94       	cli

000001d2 <__stop_program>:
 1d2:	ff cf       	rjmp	.-2      	; 0x1d2 <__stop_program>

Disassembly of section .text:

00002240 <__bad_interrupt>:
    2240:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.encoder_init:

0000201a <encoder_init>:
static volatile long int encoder_ticks_left = 0;
static volatile long int encoder_ticks_right = 0;

void encoder_init(void) {
	
	cli();
    201a:	f8 94       	cli
	
	// Set digital inputs with internal pull-up (unsure if internal pull-up should be used)
	DDRD &= ~(1 << ENCA1);
    201c:	8a b1       	in	r24, 0x0a	; 10
    201e:	8b 7f       	andi	r24, 0xFB	; 251
    2020:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA1);
    2022:	8b b1       	in	r24, 0x0b	; 11
    2024:	84 60       	ori	r24, 0x04	; 4
    2026:	8b b9       	out	0x0b, r24	; 11
	
	DDRD &= ~(1 << ENCA2);
    2028:	8a b1       	in	r24, 0x0a	; 10
    202a:	87 7f       	andi	r24, 0xF7	; 247
    202c:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA2);
    202e:	8b b1       	in	r24, 0x0b	; 11
    2030:	88 60       	ori	r24, 0x08	; 8
    2032:	8b b9       	out	0x0b, r24	; 11
	
	// Rising edge of INT0 and INT1 will generate an interrupt request
	EICRA |= (1 << ISC00) | (1 << ISC01) | (1 << ISC10) | (1 << ISC11);
    2034:	e9 e6       	ldi	r30, 0x69	; 105
    2036:	f0 e0       	ldi	r31, 0x00	; 0
    2038:	80 81       	ld	r24, Z
    203a:	8f 60       	ori	r24, 0x0F	; 15
    203c:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0) | (1 << INT1);
    203e:	8d b3       	in	r24, 0x1d	; 29
    2040:	83 60       	ori	r24, 0x03	; 3
    2042:	8d bb       	out	0x1d, r24	; 29
	
	// Enable global interrupts
	sei();
    2044:	78 94       	sei
    2046:	08 95       	ret

Disassembly of section .text.encoder_read_tick:

00002152 <encoder_read_tick>:
	
	
}

int encoder_read_tick(int encoder_pin) {
	if (PIND & (1<<encoder_pin)) {
    2152:	29 b1       	in	r18, 0x09	; 9
    2154:	30 e0       	ldi	r19, 0x00	; 0
    2156:	02 c0       	rjmp	.+4      	; 0x215c <encoder_read_tick+0xa>
    2158:	35 95       	asr	r19
    215a:	27 95       	ror	r18
    215c:	8a 95       	dec	r24
    215e:	e2 f7       	brpl	.-8      	; 0x2158 <encoder_read_tick+0x6>
    2160:	c9 01       	movw	r24, r18
    2162:	81 70       	andi	r24, 0x01	; 1
    2164:	99 27       	eor	r25, r25
    2166:	20 ff       	sbrs	r18, 0
    2168:	02 c0       	rjmp	.+4      	; 0x216e <encoder_read_tick+0x1c>
		return 1;
    216a:	81 e0       	ldi	r24, 0x01	; 1
    216c:	90 e0       	ldi	r25, 0x00	; 0
	}
	return 0;
}
    216e:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_left:

00001c6c <encoder_get_accumulated_ticks_left>:

long encoder_get_accumulated_ticks_left(void) {
    1c6c:	cf 93       	push	r28
    1c6e:	df 93       	push	r29
    1c70:	1f 92       	push	r1
    1c72:	cd b7       	in	r28, 0x3d	; 61
    1c74:	de b7       	in	r29, 0x3e	; 62
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1c76:	8f b7       	in	r24, 0x3f	; 63
    1c78:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1c7a:	f8 94       	cli
    1c7c:	81 e0       	ldi	r24, 0x01	; 1
    1c7e:	09 c0       	rjmp	.+18     	; 0x1c92 <encoder_get_accumulated_ticks_left+0x26>
		ticks = encoder_ticks_left;
    1c80:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <encoder_ticks_left>
    1c84:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <encoder_ticks_left+0x1>
    1c88:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <encoder_ticks_left+0x2>
    1c8c:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <encoder_ticks_left+0x3>
	return 0;
}

long encoder_get_accumulated_ticks_left(void) {
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1c90:	80 e0       	ldi	r24, 0x00	; 0
    1c92:	81 11       	cpse	r24, r1
    1c94:	f5 cf       	rjmp	.-22     	; 0x1c80 <encoder_get_accumulated_ticks_left+0x14>
    1c96:	ce 01       	movw	r24, r28
    1c98:	01 96       	adiw	r24, 0x01	; 1
    1c9a:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1c9c:	fc 01       	movw	r30, r24
    1c9e:	84 91       	lpm	r24, Z
    1ca0:	a7 fd       	sbrc	r26, 7
    1ca2:	80 81       	ld	r24, Z
    1ca4:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_left;
	}
	return ticks;
}
    1ca6:	cb 01       	movw	r24, r22
    1ca8:	ba 01       	movw	r22, r20
    1caa:	0f 90       	pop	r0
    1cac:	df 91       	pop	r29
    1cae:	cf 91       	pop	r28
    1cb0:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_right:

00001cb2 <encoder_get_accumulated_ticks_right>:

long encoder_get_accumulated_ticks_right(void) {
    1cb2:	cf 93       	push	r28
    1cb4:	df 93       	push	r29
    1cb6:	1f 92       	push	r1
    1cb8:	cd b7       	in	r28, 0x3d	; 61
    1cba:	de b7       	in	r29, 0x3e	; 62
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1cbc:	8f b7       	in	r24, 0x3f	; 63
    1cbe:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1cc0:	f8 94       	cli
    1cc2:	81 e0       	ldi	r24, 0x01	; 1
    1cc4:	09 c0       	rjmp	.+18     	; 0x1cd8 <encoder_get_accumulated_ticks_right+0x26>
		ticks = encoder_ticks_right;
    1cc6:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <encoder_ticks_right>
    1cca:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <encoder_ticks_right+0x1>
    1cce:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <encoder_ticks_right+0x2>
    1cd2:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <encoder_ticks_right+0x3>
	return ticks;
}

long encoder_get_accumulated_ticks_right(void) {
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1cd6:	80 e0       	ldi	r24, 0x00	; 0
    1cd8:	81 11       	cpse	r24, r1
    1cda:	f5 cf       	rjmp	.-22     	; 0x1cc6 <encoder_get_accumulated_ticks_right+0x14>
    1cdc:	ce 01       	movw	r24, r28
    1cde:	01 96       	adiw	r24, 0x01	; 1
    1ce0:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1ce2:	fc 01       	movw	r30, r24
    1ce4:	84 91       	lpm	r24, Z
    1ce6:	a7 fd       	sbrc	r26, 7
    1ce8:	80 81       	ld	r24, Z
    1cea:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_right;
	}
	return ticks;
}
    1cec:	cb 01       	movw	r24, r22
    1cee:	ba 01       	movw	r22, r20
    1cf0:	0f 90       	pop	r0
    1cf2:	df 91       	pop	r29
    1cf4:	cf 91       	pop	r28
    1cf6:	08 95       	ret

Disassembly of section .text.__vector_1:

00001738 <__vector_1>:



// Interrupt service routine for INT0
// Triggered on rising edge of channel A encoder signal for left wheel
ISR(INT0_vect) {
    1738:	1f 92       	push	r1
    173a:	0f 92       	push	r0
    173c:	0f b6       	in	r0, 0x3f	; 63
    173e:	0f 92       	push	r0
    1740:	11 24       	eor	r1, r1
    1742:	2f 93       	push	r18
    1744:	3f 93       	push	r19
    1746:	4f 93       	push	r20
    1748:	5f 93       	push	r21
    174a:	6f 93       	push	r22
    174c:	7f 93       	push	r23
    174e:	8f 93       	push	r24
    1750:	9f 93       	push	r25
    1752:	af 93       	push	r26
    1754:	bf 93       	push	r27
    1756:	ef 93       	push	r30
    1758:	ff 93       	push	r31
	int encb1 = encoder_read_tick(ENCB1);
    175a:	84 e0       	ldi	r24, 0x04	; 4
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	0e 94 a9 10 	call	0x2152	; 0x2152 <encoder_read_tick>
	if (encb1) {
    1762:	89 2b       	or	r24, r25
    1764:	a1 f0       	breq	.+40     	; 0x178e <__vector_1+0x56>
		encoder_ticks_left++;
    1766:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <encoder_ticks_left>
    176a:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <encoder_ticks_left+0x1>
    176e:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <encoder_ticks_left+0x2>
    1772:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <encoder_ticks_left+0x3>
    1776:	01 96       	adiw	r24, 0x01	; 1
    1778:	a1 1d       	adc	r26, r1
    177a:	b1 1d       	adc	r27, r1
    177c:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <encoder_ticks_left>
    1780:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <encoder_ticks_left+0x1>
    1784:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <encoder_ticks_left+0x2>
    1788:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <encoder_ticks_left+0x3>
    178c:	13 c0       	rjmp	.+38     	; 0x17b4 <__vector_1+0x7c>
	} else {
		encoder_ticks_left--;
    178e:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <encoder_ticks_left>
    1792:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <encoder_ticks_left+0x1>
    1796:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <encoder_ticks_left+0x2>
    179a:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <encoder_ticks_left+0x3>
    179e:	01 97       	sbiw	r24, 0x01	; 1
    17a0:	a1 09       	sbc	r26, r1
    17a2:	b1 09       	sbc	r27, r1
    17a4:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <encoder_ticks_left>
    17a8:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <encoder_ticks_left+0x1>
    17ac:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <encoder_ticks_left+0x2>
    17b0:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <encoder_ticks_left+0x3>
	}
}
    17b4:	ff 91       	pop	r31
    17b6:	ef 91       	pop	r30
    17b8:	bf 91       	pop	r27
    17ba:	af 91       	pop	r26
    17bc:	9f 91       	pop	r25
    17be:	8f 91       	pop	r24
    17c0:	7f 91       	pop	r23
    17c2:	6f 91       	pop	r22
    17c4:	5f 91       	pop	r21
    17c6:	4f 91       	pop	r20
    17c8:	3f 91       	pop	r19
    17ca:	2f 91       	pop	r18
    17cc:	0f 90       	pop	r0
    17ce:	0f be       	out	0x3f, r0	; 63
    17d0:	0f 90       	pop	r0
    17d2:	1f 90       	pop	r1
    17d4:	18 95       	reti

Disassembly of section .text.__vector_2:

000017d6 <__vector_2>:

// Interrupt service routine for INT1
// Triggered on rising edge of channel A encoder signal for right wheel
ISR(INT1_vect) {
    17d6:	1f 92       	push	r1
    17d8:	0f 92       	push	r0
    17da:	0f b6       	in	r0, 0x3f	; 63
    17dc:	0f 92       	push	r0
    17de:	11 24       	eor	r1, r1
    17e0:	2f 93       	push	r18
    17e2:	3f 93       	push	r19
    17e4:	4f 93       	push	r20
    17e6:	5f 93       	push	r21
    17e8:	6f 93       	push	r22
    17ea:	7f 93       	push	r23
    17ec:	8f 93       	push	r24
    17ee:	9f 93       	push	r25
    17f0:	af 93       	push	r26
    17f2:	bf 93       	push	r27
    17f4:	ef 93       	push	r30
    17f6:	ff 93       	push	r31
	int encb2 = encoder_read_tick(ENCB2);
    17f8:	87 e0       	ldi	r24, 0x07	; 7
    17fa:	90 e0       	ldi	r25, 0x00	; 0
    17fc:	0e 94 a9 10 	call	0x2152	; 0x2152 <encoder_read_tick>
	if (encb2) {
    1800:	89 2b       	or	r24, r25
    1802:	a1 f0       	breq	.+40     	; 0x182c <__vector_2+0x56>
		encoder_ticks_right++;
    1804:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_right>
    1808:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_right+0x1>
    180c:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <encoder_ticks_right+0x2>
    1810:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <encoder_ticks_right+0x3>
    1814:	01 96       	adiw	r24, 0x01	; 1
    1816:	a1 1d       	adc	r26, r1
    1818:	b1 1d       	adc	r27, r1
    181a:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <encoder_ticks_right>
    181e:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <encoder_ticks_right+0x1>
    1822:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <encoder_ticks_right+0x2>
    1826:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <encoder_ticks_right+0x3>
    182a:	13 c0       	rjmp	.+38     	; 0x1852 <__vector_2+0x7c>
		} 
	else {
		encoder_ticks_right--;
    182c:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_right>
    1830:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_right+0x1>
    1834:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <encoder_ticks_right+0x2>
    1838:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <encoder_ticks_right+0x3>
    183c:	01 97       	sbiw	r24, 0x01	; 1
    183e:	a1 09       	sbc	r26, r1
    1840:	b1 09       	sbc	r27, r1
    1842:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <encoder_ticks_right>
    1846:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <encoder_ticks_right+0x1>
    184a:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <encoder_ticks_right+0x2>
    184e:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <encoder_ticks_right+0x3>
	}
    1852:	ff 91       	pop	r31
    1854:	ef 91       	pop	r30
    1856:	bf 91       	pop	r27
    1858:	af 91       	pop	r26
    185a:	9f 91       	pop	r25
    185c:	8f 91       	pop	r24
    185e:	7f 91       	pop	r23
    1860:	6f 91       	pop	r22
    1862:	5f 91       	pop	r21
    1864:	4f 91       	pop	r20
    1866:	3f 91       	pop	r19
    1868:	2f 91       	pop	r18
    186a:	0f 90       	pop	r0
    186c:	0f be       	out	0x3f, r0	; 63
    186e:	0f 90       	pop	r0
    1870:	1f 90       	pop	r1
    1872:	18 95       	reti

Disassembly of section .text.abs:

00001fea <abs>:
 *  Author: thoander
 */ 

#include "misc.h"

float abs(float val) {
    1fea:	cf 92       	push	r12
    1fec:	df 92       	push	r13
    1fee:	ef 92       	push	r14
    1ff0:	ff 92       	push	r15
    1ff2:	6b 01       	movw	r12, r22
    1ff4:	7c 01       	movw	r14, r24
	if (val < 0) {
    1ff6:	20 e0       	ldi	r18, 0x00	; 0
    1ff8:	30 e0       	ldi	r19, 0x00	; 0
    1ffa:	a9 01       	movw	r20, r18
    1ffc:	0e 94 0b 11 	call	0x2216	; 0x2216 <__cmpsf2>
    2000:	88 23       	and	r24, r24
    2002:	24 f4       	brge	.+8      	; 0x200c <abs+0x22>
		return val*(-1.0);
    2004:	c7 01       	movw	r24, r14
    2006:	b6 01       	movw	r22, r12
    2008:	90 58       	subi	r25, 0x80	; 128
    200a:	02 c0       	rjmp	.+4      	; 0x2010 <abs+0x26>
	}
	return val;
    200c:	c7 01       	movw	r24, r14
    200e:	b6 01       	movw	r22, r12
    2010:	ff 90       	pop	r15
    2012:	ef 90       	pop	r14
    2014:	df 90       	pop	r13
    2016:	cf 90       	pop	r12
    2018:	08 95       	ret

Disassembly of section .text.motor_init:

00002170 <motor_init>:


void motor_init(void) {
	
	// For motor control
	pwm_init();
    2170:	0e 94 c7 10 	call	0x218e	; 0x218e <pwm_init>
	
	// Set direction control pins to L298N as outputs
	DDRC |= (1 << OUT1);
    2174:	87 b1       	in	r24, 0x07	; 7
    2176:	81 60       	ori	r24, 0x01	; 1
    2178:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT2);
    217a:	87 b1       	in	r24, 0x07	; 7
    217c:	82 60       	ori	r24, 0x02	; 2
    217e:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT3);
    2180:	87 b1       	in	r24, 0x07	; 7
    2182:	84 60       	ori	r24, 0x04	; 4
    2184:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT4);
    2186:	87 b1       	in	r24, 0x07	; 7
    2188:	88 60       	ori	r24, 0x08	; 8
    218a:	87 b9       	out	0x07, r24	; 7
    218c:	08 95       	ret

Disassembly of section .text.set_left_motor_dir:

00002112 <set_left_motor_dir>:
}

void set_left_motor_dir(int dir) {
	if (dir == FORWARD) {
    2112:	01 97       	sbiw	r24, 0x01	; 1
    2114:	39 f4       	brne	.+14     	; 0x2124 <set_left_motor_dir+0x12>
		PORTC |= (1 << OUT1);
    2116:	88 b1       	in	r24, 0x08	; 8
    2118:	81 60       	ori	r24, 0x01	; 1
    211a:	88 b9       	out	0x08, r24	; 8
		PORTC &= ~(1 << OUT2);
    211c:	88 b1       	in	r24, 0x08	; 8
    211e:	8d 7f       	andi	r24, 0xFD	; 253
    2120:	88 b9       	out	0x08, r24	; 8
    2122:	08 95       	ret
	} else {
		PORTC &= ~(1 << OUT1);
    2124:	88 b1       	in	r24, 0x08	; 8
    2126:	8e 7f       	andi	r24, 0xFE	; 254
    2128:	88 b9       	out	0x08, r24	; 8
		PORTC |= (1 << OUT2);
    212a:	88 b1       	in	r24, 0x08	; 8
    212c:	82 60       	ori	r24, 0x02	; 2
    212e:	88 b9       	out	0x08, r24	; 8
    2130:	08 95       	ret

Disassembly of section .text.set_right_motor_dir:

00002132 <set_right_motor_dir>:
	}
}

void set_right_motor_dir(int dir) {
	if (dir == FORWARD) {
    2132:	01 97       	sbiw	r24, 0x01	; 1
    2134:	39 f4       	brne	.+14     	; 0x2144 <set_right_motor_dir+0x12>
		PORTC |= (1 << OUT3);
    2136:	88 b1       	in	r24, 0x08	; 8
    2138:	84 60       	ori	r24, 0x04	; 4
    213a:	88 b9       	out	0x08, r24	; 8
		PORTC &= ~(1 << OUT4);
    213c:	88 b1       	in	r24, 0x08	; 8
    213e:	87 7f       	andi	r24, 0xF7	; 247
    2140:	88 b9       	out	0x08, r24	; 8
    2142:	08 95       	ret
	} else {
		PORTC &= ~(1 << OUT3);
    2144:	88 b1       	in	r24, 0x08	; 8
    2146:	8b 7f       	andi	r24, 0xFB	; 251
    2148:	88 b9       	out	0x08, r24	; 8
		PORTC |= (1 << OUT4);
    214a:	88 b1       	in	r24, 0x08	; 8
    214c:	88 60       	ori	r24, 0x08	; 8
    214e:	88 b9       	out	0x08, r24	; 8
    2150:	08 95       	ret

Disassembly of section .text.motor_left:

00001e0e <motor_left>:
	}
}

void motor_left(float duty) {
    1e0e:	cf 92       	push	r12
    1e10:	df 92       	push	r13
    1e12:	ef 92       	push	r14
    1e14:	ff 92       	push	r15
    1e16:	6b 01       	movw	r12, r22
    1e18:	7c 01       	movw	r14, r24
	if (duty < 0) {
    1e1a:	20 e0       	ldi	r18, 0x00	; 0
    1e1c:	30 e0       	ldi	r19, 0x00	; 0
    1e1e:	a9 01       	movw	r20, r18
    1e20:	0e 94 0b 11 	call	0x2216	; 0x2216 <__cmpsf2>
    1e24:	88 23       	and	r24, r24
    1e26:	2c f4       	brge	.+10     	; 0x1e32 <motor_left+0x24>
		set_left_motor_dir(BACKWARD);
    1e28:	80 e0       	ldi	r24, 0x00	; 0
    1e2a:	90 e0       	ldi	r25, 0x00	; 0
    1e2c:	0e 94 89 10 	call	0x2112	; 0x2112 <set_left_motor_dir>
    1e30:	04 c0       	rjmp	.+8      	; 0x1e3a <motor_left+0x2c>
	} else {
		set_left_motor_dir(FORWARD);
    1e32:	81 e0       	ldi	r24, 0x01	; 1
    1e34:	90 e0       	ldi	r25, 0x00	; 0
    1e36:	0e 94 89 10 	call	0x2112	; 0x2112 <set_left_motor_dir>
	}
	float abs_duty = abs(duty);
    1e3a:	c7 01       	movw	r24, r14
    1e3c:	b6 01       	movw	r22, r12
    1e3e:	0e 94 f5 0f 	call	0x1fea	; 0x1fea <abs>
	pwm_set_duty_cycle_left(abs_duty);	
    1e42:	0e 94 3b 10 	call	0x2076	; 0x2076 <pwm_set_duty_cycle_left>
}
    1e46:	ff 90       	pop	r15
    1e48:	ef 90       	pop	r14
    1e4a:	df 90       	pop	r13
    1e4c:	cf 90       	pop	r12
    1e4e:	08 95       	ret

Disassembly of section .text.motor_right:

00001e50 <motor_right>:

void motor_right(float duty) {
    1e50:	cf 92       	push	r12
    1e52:	df 92       	push	r13
    1e54:	ef 92       	push	r14
    1e56:	ff 92       	push	r15
    1e58:	6b 01       	movw	r12, r22
    1e5a:	7c 01       	movw	r14, r24
	if (duty < 0) {
    1e5c:	20 e0       	ldi	r18, 0x00	; 0
    1e5e:	30 e0       	ldi	r19, 0x00	; 0
    1e60:	a9 01       	movw	r20, r18
    1e62:	0e 94 0b 11 	call	0x2216	; 0x2216 <__cmpsf2>
    1e66:	88 23       	and	r24, r24
    1e68:	2c f4       	brge	.+10     	; 0x1e74 <motor_right+0x24>
		set_right_motor_dir(BACKWARD);
    1e6a:	80 e0       	ldi	r24, 0x00	; 0
    1e6c:	90 e0       	ldi	r25, 0x00	; 0
    1e6e:	0e 94 99 10 	call	0x2132	; 0x2132 <set_right_motor_dir>
    1e72:	04 c0       	rjmp	.+8      	; 0x1e7c <motor_right+0x2c>
	} else {
		set_right_motor_dir(FORWARD);
    1e74:	81 e0       	ldi	r24, 0x01	; 1
    1e76:	90 e0       	ldi	r25, 0x00	; 0
    1e78:	0e 94 99 10 	call	0x2132	; 0x2132 <set_right_motor_dir>
	}
	float abs_duty = abs(duty);
    1e7c:	c7 01       	movw	r24, r14
    1e7e:	b6 01       	movw	r22, r12
    1e80:	0e 94 f5 0f 	call	0x1fea	; 0x1fea <abs>
	pwm_set_duty_cycle_right(abs_duty);
    1e84:	0e 94 51 10 	call	0x20a2	; 0x20a2 <pwm_set_duty_cycle_right>
    1e88:	ff 90       	pop	r15
    1e8a:	ef 90       	pop	r14
    1e8c:	df 90       	pop	r13
    1e8e:	cf 90       	pop	r12
    1e90:	08 95       	ret

Disassembly of section .text.pwm_init:

0000218e <pwm_init>:
#include "pwm.h"

void pwm_init(void) {
	
	// Set as output (one for each wheel)
	DDRD |= (1 << PWM1);
    218e:	8a b1       	in	r24, 0x0a	; 10
    2190:	80 64       	ori	r24, 0x40	; 64
    2192:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << PWM2);
    2194:	8a b1       	in	r24, 0x0a	; 10
    2196:	80 62       	ori	r24, 0x20	; 32
    2198:	8a b9       	out	0x0a, r24	; 10
	TCCR0B |= (1 << CS02) | (1 << CS00); // 1024 prescalar
	*/
	
	// Phase correct PWM mode
	// PWM frequency will be (with no prescaler) 31kHz (outside audible spectrum)
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00);
    219a:	84 b5       	in	r24, 0x24	; 36
    219c:	81 6a       	ori	r24, 0xA1	; 161
    219e:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS00); // no pre-scaling
    21a0:	85 b5       	in	r24, 0x25	; 37
    21a2:	81 60       	ori	r24, 0x01	; 1
    21a4:	85 bd       	out	0x25, r24	; 37
    21a6:	08 95       	ret

Disassembly of section .text.pwm_set_duty_cycle_left:

00002076 <pwm_set_duty_cycle_left>:
	
}

void pwm_set_duty_cycle_left(float d) {
	// value should be between 0-255
	float value = d / 100.0 * (255 - MIN_PWM_DUTY_LEFT) + MIN_PWM_DUTY_LEFT;
    2076:	20 e0       	ldi	r18, 0x00	; 0
    2078:	30 e0       	ldi	r19, 0x00	; 0
    207a:	48 ec       	ldi	r20, 0xC8	; 200
    207c:	52 e4       	ldi	r21, 0x42	; 66
    207e:	0e 94 15 11 	call	0x222a	; 0x222a <__divsf3>
    2082:	20 e0       	ldi	r18, 0x00	; 0
    2084:	30 e0       	ldi	r19, 0x00	; 0
    2086:	40 ef       	ldi	r20, 0xF0	; 240
    2088:	52 e4       	ldi	r21, 0x42	; 66
    208a:	0e 94 19 11 	call	0x2232	; 0x2232 <__mulsf3>
    208e:	20 e0       	ldi	r18, 0x00	; 0
    2090:	30 e0       	ldi	r19, 0x00	; 0
    2092:	47 e0       	ldi	r20, 0x07	; 7
    2094:	53 e4       	ldi	r21, 0x43	; 67
    2096:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <__addsf3>
	OCR0A = (uint8_t)value;
    209a:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <__fixunssfsi>
    209e:	67 bd       	out	0x27, r22	; 39
    20a0:	08 95       	ret

Disassembly of section .text.pwm_set_duty_cycle_right:

000020a2 <pwm_set_duty_cycle_right>:
}

void pwm_set_duty_cycle_right(float d) {
	
	float value = d / 100.0 * (255 - MIN_PWM_DUTY_RIGHT) + MIN_PWM_DUTY_RIGHT;
    20a2:	20 e0       	ldi	r18, 0x00	; 0
    20a4:	30 e0       	ldi	r19, 0x00	; 0
    20a6:	48 ec       	ldi	r20, 0xC8	; 200
    20a8:	52 e4       	ldi	r21, 0x42	; 66
    20aa:	0e 94 15 11 	call	0x222a	; 0x222a <__divsf3>
    20ae:	20 e0       	ldi	r18, 0x00	; 0
    20b0:	30 e0       	ldi	r19, 0x00	; 0
    20b2:	40 ef       	ldi	r20, 0xF0	; 240
    20b4:	52 e4       	ldi	r21, 0x42	; 66
    20b6:	0e 94 19 11 	call	0x2232	; 0x2232 <__mulsf3>
    20ba:	20 e0       	ldi	r18, 0x00	; 0
    20bc:	30 e0       	ldi	r19, 0x00	; 0
    20be:	47 e0       	ldi	r20, 0x07	; 7
    20c0:	53 e4       	ldi	r21, 0x43	; 67
    20c2:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <__addsf3>
	OCR0B = (uint8_t)value;
    20c6:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <__fixunssfsi>
    20ca:	68 bd       	out	0x28, r22	; 40
    20cc:	08 95       	ret

Disassembly of section .text.PID_controller_set_parameters:

0000199e <PID_controller_set_parameters>:

void PID_controller_set_reference(PID_controller *pid, float ref) {
	pid->reference = ref;
}

void PID_controller_set_parameters(PID_controller *pid, float P, float I, float D, float loop_period) {
    199e:	8f 92       	push	r8
    19a0:	9f 92       	push	r9
    19a2:	af 92       	push	r10
    19a4:	bf 92       	push	r11
    19a6:	cf 92       	push	r12
    19a8:	df 92       	push	r13
    19aa:	ef 92       	push	r14
    19ac:	ff 92       	push	r15
    19ae:	0f 93       	push	r16
    19b0:	1f 93       	push	r17
    19b2:	cf 93       	push	r28
    19b4:	df 93       	push	r29
    19b6:	1f 92       	push	r1
    19b8:	cd b7       	in	r28, 0x3d	; 61
    19ba:	de b7       	in	r29, 0x3e	; 62
    19bc:	fc 01       	movw	r30, r24
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    19be:	8f b7       	in	r24, 0x3f	; 63
    19c0:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    19c2:	f8 94       	cli
    19c4:	81 e0       	ldi	r24, 0x01	; 1
    19c6:	11 c0       	rjmp	.+34     	; 0x19ea <PID_controller_set_parameters+0x4c>
		pid->Kp = P;
    19c8:	44 8b       	std	Z+20, r20	; 0x14
    19ca:	55 8b       	std	Z+21, r21	; 0x15
    19cc:	66 8b       	std	Z+22, r22	; 0x16
    19ce:	77 8b       	std	Z+23, r23	; 0x17
		pid->Ki = I;
    19d0:	00 8f       	std	Z+24, r16	; 0x18
    19d2:	11 8f       	std	Z+25, r17	; 0x19
    19d4:	22 8f       	std	Z+26, r18	; 0x1a
    19d6:	33 8f       	std	Z+27, r19	; 0x1b
		pid->Kd = D;
    19d8:	c4 8e       	std	Z+28, r12	; 0x1c
    19da:	d5 8e       	std	Z+29, r13	; 0x1d
    19dc:	e6 8e       	std	Z+30, r14	; 0x1e
    19de:	f7 8e       	std	Z+31, r15	; 0x1f
		pid->loop_period = loop_period;
    19e0:	80 a2       	std	Z+32, r8	; 0x20
    19e2:	91 a2       	std	Z+33, r9	; 0x21
    19e4:	a2 a2       	std	Z+34, r10	; 0x22
    19e6:	b3 a2       	std	Z+35, r11	; 0x23
void PID_controller_set_reference(PID_controller *pid, float ref) {
	pid->reference = ref;
}

void PID_controller_set_parameters(PID_controller *pid, float P, float I, float D, float loop_period) {
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    19e8:	80 e0       	ldi	r24, 0x00	; 0
    19ea:	81 11       	cpse	r24, r1
    19ec:	ed cf       	rjmp	.-38     	; 0x19c8 <PID_controller_set_parameters+0x2a>
    19ee:	ce 01       	movw	r24, r28
    19f0:	01 96       	adiw	r24, 0x01	; 1
    19f2:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    19f4:	fc 01       	movw	r30, r24
    19f6:	84 91       	lpm	r24, Z
    19f8:	a7 fd       	sbrc	r26, 7
    19fa:	80 81       	ld	r24, Z
    19fc:	8f bf       	out	0x3f, r24	; 63
		pid->Kp = P;
		pid->Ki = I;
		pid->Kd = D;
		pid->loop_period = loop_period;
	}
}
    19fe:	0f 90       	pop	r0
    1a00:	df 91       	pop	r29
    1a02:	cf 91       	pop	r28
    1a04:	1f 91       	pop	r17
    1a06:	0f 91       	pop	r16
    1a08:	ff 90       	pop	r15
    1a0a:	ef 90       	pop	r14
    1a0c:	df 90       	pop	r13
    1a0e:	cf 90       	pop	r12
    1a10:	bf 90       	pop	r11
    1a12:	af 90       	pop	r10
    1a14:	9f 90       	pop	r9
    1a16:	8f 90       	pop	r8
    1a18:	08 95       	ret

Disassembly of section .text.PID_controller_init:

00001b0c <PID_controller_init>:

void PID_controller_init(PID_controller *pid) {
    1b0c:	fc 01       	movw	r30, r24
	pid->Kp = 0.0;
    1b0e:	14 8a       	std	Z+20, r1	; 0x14
    1b10:	15 8a       	std	Z+21, r1	; 0x15
    1b12:	16 8a       	std	Z+22, r1	; 0x16
    1b14:	17 8a       	std	Z+23, r1	; 0x17
	pid->Ki = 0.0;
    1b16:	10 8e       	std	Z+24, r1	; 0x18
    1b18:	11 8e       	std	Z+25, r1	; 0x19
    1b1a:	12 8e       	std	Z+26, r1	; 0x1a
    1b1c:	13 8e       	std	Z+27, r1	; 0x1b
	pid->Kp = 0.0;
	pid->loop_period = 0.0;
    1b1e:	10 a2       	std	Z+32, r1	; 0x20
    1b20:	11 a2       	std	Z+33, r1	; 0x21
    1b22:	12 a2       	std	Z+34, r1	; 0x22
    1b24:	13 a2       	std	Z+35, r1	; 0x23
	pid->reference = 0.0;
    1b26:	10 82       	st	Z, r1
    1b28:	11 82       	std	Z+1, r1	; 0x01
    1b2a:	12 82       	std	Z+2, r1	; 0x02
    1b2c:	13 82       	std	Z+3, r1	; 0x03
	pid->prev_reference = 0.0;
    1b2e:	14 82       	std	Z+4, r1	; 0x04
    1b30:	15 82       	std	Z+5, r1	; 0x05
    1b32:	16 82       	std	Z+6, r1	; 0x06
    1b34:	17 82       	std	Z+7, r1	; 0x07
	pid->error = 0.0;
    1b36:	10 86       	std	Z+8, r1	; 0x08
    1b38:	11 86       	std	Z+9, r1	; 0x09
    1b3a:	12 86       	std	Z+10, r1	; 0x0a
    1b3c:	13 86       	std	Z+11, r1	; 0x0b
	pid->prev_error = 0.0;
    1b3e:	14 86       	std	Z+12, r1	; 0x0c
    1b40:	15 86       	std	Z+13, r1	; 0x0d
    1b42:	16 86       	std	Z+14, r1	; 0x0e
    1b44:	17 86       	std	Z+15, r1	; 0x0f
	pid->integral_error = 0.0;
    1b46:	10 8a       	std	Z+16, r1	; 0x10
    1b48:	11 8a       	std	Z+17, r1	; 0x11
    1b4a:	12 8a       	std	Z+18, r1	; 0x12
    1b4c:	13 8a       	std	Z+19, r1	; 0x13
	pid->prev_control_action = 0.0;
    1b4e:	14 a2       	std	Z+36, r1	; 0x24
    1b50:	15 a2       	std	Z+37, r1	; 0x25
    1b52:	16 a2       	std	Z+38, r1	; 0x26
    1b54:	17 a2       	std	Z+39, r1	; 0x27
	pid->max_control_action = 100;
    1b56:	80 e0       	ldi	r24, 0x00	; 0
    1b58:	90 e0       	ldi	r25, 0x00	; 0
    1b5a:	a8 ec       	ldi	r26, 0xC8	; 200
    1b5c:	b2 e4       	ldi	r27, 0x42	; 66
    1b5e:	80 a7       	std	Z+40, r24	; 0x28
    1b60:	91 a7       	std	Z+41, r25	; 0x29
    1b62:	a2 a7       	std	Z+42, r26	; 0x2a
    1b64:	b3 a7       	std	Z+43, r27	; 0x2b
	pid->min_control_action = -100; 
    1b66:	80 e0       	ldi	r24, 0x00	; 0
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	a8 ec       	ldi	r26, 0xC8	; 200
    1b6c:	b2 ec       	ldi	r27, 0xC2	; 194
    1b6e:	84 a7       	std	Z+44, r24	; 0x2c
    1b70:	95 a7       	std	Z+45, r25	; 0x2d
    1b72:	a6 a7       	std	Z+46, r26	; 0x2e
    1b74:	b7 a7       	std	Z+47, r27	; 0x2f
    1b76:	08 95       	ret

Disassembly of section .text.PID_controller_get_control_action:

00000df8 <PID_controller_get_control_action>:
float Kd = 0.0;



void PID_controller_set_reference(PID_controller *pid, float ref) {
	pid->reference = ref;
     df8:	4f 92       	push	r4
     dfa:	5f 92       	push	r5
     dfc:	6f 92       	push	r6
     dfe:	7f 92       	push	r7
     e00:	8f 92       	push	r8
     e02:	9f 92       	push	r9
     e04:	af 92       	push	r10
     e06:	bf 92       	push	r11
     e08:	cf 92       	push	r12
     e0a:	df 92       	push	r13
     e0c:	ef 92       	push	r14
     e0e:	ff 92       	push	r15
     e10:	0f 93       	push	r16
     e12:	1f 93       	push	r17
     e14:	cf 93       	push	r28
     e16:	df 93       	push	r29
     e18:	cd b7       	in	r28, 0x3d	; 61
     e1a:	de b7       	in	r29, 0x3e	; 62
     e1c:	62 97       	sbiw	r28, 0x12	; 18
     e1e:	0f b6       	in	r0, 0x3f	; 63
     e20:	f8 94       	cli
     e22:	de bf       	out	0x3e, r29	; 62
     e24:	0f be       	out	0x3f, r0	; 63
     e26:	cd bf       	out	0x3d, r28	; 61
     e28:	9a 8b       	std	Y+18, r25	; 0x12
     e2a:	89 8b       	std	Y+17, r24	; 0x11
     e2c:	4a 01       	movw	r8, r20
     e2e:	5b 01       	movw	r10, r22
     e30:	dc 01       	movw	r26, r24
     e32:	54 96       	adiw	r26, 0x14	; 20
     e34:	cd 90       	ld	r12, X+
     e36:	dd 90       	ld	r13, X+
     e38:	ed 90       	ld	r14, X+
     e3a:	fc 90       	ld	r15, X
     e3c:	57 97       	sbiw	r26, 0x17	; 23
     e3e:	58 96       	adiw	r26, 0x18	; 24
     e40:	2d 91       	ld	r18, X+
     e42:	3d 91       	ld	r19, X+
     e44:	4d 91       	ld	r20, X+
     e46:	5c 91       	ld	r21, X
     e48:	5b 97       	sbiw	r26, 0x1b	; 27
     e4a:	c7 01       	movw	r24, r14
     e4c:	b6 01       	movw	r22, r12
     e4e:	0e 94 15 11 	call	0x222a	; 0x222a <__divsf3>
     e52:	69 87       	std	Y+9, r22	; 0x09
     e54:	7a 87       	std	Y+10, r23	; 0x0a
     e56:	8b 87       	std	Y+11, r24	; 0x0b
     e58:	9c 87       	std	Y+12, r25	; 0x0c
     e5a:	e9 89       	ldd	r30, Y+17	; 0x11
     e5c:	fa 89       	ldd	r31, Y+18	; 0x12
     e5e:	64 8d       	ldd	r22, Z+28	; 0x1c
     e60:	75 8d       	ldd	r23, Z+29	; 0x1d
     e62:	86 8d       	ldd	r24, Z+30	; 0x1e
     e64:	97 8d       	ldd	r25, Z+31	; 0x1f
     e66:	a7 01       	movw	r20, r14
     e68:	96 01       	movw	r18, r12
     e6a:	0e 94 15 11 	call	0x222a	; 0x222a <__divsf3>
     e6e:	69 83       	std	Y+1, r22	; 0x01
     e70:	7a 83       	std	Y+2, r23	; 0x02
     e72:	8b 83       	std	Y+3, r24	; 0x03
     e74:	9c 83       	std	Y+4, r25	; 0x04
     e76:	a9 89       	ldd	r26, Y+17	; 0x11
     e78:	ba 89       	ldd	r27, Y+18	; 0x12
     e7a:	94 96       	adiw	r26, 0x24	; 36
     e7c:	8d 91       	ld	r24, X+
     e7e:	9d 91       	ld	r25, X+
     e80:	0d 90       	ld	r0, X+
     e82:	bc 91       	ld	r27, X
     e84:	a0 2d       	mov	r26, r0
     e86:	8d 87       	std	Y+13, r24	; 0x0d
     e88:	9e 87       	std	Y+14, r25	; 0x0e
     e8a:	af 87       	std	Y+15, r26	; 0x0f
     e8c:	b8 8b       	std	Y+16, r27	; 0x10
     e8e:	a9 89       	ldd	r26, Y+17	; 0x11
     e90:	ba 89       	ldd	r27, Y+18	; 0x12
     e92:	1c 96       	adiw	r26, 0x0c	; 12
     e94:	8d 91       	ld	r24, X+
     e96:	9d 91       	ld	r25, X+
     e98:	0d 90       	ld	r0, X+
     e9a:	bc 91       	ld	r27, X
     e9c:	a0 2d       	mov	r26, r0
     e9e:	8d 83       	std	Y+5, r24	; 0x05
     ea0:	9e 83       	std	Y+6, r25	; 0x06
     ea2:	af 83       	std	Y+7, r26	; 0x07
     ea4:	b8 87       	std	Y+8, r27	; 0x08
     ea6:	9c 01       	movw	r18, r24
     ea8:	ad 01       	movw	r20, r26
     eaa:	c5 01       	movw	r24, r10
     eac:	b4 01       	movw	r22, r8
     eae:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__subsf3>
     eb2:	2b 01       	movw	r4, r22
     eb4:	3c 01       	movw	r6, r24
     eb6:	9b 01       	movw	r18, r22
     eb8:	ac 01       	movw	r20, r24
     eba:	69 81       	ldd	r22, Y+1	; 0x01
     ebc:	7a 81       	ldd	r23, Y+2	; 0x02
     ebe:	8b 81       	ldd	r24, Y+3	; 0x03
     ec0:	9c 81       	ldd	r25, Y+4	; 0x04
     ec2:	0e 94 19 11 	call	0x2232	; 0x2232 <__mulsf3>
     ec6:	9b 01       	movw	r18, r22
     ec8:	ac 01       	movw	r20, r24
     eca:	c3 01       	movw	r24, r6
     ecc:	b2 01       	movw	r22, r4
     ece:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <__addsf3>
     ed2:	69 83       	std	Y+1, r22	; 0x01
     ed4:	7a 83       	std	Y+2, r23	; 0x02
     ed6:	8b 83       	std	Y+3, r24	; 0x03
     ed8:	9c 83       	std	Y+4, r25	; 0x04
     eda:	e9 89       	ldd	r30, Y+17	; 0x11
     edc:	fa 89       	ldd	r31, Y+18	; 0x12
     ede:	40 a0       	ldd	r4, Z+32	; 0x20
     ee0:	51 a0       	ldd	r5, Z+33	; 0x21
     ee2:	62 a0       	ldd	r6, Z+34	; 0x22
     ee4:	73 a0       	ldd	r7, Z+35	; 0x23
     ee6:	29 85       	ldd	r18, Y+9	; 0x09
     ee8:	3a 85       	ldd	r19, Y+10	; 0x0a
     eea:	4b 85       	ldd	r20, Y+11	; 0x0b
     eec:	5c 85       	ldd	r21, Y+12	; 0x0c
     eee:	ca 01       	movw	r24, r20
     ef0:	b9 01       	movw	r22, r18
     ef2:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <__addsf3>
     ef6:	9b 01       	movw	r18, r22
     ef8:	ac 01       	movw	r20, r24
     efa:	c3 01       	movw	r24, r6
     efc:	b2 01       	movw	r22, r4
     efe:	0e 94 15 11 	call	0x222a	; 0x222a <__divsf3>
     f02:	2b 01       	movw	r4, r22
     f04:	3c 01       	movw	r6, r24
     f06:	a5 01       	movw	r20, r10
     f08:	94 01       	movw	r18, r8
     f0a:	6d 81       	ldd	r22, Y+5	; 0x05
     f0c:	7e 81       	ldd	r23, Y+6	; 0x06
     f0e:	8f 81       	ldd	r24, Y+7	; 0x07
     f10:	98 85       	ldd	r25, Y+8	; 0x08
     f12:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <__addsf3>
     f16:	9b 01       	movw	r18, r22
     f18:	ac 01       	movw	r20, r24
     f1a:	c3 01       	movw	r24, r6
     f1c:	b2 01       	movw	r22, r4
     f1e:	0e 94 19 11 	call	0x2232	; 0x2232 <__mulsf3>
     f22:	9b 01       	movw	r18, r22
     f24:	ac 01       	movw	r20, r24
     f26:	69 81       	ldd	r22, Y+1	; 0x01
     f28:	7a 81       	ldd	r23, Y+2	; 0x02
     f2a:	8b 81       	ldd	r24, Y+3	; 0x03
     f2c:	9c 81       	ldd	r25, Y+4	; 0x04
     f2e:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <__addsf3>
     f32:	9b 01       	movw	r18, r22
     f34:	ac 01       	movw	r20, r24
     f36:	c7 01       	movw	r24, r14
     f38:	b6 01       	movw	r22, r12
     f3a:	0e 94 19 11 	call	0x2232	; 0x2232 <__mulsf3>
     f3e:	9b 01       	movw	r18, r22
     f40:	ac 01       	movw	r20, r24
     f42:	6d 85       	ldd	r22, Y+13	; 0x0d
     f44:	7e 85       	ldd	r23, Y+14	; 0x0e
     f46:	8f 85       	ldd	r24, Y+15	; 0x0f
     f48:	98 89       	ldd	r25, Y+16	; 0x10
     f4a:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <__addsf3>
     f4e:	f6 2e       	mov	r15, r22
     f50:	e7 2e       	mov	r14, r23
     f52:	d8 2e       	mov	r13, r24
     f54:	c9 2e       	mov	r12, r25
     f56:	a9 89       	ldd	r26, Y+17	; 0x11
     f58:	ba 89       	ldd	r27, Y+18	; 0x12
     f5a:	98 96       	adiw	r26, 0x28	; 40
     f5c:	1c 91       	ld	r17, X
     f5e:	98 97       	sbiw	r26, 0x28	; 40
     f60:	99 96       	adiw	r26, 0x29	; 41
     f62:	6c 90       	ld	r6, X
     f64:	99 97       	sbiw	r26, 0x29	; 41
     f66:	9a 96       	adiw	r26, 0x2a	; 42
     f68:	7c 90       	ld	r7, X
     f6a:	9a 97       	sbiw	r26, 0x2a	; 42
     f6c:	9b 96       	adiw	r26, 0x2b	; 43
     f6e:	0c 91       	ld	r16, X
     f70:	21 2f       	mov	r18, r17
     f72:	36 2d       	mov	r19, r6
     f74:	47 2d       	mov	r20, r7
     f76:	50 2f       	mov	r21, r16
     f78:	0e 94 10 11 	call	0x2220	; 0x2220 <__gesf2>
     f7c:	18 16       	cp	r1, r24
     f7e:	b4 f0       	brlt	.+44     	; 0xfac <PID_controller_get_control_action+0x1b4>
     f80:	e9 89       	ldd	r30, Y+17	; 0x11
     f82:	fa 89       	ldd	r31, Y+18	; 0x12
     f84:	14 a5       	ldd	r17, Z+44	; 0x2c
     f86:	65 a4       	ldd	r6, Z+45	; 0x2d
     f88:	76 a4       	ldd	r7, Z+46	; 0x2e
     f8a:	07 a5       	ldd	r16, Z+47	; 0x2f
     f8c:	21 2f       	mov	r18, r17
     f8e:	36 2d       	mov	r19, r6
     f90:	47 2d       	mov	r20, r7
     f92:	50 2f       	mov	r21, r16
     f94:	6f 2d       	mov	r22, r15
     f96:	7e 2d       	mov	r23, r14
     f98:	8d 2d       	mov	r24, r13
     f9a:	9c 2d       	mov	r25, r12
     f9c:	0e 94 0b 11 	call	0x2216	; 0x2216 <__cmpsf2>
     fa0:	88 23       	and	r24, r24
     fa2:	24 f0       	brlt	.+8      	; 0xfac <PID_controller_get_control_action+0x1b4>
     fa4:	1f 2d       	mov	r17, r15
     fa6:	6e 2c       	mov	r6, r14
     fa8:	7d 2c       	mov	r7, r13
     faa:	0c 2d       	mov	r16, r12
     fac:	a9 89       	ldd	r26, Y+17	; 0x11
     fae:	ba 89       	ldd	r27, Y+18	; 0x12
     fb0:	1c 96       	adiw	r26, 0x0c	; 12
     fb2:	8d 92       	st	X+, r8
     fb4:	9d 92       	st	X+, r9
     fb6:	ad 92       	st	X+, r10
     fb8:	bc 92       	st	X, r11
     fba:	1f 97       	sbiw	r26, 0x0f	; 15
     fbc:	81 2f       	mov	r24, r17
     fbe:	96 2d       	mov	r25, r6
     fc0:	a7 2d       	mov	r26, r7
     fc2:	b0 2f       	mov	r27, r16
     fc4:	e9 89       	ldd	r30, Y+17	; 0x11
     fc6:	fa 89       	ldd	r31, Y+18	; 0x12
     fc8:	84 a3       	std	Z+36, r24	; 0x24
     fca:	95 a3       	std	Z+37, r25	; 0x25
     fcc:	a6 a3       	std	Z+38, r26	; 0x26
     fce:	b7 a3       	std	Z+39, r27	; 0x27
     fd0:	61 2f       	mov	r22, r17
     fd2:	76 2d       	mov	r23, r6
     fd4:	87 2d       	mov	r24, r7
     fd6:	90 2f       	mov	r25, r16
     fd8:	62 96       	adiw	r28, 0x12	; 18
     fda:	0f b6       	in	r0, 0x3f	; 63
     fdc:	f8 94       	cli
     fde:	de bf       	out	0x3e, r29	; 62
     fe0:	0f be       	out	0x3f, r0	; 63
     fe2:	cd bf       	out	0x3d, r28	; 61
     fe4:	df 91       	pop	r29
     fe6:	cf 91       	pop	r28
     fe8:	1f 91       	pop	r17
     fea:	0f 91       	pop	r16
     fec:	ff 90       	pop	r15
     fee:	ef 90       	pop	r14
     ff0:	df 90       	pop	r13
     ff2:	cf 90       	pop	r12
     ff4:	bf 90       	pop	r11
     ff6:	af 90       	pop	r10
     ff8:	9f 90       	pop	r9
     ffa:	8f 90       	pop	r8
     ffc:	7f 90       	pop	r7
     ffe:	6f 90       	pop	r6
    1000:	5f 90       	pop	r5
    1002:	4f 90       	pop	r4
    1004:	08 95       	ret

Disassembly of section .text.speed_estimator_init:

0000190c <speed_estimator_init>:

long ticks_per_rot_left = DEFAULT_TICKS_PER_ROT_LEFT;
long ticks_per_rot_right = DEFAULT_TICKS_PER_ROT_LEFT;


void speed_estimator_init(long left, long right) {
    190c:	cf 93       	push	r28
    190e:	df 93       	push	r29
    1910:	1f 92       	push	r1
    1912:	cd b7       	in	r28, 0x3d	; 61
    1914:	de b7       	in	r29, 0x3e	; 62
	
	ticks_per_rot_left = left;
    1916:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <ticks_per_rot_left>
    191a:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <ticks_per_rot_left+0x1>
    191e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <ticks_per_rot_left+0x2>
    1922:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <ticks_per_rot_left+0x3>
	ticks_per_rot_right = right;
    1926:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <ticks_per_rot_right>
    192a:	30 93 1b 01 	sts	0x011B, r19	; 0x80011b <ticks_per_rot_right+0x1>
    192e:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <ticks_per_rot_right+0x2>
    1932:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <ticks_per_rot_right+0x3>
	
	encoder_init();
    1936:	0e 94 0d 10 	call	0x201a	; 0x201a <encoder_init>
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    193a:	8f b7       	in	r24, 0x3f	; 63
    193c:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    193e:	f8 94       	cli
    1940:	81 e0       	ldi	r24, 0x01	; 1
    1942:	0d c0       	rjmp	.+26     	; 0x195e <speed_estimator_init+0x52>
		ticks_right = encoder_get_accumulated_ticks_right();
    1944:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <encoder_get_accumulated_ticks_right>
    1948:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <ticks_right+0x1>
    194c:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <ticks_right>
		ticks_left = encoder_get_accumulated_ticks_left();	
    1950:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <encoder_get_accumulated_ticks_left>
    1954:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <ticks_left+0x1>
    1958:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <ticks_left>
	
	ticks_per_rot_left = left;
	ticks_per_rot_right = right;
	
	encoder_init();
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    195c:	80 e0       	ldi	r24, 0x00	; 0
    195e:	81 11       	cpse	r24, r1
    1960:	f1 cf       	rjmp	.-30     	; 0x1944 <speed_estimator_init+0x38>
    1962:	ce 01       	movw	r24, r28
    1964:	01 96       	adiw	r24, 0x01	; 1
    1966:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1968:	fc 01       	movw	r30, r24
    196a:	84 91       	lpm	r24, Z
    196c:	a7 fd       	sbrc	r26, 7
    196e:	80 81       	ld	r24, Z
    1970:	8f bf       	out	0x3f, r24	; 63
	(2^8*1024) / (16000000) * 255/255 = 0.016384
	
	OCR1A = measurement_period * F_CPU * (2^16-1) / (2^16*prescalar)
	
	*/
	cli();
    1972:	f8 94       	cli
	// Enable interrupt
	TIMSK2 |= (1 << OCIE2A);
	*/
	
	// 16-bit Timer1
	OCR1AH = 0x04;
    1974:	84 e0       	ldi	r24, 0x04	; 4
    1976:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0xE1;
    197a:	81 ee       	ldi	r24, 0xE1	; 225
    197c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	//OCR1A = 15999;
	TCCR1B |= (1 << WGM12) | (1 << CS12); // CTC mode (clear on match with OCR1A), 256 prescalar
    1980:	e1 e8       	ldi	r30, 0x81	; 129
    1982:	f0 e0       	ldi	r31, 0x00	; 0
    1984:	80 81       	ld	r24, Z
    1986:	8c 60       	ori	r24, 0x0C	; 12
    1988:	80 83       	st	Z, r24
	
	// Enable interrupt
	TIMSK1 |= (1 << OCIE1A);
    198a:	ef e6       	ldi	r30, 0x6F	; 111
    198c:	f0 e0       	ldi	r31, 0x00	; 0
    198e:	80 81       	ld	r24, Z
    1990:	82 60       	ori	r24, 0x02	; 2
    1992:	80 83       	st	Z, r24
	
	sei();
    1994:	78 94       	sei
}
    1996:	0f 90       	pop	r0
    1998:	df 91       	pop	r29
    199a:	cf 91       	pop	r28
    199c:	08 95       	ret

Disassembly of section .text.speed_estimator_right_rad_per_s:

00001cf8 <speed_estimator_right_rad_per_s>:

float speed_estimator_right_rad_per_s() {
    1cf8:	cf 93       	push	r28
    1cfa:	df 93       	push	r29
    1cfc:	1f 92       	push	r1
    1cfe:	cd b7       	in	r28, 0x3d	; 61
    1d00:	de b7       	in	r29, 0x3e	; 62
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1d02:	8f b7       	in	r24, 0x3f	; 63
    1d04:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1d06:	f8 94       	cli
    1d08:	81 e0       	ldi	r24, 0x01	; 1
    1d0a:	09 c0       	rjmp	.+18     	; 0x1d1e <speed_estimator_right_rad_per_s+0x26>
		rad_per_s = rad_per_s_right;
    1d0c:	40 91 22 01 	lds	r20, 0x0122	; 0x800122 <rad_per_s_right>
    1d10:	50 91 23 01 	lds	r21, 0x0123	; 0x800123 <rad_per_s_right+0x1>
    1d14:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <rad_per_s_right+0x2>
    1d18:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <rad_per_s_right+0x3>
	sei();
}

float speed_estimator_right_rad_per_s() {
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1d1c:	80 e0       	ldi	r24, 0x00	; 0
    1d1e:	81 11       	cpse	r24, r1
    1d20:	f5 cf       	rjmp	.-22     	; 0x1d0c <speed_estimator_right_rad_per_s+0x14>
    1d22:	ce 01       	movw	r24, r28
    1d24:	01 96       	adiw	r24, 0x01	; 1
    1d26:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1d28:	fc 01       	movw	r30, r24
    1d2a:	84 91       	lpm	r24, Z
    1d2c:	a7 fd       	sbrc	r26, 7
    1d2e:	80 81       	ld	r24, Z
    1d30:	8f bf       	out	0x3f, r24	; 63
		rad_per_s = rad_per_s_right;
	}
	return rad_per_s;
}
    1d32:	cb 01       	movw	r24, r22
    1d34:	ba 01       	movw	r22, r20
    1d36:	0f 90       	pop	r0
    1d38:	df 91       	pop	r29
    1d3a:	cf 91       	pop	r28
    1d3c:	08 95       	ret

Disassembly of section .text.speed_estimator_left_rad_per_s:

00001d3e <speed_estimator_left_rad_per_s>:

float speed_estimator_left_rad_per_s() {
    1d3e:	cf 93       	push	r28
    1d40:	df 93       	push	r29
    1d42:	1f 92       	push	r1
    1d44:	cd b7       	in	r28, 0x3d	; 61
    1d46:	de b7       	in	r29, 0x3e	; 62
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1d48:	8f b7       	in	r24, 0x3f	; 63
    1d4a:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1d4c:	f8 94       	cli
    1d4e:	81 e0       	ldi	r24, 0x01	; 1
    1d50:	09 c0       	rjmp	.+18     	; 0x1d64 <speed_estimator_left_rad_per_s+0x26>
		rad_per_s = rad_per_s_left;
    1d52:	40 91 26 01 	lds	r20, 0x0126	; 0x800126 <rad_per_s_left>
    1d56:	50 91 27 01 	lds	r21, 0x0127	; 0x800127 <rad_per_s_left+0x1>
    1d5a:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <rad_per_s_left+0x2>
    1d5e:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <rad_per_s_left+0x3>
	return rad_per_s;
}

float speed_estimator_left_rad_per_s() {
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1d62:	80 e0       	ldi	r24, 0x00	; 0
    1d64:	81 11       	cpse	r24, r1
    1d66:	f5 cf       	rjmp	.-22     	; 0x1d52 <speed_estimator_left_rad_per_s+0x14>
    1d68:	ce 01       	movw	r24, r28
    1d6a:	01 96       	adiw	r24, 0x01	; 1
    1d6c:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1d6e:	fc 01       	movw	r30, r24
    1d70:	84 91       	lpm	r24, Z
    1d72:	a7 fd       	sbrc	r26, 7
    1d74:	80 81       	ld	r24, Z
    1d76:	8f bf       	out	0x3f, r24	; 63
		rad_per_s = rad_per_s_left;
	}
	return rad_per_s;
}
    1d78:	cb 01       	movw	r24, r22
    1d7a:	ba 01       	movw	r22, r20
    1d7c:	0f 90       	pop	r0
    1d7e:	df 91       	pop	r29
    1d80:	cf 91       	pop	r28
    1d82:	08 95       	ret

Disassembly of section .text.__vector_11:

000011b6 <__vector_11>:
	prev_ticks_left = ticks_left;
	left_rad_per_s = 2.0*PI*((float)ticks_left - (float)prev_ticks_left) / ((float)TICKS_PER_ROT*encoder_measurement_period);
	
}*/

ISR(TIMER1_COMPA_vect) {
    11b6:	1f 92       	push	r1
    11b8:	0f 92       	push	r0
    11ba:	0f b6       	in	r0, 0x3f	; 63
    11bc:	0f 92       	push	r0
    11be:	11 24       	eor	r1, r1
    11c0:	cf 92       	push	r12
    11c2:	df 92       	push	r13
    11c4:	ef 92       	push	r14
    11c6:	ff 92       	push	r15
    11c8:	2f 93       	push	r18
    11ca:	3f 93       	push	r19
    11cc:	4f 93       	push	r20
    11ce:	5f 93       	push	r21
    11d0:	6f 93       	push	r22
    11d2:	7f 93       	push	r23
    11d4:	8f 93       	push	r24
    11d6:	9f 93       	push	r25
    11d8:	af 93       	push	r26
    11da:	bf 93       	push	r27
    11dc:	ef 93       	push	r30
    11de:	ff 93       	push	r31
	prev_ticks_right = ticks_right;
    11e0:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <ticks_right>
    11e4:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <ticks_right+0x1>
    11e8:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <prev_ticks_right+0x1>
    11ec:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <prev_ticks_right>
	ticks_right = encoder_get_accumulated_ticks_right();
    11f0:	0e 94 59 0e 	call	0x1cb2	; 0x1cb2 <encoder_get_accumulated_ticks_right>
    11f4:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <ticks_right+0x1>
    11f8:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <ticks_right>
	rad_per_s_right = 2.0*PI*((float)ticks_right - (float)prev_ticks_right) / ((float)ticks_per_rot_right*encoder_measurement_period);
    11fc:	60 91 38 01 	lds	r22, 0x0138	; 0x800138 <ticks_right>
    1200:	70 91 39 01 	lds	r23, 0x0139	; 0x800139 <ticks_right+0x1>
    1204:	07 2e       	mov	r0, r23
    1206:	00 0c       	add	r0, r0
    1208:	88 0b       	sbc	r24, r24
    120a:	99 0b       	sbc	r25, r25
    120c:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__floatsisf>
    1210:	6b 01       	movw	r12, r22
    1212:	7c 01       	movw	r14, r24
    1214:	60 91 34 01 	lds	r22, 0x0134	; 0x800134 <prev_ticks_right>
    1218:	70 91 35 01 	lds	r23, 0x0135	; 0x800135 <prev_ticks_right+0x1>
    121c:	07 2e       	mov	r0, r23
    121e:	00 0c       	add	r0, r0
    1220:	88 0b       	sbc	r24, r24
    1222:	99 0b       	sbc	r25, r25
    1224:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__floatsisf>
    1228:	9b 01       	movw	r18, r22
    122a:	ac 01       	movw	r20, r24
    122c:	c7 01       	movw	r24, r14
    122e:	b6 01       	movw	r22, r12
    1230:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__subsf3>
    1234:	2b ed       	ldi	r18, 0xDB	; 219
    1236:	3f e0       	ldi	r19, 0x0F	; 15
    1238:	49 ec       	ldi	r20, 0xC9	; 201
    123a:	50 e4       	ldi	r21, 0x40	; 64
    123c:	0e 94 19 11 	call	0x2232	; 0x2232 <__mulsf3>
    1240:	6b 01       	movw	r12, r22
    1242:	7c 01       	movw	r14, r24
    1244:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <ticks_per_rot_right>
    1248:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <ticks_per_rot_right+0x1>
    124c:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <ticks_per_rot_right+0x2>
    1250:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <ticks_per_rot_right+0x3>
    1254:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__floatsisf>
    1258:	2a e0       	ldi	r18, 0x0A	; 10
    125a:	37 ed       	ldi	r19, 0xD7	; 215
    125c:	43 ea       	ldi	r20, 0xA3	; 163
    125e:	5c e3       	ldi	r21, 0x3C	; 60
    1260:	0e 94 19 11 	call	0x2232	; 0x2232 <__mulsf3>
    1264:	9b 01       	movw	r18, r22
    1266:	ac 01       	movw	r20, r24
    1268:	c7 01       	movw	r24, r14
    126a:	b6 01       	movw	r22, r12
    126c:	0e 94 15 11 	call	0x222a	; 0x222a <__divsf3>
    1270:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <rad_per_s_right>
    1274:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <rad_per_s_right+0x1>
    1278:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <rad_per_s_right+0x2>
    127c:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <rad_per_s_right+0x3>
	
	prev_ticks_left = ticks_left;
    1280:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <ticks_left>
    1284:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <ticks_left+0x1>
    1288:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <prev_ticks_left+0x1>
    128c:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <prev_ticks_left>
	ticks_left = encoder_get_accumulated_ticks_left();
    1290:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <encoder_get_accumulated_ticks_left>
    1294:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <ticks_left+0x1>
    1298:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <ticks_left>
	rad_per_s_left = 2.0*PI*((float)ticks_left - (float)prev_ticks_left) / ((float)ticks_per_rot_left*encoder_measurement_period);
    129c:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <ticks_left>
    12a0:	70 91 37 01 	lds	r23, 0x0137	; 0x800137 <ticks_left+0x1>
    12a4:	07 2e       	mov	r0, r23
    12a6:	00 0c       	add	r0, r0
    12a8:	88 0b       	sbc	r24, r24
    12aa:	99 0b       	sbc	r25, r25
    12ac:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__floatsisf>
    12b0:	6b 01       	movw	r12, r22
    12b2:	7c 01       	movw	r14, r24
    12b4:	60 91 32 01 	lds	r22, 0x0132	; 0x800132 <prev_ticks_left>
    12b8:	70 91 33 01 	lds	r23, 0x0133	; 0x800133 <prev_ticks_left+0x1>
    12bc:	07 2e       	mov	r0, r23
    12be:	00 0c       	add	r0, r0
    12c0:	88 0b       	sbc	r24, r24
    12c2:	99 0b       	sbc	r25, r25
    12c4:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__floatsisf>
    12c8:	9b 01       	movw	r18, r22
    12ca:	ac 01       	movw	r20, r24
    12cc:	c7 01       	movw	r24, r14
    12ce:	b6 01       	movw	r22, r12
    12d0:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__subsf3>
    12d4:	2b ed       	ldi	r18, 0xDB	; 219
    12d6:	3f e0       	ldi	r19, 0x0F	; 15
    12d8:	49 ec       	ldi	r20, 0xC9	; 201
    12da:	50 e4       	ldi	r21, 0x40	; 64
    12dc:	0e 94 19 11 	call	0x2232	; 0x2232 <__mulsf3>
    12e0:	6b 01       	movw	r12, r22
    12e2:	7c 01       	movw	r14, r24
    12e4:	60 91 1e 01 	lds	r22, 0x011E	; 0x80011e <ticks_per_rot_left>
    12e8:	70 91 1f 01 	lds	r23, 0x011F	; 0x80011f <ticks_per_rot_left+0x1>
    12ec:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <ticks_per_rot_left+0x2>
    12f0:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <ticks_per_rot_left+0x3>
    12f4:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__floatsisf>
    12f8:	2a e0       	ldi	r18, 0x0A	; 10
    12fa:	37 ed       	ldi	r19, 0xD7	; 215
    12fc:	43 ea       	ldi	r20, 0xA3	; 163
    12fe:	5c e3       	ldi	r21, 0x3C	; 60
    1300:	0e 94 19 11 	call	0x2232	; 0x2232 <__mulsf3>
    1304:	9b 01       	movw	r18, r22
    1306:	ac 01       	movw	r20, r24
    1308:	c7 01       	movw	r24, r14
    130a:	b6 01       	movw	r22, r12
    130c:	0e 94 15 11 	call	0x222a	; 0x222a <__divsf3>
    1310:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <rad_per_s_left>
    1314:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <rad_per_s_left+0x1>
    1318:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <rad_per_s_left+0x2>
    131c:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <rad_per_s_left+0x3>
	//printf("ISR: %d | %d\n\r", ticks_left, prev_ticks_left);
}
    1320:	ff 91       	pop	r31
    1322:	ef 91       	pop	r30
    1324:	bf 91       	pop	r27
    1326:	af 91       	pop	r26
    1328:	9f 91       	pop	r25
    132a:	8f 91       	pop	r24
    132c:	7f 91       	pop	r23
    132e:	6f 91       	pop	r22
    1330:	5f 91       	pop	r21
    1332:	4f 91       	pop	r20
    1334:	3f 91       	pop	r19
    1336:	2f 91       	pop	r18
    1338:	ff 90       	pop	r15
    133a:	ef 90       	pop	r14
    133c:	df 90       	pop	r13
    133e:	cf 90       	pop	r12
    1340:	0f 90       	pop	r0
    1342:	0f be       	out	0x3f, r0	; 63
    1344:	0f 90       	pop	r0
    1346:	1f 90       	pop	r1
    1348:	18 95       	reti

Disassembly of section .text.timer_init:

00001e92 <timer_init>:
static volatile unsigned int timer_flag = 0;
unsigned int timeout_ms;

void timer_init(unsigned int timeout) {
	
	cli();
    1e92:	f8 94       	cli
	
	timer_flag = 0;
    1e94:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <timer_flag+0x1>
    1e98:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <timer_flag>
	timeout_ms = timeout;
    1e9c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ea0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	// Use 8-bit timer 2 for keeping-time
	TCCR2B = 0x00;
    1ea4:	e1 eb       	ldi	r30, 0xB1	; 177
    1ea6:	f0 e0       	ldi	r31, 0x00	; 0
    1ea8:	10 82       	st	Z, r1
	TCNT2 = 0x00;
    1eaa:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
	OCR2A = 0xF9;
    1eae:	89 ef       	ldi	r24, 0xF9	; 249
    1eb0:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	TCCR2A |= (1 << WGM21) | (1 << CS22); // CTC (Clear timer on compare match with OCR2A), 64 as prescaler
    1eb4:	a0 eb       	ldi	r26, 0xB0	; 176
    1eb6:	b0 e0       	ldi	r27, 0x00	; 0
    1eb8:	8c 91       	ld	r24, X
    1eba:	86 60       	ori	r24, 0x06	; 6
    1ebc:	8c 93       	st	X, r24
	TCCR2B |= (1 << CS22);
    1ebe:	80 81       	ld	r24, Z
    1ec0:	84 60       	ori	r24, 0x04	; 4
    1ec2:	80 83       	st	Z, r24
	
	
	// Enable interrupt
	TIMSK2 |= (1 << OCIE2A);
    1ec4:	e0 e7       	ldi	r30, 0x70	; 112
    1ec6:	f0 e0       	ldi	r31, 0x00	; 0
    1ec8:	80 81       	ld	r24, Z
    1eca:	82 60       	ori	r24, 0x02	; 2
    1ecc:	80 83       	st	Z, r24
	
	// Enable interrupt
	TIMSK1 |= (1 << OCIE1A);
	//SREG |= (1 << 7);*/
	
	sei();
    1ece:	78 94       	sei
    1ed0:	08 95       	ret

Disassembly of section .text.timer_get_elapsed_ms:

00001d84 <timer_get_elapsed_ms>:
	
}

unsigned long timer_get_elapsed_ms(void) {
    1d84:	cf 93       	push	r28
    1d86:	df 93       	push	r29
    1d88:	1f 92       	push	r1
    1d8a:	cd b7       	in	r28, 0x3d	; 61
    1d8c:	de b7       	in	r29, 0x3e	; 62
	unsigned long ms;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1d8e:	8f b7       	in	r24, 0x3f	; 63
    1d90:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1d92:	f8 94       	cli
    1d94:	81 e0       	ldi	r24, 0x01	; 1
    1d96:	09 c0       	rjmp	.+18     	; 0x1daa <timer_get_elapsed_ms+0x26>
		ms = elapsed_ms_since_init;
    1d98:	40 91 2a 01 	lds	r20, 0x012A	; 0x80012a <elapsed_ms_since_init>
    1d9c:	50 91 2b 01 	lds	r21, 0x012B	; 0x80012b <elapsed_ms_since_init+0x1>
    1da0:	60 91 2c 01 	lds	r22, 0x012C	; 0x80012c <elapsed_ms_since_init+0x2>
    1da4:	70 91 2d 01 	lds	r23, 0x012D	; 0x80012d <elapsed_ms_since_init+0x3>
	
}

unsigned long timer_get_elapsed_ms(void) {
	unsigned long ms;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1da8:	80 e0       	ldi	r24, 0x00	; 0
    1daa:	81 11       	cpse	r24, r1
    1dac:	f5 cf       	rjmp	.-22     	; 0x1d98 <timer_get_elapsed_ms+0x14>
    1dae:	ce 01       	movw	r24, r28
    1db0:	01 96       	adiw	r24, 0x01	; 1
    1db2:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1db4:	fc 01       	movw	r30, r24
    1db6:	84 91       	lpm	r24, Z
    1db8:	a7 fd       	sbrc	r26, 7
    1dba:	80 81       	ld	r24, Z
    1dbc:	8f bf       	out	0x3f, r24	; 63
		ms = elapsed_ms_since_init;
	}
	return ms;
}
    1dbe:	cb 01       	movw	r24, r22
    1dc0:	ba 01       	movw	r22, r20
    1dc2:	0f 90       	pop	r0
    1dc4:	df 91       	pop	r29
    1dc6:	cf 91       	pop	r28
    1dc8:	08 95       	ret

Disassembly of section .text.timer_reset:

00001bd6 <timer_reset>:

void timer_reset(void) {
    1bd6:	cf 93       	push	r28
    1bd8:	df 93       	push	r29
    1bda:	1f 92       	push	r1
    1bdc:	cd b7       	in	r28, 0x3d	; 61
    1bde:	de b7       	in	r29, 0x3e	; 62
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1be0:	8f b7       	in	r24, 0x3f	; 63
    1be2:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1be4:	f8 94       	cli
    1be6:	81 e0       	ldi	r24, 0x01	; 1
    1be8:	0f c0       	rjmp	.+30     	; 0x1c08 <timer_reset+0x32>
		elapsed_ms = 0;
    1bea:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <elapsed_ms>
    1bee:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <elapsed_ms+0x1>
    1bf2:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <elapsed_ms+0x2>
    1bf6:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <elapsed_ms+0x3>
		TCNT2 = 0x00;
    1bfa:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
		timer_flag = 0;
    1bfe:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <timer_flag+0x1>
    1c02:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <timer_flag>
	}
	return ms;
}

void timer_reset(void) {
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1c06:	80 e0       	ldi	r24, 0x00	; 0
    1c08:	81 11       	cpse	r24, r1
    1c0a:	ef cf       	rjmp	.-34     	; 0x1bea <timer_reset+0x14>
    1c0c:	ce 01       	movw	r24, r28
    1c0e:	01 96       	adiw	r24, 0x01	; 1
    1c10:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1c12:	fc 01       	movw	r30, r24
    1c14:	84 91       	lpm	r24, Z
    1c16:	a7 fd       	sbrc	r26, 7
    1c18:	80 81       	ld	r24, Z
    1c1a:	8f bf       	out	0x3f, r24	; 63
		elapsed_ms = 0;
		TCNT2 = 0x00;
		timer_flag = 0;
	}
}
    1c1c:	0f 90       	pop	r0
    1c1e:	df 91       	pop	r29
    1c20:	cf 91       	pop	r28
    1c22:	08 95       	ret

Disassembly of section .text.timer_timeout:

00001ed2 <timer_timeout>:

unsigned int timer_timeout(void) {
    1ed2:	cf 93       	push	r28
    1ed4:	df 93       	push	r29
    1ed6:	1f 92       	push	r1
    1ed8:	cd b7       	in	r28, 0x3d	; 61
    1eda:	de b7       	in	r29, 0x3e	; 62
	unsigned int flag;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1edc:	8f b7       	in	r24, 0x3f	; 63
    1ede:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1ee0:	f8 94       	cli
    1ee2:	91 e0       	ldi	r25, 0x01	; 1
    1ee4:	05 c0       	rjmp	.+10     	; 0x1ef0 <timer_timeout+0x1e>
		flag = timer_flag;
    1ee6:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <timer_flag>
    1eea:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <timer_flag+0x1>
	}
}

unsigned int timer_timeout(void) {
	unsigned int flag;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1eee:	90 e0       	ldi	r25, 0x00	; 0
    1ef0:	91 11       	cpse	r25, r1
    1ef2:	f9 cf       	rjmp	.-14     	; 0x1ee6 <timer_timeout+0x14>
    1ef4:	ce 01       	movw	r24, r28
    1ef6:	01 96       	adiw	r24, 0x01	; 1
    1ef8:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1efa:	fc 01       	movw	r30, r24
    1efc:	84 91       	lpm	r24, Z
    1efe:	a7 fd       	sbrc	r26, 7
    1f00:	80 81       	ld	r24, Z
    1f02:	8f bf       	out	0x3f, r24	; 63
		flag = timer_flag;
	}
	return flag;
}
    1f04:	c9 01       	movw	r24, r18
    1f06:	0f 90       	pop	r0
    1f08:	df 91       	pop	r29
    1f0a:	cf 91       	pop	r28
    1f0c:	08 95       	ret

Disassembly of section .text.__vector_7:

00001686 <__vector_7>:

ISR(TIMER2_COMPA_vect) {
    1686:	1f 92       	push	r1
    1688:	0f 92       	push	r0
    168a:	0f b6       	in	r0, 0x3f	; 63
    168c:	0f 92       	push	r0
    168e:	11 24       	eor	r1, r1
    1690:	4f 93       	push	r20
    1692:	5f 93       	push	r21
    1694:	6f 93       	push	r22
    1696:	7f 93       	push	r23
    1698:	8f 93       	push	r24
    169a:	9f 93       	push	r25
    169c:	af 93       	push	r26
    169e:	bf 93       	push	r27
	++elapsed_ms_since_init;
    16a0:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <elapsed_ms_since_init>
    16a4:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <elapsed_ms_since_init+0x1>
    16a8:	a0 91 2c 01 	lds	r26, 0x012C	; 0x80012c <elapsed_ms_since_init+0x2>
    16ac:	b0 91 2d 01 	lds	r27, 0x012D	; 0x80012d <elapsed_ms_since_init+0x3>
    16b0:	01 96       	adiw	r24, 0x01	; 1
    16b2:	a1 1d       	adc	r26, r1
    16b4:	b1 1d       	adc	r27, r1
    16b6:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <elapsed_ms_since_init>
    16ba:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <elapsed_ms_since_init+0x1>
    16be:	a0 93 2c 01 	sts	0x012C, r26	; 0x80012c <elapsed_ms_since_init+0x2>
    16c2:	b0 93 2d 01 	sts	0x012D, r27	; 0x80012d <elapsed_ms_since_init+0x3>
	++elapsed_ms;
    16c6:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <elapsed_ms>
    16ca:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <elapsed_ms+0x1>
    16ce:	a0 91 30 01 	lds	r26, 0x0130	; 0x800130 <elapsed_ms+0x2>
    16d2:	b0 91 31 01 	lds	r27, 0x0131	; 0x800131 <elapsed_ms+0x3>
    16d6:	01 96       	adiw	r24, 0x01	; 1
    16d8:	a1 1d       	adc	r26, r1
    16da:	b1 1d       	adc	r27, r1
    16dc:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <elapsed_ms>
    16e0:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <elapsed_ms+0x1>
    16e4:	a0 93 30 01 	sts	0x0130, r26	; 0x800130 <elapsed_ms+0x2>
    16e8:	b0 93 31 01 	sts	0x0131, r27	; 0x800131 <elapsed_ms+0x3>
	if (elapsed_ms >= timeout_ms) {
    16ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    16f0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    16f4:	a0 e0       	ldi	r26, 0x00	; 0
    16f6:	b0 e0       	ldi	r27, 0x00	; 0
    16f8:	40 91 2e 01 	lds	r20, 0x012E	; 0x80012e <elapsed_ms>
    16fc:	50 91 2f 01 	lds	r21, 0x012F	; 0x80012f <elapsed_ms+0x1>
    1700:	60 91 30 01 	lds	r22, 0x0130	; 0x800130 <elapsed_ms+0x2>
    1704:	70 91 31 01 	lds	r23, 0x0131	; 0x800131 <elapsed_ms+0x3>
    1708:	48 17       	cp	r20, r24
    170a:	59 07       	cpc	r21, r25
    170c:	6a 07       	cpc	r22, r26
    170e:	7b 07       	cpc	r23, r27
    1710:	30 f0       	brcs	.+12     	; 0x171e <__vector_7+0x98>
		timer_flag = 1;
    1712:	81 e0       	ldi	r24, 0x01	; 1
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timer_flag+0x1>
    171a:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timer_flag>
	}
}
    171e:	bf 91       	pop	r27
    1720:	af 91       	pop	r26
    1722:	9f 91       	pop	r25
    1724:	8f 91       	pop	r24
    1726:	7f 91       	pop	r23
    1728:	6f 91       	pop	r22
    172a:	5f 91       	pop	r21
    172c:	4f 91       	pop	r20
    172e:	0f 90       	pop	r0
    1730:	0f be       	out	0x3f, r0	; 63
    1732:	0f 90       	pop	r0
    1734:	1f 90       	pop	r1
    1736:	18 95       	reti

Disassembly of section .text.usart_tx:

000021a8 <usart_tx>:

#include <avr/io.h>
#include "usart.h"

void usart_tx(unsigned char data) {
	while (! (UCSR0A & (1 << UDRE0))) {
    21a8:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    21ac:	95 ff       	sbrs	r25, 5
    21ae:	fc cf       	rjmp	.-8      	; 0x21a8 <usart_tx>
		// wait for buffer to empty
	}
	// Place data in buffer
	UDR0 = data;
    21b0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    21b4:	08 95       	ret

Disassembly of section .text.usart_rx:

000021b6 <usart_rx>:
}

unsigned char usart_rx(void) {
	while(!(UCSR0A & (1 << RXC0))) {
    21b6:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    21ba:	88 23       	and	r24, r24
    21bc:	e4 f7       	brge	.-8      	; 0x21b6 <usart_rx>
		// Wait for data to be received
	}
	return UDR0;
    21be:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
    21c2:	08 95       	ret

Disassembly of section .text.usart_init:

000020ce <usart_init>:

void usart_init(unsigned int ubrr) {
	// Set baud rate
	UBRR0H = ubrr>>8;
    20ce:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = ubrr;
    20d2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	// Enable rx and tx
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
    20d6:	88 e1       	ldi	r24, 0x18	; 24
    20d8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	
	// Set frame format: 8data 2stop bit
	UCSR0C = (1 << USBS0) | (3 << UCSZ00);
    20dc:	8e e0       	ldi	r24, 0x0E	; 14
    20de:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	
	// Use printf for serial communication
	fdevopen(usart_tx, usart_rx);
    20e2:	6b ed       	ldi	r22, 0xDB	; 219
    20e4:	70 e1       	ldi	r23, 0x10	; 16
    20e6:	84 ed       	ldi	r24, 0xD4	; 212
    20e8:	90 e1       	ldi	r25, 0x10	; 16
    20ea:	0e 94 3a 0c 	call	0x1874	; 0x1874 <fdevopen>
    20ee:	08 95       	ret

Disassembly of section .text.main:

00000bcc <main>:
#include "drivers/timer/timer.h"
#include "drivers/speed_estimator/speed_estimator.h"
#include "drivers/PID_controller/PID_controller.h"

int main(void)
{
 bcc:	cf 93       	push	r28
 bce:	df 93       	push	r29
 bd0:	cd b7       	in	r28, 0x3d	; 61
 bd2:	de b7       	in	r29, 0x3e	; 62
 bd4:	ca 56       	subi	r28, 0x6A	; 106
 bd6:	d1 09       	sbc	r29, r1
 bd8:	0f b6       	in	r0, 0x3f	; 63
 bda:	f8 94       	cli
 bdc:	de bf       	out	0x3e, r29	; 62
 bde:	0f be       	out	0x3f, r0	; 63
 be0:	cd bf       	out	0x3d, r28	; 61
	usart_init(UBRR);
 be2:	8c e0       	ldi	r24, 0x0C	; 12
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	0e 94 67 10 	call	0x20ce	; 0x20ce <usart_init>
	speed_estimator_init(850, 850);
 bea:	22 e5       	ldi	r18, 0x52	; 82
 bec:	33 e0       	ldi	r19, 0x03	; 3
 bee:	40 e0       	ldi	r20, 0x00	; 0
 bf0:	50 e0       	ldi	r21, 0x00	; 0
 bf2:	62 e5       	ldi	r22, 0x52	; 82
 bf4:	73 e0       	ldi	r23, 0x03	; 3
 bf6:	80 e0       	ldi	r24, 0x00	; 0
 bf8:	90 e0       	ldi	r25, 0x00	; 0
 bfa:	0e 94 86 0c 	call	0x190c	; 0x190c <speed_estimator_init>

	motor_init();
 bfe:	0e 94 b8 10 	call	0x2170	; 0x2170 <motor_init>

	
	float T = 0.02; // Control loop period [s]
	timer_init(T*1000); 
 c02:	84 e1       	ldi	r24, 0x14	; 20
 c04:	90 e0       	ldi	r25, 0x00	; 0
 c06:	0e 94 49 0f 	call	0x1e92	; 0x1e92 <timer_init>
	
	printf("Starting application\n\r");
 c0a:	84 ed       	ldi	r24, 0xD4	; 212
 c0c:	91 e0       	ldi	r25, 0x01	; 1
 c0e:	a0 e0       	ldi	r26, 0x00	; 0
 c10:	af 93       	push	r26
 c12:	9f 93       	push	r25
 c14:	8f 93       	push	r24
 c16:	0e 94 24 10 	call	0x2048	; 0x2048 <printf>
	
	
	PID_controller left_motor;
	PID_controller right_motor;
	PID_controller_init(&left_motor);
 c1a:	ce 01       	movw	r24, r28
 c1c:	01 96       	adiw	r24, 0x01	; 1
 c1e:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <PID_controller_init>
	PID_controller_init(&right_motor);
 c22:	ce 01       	movw	r24, r28
 c24:	c1 96       	adiw	r24, 0x31	; 49
 c26:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <PID_controller_init>
	//PID_controller_set_parameters(&left_motor, 10.0, 50.0, 0.0, 0.05);
	//PID_controller_set_parameters(&right_motor, 10.0, 50.0, 0.0, 0.05);
	PID_controller_set_parameters(&left_motor, 10.0, 50.0, 0.0, T);
 c2a:	0f 2e       	mov	r0, r31
 c2c:	fa e0       	ldi	r31, 0x0A	; 10
 c2e:	8f 2e       	mov	r8, r31
 c30:	f7 ed       	ldi	r31, 0xD7	; 215
 c32:	9f 2e       	mov	r9, r31
 c34:	f3 ea       	ldi	r31, 0xA3	; 163
 c36:	af 2e       	mov	r10, r31
 c38:	fc e3       	ldi	r31, 0x3C	; 60
 c3a:	bf 2e       	mov	r11, r31
 c3c:	f0 2d       	mov	r31, r0
 c3e:	c1 2c       	mov	r12, r1
 c40:	d1 2c       	mov	r13, r1
 c42:	76 01       	movw	r14, r12
 c44:	00 e0       	ldi	r16, 0x00	; 0
 c46:	10 e0       	ldi	r17, 0x00	; 0
 c48:	28 e4       	ldi	r18, 0x48	; 72
 c4a:	32 e4       	ldi	r19, 0x42	; 66
 c4c:	40 e0       	ldi	r20, 0x00	; 0
 c4e:	50 e0       	ldi	r21, 0x00	; 0
 c50:	60 e2       	ldi	r22, 0x20	; 32
 c52:	71 e4       	ldi	r23, 0x41	; 65
 c54:	ce 01       	movw	r24, r28
 c56:	01 96       	adiw	r24, 0x01	; 1
 c58:	0e 94 cf 0c 	call	0x199e	; 0x199e <PID_controller_set_parameters>
	PID_controller_set_parameters(&right_motor, 10.0, 50.0, 0.0, T);
 c5c:	00 e0       	ldi	r16, 0x00	; 0
 c5e:	10 e0       	ldi	r17, 0x00	; 0
 c60:	28 e4       	ldi	r18, 0x48	; 72
 c62:	32 e4       	ldi	r19, 0x42	; 66
 c64:	40 e0       	ldi	r20, 0x00	; 0
 c66:	50 e0       	ldi	r21, 0x00	; 0
 c68:	60 e2       	ldi	r22, 0x20	; 32
 c6a:	71 e4       	ldi	r23, 0x41	; 65
 c6c:	ce 01       	movw	r24, r28
 c6e:	c1 96       	adiw	r24, 0x31	; 49
 c70:	0e 94 cf 0c 	call	0x199e	; 0x199e <PID_controller_set_parameters>
 c74:	0f 90       	pop	r0
 c76:	0f 90       	pop	r0
 c78:	0f 90       	pop	r0
	float right_speed_rps;
	float right_speed_ref_rps = DEG2RAD*30;
	float right_u;
	int i = 0;
	int flag = 0;
	unsigned long time=0;
 c7a:	c1 2c       	mov	r12, r1
 c7c:	d1 2c       	mov	r13, r1
 c7e:	e1 2c       	mov	r14, r1
 c80:	f1 2c       	mov	r15, r1
	float right_error_rps; // right wheel error [rad/s]
	float right_speed_rps;
	float right_speed_ref_rps = DEG2RAD*30;
	float right_u;
	int i = 0;
	int flag = 0;
 c82:	00 e0       	ldi	r16, 0x00	; 0
 c84:	10 e0       	ldi	r17, 0x00	; 0
	
	
	while(1)
	{
		// wheel speed control loop
		if (timer_timeout()) {
 c86:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <timer_timeout>
 c8a:	89 2b       	or	r24, r25
 c8c:	09 f4       	brne	.+2      	; 0xc90 <main+0xc4>
 c8e:	62 c0       	rjmp	.+196    	; 0xd54 <main+0x188>
			timer_reset();
 c90:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <timer_reset>
	
			left_speed_rps = speed_estimator_left_rad_per_s();
 c94:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <speed_estimator_left_rad_per_s>
 c98:	a2 96       	adiw	r28, 0x22	; 34
 c9a:	6f af       	std	Y+63, r22	; 0x3f
 c9c:	a2 97       	sbiw	r28, 0x22	; 34
 c9e:	a3 96       	adiw	r28, 0x23	; 35
 ca0:	7f af       	std	Y+63, r23	; 0x3f
 ca2:	a3 97       	sbiw	r28, 0x23	; 35
 ca4:	a4 96       	adiw	r28, 0x24	; 36
 ca6:	8f af       	std	Y+63, r24	; 0x3f
 ca8:	a4 97       	sbiw	r28, 0x24	; 36
 caa:	a5 96       	adiw	r28, 0x25	; 37
 cac:	9f af       	std	Y+63, r25	; 0x3f
 cae:	a5 97       	sbiw	r28, 0x25	; 37
			left_error_rps = left_speed_ref_rps - left_speed_rps;
 cb0:	76 2f       	mov	r23, r22
 cb2:	a3 96       	adiw	r28, 0x23	; 35
 cb4:	6f ad       	ldd	r22, Y+63	; 0x3f
 cb6:	a3 97       	sbiw	r28, 0x23	; 35
 cb8:	98 2f       	mov	r25, r24
 cba:	a5 96       	adiw	r28, 0x25	; 37
 cbc:	8f ad       	ldd	r24, Y+63	; 0x3f
 cbe:	a5 97       	sbiw	r28, 0x25	; 37
 cc0:	27 2f       	mov	r18, r23
 cc2:	36 2f       	mov	r19, r22
 cc4:	49 2f       	mov	r20, r25
 cc6:	58 2f       	mov	r21, r24
 cc8:	62 e9       	ldi	r22, 0x92	; 146
 cca:	7a e0       	ldi	r23, 0x0A	; 10
 ccc:	86 e0       	ldi	r24, 0x06	; 6
 cce:	9f e3       	ldi	r25, 0x3F	; 63
 cd0:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__subsf3>
 cd4:	ab 01       	movw	r20, r22
 cd6:	bc 01       	movw	r22, r24
			left_u = PID_controller_get_control_action(&left_motor, left_error_rps);
 cd8:	ce 01       	movw	r24, r28
 cda:	01 96       	adiw	r24, 0x01	; 1
 cdc:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <PID_controller_get_control_action>
 ce0:	a6 96       	adiw	r28, 0x26	; 38
 ce2:	6f af       	std	Y+63, r22	; 0x3f
 ce4:	a6 97       	sbiw	r28, 0x26	; 38
 ce6:	a7 96       	adiw	r28, 0x27	; 39
 ce8:	7f af       	std	Y+63, r23	; 0x3f
 cea:	a7 97       	sbiw	r28, 0x27	; 39
 cec:	a8 96       	adiw	r28, 0x28	; 40
 cee:	8f af       	std	Y+63, r24	; 0x3f
 cf0:	a8 97       	sbiw	r28, 0x28	; 40
 cf2:	a9 96       	adiw	r28, 0x29	; 41
 cf4:	9f af       	std	Y+63, r25	; 0x3f
 cf6:	a9 97       	sbiw	r28, 0x29	; 41
			motor_left(left_u);
 cf8:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <motor_left>
			
			
			right_speed_rps = speed_estimator_right_rad_per_s();
 cfc:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <speed_estimator_right_rad_per_s>
 d00:	aa 96       	adiw	r28, 0x2a	; 42
 d02:	6f af       	std	Y+63, r22	; 0x3f
 d04:	aa 97       	sbiw	r28, 0x2a	; 42
 d06:	ab 96       	adiw	r28, 0x2b	; 43
 d08:	7f af       	std	Y+63, r23	; 0x3f
 d0a:	ab 97       	sbiw	r28, 0x2b	; 43
 d0c:	78 2e       	mov	r7, r24
 d0e:	69 2e       	mov	r6, r25
			right_error_rps = right_speed_ref_rps - right_speed_rps;
 d10:	76 2f       	mov	r23, r22
 d12:	ab 96       	adiw	r28, 0x2b	; 43
 d14:	6f ad       	ldd	r22, Y+63	; 0x3f
 d16:	ab 97       	sbiw	r28, 0x2b	; 43
 d18:	27 2f       	mov	r18, r23
 d1a:	36 2f       	mov	r19, r22
 d1c:	47 2d       	mov	r20, r7
 d1e:	56 2d       	mov	r21, r6
 d20:	62 e9       	ldi	r22, 0x92	; 146
 d22:	7a e0       	ldi	r23, 0x0A	; 10
 d24:	86 e0       	ldi	r24, 0x06	; 6
 d26:	9f e3       	ldi	r25, 0x3F	; 63
 d28:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__subsf3>
 d2c:	ab 01       	movw	r20, r22
 d2e:	bc 01       	movw	r22, r24
			right_u = PID_controller_get_control_action(&right_motor, right_error_rps);
 d30:	ce 01       	movw	r24, r28
 d32:	c1 96       	adiw	r24, 0x31	; 49
 d34:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <PID_controller_get_control_action>
 d38:	56 2e       	mov	r5, r22
 d3a:	47 2e       	mov	r4, r23
 d3c:	38 2e       	mov	r3, r24
 d3e:	29 2e       	mov	r2, r25
			motor_right(right_u);
 d40:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <motor_right>
			
			time = timer_get_elapsed_ms();
 d44:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <timer_get_elapsed_ms>
 d48:	c6 2e       	mov	r12, r22
 d4a:	d7 2e       	mov	r13, r23
 d4c:	e8 2e       	mov	r14, r24
 d4e:	f9 2e       	mov	r15, r25
			
			flag = 1;
 d50:	01 e0       	ldi	r16, 0x01	; 1
 d52:	10 e0       	ldi	r17, 0x00	; 0
		} 
		if (flag) {
 d54:	01 15       	cp	r16, r1
 d56:	11 05       	cpc	r17, r1
 d58:	09 f4       	brne	.+2      	; 0xd5c <main+0x190>
 d5a:	95 cf       	rjmp	.-214    	; 0xc86 <main+0xba>
			printf("{\"t\":%lu,\"l\":{\"ref\":%.2f,\"y\":%.2f,\"u\":%.2f},\"r\":{\"ref\":%.2f,\"y\":%.2f,\"u\":%.2f}}\n\r", time, left_speed_ref_rps, left_speed_rps, left_u, right_speed_ref_rps, right_speed_rps, right_u);
 d5c:	2f 92       	push	r2
 d5e:	3f 92       	push	r3
 d60:	4f 92       	push	r4
 d62:	5f 92       	push	r5
 d64:	6f 92       	push	r6
 d66:	7f 92       	push	r7
 d68:	ab 96       	adiw	r28, 0x2b	; 43
 d6a:	4f ad       	ldd	r20, Y+63	; 0x3f
 d6c:	ab 97       	sbiw	r28, 0x2b	; 43
 d6e:	4f 93       	push	r20
 d70:	aa 96       	adiw	r28, 0x2a	; 42
 d72:	8f ad       	ldd	r24, Y+63	; 0x3f
 d74:	aa 97       	sbiw	r28, 0x2a	; 42
 d76:	8f 93       	push	r24
 d78:	3f e3       	ldi	r19, 0x3F	; 63
 d7a:	3f 93       	push	r19
 d7c:	26 e0       	ldi	r18, 0x06	; 6
 d7e:	2f 93       	push	r18
 d80:	9a e0       	ldi	r25, 0x0A	; 10
 d82:	9f 93       	push	r25
 d84:	82 e9       	ldi	r24, 0x92	; 146
 d86:	8f 93       	push	r24
 d88:	a9 96       	adiw	r28, 0x29	; 41
 d8a:	4f ad       	ldd	r20, Y+63	; 0x3f
 d8c:	a9 97       	sbiw	r28, 0x29	; 41
 d8e:	4f 93       	push	r20
 d90:	a8 96       	adiw	r28, 0x28	; 40
 d92:	4f ad       	ldd	r20, Y+63	; 0x3f
 d94:	a8 97       	sbiw	r28, 0x28	; 40
 d96:	4f 93       	push	r20
 d98:	a7 96       	adiw	r28, 0x27	; 39
 d9a:	4f ad       	ldd	r20, Y+63	; 0x3f
 d9c:	a7 97       	sbiw	r28, 0x27	; 39
 d9e:	4f 93       	push	r20
 da0:	a6 96       	adiw	r28, 0x26	; 38
 da2:	4f ad       	ldd	r20, Y+63	; 0x3f
 da4:	a6 97       	sbiw	r28, 0x26	; 38
 da6:	4f 93       	push	r20
 da8:	a5 96       	adiw	r28, 0x25	; 37
 daa:	4f ad       	ldd	r20, Y+63	; 0x3f
 dac:	a5 97       	sbiw	r28, 0x25	; 37
 dae:	4f 93       	push	r20
 db0:	a4 96       	adiw	r28, 0x24	; 36
 db2:	4f ad       	ldd	r20, Y+63	; 0x3f
 db4:	a4 97       	sbiw	r28, 0x24	; 36
 db6:	4f 93       	push	r20
 db8:	a3 96       	adiw	r28, 0x23	; 35
 dba:	4f ad       	ldd	r20, Y+63	; 0x3f
 dbc:	a3 97       	sbiw	r28, 0x23	; 35
 dbe:	4f 93       	push	r20
 dc0:	a2 96       	adiw	r28, 0x22	; 34
 dc2:	4f ad       	ldd	r20, Y+63	; 0x3f
 dc4:	a2 97       	sbiw	r28, 0x22	; 34
 dc6:	4f 93       	push	r20
 dc8:	3f 93       	push	r19
 dca:	2f 93       	push	r18
 dcc:	9f 93       	push	r25
 dce:	8f 93       	push	r24
 dd0:	ff 92       	push	r15
 dd2:	ef 92       	push	r14
 dd4:	df 92       	push	r13
 dd6:	cf 92       	push	r12
 dd8:	8b ee       	ldi	r24, 0xEB	; 235
 dda:	91 e0       	ldi	r25, 0x01	; 1
 ddc:	a0 e0       	ldi	r26, 0x00	; 0
 dde:	af 93       	push	r26
 de0:	9f 93       	push	r25
 de2:	8f 93       	push	r24
 de4:	0e 94 24 10 	call	0x2048	; 0x2048 <printf>
 de8:	0f b6       	in	r0, 0x3f	; 63
 dea:	f8 94       	cli
 dec:	de bf       	out	0x3e, r29	; 62
 dee:	0f be       	out	0x3f, r0	; 63
 df0:	cd bf       	out	0x3d, r28	; 61
			//printf("{\"t\":%lu,\"l\":{\"ref\":%f,\"y\":%f,\"u\":%f}\n", time, left_speed_ref_rps, left_speed_rps, left_u);
			//printf("{\"t\":%lu ,\"s\":%f}\n", time, left_speed_rps);
			//send_buffer[i] = {time, left_speed_ref_rps, left_speed_rps, left_u, right_speed_ref_rps, right_speed_rps, right_u};	
			flag = 0;
 df2:	00 e0       	ldi	r16, 0x00	; 0
 df4:	10 e0       	ldi	r17, 0x00	; 0
 df6:	47 cf       	rjmp	.-370    	; 0xc86 <main+0xba>

Disassembly of section .text.avrlibc.fplib:

000021c4 <__subsf3>:
    21c4:	50 58       	subi	r21, 0x80	; 128

000021c6 <__addsf3>:
    21c6:	bb 27       	eor	r27, r27
    21c8:	aa 27       	eor	r26, r26
    21ca:	0e 94 7e 0a 	call	0x14fc	; 0x14fc <__addsf3x>
    21ce:	0c 94 78 10 	jmp	0x20f0	; 0x20f0 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

000014fc <__addsf3x>:
    14fc:	11 c0       	rjmp	.+34     	; 0x1520 <__addsf3x+0x24>
    14fe:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <__fp_pscA>
    1502:	38 f0       	brcs	.+14     	; 0x1512 <__addsf3x+0x16>
    1504:	0e 94 f0 10 	call	0x21e0	; 0x21e0 <__fp_pscB>
    1508:	20 f0       	brcs	.+8      	; 0x1512 <__addsf3x+0x16>
    150a:	39 f4       	brne	.+14     	; 0x151a <__addsf3x+0x1e>
    150c:	9f 3f       	cpi	r25, 0xFF	; 255
    150e:	19 f4       	brne	.+6      	; 0x1516 <__addsf3x+0x1a>
    1510:	26 f4       	brtc	.+8      	; 0x151a <__addsf3x+0x1e>
    1512:	0c 94 1d 11 	jmp	0x223a	; 0x223a <__fp_nan>
    1516:	0e f4       	brtc	.+2      	; 0x151a <__addsf3x+0x1e>
    1518:	e0 95       	com	r30
    151a:	e7 fb       	bst	r30, 7
    151c:	0c 94 05 11 	jmp	0x220a	; 0x220a <__fp_inf>
    1520:	e9 2f       	mov	r30, r25
    1522:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__fp_split3>
    1526:	58 f3       	brcs	.-42     	; 0x14fe <__addsf3x+0x2>
    1528:	ba 17       	cp	r27, r26
    152a:	62 07       	cpc	r22, r18
    152c:	73 07       	cpc	r23, r19
    152e:	84 07       	cpc	r24, r20
    1530:	95 07       	cpc	r25, r21
    1532:	20 f0       	brcs	.+8      	; 0x153c <__addsf3x+0x40>
    1534:	79 f4       	brne	.+30     	; 0x1554 <__addsf3x+0x58>
    1536:	a6 f5       	brtc	.+104    	; 0x15a0 <__addsf3x+0xa4>
    1538:	0c 94 f7 10 	jmp	0x21ee	; 0x21ee <__fp_zero>
    153c:	0e f4       	brtc	.+2      	; 0x1540 <__addsf3x+0x44>
    153e:	e0 95       	com	r30
    1540:	0b 2e       	mov	r0, r27
    1542:	ba 2f       	mov	r27, r26
    1544:	a0 2d       	mov	r26, r0
    1546:	0b 01       	movw	r0, r22
    1548:	b9 01       	movw	r22, r18
    154a:	90 01       	movw	r18, r0
    154c:	0c 01       	movw	r0, r24
    154e:	ca 01       	movw	r24, r20
    1550:	a0 01       	movw	r20, r0
    1552:	11 24       	eor	r1, r1
    1554:	ff 27       	eor	r31, r31
    1556:	59 1b       	sub	r21, r25
    1558:	99 f0       	breq	.+38     	; 0x1580 <__addsf3x+0x84>
    155a:	59 3f       	cpi	r21, 0xF9	; 249
    155c:	50 f4       	brcc	.+20     	; 0x1572 <__addsf3x+0x76>
    155e:	50 3e       	cpi	r21, 0xE0	; 224
    1560:	68 f1       	brcs	.+90     	; 0x15bc <__addsf3x+0xc0>
    1562:	1a 16       	cp	r1, r26
    1564:	f0 40       	sbci	r31, 0x00	; 0
    1566:	a2 2f       	mov	r26, r18
    1568:	23 2f       	mov	r18, r19
    156a:	34 2f       	mov	r19, r20
    156c:	44 27       	eor	r20, r20
    156e:	58 5f       	subi	r21, 0xF8	; 248
    1570:	f3 cf       	rjmp	.-26     	; 0x1558 <__addsf3x+0x5c>
    1572:	46 95       	lsr	r20
    1574:	37 95       	ror	r19
    1576:	27 95       	ror	r18
    1578:	a7 95       	ror	r26
    157a:	f0 40       	sbci	r31, 0x00	; 0
    157c:	53 95       	inc	r21
    157e:	c9 f7       	brne	.-14     	; 0x1572 <__addsf3x+0x76>
    1580:	7e f4       	brtc	.+30     	; 0x15a0 <__addsf3x+0xa4>
    1582:	1f 16       	cp	r1, r31
    1584:	ba 0b       	sbc	r27, r26
    1586:	62 0b       	sbc	r22, r18
    1588:	73 0b       	sbc	r23, r19
    158a:	84 0b       	sbc	r24, r20
    158c:	ba f0       	brmi	.+46     	; 0x15bc <__addsf3x+0xc0>
    158e:	91 50       	subi	r25, 0x01	; 1
    1590:	a1 f0       	breq	.+40     	; 0x15ba <__addsf3x+0xbe>
    1592:	ff 0f       	add	r31, r31
    1594:	bb 1f       	adc	r27, r27
    1596:	66 1f       	adc	r22, r22
    1598:	77 1f       	adc	r23, r23
    159a:	88 1f       	adc	r24, r24
    159c:	c2 f7       	brpl	.-16     	; 0x158e <__addsf3x+0x92>
    159e:	0e c0       	rjmp	.+28     	; 0x15bc <__addsf3x+0xc0>
    15a0:	ba 0f       	add	r27, r26
    15a2:	62 1f       	adc	r22, r18
    15a4:	73 1f       	adc	r23, r19
    15a6:	84 1f       	adc	r24, r20
    15a8:	48 f4       	brcc	.+18     	; 0x15bc <__addsf3x+0xc0>
    15aa:	87 95       	ror	r24
    15ac:	77 95       	ror	r23
    15ae:	67 95       	ror	r22
    15b0:	b7 95       	ror	r27
    15b2:	f7 95       	ror	r31
    15b4:	9e 3f       	cpi	r25, 0xFE	; 254
    15b6:	08 f0       	brcs	.+2      	; 0x15ba <__addsf3x+0xbe>
    15b8:	b0 cf       	rjmp	.-160    	; 0x151a <__addsf3x+0x1e>
    15ba:	93 95       	inc	r25
    15bc:	88 0f       	add	r24, r24
    15be:	08 f0       	brcs	.+2      	; 0x15c2 <__addsf3x+0xc6>
    15c0:	99 27       	eor	r25, r25
    15c2:	ee 0f       	add	r30, r30
    15c4:	97 95       	ror	r25
    15c6:	87 95       	ror	r24
    15c8:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002216 <__cmpsf2>:
    2216:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <__fp_cmp>
    221a:	08 f4       	brcc	.+2      	; 0x221e <__cmpsf2+0x8>
    221c:	81 e0       	ldi	r24, 0x01	; 1
    221e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000222a <__divsf3>:
    222a:	0e 94 a5 09 	call	0x134a	; 0x134a <__divsf3x>
    222e:	0c 94 78 10 	jmp	0x20f0	; 0x20f0 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

0000134a <__divsf3x>:
    134a:	10 c0       	rjmp	.+32     	; 0x136c <__divsf3x+0x22>
    134c:	0e 94 f0 10 	call	0x21e0	; 0x21e0 <__fp_pscB>
    1350:	58 f0       	brcs	.+22     	; 0x1368 <__divsf3x+0x1e>
    1352:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <__fp_pscA>
    1356:	40 f0       	brcs	.+16     	; 0x1368 <__divsf3x+0x1e>
    1358:	29 f4       	brne	.+10     	; 0x1364 <__divsf3x+0x1a>
    135a:	5f 3f       	cpi	r21, 0xFF	; 255
    135c:	29 f0       	breq	.+10     	; 0x1368 <__divsf3x+0x1e>
    135e:	0c 94 05 11 	jmp	0x220a	; 0x220a <__fp_inf>
    1362:	51 11       	cpse	r21, r1
    1364:	0c 94 f8 10 	jmp	0x21f0	; 0x21f0 <__fp_szero>
    1368:	0c 94 1d 11 	jmp	0x223a	; 0x223a <__fp_nan>
    136c:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__fp_split3>
    1370:	68 f3       	brcs	.-38     	; 0x134c <__divsf3x+0x2>

00001372 <__divsf3_pse>:
    1372:	99 23       	and	r25, r25
    1374:	b1 f3       	breq	.-20     	; 0x1362 <__divsf3x+0x18>
    1376:	55 23       	and	r21, r21
    1378:	91 f3       	breq	.-28     	; 0x135e <__divsf3x+0x14>
    137a:	95 1b       	sub	r25, r21
    137c:	55 0b       	sbc	r21, r21
    137e:	bb 27       	eor	r27, r27
    1380:	aa 27       	eor	r26, r26
    1382:	62 17       	cp	r22, r18
    1384:	73 07       	cpc	r23, r19
    1386:	84 07       	cpc	r24, r20
    1388:	38 f0       	brcs	.+14     	; 0x1398 <__divsf3_pse+0x26>
    138a:	9f 5f       	subi	r25, 0xFF	; 255
    138c:	5f 4f       	sbci	r21, 0xFF	; 255
    138e:	22 0f       	add	r18, r18
    1390:	33 1f       	adc	r19, r19
    1392:	44 1f       	adc	r20, r20
    1394:	aa 1f       	adc	r26, r26
    1396:	a9 f3       	breq	.-22     	; 0x1382 <__divsf3_pse+0x10>
    1398:	35 d0       	rcall	.+106    	; 0x1404 <__divsf3_pse+0x92>
    139a:	0e 2e       	mov	r0, r30
    139c:	3a f0       	brmi	.+14     	; 0x13ac <__divsf3_pse+0x3a>
    139e:	e0 e8       	ldi	r30, 0x80	; 128
    13a0:	32 d0       	rcall	.+100    	; 0x1406 <__divsf3_pse+0x94>
    13a2:	91 50       	subi	r25, 0x01	; 1
    13a4:	50 40       	sbci	r21, 0x00	; 0
    13a6:	e6 95       	lsr	r30
    13a8:	00 1c       	adc	r0, r0
    13aa:	ca f7       	brpl	.-14     	; 0x139e <__divsf3_pse+0x2c>
    13ac:	2b d0       	rcall	.+86     	; 0x1404 <__divsf3_pse+0x92>
    13ae:	fe 2f       	mov	r31, r30
    13b0:	29 d0       	rcall	.+82     	; 0x1404 <__divsf3_pse+0x92>
    13b2:	66 0f       	add	r22, r22
    13b4:	77 1f       	adc	r23, r23
    13b6:	88 1f       	adc	r24, r24
    13b8:	bb 1f       	adc	r27, r27
    13ba:	26 17       	cp	r18, r22
    13bc:	37 07       	cpc	r19, r23
    13be:	48 07       	cpc	r20, r24
    13c0:	ab 07       	cpc	r26, r27
    13c2:	b0 e8       	ldi	r27, 0x80	; 128
    13c4:	09 f0       	breq	.+2      	; 0x13c8 <__divsf3_pse+0x56>
    13c6:	bb 0b       	sbc	r27, r27
    13c8:	80 2d       	mov	r24, r0
    13ca:	bf 01       	movw	r22, r30
    13cc:	ff 27       	eor	r31, r31
    13ce:	93 58       	subi	r25, 0x83	; 131
    13d0:	5f 4f       	sbci	r21, 0xFF	; 255
    13d2:	3a f0       	brmi	.+14     	; 0x13e2 <__divsf3_pse+0x70>
    13d4:	9e 3f       	cpi	r25, 0xFE	; 254
    13d6:	51 05       	cpc	r21, r1
    13d8:	78 f0       	brcs	.+30     	; 0x13f8 <__divsf3_pse+0x86>
    13da:	0c 94 05 11 	jmp	0x220a	; 0x220a <__fp_inf>
    13de:	0c 94 f8 10 	jmp	0x21f0	; 0x21f0 <__fp_szero>
    13e2:	5f 3f       	cpi	r21, 0xFF	; 255
    13e4:	e4 f3       	brlt	.-8      	; 0x13de <__divsf3_pse+0x6c>
    13e6:	98 3e       	cpi	r25, 0xE8	; 232
    13e8:	d4 f3       	brlt	.-12     	; 0x13de <__divsf3_pse+0x6c>
    13ea:	86 95       	lsr	r24
    13ec:	77 95       	ror	r23
    13ee:	67 95       	ror	r22
    13f0:	b7 95       	ror	r27
    13f2:	f7 95       	ror	r31
    13f4:	9f 5f       	subi	r25, 0xFF	; 255
    13f6:	c9 f7       	brne	.-14     	; 0x13ea <__divsf3_pse+0x78>
    13f8:	88 0f       	add	r24, r24
    13fa:	91 1d       	adc	r25, r1
    13fc:	96 95       	lsr	r25
    13fe:	87 95       	ror	r24
    1400:	97 f9       	bld	r25, 7
    1402:	08 95       	ret
    1404:	e1 e0       	ldi	r30, 0x01	; 1
    1406:	66 0f       	add	r22, r22
    1408:	77 1f       	adc	r23, r23
    140a:	88 1f       	adc	r24, r24
    140c:	bb 1f       	adc	r27, r27
    140e:	62 17       	cp	r22, r18
    1410:	73 07       	cpc	r23, r19
    1412:	84 07       	cpc	r24, r20
    1414:	ba 07       	cpc	r27, r26
    1416:	20 f0       	brcs	.+8      	; 0x1420 <__divsf3_pse+0xae>
    1418:	62 1b       	sub	r22, r18
    141a:	73 0b       	sbc	r23, r19
    141c:	84 0b       	sbc	r24, r20
    141e:	ba 0b       	sbc	r27, r26
    1420:	ee 1f       	adc	r30, r30
    1422:	88 f7       	brcc	.-30     	; 0x1406 <__divsf3_pse+0x94>
    1424:	e0 95       	com	r30
    1426:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001b78 <__fixunssfsi>:
    1b78:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <__fp_splitA>
    1b7c:	88 f0       	brcs	.+34     	; 0x1ba0 <__fixunssfsi+0x28>
    1b7e:	9f 57       	subi	r25, 0x7F	; 127
    1b80:	98 f0       	brcs	.+38     	; 0x1ba8 <__fixunssfsi+0x30>
    1b82:	b9 2f       	mov	r27, r25
    1b84:	99 27       	eor	r25, r25
    1b86:	b7 51       	subi	r27, 0x17	; 23
    1b88:	b0 f0       	brcs	.+44     	; 0x1bb6 <__fixunssfsi+0x3e>
    1b8a:	e1 f0       	breq	.+56     	; 0x1bc4 <__fixunssfsi+0x4c>
    1b8c:	66 0f       	add	r22, r22
    1b8e:	77 1f       	adc	r23, r23
    1b90:	88 1f       	adc	r24, r24
    1b92:	99 1f       	adc	r25, r25
    1b94:	1a f0       	brmi	.+6      	; 0x1b9c <__fixunssfsi+0x24>
    1b96:	ba 95       	dec	r27
    1b98:	c9 f7       	brne	.-14     	; 0x1b8c <__fixunssfsi+0x14>
    1b9a:	14 c0       	rjmp	.+40     	; 0x1bc4 <__fixunssfsi+0x4c>
    1b9c:	b1 30       	cpi	r27, 0x01	; 1
    1b9e:	91 f0       	breq	.+36     	; 0x1bc4 <__fixunssfsi+0x4c>
    1ba0:	0e 94 f7 10 	call	0x21ee	; 0x21ee <__fp_zero>
    1ba4:	b1 e0       	ldi	r27, 0x01	; 1
    1ba6:	08 95       	ret
    1ba8:	0c 94 f7 10 	jmp	0x21ee	; 0x21ee <__fp_zero>
    1bac:	67 2f       	mov	r22, r23
    1bae:	78 2f       	mov	r23, r24
    1bb0:	88 27       	eor	r24, r24
    1bb2:	b8 5f       	subi	r27, 0xF8	; 248
    1bb4:	39 f0       	breq	.+14     	; 0x1bc4 <__fixunssfsi+0x4c>
    1bb6:	b9 3f       	cpi	r27, 0xF9	; 249
    1bb8:	cc f3       	brlt	.-14     	; 0x1bac <__fixunssfsi+0x34>
    1bba:	86 95       	lsr	r24
    1bbc:	77 95       	ror	r23
    1bbe:	67 95       	ror	r22
    1bc0:	b3 95       	inc	r27
    1bc2:	d9 f7       	brne	.-10     	; 0x1bba <__fixunssfsi+0x42>
    1bc4:	3e f4       	brtc	.+14     	; 0x1bd4 <__fixunssfsi+0x5c>
    1bc6:	90 95       	com	r25
    1bc8:	80 95       	com	r24
    1bca:	70 95       	com	r23
    1bcc:	61 95       	neg	r22
    1bce:	7f 4f       	sbci	r23, 0xFF	; 255
    1bd0:	8f 4f       	sbci	r24, 0xFF	; 255
    1bd2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd4:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001a1a <__floatunsisf>:
    1a1a:	e8 94       	clt
    1a1c:	09 c0       	rjmp	.+18     	; 0x1a30 <__floatsisf+0x12>

00001a1e <__floatsisf>:
    1a1e:	97 fb       	bst	r25, 7
    1a20:	3e f4       	brtc	.+14     	; 0x1a30 <__floatsisf+0x12>
    1a22:	90 95       	com	r25
    1a24:	80 95       	com	r24
    1a26:	70 95       	com	r23
    1a28:	61 95       	neg	r22
    1a2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a2c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a2e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a30:	99 23       	and	r25, r25
    1a32:	a9 f0       	breq	.+42     	; 0x1a5e <__floatsisf+0x40>
    1a34:	f9 2f       	mov	r31, r25
    1a36:	96 e9       	ldi	r25, 0x96	; 150
    1a38:	bb 27       	eor	r27, r27
    1a3a:	93 95       	inc	r25
    1a3c:	f6 95       	lsr	r31
    1a3e:	87 95       	ror	r24
    1a40:	77 95       	ror	r23
    1a42:	67 95       	ror	r22
    1a44:	b7 95       	ror	r27
    1a46:	f1 11       	cpse	r31, r1
    1a48:	f8 cf       	rjmp	.-16     	; 0x1a3a <__floatsisf+0x1c>
    1a4a:	fa f4       	brpl	.+62     	; 0x1a8a <__floatsisf+0x6c>
    1a4c:	bb 0f       	add	r27, r27
    1a4e:	11 f4       	brne	.+4      	; 0x1a54 <__floatsisf+0x36>
    1a50:	60 ff       	sbrs	r22, 0
    1a52:	1b c0       	rjmp	.+54     	; 0x1a8a <__floatsisf+0x6c>
    1a54:	6f 5f       	subi	r22, 0xFF	; 255
    1a56:	7f 4f       	sbci	r23, 0xFF	; 255
    1a58:	8f 4f       	sbci	r24, 0xFF	; 255
    1a5a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a5c:	16 c0       	rjmp	.+44     	; 0x1a8a <__floatsisf+0x6c>
    1a5e:	88 23       	and	r24, r24
    1a60:	11 f0       	breq	.+4      	; 0x1a66 <__floatsisf+0x48>
    1a62:	96 e9       	ldi	r25, 0x96	; 150
    1a64:	11 c0       	rjmp	.+34     	; 0x1a88 <__floatsisf+0x6a>
    1a66:	77 23       	and	r23, r23
    1a68:	21 f0       	breq	.+8      	; 0x1a72 <__floatsisf+0x54>
    1a6a:	9e e8       	ldi	r25, 0x8E	; 142
    1a6c:	87 2f       	mov	r24, r23
    1a6e:	76 2f       	mov	r23, r22
    1a70:	05 c0       	rjmp	.+10     	; 0x1a7c <__floatsisf+0x5e>
    1a72:	66 23       	and	r22, r22
    1a74:	71 f0       	breq	.+28     	; 0x1a92 <__floatsisf+0x74>
    1a76:	96 e8       	ldi	r25, 0x86	; 134
    1a78:	86 2f       	mov	r24, r22
    1a7a:	70 e0       	ldi	r23, 0x00	; 0
    1a7c:	60 e0       	ldi	r22, 0x00	; 0
    1a7e:	2a f0       	brmi	.+10     	; 0x1a8a <__floatsisf+0x6c>
    1a80:	9a 95       	dec	r25
    1a82:	66 0f       	add	r22, r22
    1a84:	77 1f       	adc	r23, r23
    1a86:	88 1f       	adc	r24, r24
    1a88:	da f7       	brpl	.-10     	; 0x1a80 <__floatsisf+0x62>
    1a8a:	88 0f       	add	r24, r24
    1a8c:	96 95       	lsr	r25
    1a8e:	87 95       	ror	r24
    1a90:	97 f9       	bld	r25, 7
    1a92:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001c24 <__fp_cmp>:
    1c24:	99 0f       	add	r25, r25
    1c26:	00 08       	sbc	r0, r0
    1c28:	55 0f       	add	r21, r21
    1c2a:	aa 0b       	sbc	r26, r26
    1c2c:	e0 e8       	ldi	r30, 0x80	; 128
    1c2e:	fe ef       	ldi	r31, 0xFE	; 254
    1c30:	16 16       	cp	r1, r22
    1c32:	17 06       	cpc	r1, r23
    1c34:	e8 07       	cpc	r30, r24
    1c36:	f9 07       	cpc	r31, r25
    1c38:	c0 f0       	brcs	.+48     	; 0x1c6a <__fp_cmp+0x46>
    1c3a:	12 16       	cp	r1, r18
    1c3c:	13 06       	cpc	r1, r19
    1c3e:	e4 07       	cpc	r30, r20
    1c40:	f5 07       	cpc	r31, r21
    1c42:	98 f0       	brcs	.+38     	; 0x1c6a <__fp_cmp+0x46>
    1c44:	62 1b       	sub	r22, r18
    1c46:	73 0b       	sbc	r23, r19
    1c48:	84 0b       	sbc	r24, r20
    1c4a:	95 0b       	sbc	r25, r21
    1c4c:	39 f4       	brne	.+14     	; 0x1c5c <__fp_cmp+0x38>
    1c4e:	0a 26       	eor	r0, r26
    1c50:	61 f0       	breq	.+24     	; 0x1c6a <__fp_cmp+0x46>
    1c52:	23 2b       	or	r18, r19
    1c54:	24 2b       	or	r18, r20
    1c56:	25 2b       	or	r18, r21
    1c58:	21 f4       	brne	.+8      	; 0x1c62 <__fp_cmp+0x3e>
    1c5a:	08 95       	ret
    1c5c:	0a 26       	eor	r0, r26
    1c5e:	09 f4       	brne	.+2      	; 0x1c62 <__fp_cmp+0x3e>
    1c60:	a1 40       	sbci	r26, 0x01	; 1
    1c62:	a6 95       	lsr	r26
    1c64:	8f ef       	ldi	r24, 0xFF	; 255
    1c66:	81 1d       	adc	r24, r1
    1c68:	81 1d       	adc	r24, r1
    1c6a:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000220a <__fp_inf>:
    220a:	97 f9       	bld	r25, 7
    220c:	9f 67       	ori	r25, 0x7F	; 127
    220e:	80 e8       	ldi	r24, 0x80	; 128
    2210:	70 e0       	ldi	r23, 0x00	; 0
    2212:	60 e0       	ldi	r22, 0x00	; 0
    2214:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000223a <__fp_nan>:
    223a:	9f ef       	ldi	r25, 0xFF	; 255
    223c:	80 ec       	ldi	r24, 0xC0	; 192
    223e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000021d2 <__fp_pscA>:
    21d2:	00 24       	eor	r0, r0
    21d4:	0a 94       	dec	r0
    21d6:	16 16       	cp	r1, r22
    21d8:	17 06       	cpc	r1, r23
    21da:	18 06       	cpc	r1, r24
    21dc:	09 06       	cpc	r0, r25
    21de:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000021e0 <__fp_pscB>:
    21e0:	00 24       	eor	r0, r0
    21e2:	0a 94       	dec	r0
    21e4:	12 16       	cp	r1, r18
    21e6:	13 06       	cpc	r1, r19
    21e8:	14 06       	cpc	r1, r20
    21ea:	05 06       	cpc	r0, r21
    21ec:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000020f0 <__fp_round>:
    20f0:	09 2e       	mov	r0, r25
    20f2:	03 94       	inc	r0
    20f4:	00 0c       	add	r0, r0
    20f6:	11 f4       	brne	.+4      	; 0x20fc <__fp_round+0xc>
    20f8:	88 23       	and	r24, r24
    20fa:	52 f0       	brmi	.+20     	; 0x2110 <__fp_round+0x20>
    20fc:	bb 0f       	add	r27, r27
    20fe:	40 f4       	brcc	.+16     	; 0x2110 <__fp_round+0x20>
    2100:	bf 2b       	or	r27, r31
    2102:	11 f4       	brne	.+4      	; 0x2108 <__fp_round+0x18>
    2104:	60 ff       	sbrs	r22, 0
    2106:	04 c0       	rjmp	.+8      	; 0x2110 <__fp_round+0x20>
    2108:	6f 5f       	subi	r22, 0xFF	; 255
    210a:	7f 4f       	sbci	r23, 0xFF	; 255
    210c:	8f 4f       	sbci	r24, 0xFF	; 255
    210e:	9f 4f       	sbci	r25, 0xFF	; 255
    2110:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001dca <__fp_split3>:
    1dca:	57 fd       	sbrc	r21, 7
    1dcc:	90 58       	subi	r25, 0x80	; 128
    1dce:	44 0f       	add	r20, r20
    1dd0:	55 1f       	adc	r21, r21
    1dd2:	59 f0       	breq	.+22     	; 0x1dea <__fp_splitA+0x10>
    1dd4:	5f 3f       	cpi	r21, 0xFF	; 255
    1dd6:	71 f0       	breq	.+28     	; 0x1df4 <__fp_splitA+0x1a>
    1dd8:	47 95       	ror	r20

00001dda <__fp_splitA>:
    1dda:	88 0f       	add	r24, r24
    1ddc:	97 fb       	bst	r25, 7
    1dde:	99 1f       	adc	r25, r25
    1de0:	61 f0       	breq	.+24     	; 0x1dfa <__fp_splitA+0x20>
    1de2:	9f 3f       	cpi	r25, 0xFF	; 255
    1de4:	79 f0       	breq	.+30     	; 0x1e04 <__fp_splitA+0x2a>
    1de6:	87 95       	ror	r24
    1de8:	08 95       	ret
    1dea:	12 16       	cp	r1, r18
    1dec:	13 06       	cpc	r1, r19
    1dee:	14 06       	cpc	r1, r20
    1df0:	55 1f       	adc	r21, r21
    1df2:	f2 cf       	rjmp	.-28     	; 0x1dd8 <__fp_split3+0xe>
    1df4:	46 95       	lsr	r20
    1df6:	f1 df       	rcall	.-30     	; 0x1dda <__fp_splitA>
    1df8:	08 c0       	rjmp	.+16     	; 0x1e0a <__fp_splitA+0x30>
    1dfa:	16 16       	cp	r1, r22
    1dfc:	17 06       	cpc	r1, r23
    1dfe:	18 06       	cpc	r1, r24
    1e00:	99 1f       	adc	r25, r25
    1e02:	f1 cf       	rjmp	.-30     	; 0x1de6 <__fp_splitA+0xc>
    1e04:	86 95       	lsr	r24
    1e06:	71 05       	cpc	r23, r1
    1e08:	61 05       	cpc	r22, r1
    1e0a:	08 94       	sec
    1e0c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000021ee <__fp_zero>:
    21ee:	e8 94       	clt

000021f0 <__fp_szero>:
    21f0:	bb 27       	eor	r27, r27
    21f2:	66 27       	eor	r22, r22
    21f4:	77 27       	eor	r23, r23
    21f6:	cb 01       	movw	r24, r22
    21f8:	97 f9       	bld	r25, 7
    21fa:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002220 <__gesf2>:
    2220:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <__fp_cmp>
    2224:	08 f4       	brcc	.+2      	; 0x2228 <__gesf2+0x8>
    2226:	8f ef       	ldi	r24, 0xFF	; 255
    2228:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002232 <__mulsf3>:
    2232:	0e 94 14 0a 	call	0x1428	; 0x1428 <__mulsf3x>
    2236:	0c 94 78 10 	jmp	0x20f0	; 0x20f0 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001428 <__mulsf3x>:
    1428:	0f c0       	rjmp	.+30     	; 0x1448 <__mulsf3x+0x20>
    142a:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <__fp_pscA>
    142e:	38 f0       	brcs	.+14     	; 0x143e <__mulsf3x+0x16>
    1430:	0e 94 f0 10 	call	0x21e0	; 0x21e0 <__fp_pscB>
    1434:	20 f0       	brcs	.+8      	; 0x143e <__mulsf3x+0x16>
    1436:	95 23       	and	r25, r21
    1438:	11 f0       	breq	.+4      	; 0x143e <__mulsf3x+0x16>
    143a:	0c 94 05 11 	jmp	0x220a	; 0x220a <__fp_inf>
    143e:	0c 94 1d 11 	jmp	0x223a	; 0x223a <__fp_nan>
    1442:	11 24       	eor	r1, r1
    1444:	0c 94 f8 10 	jmp	0x21f0	; 0x21f0 <__fp_szero>
    1448:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__fp_split3>
    144c:	70 f3       	brcs	.-36     	; 0x142a <__mulsf3x+0x2>

0000144e <__mulsf3_pse>:
    144e:	95 9f       	mul	r25, r21
    1450:	c1 f3       	breq	.-16     	; 0x1442 <__mulsf3x+0x1a>
    1452:	95 0f       	add	r25, r21
    1454:	50 e0       	ldi	r21, 0x00	; 0
    1456:	55 1f       	adc	r21, r21
    1458:	62 9f       	mul	r22, r18
    145a:	f0 01       	movw	r30, r0
    145c:	72 9f       	mul	r23, r18
    145e:	bb 27       	eor	r27, r27
    1460:	f0 0d       	add	r31, r0
    1462:	b1 1d       	adc	r27, r1
    1464:	63 9f       	mul	r22, r19
    1466:	aa 27       	eor	r26, r26
    1468:	f0 0d       	add	r31, r0
    146a:	b1 1d       	adc	r27, r1
    146c:	aa 1f       	adc	r26, r26
    146e:	64 9f       	mul	r22, r20
    1470:	66 27       	eor	r22, r22
    1472:	b0 0d       	add	r27, r0
    1474:	a1 1d       	adc	r26, r1
    1476:	66 1f       	adc	r22, r22
    1478:	82 9f       	mul	r24, r18
    147a:	22 27       	eor	r18, r18
    147c:	b0 0d       	add	r27, r0
    147e:	a1 1d       	adc	r26, r1
    1480:	62 1f       	adc	r22, r18
    1482:	73 9f       	mul	r23, r19
    1484:	b0 0d       	add	r27, r0
    1486:	a1 1d       	adc	r26, r1
    1488:	62 1f       	adc	r22, r18
    148a:	83 9f       	mul	r24, r19
    148c:	a0 0d       	add	r26, r0
    148e:	61 1d       	adc	r22, r1
    1490:	22 1f       	adc	r18, r18
    1492:	74 9f       	mul	r23, r20
    1494:	33 27       	eor	r19, r19
    1496:	a0 0d       	add	r26, r0
    1498:	61 1d       	adc	r22, r1
    149a:	23 1f       	adc	r18, r19
    149c:	84 9f       	mul	r24, r20
    149e:	60 0d       	add	r22, r0
    14a0:	21 1d       	adc	r18, r1
    14a2:	82 2f       	mov	r24, r18
    14a4:	76 2f       	mov	r23, r22
    14a6:	6a 2f       	mov	r22, r26
    14a8:	11 24       	eor	r1, r1
    14aa:	9f 57       	subi	r25, 0x7F	; 127
    14ac:	50 40       	sbci	r21, 0x00	; 0
    14ae:	9a f0       	brmi	.+38     	; 0x14d6 <__mulsf3_pse+0x88>
    14b0:	f1 f0       	breq	.+60     	; 0x14ee <__mulsf3_pse+0xa0>
    14b2:	88 23       	and	r24, r24
    14b4:	4a f0       	brmi	.+18     	; 0x14c8 <__mulsf3_pse+0x7a>
    14b6:	ee 0f       	add	r30, r30
    14b8:	ff 1f       	adc	r31, r31
    14ba:	bb 1f       	adc	r27, r27
    14bc:	66 1f       	adc	r22, r22
    14be:	77 1f       	adc	r23, r23
    14c0:	88 1f       	adc	r24, r24
    14c2:	91 50       	subi	r25, 0x01	; 1
    14c4:	50 40       	sbci	r21, 0x00	; 0
    14c6:	a9 f7       	brne	.-22     	; 0x14b2 <__mulsf3_pse+0x64>
    14c8:	9e 3f       	cpi	r25, 0xFE	; 254
    14ca:	51 05       	cpc	r21, r1
    14cc:	80 f0       	brcs	.+32     	; 0x14ee <__mulsf3_pse+0xa0>
    14ce:	0c 94 05 11 	jmp	0x220a	; 0x220a <__fp_inf>
    14d2:	0c 94 f8 10 	jmp	0x21f0	; 0x21f0 <__fp_szero>
    14d6:	5f 3f       	cpi	r21, 0xFF	; 255
    14d8:	e4 f3       	brlt	.-8      	; 0x14d2 <__mulsf3_pse+0x84>
    14da:	98 3e       	cpi	r25, 0xE8	; 232
    14dc:	d4 f3       	brlt	.-12     	; 0x14d2 <__mulsf3_pse+0x84>
    14de:	86 95       	lsr	r24
    14e0:	77 95       	ror	r23
    14e2:	67 95       	ror	r22
    14e4:	b7 95       	ror	r27
    14e6:	f7 95       	ror	r31
    14e8:	e7 95       	ror	r30
    14ea:	9f 5f       	subi	r25, 0xFF	; 255
    14ec:	c1 f7       	brne	.-16     	; 0x14de <__mulsf3_pse+0x90>
    14ee:	fe 2b       	or	r31, r30
    14f0:	88 0f       	add	r24, r24
    14f2:	91 1d       	adc	r25, r1
    14f4:	96 95       	lsr	r25
    14f6:	87 95       	ror	r24
    14f8:	97 f9       	bld	r25, 7
    14fa:	08 95       	ret

Disassembly of section .text.avrlibc:

00000246 <vfprintf>:
 246:	a4 e1       	ldi	r26, 0x14	; 20
 248:	b0 e0       	ldi	r27, 0x00	; 0
 24a:	e9 e2       	ldi	r30, 0x29	; 41
 24c:	f1 e0       	ldi	r31, 0x01	; 1
 24e:	0c 94 87 0f 	jmp	0x1f0e	; 0x1f0e <__prologue_saves__>
 252:	6c 01       	movw	r12, r24
 254:	1a 01       	movw	r2, r20
 256:	46 2e       	mov	r4, r22
 258:	59 01       	movw	r10, r18
 25a:	fc 01       	movw	r30, r24
 25c:	10 86       	std	Z+8, r1	; 0x08
 25e:	17 82       	std	Z+7, r1	; 0x07
 260:	84 81       	ldd	r24, Z+4	; 0x04
 262:	81 ff       	sbrs	r24, 1
 264:	62 c3       	rjmp	.+1732   	; 0x92a <__stack+0x2b>
 266:	ce 01       	movw	r24, r28
 268:	01 96       	adiw	r24, 0x01	; 1
 26a:	9d 87       	std	Y+13, r25	; 0x0d
 26c:	8c 87       	std	Y+12, r24	; 0x0c
 26e:	a0 e8       	ldi	r26, 0x80	; 128
 270:	8a 8b       	std	Y+18, r24	; 0x12
 272:	9b 8b       	std	Y+19, r25	; 0x13
 274:	ac 8b       	std	Y+20, r26	; 0x14
 276:	f1 01       	movw	r30, r2
 278:	84 91       	lpm	r24, Z
 27a:	47 fc       	sbrc	r4, 7
 27c:	80 81       	ld	r24, Z
 27e:	88 23       	and	r24, r24
 280:	09 f4       	brne	.+2      	; 0x284 <vfprintf+0x3e>
 282:	4f c3       	rjmp	.+1694   	; 0x922 <__stack+0x23>
 284:	44 2d       	mov	r20, r4
 286:	91 01       	movw	r18, r2
 288:	2f 5f       	subi	r18, 0xFF	; 255
 28a:	3f 4f       	sbci	r19, 0xFF	; 255
 28c:	4f 4f       	sbci	r20, 0xFF	; 255
 28e:	85 32       	cpi	r24, 0x25	; 37
 290:	19 f0       	breq	.+6      	; 0x298 <vfprintf+0x52>
 292:	19 01       	movw	r2, r18
 294:	44 2e       	mov	r4, r20
 296:	0a c0       	rjmp	.+20     	; 0x2ac <vfprintf+0x66>
 298:	f9 01       	movw	r30, r18
 29a:	84 91       	lpm	r24, Z
 29c:	47 fd       	sbrc	r20, 7
 29e:	80 81       	ld	r24, Z
 2a0:	92 e0       	ldi	r25, 0x02	; 2
 2a2:	29 0e       	add	r2, r25
 2a4:	31 1c       	adc	r3, r1
 2a6:	41 1c       	adc	r4, r1
 2a8:	85 32       	cpi	r24, 0x25	; 37
 2aa:	49 f4       	brne	.+18     	; 0x2be <vfprintf+0x78>
 2ac:	b6 01       	movw	r22, r12
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 2b4:	bf 86       	std	Y+15, r11	; 0x0f
 2b6:	ae 86       	std	Y+14, r10	; 0x0e
 2b8:	ae 84       	ldd	r10, Y+14	; 0x0e
 2ba:	bf 84       	ldd	r11, Y+15	; 0x0f
 2bc:	dc cf       	rjmp	.-72     	; 0x276 <vfprintf+0x30>
 2be:	10 e0       	ldi	r17, 0x00	; 0
 2c0:	f1 2c       	mov	r15, r1
 2c2:	00 e0       	ldi	r16, 0x00	; 0
 2c4:	00 32       	cpi	r16, 0x20	; 32
 2c6:	a0 f4       	brcc	.+40     	; 0x2f0 <vfprintf+0xaa>
 2c8:	8b 32       	cpi	r24, 0x2B	; 43
 2ca:	69 f0       	breq	.+26     	; 0x2e6 <vfprintf+0xa0>
 2cc:	30 f4       	brcc	.+12     	; 0x2da <vfprintf+0x94>
 2ce:	80 32       	cpi	r24, 0x20	; 32
 2d0:	59 f0       	breq	.+22     	; 0x2e8 <vfprintf+0xa2>
 2d2:	83 32       	cpi	r24, 0x23	; 35
 2d4:	69 f4       	brne	.+26     	; 0x2f0 <vfprintf+0xaa>
 2d6:	00 61       	ori	r16, 0x10	; 16
 2d8:	2c c0       	rjmp	.+88     	; 0x332 <vfprintf+0xec>
 2da:	8d 32       	cpi	r24, 0x2D	; 45
 2dc:	39 f0       	breq	.+14     	; 0x2ec <vfprintf+0xa6>
 2de:	80 33       	cpi	r24, 0x30	; 48
 2e0:	39 f4       	brne	.+14     	; 0x2f0 <vfprintf+0xaa>
 2e2:	01 60       	ori	r16, 0x01	; 1
 2e4:	26 c0       	rjmp	.+76     	; 0x332 <vfprintf+0xec>
 2e6:	02 60       	ori	r16, 0x02	; 2
 2e8:	04 60       	ori	r16, 0x04	; 4
 2ea:	23 c0       	rjmp	.+70     	; 0x332 <vfprintf+0xec>
 2ec:	08 60       	ori	r16, 0x08	; 8
 2ee:	21 c0       	rjmp	.+66     	; 0x332 <vfprintf+0xec>
 2f0:	07 fd       	sbrc	r16, 7
 2f2:	29 c0       	rjmp	.+82     	; 0x346 <vfprintf+0x100>
 2f4:	90 ed       	ldi	r25, 0xD0	; 208
 2f6:	98 0f       	add	r25, r24
 2f8:	9a 30       	cpi	r25, 0x0A	; 10
 2fa:	78 f4       	brcc	.+30     	; 0x31a <vfprintf+0xd4>
 2fc:	06 ff       	sbrs	r16, 6
 2fe:	06 c0       	rjmp	.+12     	; 0x30c <vfprintf+0xc6>
 300:	aa e0       	ldi	r26, 0x0A	; 10
 302:	1a 9f       	mul	r17, r26
 304:	90 0d       	add	r25, r0
 306:	11 24       	eor	r1, r1
 308:	19 2f       	mov	r17, r25
 30a:	13 c0       	rjmp	.+38     	; 0x332 <vfprintf+0xec>
 30c:	ea e0       	ldi	r30, 0x0A	; 10
 30e:	fe 9e       	mul	r15, r30
 310:	90 0d       	add	r25, r0
 312:	11 24       	eor	r1, r1
 314:	f9 2e       	mov	r15, r25
 316:	00 62       	ori	r16, 0x20	; 32
 318:	0c c0       	rjmp	.+24     	; 0x332 <vfprintf+0xec>
 31a:	8e 32       	cpi	r24, 0x2E	; 46
 31c:	21 f4       	brne	.+8      	; 0x326 <vfprintf+0xe0>
 31e:	06 fd       	sbrc	r16, 6
 320:	00 c3       	rjmp	.+1536   	; 0x922 <__stack+0x23>
 322:	00 64       	ori	r16, 0x40	; 64
 324:	06 c0       	rjmp	.+12     	; 0x332 <vfprintf+0xec>
 326:	8c 36       	cpi	r24, 0x6C	; 108
 328:	11 f4       	brne	.+4      	; 0x32e <vfprintf+0xe8>
 32a:	00 68       	ori	r16, 0x80	; 128
 32c:	02 c0       	rjmp	.+4      	; 0x332 <vfprintf+0xec>
 32e:	88 36       	cpi	r24, 0x68	; 104
 330:	51 f4       	brne	.+20     	; 0x346 <vfprintf+0x100>
 332:	f1 01       	movw	r30, r2
 334:	84 91       	lpm	r24, Z
 336:	47 fc       	sbrc	r4, 7
 338:	80 81       	ld	r24, Z
 33a:	ff ef       	ldi	r31, 0xFF	; 255
 33c:	2f 1a       	sub	r2, r31
 33e:	3f 0a       	sbc	r3, r31
 340:	4f 0a       	sbc	r4, r31
 342:	81 11       	cpse	r24, r1
 344:	bf cf       	rjmp	.-130    	; 0x2c4 <vfprintf+0x7e>
 346:	9b eb       	ldi	r25, 0xBB	; 187
 348:	98 0f       	add	r25, r24
 34a:	93 30       	cpi	r25, 0x03	; 3
 34c:	18 f4       	brcc	.+6      	; 0x354 <vfprintf+0x10e>
 34e:	00 61       	ori	r16, 0x10	; 16
 350:	80 5e       	subi	r24, 0xE0	; 224
 352:	06 c0       	rjmp	.+12     	; 0x360 <vfprintf+0x11a>
 354:	9b e9       	ldi	r25, 0x9B	; 155
 356:	98 0f       	add	r25, r24
 358:	93 30       	cpi	r25, 0x03	; 3
 35a:	08 f0       	brcs	.+2      	; 0x35e <vfprintf+0x118>
 35c:	66 c1       	rjmp	.+716    	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
 35e:	0f 7e       	andi	r16, 0xEF	; 239
 360:	06 ff       	sbrs	r16, 6
 362:	16 e0       	ldi	r17, 0x06	; 6
 364:	0f 73       	andi	r16, 0x3F	; 63
 366:	70 2e       	mov	r7, r16
 368:	85 36       	cpi	r24, 0x65	; 101
 36a:	21 f4       	brne	.+8      	; 0x374 <vfprintf+0x12e>
 36c:	20 2f       	mov	r18, r16
 36e:	20 64       	ori	r18, 0x40	; 64
 370:	72 2e       	mov	r7, r18
 372:	08 c0       	rjmp	.+16     	; 0x384 <vfprintf+0x13e>
 374:	86 36       	cpi	r24, 0x66	; 102
 376:	21 f4       	brne	.+8      	; 0x380 <vfprintf+0x13a>
 378:	80 2f       	mov	r24, r16
 37a:	80 68       	ori	r24, 0x80	; 128
 37c:	78 2e       	mov	r7, r24
 37e:	02 c0       	rjmp	.+4      	; 0x384 <vfprintf+0x13e>
 380:	11 11       	cpse	r17, r1
 382:	11 50       	subi	r17, 0x01	; 1
 384:	77 fe       	sbrs	r7, 7
 386:	07 c0       	rjmp	.+14     	; 0x396 <vfprintf+0x150>
 388:	1c 33       	cpi	r17, 0x3C	; 60
 38a:	50 f4       	brcc	.+20     	; 0x3a0 <vfprintf+0x15a>
 38c:	ee 24       	eor	r14, r14
 38e:	e3 94       	inc	r14
 390:	e1 0e       	add	r14, r17
 392:	27 e0       	ldi	r18, 0x07	; 7
 394:	0b c0       	rjmp	.+22     	; 0x3ac <vfprintf+0x166>
 396:	18 30       	cpi	r17, 0x08	; 8
 398:	38 f0       	brcs	.+14     	; 0x3a8 <vfprintf+0x162>
 39a:	27 e0       	ldi	r18, 0x07	; 7
 39c:	17 e0       	ldi	r17, 0x07	; 7
 39e:	05 c0       	rjmp	.+10     	; 0x3aa <vfprintf+0x164>
 3a0:	27 e0       	ldi	r18, 0x07	; 7
 3a2:	6c e3       	ldi	r22, 0x3C	; 60
 3a4:	e6 2e       	mov	r14, r22
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <vfprintf+0x166>
 3a8:	21 2f       	mov	r18, r17
 3aa:	e1 2c       	mov	r14, r1
 3ac:	f5 01       	movw	r30, r10
 3ae:	34 96       	adiw	r30, 0x04	; 4
 3b0:	ff 87       	std	Y+15, r31	; 0x0f
 3b2:	ee 87       	std	Y+14, r30	; 0x0e
 3b4:	f5 01       	movw	r30, r10
 3b6:	60 81       	ld	r22, Z
 3b8:	71 81       	ldd	r23, Z+1	; 0x01
 3ba:	82 81       	ldd	r24, Z+2	; 0x02
 3bc:	93 81       	ldd	r25, Z+3	; 0x03
 3be:	0e 2d       	mov	r16, r14
 3c0:	ae 01       	movw	r20, r28
 3c2:	4f 5f       	subi	r20, 0xFF	; 255
 3c4:	5f 4f       	sbci	r21, 0xFF	; 255
 3c6:	0e 94 03 08 	call	0x1006	; 0x1006 <__ftoa_engine>
 3ca:	5c 01       	movw	r10, r24
 3cc:	59 80       	ldd	r5, Y+1	; 0x01
 3ce:	50 fe       	sbrs	r5, 0
 3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <vfprintf+0x190>
 3d2:	53 fe       	sbrs	r5, 3
 3d4:	06 c0       	rjmp	.+12     	; 0x3e2 <vfprintf+0x19c>
 3d6:	71 fc       	sbrc	r7, 1
 3d8:	06 c0       	rjmp	.+12     	; 0x3e6 <vfprintf+0x1a0>
 3da:	72 fe       	sbrs	r7, 2
 3dc:	06 c0       	rjmp	.+12     	; 0x3ea <vfprintf+0x1a4>
 3de:	00 e2       	ldi	r16, 0x20	; 32
 3e0:	05 c0       	rjmp	.+10     	; 0x3ec <vfprintf+0x1a6>
 3e2:	0d e2       	ldi	r16, 0x2D	; 45
 3e4:	03 c0       	rjmp	.+6      	; 0x3ec <vfprintf+0x1a6>
 3e6:	0b e2       	ldi	r16, 0x2B	; 43
 3e8:	01 c0       	rjmp	.+2      	; 0x3ec <vfprintf+0x1a6>
 3ea:	00 e0       	ldi	r16, 0x00	; 0
 3ec:	85 2d       	mov	r24, r5
 3ee:	8c 70       	andi	r24, 0x0C	; 12
 3f0:	19 f0       	breq	.+6      	; 0x3f8 <vfprintf+0x1b2>
 3f2:	01 11       	cpse	r16, r1
 3f4:	73 c2       	rjmp	.+1254   	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
 3f6:	be c2       	rjmp	.+1404   	; 0x974 <__stack+0x75>
 3f8:	77 fe       	sbrs	r7, 7
 3fa:	0f c0       	rjmp	.+30     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 3fc:	ea 0c       	add	r14, r10
 3fe:	54 fe       	sbrs	r5, 4
 400:	04 c0       	rjmp	.+8      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 402:	8a 81       	ldd	r24, Y+2	; 0x02
 404:	81 33       	cpi	r24, 0x31	; 49
 406:	09 f4       	brne	.+2      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 408:	ea 94       	dec	r14
 40a:	1e 14       	cp	r1, r14
 40c:	74 f5       	brge	.+92     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 40e:	28 e0       	ldi	r18, 0x08	; 8
 410:	2e 15       	cp	r18, r14
 412:	78 f5       	brcc	.+94     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 414:	38 e0       	ldi	r19, 0x08	; 8
 416:	e3 2e       	mov	r14, r19
 418:	2c c0       	rjmp	.+88     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 41a:	76 fc       	sbrc	r7, 6
 41c:	2a c0       	rjmp	.+84     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 41e:	81 2f       	mov	r24, r17
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	8a 15       	cp	r24, r10
 424:	9b 05       	cpc	r25, r11
 426:	9c f0       	brlt	.+38     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 428:	8c ef       	ldi	r24, 0xFC	; 252
 42a:	a8 16       	cp	r10, r24
 42c:	8f ef       	ldi	r24, 0xFF	; 255
 42e:	b8 06       	cpc	r11, r24
 430:	74 f0       	brlt	.+28     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 432:	97 2d       	mov	r25, r7
 434:	90 68       	ori	r25, 0x80	; 128
 436:	79 2e       	mov	r7, r25
 438:	0a c0       	rjmp	.+20     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 43a:	e2 e0       	ldi	r30, 0x02	; 2
 43c:	f0 e0       	ldi	r31, 0x00	; 0
 43e:	ec 0f       	add	r30, r28
 440:	fd 1f       	adc	r31, r29
 442:	e1 0f       	add	r30, r17
 444:	f1 1d       	adc	r31, r1
 446:	80 81       	ld	r24, Z
 448:	80 33       	cpi	r24, 0x30	; 48
 44a:	19 f4       	brne	.+6      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 44c:	11 50       	subi	r17, 0x01	; 1
 44e:	11 11       	cpse	r17, r1
 450:	f4 cf       	rjmp	.-24     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 452:	77 fe       	sbrs	r7, 7
 454:	0e c0       	rjmp	.+28     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 456:	ee 24       	eor	r14, r14
 458:	e3 94       	inc	r14
 45a:	e1 0e       	add	r14, r17
 45c:	81 2f       	mov	r24, r17
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	a8 16       	cp	r10, r24
 462:	b9 06       	cpc	r11, r25
 464:	2c f4       	brge	.+10     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 466:	1a 19       	sub	r17, r10
 468:	04 c0       	rjmp	.+8      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 46a:	ee 24       	eor	r14, r14
 46c:	e3 94       	inc	r14
 46e:	01 c0       	rjmp	.+2      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 470:	10 e0       	ldi	r17, 0x00	; 0
 472:	77 fe       	sbrs	r7, 7
 474:	06 c0       	rjmp	.+12     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 476:	1a 14       	cp	r1, r10
 478:	1b 04       	cpc	r1, r11
 47a:	34 f4       	brge	.+12     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 47c:	c5 01       	movw	r24, r10
 47e:	01 96       	adiw	r24, 0x01	; 1
 480:	05 c0       	rjmp	.+10     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 482:	85 e0       	ldi	r24, 0x05	; 5
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	02 c0       	rjmp	.+4      	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	01 11       	cpse	r16, r1
 48e:	01 96       	adiw	r24, 0x01	; 1
 490:	11 23       	and	r17, r17
 492:	31 f0       	breq	.+12     	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 494:	21 2f       	mov	r18, r17
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	2f 5f       	subi	r18, 0xFF	; 255
 49a:	3f 4f       	sbci	r19, 0xFF	; 255
 49c:	82 0f       	add	r24, r18
 49e:	93 1f       	adc	r25, r19
 4a0:	2f 2d       	mov	r18, r15
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	82 17       	cp	r24, r18
 4a6:	93 07       	cpc	r25, r19
 4a8:	14 f4       	brge	.+4      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4aa:	f8 1a       	sub	r15, r24
 4ac:	01 c0       	rjmp	.+2      	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4ae:	f1 2c       	mov	r15, r1
 4b0:	87 2d       	mov	r24, r7
 4b2:	89 70       	andi	r24, 0x09	; 9
 4b4:	49 f4       	brne	.+18     	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 4b6:	ff 20       	and	r15, r15
 4b8:	39 f0       	breq	.+14     	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 4ba:	b6 01       	movw	r22, r12
 4bc:	80 e2       	ldi	r24, 0x20	; 32
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 4c4:	fa 94       	dec	r15
 4c6:	f7 cf       	rjmp	.-18     	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4c8:	00 23       	and	r16, r16
 4ca:	29 f0       	breq	.+10     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4cc:	b6 01       	movw	r22, r12
 4ce:	80 2f       	mov	r24, r16
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 4d6:	73 fc       	sbrc	r7, 3
 4d8:	09 c0       	rjmp	.+18     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4da:	ff 20       	and	r15, r15
 4dc:	39 f0       	breq	.+14     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4de:	b6 01       	movw	r22, r12
 4e0:	80 e3       	ldi	r24, 0x30	; 48
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 4e8:	fa 94       	dec	r15
 4ea:	f7 cf       	rjmp	.-18     	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4ec:	77 fe       	sbrs	r7, 7
 4ee:	49 c0       	rjmp	.+146    	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
 4f0:	35 01       	movw	r6, r10
 4f2:	b7 fe       	sbrs	r11, 7
 4f4:	02 c0       	rjmp	.+4      	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
 4f6:	61 2c       	mov	r6, r1
 4f8:	71 2c       	mov	r7, r1
 4fa:	c5 01       	movw	r24, r10
 4fc:	86 19       	sub	r24, r6
 4fe:	97 09       	sbc	r25, r7
 500:	88 24       	eor	r8, r8
 502:	83 94       	inc	r8
 504:	91 2c       	mov	r9, r1
 506:	8c 0e       	add	r8, r28
 508:	9d 1e       	adc	r9, r29
 50a:	88 0e       	add	r8, r24
 50c:	99 1e       	adc	r9, r25
 50e:	f5 01       	movw	r30, r10
 510:	ee 19       	sub	r30, r14
 512:	f1 09       	sbc	r31, r1
 514:	f9 8b       	std	Y+17, r31	; 0x11
 516:	e8 8b       	std	Y+16, r30	; 0x10
 518:	01 2f       	mov	r16, r17
 51a:	10 e0       	ldi	r17, 0x00	; 0
 51c:	11 95       	neg	r17
 51e:	01 95       	neg	r16
 520:	11 09       	sbc	r17, r1
 522:	ff ef       	ldi	r31, 0xFF	; 255
 524:	6f 16       	cp	r6, r31
 526:	7f 06       	cpc	r7, r31
 528:	29 f4       	brne	.+10     	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 52a:	b6 01       	movw	r22, r12
 52c:	8e e2       	ldi	r24, 0x2E	; 46
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 534:	a6 14       	cp	r10, r6
 536:	b7 04       	cpc	r11, r7
 538:	44 f0       	brlt	.+16     	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 53a:	88 89       	ldd	r24, Y+16	; 0x10
 53c:	99 89       	ldd	r25, Y+17	; 0x11
 53e:	86 15       	cp	r24, r6
 540:	97 05       	cpc	r25, r7
 542:	1c f4       	brge	.+6      	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 544:	f4 01       	movw	r30, r8
 546:	81 81       	ldd	r24, Z+1	; 0x01
 548:	01 c0       	rjmp	.+2      	; 0x54c <__EEPROM_REGION_LENGTH__+0x14c>
 54a:	80 e3       	ldi	r24, 0x30	; 48
 54c:	f1 e0       	ldi	r31, 0x01	; 1
 54e:	6f 1a       	sub	r6, r31
 550:	71 08       	sbc	r7, r1
 552:	2f ef       	ldi	r18, 0xFF	; 255
 554:	82 1a       	sub	r8, r18
 556:	92 0a       	sbc	r9, r18
 558:	60 16       	cp	r6, r16
 55a:	71 06       	cpc	r7, r17
 55c:	2c f0       	brlt	.+10     	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 55e:	b6 01       	movw	r22, r12
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 566:	dd cf       	rjmp	.-70     	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
 568:	a6 14       	cp	r10, r6
 56a:	b7 04       	cpc	r11, r7
 56c:	39 f4       	brne	.+14     	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
 56e:	9a 81       	ldd	r25, Y+2	; 0x02
 570:	96 33       	cpi	r25, 0x36	; 54
 572:	18 f4       	brcc	.+6      	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
 574:	95 33       	cpi	r25, 0x35	; 53
 576:	11 f4       	brne	.+4      	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
 578:	54 fe       	sbrs	r5, 4
 57a:	81 e3       	ldi	r24, 0x31	; 49
 57c:	b6 01       	movw	r22, r12
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	51 c0       	rjmp	.+162    	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 582:	8a 81       	ldd	r24, Y+2	; 0x02
 584:	81 33       	cpi	r24, 0x31	; 49
 586:	19 f0       	breq	.+6      	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 588:	95 2d       	mov	r25, r5
 58a:	9f 7e       	andi	r25, 0xEF	; 239
 58c:	59 2e       	mov	r5, r25
 58e:	b6 01       	movw	r22, r12
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 596:	11 11       	cpse	r17, r1
 598:	05 c0       	rjmp	.+10     	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
 59a:	74 fc       	sbrc	r7, 4
 59c:	1c c0       	rjmp	.+56     	; 0x5d6 <__EEPROM_REGION_LENGTH__+0x1d6>
 59e:	85 e6       	ldi	r24, 0x65	; 101
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	1b c0       	rjmp	.+54     	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5a4:	b6 01       	movw	r22, r12
 5a6:	8e e2       	ldi	r24, 0x2E	; 46
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 5ae:	02 e0       	ldi	r16, 0x02	; 2
 5b0:	01 0f       	add	r16, r17
 5b2:	82 e0       	ldi	r24, 0x02	; 2
 5b4:	11 e0       	ldi	r17, 0x01	; 1
 5b6:	18 0f       	add	r17, r24
 5b8:	e1 e0       	ldi	r30, 0x01	; 1
 5ba:	f0 e0       	ldi	r31, 0x00	; 0
 5bc:	ec 0f       	add	r30, r28
 5be:	fd 1f       	adc	r31, r29
 5c0:	e8 0f       	add	r30, r24
 5c2:	f1 1d       	adc	r31, r1
 5c4:	80 81       	ld	r24, Z
 5c6:	b6 01       	movw	r22, r12
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 5ce:	81 2f       	mov	r24, r17
 5d0:	10 13       	cpse	r17, r16
 5d2:	f0 cf       	rjmp	.-32     	; 0x5b4 <__EEPROM_REGION_LENGTH__+0x1b4>
 5d4:	e2 cf       	rjmp	.-60     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 5d6:	85 e4       	ldi	r24, 0x45	; 69
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	b6 01       	movw	r22, r12
 5dc:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 5e0:	b7 fc       	sbrc	r11, 7
 5e2:	05 c0       	rjmp	.+10     	; 0x5ee <__EEPROM_REGION_LENGTH__+0x1ee>
 5e4:	a1 14       	cp	r10, r1
 5e6:	b1 04       	cpc	r11, r1
 5e8:	39 f4       	brne	.+14     	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 5ea:	54 fe       	sbrs	r5, 4
 5ec:	05 c0       	rjmp	.+10     	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 5ee:	b1 94       	neg	r11
 5f0:	a1 94       	neg	r10
 5f2:	b1 08       	sbc	r11, r1
 5f4:	8d e2       	ldi	r24, 0x2D	; 45
 5f6:	01 c0       	rjmp	.+2      	; 0x5fa <__EEPROM_REGION_LENGTH__+0x1fa>
 5f8:	8b e2       	ldi	r24, 0x2B	; 43
 5fa:	b6 01       	movw	r22, r12
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 602:	80 e3       	ldi	r24, 0x30	; 48
 604:	ea e0       	ldi	r30, 0x0A	; 10
 606:	ae 16       	cp	r10, r30
 608:	b1 04       	cpc	r11, r1
 60a:	2c f0       	brlt	.+10     	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
 60c:	8f 5f       	subi	r24, 0xFF	; 255
 60e:	aa e0       	ldi	r26, 0x0A	; 10
 610:	aa 1a       	sub	r10, r26
 612:	b1 08       	sbc	r11, r1
 614:	f7 cf       	rjmp	.-18     	; 0x604 <__EEPROM_REGION_LENGTH__+0x204>
 616:	b6 01       	movw	r22, r12
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 61e:	b6 01       	movw	r22, r12
 620:	c5 01       	movw	r24, r10
 622:	c0 96       	adiw	r24, 0x30	; 48
 624:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 628:	72 c1       	rjmp	.+740    	; 0x90e <__stack+0xf>
 62a:	83 36       	cpi	r24, 0x63	; 99
 62c:	31 f0       	breq	.+12     	; 0x63a <__EEPROM_REGION_LENGTH__+0x23a>
 62e:	83 37       	cpi	r24, 0x73	; 115
 630:	91 f0       	breq	.+36     	; 0x656 <__EEPROM_REGION_LENGTH__+0x256>
 632:	83 35       	cpi	r24, 0x53	; 83
 634:	09 f0       	breq	.+2      	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
 636:	5d c0       	rjmp	.+186    	; 0x6f2 <__EEPROM_REGION_LENGTH__+0x2f2>
 638:	24 c0       	rjmp	.+72     	; 0x682 <__EEPROM_REGION_LENGTH__+0x282>
 63a:	c5 01       	movw	r24, r10
 63c:	02 96       	adiw	r24, 0x02	; 2
 63e:	9f 87       	std	Y+15, r25	; 0x0f
 640:	8e 87       	std	Y+14, r24	; 0x0e
 642:	f5 01       	movw	r30, r10
 644:	80 81       	ld	r24, Z
 646:	89 83       	std	Y+1, r24	; 0x01
 648:	6a 88       	ldd	r6, Y+18	; 0x12
 64a:	7b 88       	ldd	r7, Y+19	; 0x13
 64c:	8c 88       	ldd	r8, Y+20	; 0x14
 64e:	aa 24       	eor	r10, r10
 650:	a3 94       	inc	r10
 652:	b1 2c       	mov	r11, r1
 654:	14 c0       	rjmp	.+40     	; 0x67e <__EEPROM_REGION_LENGTH__+0x27e>
 656:	c5 01       	movw	r24, r10
 658:	03 96       	adiw	r24, 0x03	; 3
 65a:	9f 87       	std	Y+15, r25	; 0x0f
 65c:	8e 87       	std	Y+14, r24	; 0x0e
 65e:	f5 01       	movw	r30, r10
 660:	60 80       	ld	r6, Z
 662:	71 80       	ldd	r7, Z+1	; 0x01
 664:	82 80       	ldd	r8, Z+2	; 0x02
 666:	06 ff       	sbrs	r16, 6
 668:	03 c0       	rjmp	.+6      	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 66a:	41 2f       	mov	r20, r17
 66c:	50 e0       	ldi	r21, 0x00	; 0
 66e:	02 c0       	rjmp	.+4      	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
 670:	4f ef       	ldi	r20, 0xFF	; 255
 672:	5f ef       	ldi	r21, 0xFF	; 255
 674:	88 2d       	mov	r24, r8
 676:	b3 01       	movw	r22, r6
 678:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <strnlen>
 67c:	5c 01       	movw	r10, r24
 67e:	0f 77       	andi	r16, 0x7F	; 127
 680:	15 c0       	rjmp	.+42     	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 682:	c5 01       	movw	r24, r10
 684:	03 96       	adiw	r24, 0x03	; 3
 686:	9f 87       	std	Y+15, r25	; 0x0f
 688:	8e 87       	std	Y+14, r24	; 0x0e
 68a:	f5 01       	movw	r30, r10
 68c:	60 80       	ld	r6, Z
 68e:	71 80       	ldd	r7, Z+1	; 0x01
 690:	82 80       	ldd	r8, Z+2	; 0x02
 692:	06 ff       	sbrs	r16, 6
 694:	03 c0       	rjmp	.+6      	; 0x69c <__EEPROM_REGION_LENGTH__+0x29c>
 696:	41 2f       	mov	r20, r17
 698:	50 e0       	ldi	r21, 0x00	; 0
 69a:	02 c0       	rjmp	.+4      	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
 69c:	4f ef       	ldi	r20, 0xFF	; 255
 69e:	5f ef       	ldi	r21, 0xFF	; 255
 6a0:	88 2d       	mov	r24, r8
 6a2:	b3 01       	movw	r22, r6
 6a4:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <strnlen>
 6a8:	5c 01       	movw	r10, r24
 6aa:	00 68       	ori	r16, 0x80	; 128
 6ac:	03 fd       	sbrc	r16, 3
 6ae:	1d c0       	rjmp	.+58     	; 0x6ea <__EEPROM_REGION_LENGTH__+0x2ea>
 6b0:	8f 2d       	mov	r24, r15
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	a8 16       	cp	r10, r24
 6b6:	b9 06       	cpc	r11, r25
 6b8:	c0 f4       	brcc	.+48     	; 0x6ea <__EEPROM_REGION_LENGTH__+0x2ea>
 6ba:	b6 01       	movw	r22, r12
 6bc:	80 e2       	ldi	r24, 0x20	; 32
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 6c4:	fa 94       	dec	r15
 6c6:	f4 cf       	rjmp	.-24     	; 0x6b0 <__EEPROM_REGION_LENGTH__+0x2b0>
 6c8:	f3 01       	movw	r30, r6
 6ca:	84 91       	lpm	r24, Z
 6cc:	87 fc       	sbrc	r8, 7
 6ce:	80 81       	ld	r24, Z
 6d0:	ff ef       	ldi	r31, 0xFF	; 255
 6d2:	6f 1a       	sub	r6, r31
 6d4:	7f 0a       	sbc	r7, r31
 6d6:	8f 0a       	sbc	r8, r31
 6d8:	b6 01       	movw	r22, r12
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 6e0:	f1 10       	cpse	r15, r1
 6e2:	fa 94       	dec	r15
 6e4:	21 e0       	ldi	r18, 0x01	; 1
 6e6:	a2 1a       	sub	r10, r18
 6e8:	b1 08       	sbc	r11, r1
 6ea:	a1 14       	cp	r10, r1
 6ec:	b1 04       	cpc	r11, r1
 6ee:	61 f7       	brne	.-40     	; 0x6c8 <__EEPROM_REGION_LENGTH__+0x2c8>
 6f0:	0e c1       	rjmp	.+540    	; 0x90e <__stack+0xf>
 6f2:	84 36       	cpi	r24, 0x64	; 100
 6f4:	11 f0       	breq	.+4      	; 0x6fa <__EEPROM_REGION_LENGTH__+0x2fa>
 6f6:	89 36       	cpi	r24, 0x69	; 105
 6f8:	79 f5       	brne	.+94     	; 0x758 <__EEPROM_REGION_LENGTH__+0x358>
 6fa:	c5 01       	movw	r24, r10
 6fc:	07 ff       	sbrs	r16, 7
 6fe:	09 c0       	rjmp	.+18     	; 0x712 <__EEPROM_REGION_LENGTH__+0x312>
 700:	04 96       	adiw	r24, 0x04	; 4
 702:	9f 87       	std	Y+15, r25	; 0x0f
 704:	8e 87       	std	Y+14, r24	; 0x0e
 706:	f5 01       	movw	r30, r10
 708:	60 81       	ld	r22, Z
 70a:	71 81       	ldd	r23, Z+1	; 0x01
 70c:	82 81       	ldd	r24, Z+2	; 0x02
 70e:	93 81       	ldd	r25, Z+3	; 0x03
 710:	0a c0       	rjmp	.+20     	; 0x726 <__EEPROM_REGION_LENGTH__+0x326>
 712:	02 96       	adiw	r24, 0x02	; 2
 714:	9f 87       	std	Y+15, r25	; 0x0f
 716:	8e 87       	std	Y+14, r24	; 0x0e
 718:	f5 01       	movw	r30, r10
 71a:	60 81       	ld	r22, Z
 71c:	71 81       	ldd	r23, Z+1	; 0x01
 71e:	07 2e       	mov	r0, r23
 720:	00 0c       	add	r0, r0
 722:	88 0b       	sbc	r24, r24
 724:	99 0b       	sbc	r25, r25
 726:	0f 76       	andi	r16, 0x6F	; 111
 728:	e0 2e       	mov	r14, r16
 72a:	97 ff       	sbrs	r25, 7
 72c:	0a c0       	rjmp	.+20     	; 0x742 <__EEPROM_REGION_LENGTH__+0x342>
 72e:	90 95       	com	r25
 730:	80 95       	com	r24
 732:	70 95       	com	r23
 734:	61 95       	neg	r22
 736:	7f 4f       	sbci	r23, 0xFF	; 255
 738:	8f 4f       	sbci	r24, 0xFF	; 255
 73a:	9f 4f       	sbci	r25, 0xFF	; 255
 73c:	f0 2f       	mov	r31, r16
 73e:	f0 68       	ori	r31, 0x80	; 128
 740:	ef 2e       	mov	r14, r31
 742:	2a e0       	ldi	r18, 0x0A	; 10
 744:	30 e0       	ldi	r19, 0x00	; 0
 746:	ae 01       	movw	r20, r28
 748:	4f 5f       	subi	r20, 0xFF	; 255
 74a:	5f 4f       	sbci	r21, 0xFF	; 255
 74c:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__ultoa_invert>
 750:	a8 2e       	mov	r10, r24
 752:	2c 85       	ldd	r18, Y+12	; 0x0c
 754:	a2 1a       	sub	r10, r18
 756:	4b c0       	rjmp	.+150    	; 0x7ee <__EEPROM_REGION_LENGTH__+0x3ee>
 758:	85 37       	cpi	r24, 0x75	; 117
 75a:	29 f4       	brne	.+10     	; 0x766 <__EEPROM_REGION_LENGTH__+0x366>
 75c:	0f 7e       	andi	r16, 0xEF	; 239
 75e:	e0 2e       	mov	r14, r16
 760:	2a e0       	ldi	r18, 0x0A	; 10
 762:	30 e0       	ldi	r19, 0x00	; 0
 764:	25 c0       	rjmp	.+74     	; 0x7b0 <__EEPROM_REGION_LENGTH__+0x3b0>
 766:	90 2f       	mov	r25, r16
 768:	99 7f       	andi	r25, 0xF9	; 249
 76a:	e9 2e       	mov	r14, r25
 76c:	8f 36       	cpi	r24, 0x6F	; 111
 76e:	c1 f0       	breq	.+48     	; 0x7a0 <__EEPROM_REGION_LENGTH__+0x3a0>
 770:	18 f4       	brcc	.+6      	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
 772:	88 35       	cpi	r24, 0x58	; 88
 774:	79 f0       	breq	.+30     	; 0x794 <__EEPROM_REGION_LENGTH__+0x394>
 776:	d5 c0       	rjmp	.+426    	; 0x922 <__stack+0x23>
 778:	80 37       	cpi	r24, 0x70	; 112
 77a:	19 f0       	breq	.+6      	; 0x782 <__EEPROM_REGION_LENGTH__+0x382>
 77c:	88 37       	cpi	r24, 0x78	; 120
 77e:	21 f0       	breq	.+8      	; 0x788 <__EEPROM_REGION_LENGTH__+0x388>
 780:	d0 c0       	rjmp	.+416    	; 0x922 <__stack+0x23>
 782:	a9 2f       	mov	r26, r25
 784:	a0 61       	ori	r26, 0x10	; 16
 786:	ea 2e       	mov	r14, r26
 788:	e4 fe       	sbrs	r14, 4
 78a:	0d c0       	rjmp	.+26     	; 0x7a6 <__EEPROM_REGION_LENGTH__+0x3a6>
 78c:	ee 2d       	mov	r30, r14
 78e:	e4 60       	ori	r30, 0x04	; 4
 790:	ee 2e       	mov	r14, r30
 792:	09 c0       	rjmp	.+18     	; 0x7a6 <__EEPROM_REGION_LENGTH__+0x3a6>
 794:	04 ff       	sbrs	r16, 4
 796:	0a c0       	rjmp	.+20     	; 0x7ac <__EEPROM_REGION_LENGTH__+0x3ac>
 798:	f9 2f       	mov	r31, r25
 79a:	f6 60       	ori	r31, 0x06	; 6
 79c:	ef 2e       	mov	r14, r31
 79e:	06 c0       	rjmp	.+12     	; 0x7ac <__EEPROM_REGION_LENGTH__+0x3ac>
 7a0:	28 e0       	ldi	r18, 0x08	; 8
 7a2:	30 e0       	ldi	r19, 0x00	; 0
 7a4:	05 c0       	rjmp	.+10     	; 0x7b0 <__EEPROM_REGION_LENGTH__+0x3b0>
 7a6:	20 e1       	ldi	r18, 0x10	; 16
 7a8:	30 e0       	ldi	r19, 0x00	; 0
 7aa:	02 c0       	rjmp	.+4      	; 0x7b0 <__EEPROM_REGION_LENGTH__+0x3b0>
 7ac:	20 e1       	ldi	r18, 0x10	; 16
 7ae:	32 e0       	ldi	r19, 0x02	; 2
 7b0:	c5 01       	movw	r24, r10
 7b2:	e7 fe       	sbrs	r14, 7
 7b4:	09 c0       	rjmp	.+18     	; 0x7c8 <__EEPROM_REGION_LENGTH__+0x3c8>
 7b6:	04 96       	adiw	r24, 0x04	; 4
 7b8:	9f 87       	std	Y+15, r25	; 0x0f
 7ba:	8e 87       	std	Y+14, r24	; 0x0e
 7bc:	f5 01       	movw	r30, r10
 7be:	60 81       	ld	r22, Z
 7c0:	71 81       	ldd	r23, Z+1	; 0x01
 7c2:	82 81       	ldd	r24, Z+2	; 0x02
 7c4:	93 81       	ldd	r25, Z+3	; 0x03
 7c6:	08 c0       	rjmp	.+16     	; 0x7d8 <__EEPROM_REGION_LENGTH__+0x3d8>
 7c8:	02 96       	adiw	r24, 0x02	; 2
 7ca:	9f 87       	std	Y+15, r25	; 0x0f
 7cc:	8e 87       	std	Y+14, r24	; 0x0e
 7ce:	f5 01       	movw	r30, r10
 7d0:	60 81       	ld	r22, Z
 7d2:	71 81       	ldd	r23, Z+1	; 0x01
 7d4:	80 e0       	ldi	r24, 0x00	; 0
 7d6:	90 e0       	ldi	r25, 0x00	; 0
 7d8:	ae 01       	movw	r20, r28
 7da:	4f 5f       	subi	r20, 0xFF	; 255
 7dc:	5f 4f       	sbci	r21, 0xFF	; 255
 7de:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__ultoa_invert>
 7e2:	a8 2e       	mov	r10, r24
 7e4:	fc 85       	ldd	r31, Y+12	; 0x0c
 7e6:	af 1a       	sub	r10, r31
 7e8:	2e 2d       	mov	r18, r14
 7ea:	2f 77       	andi	r18, 0x7F	; 127
 7ec:	e2 2e       	mov	r14, r18
 7ee:	e6 fe       	sbrs	r14, 6
 7f0:	0b c0       	rjmp	.+22     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7f2:	0e 2d       	mov	r16, r14
 7f4:	0e 7f       	andi	r16, 0xFE	; 254
 7f6:	a1 16       	cp	r10, r17
 7f8:	50 f4       	brcc	.+20     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 7fa:	e4 fe       	sbrs	r14, 4
 7fc:	0a c0       	rjmp	.+20     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 7fe:	e2 fc       	sbrc	r14, 2
 800:	08 c0       	rjmp	.+16     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 802:	0e 2d       	mov	r16, r14
 804:	0e 7e       	andi	r16, 0xEE	; 238
 806:	05 c0       	rjmp	.+10     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 808:	ba 2c       	mov	r11, r10
 80a:	0e 2d       	mov	r16, r14
 80c:	03 c0       	rjmp	.+6      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 80e:	ba 2c       	mov	r11, r10
 810:	01 c0       	rjmp	.+2      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 812:	b1 2e       	mov	r11, r17
 814:	04 ff       	sbrs	r16, 4
 816:	0d c0       	rjmp	.+26     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 818:	fe 01       	movw	r30, r28
 81a:	ea 0d       	add	r30, r10
 81c:	f1 1d       	adc	r31, r1
 81e:	80 81       	ld	r24, Z
 820:	80 33       	cpi	r24, 0x30	; 48
 822:	11 f4       	brne	.+4      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 824:	09 7e       	andi	r16, 0xE9	; 233
 826:	09 c0       	rjmp	.+18     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 828:	02 ff       	sbrs	r16, 2
 82a:	06 c0       	rjmp	.+12     	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 82c:	b3 94       	inc	r11
 82e:	b3 94       	inc	r11
 830:	04 c0       	rjmp	.+8      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 832:	80 2f       	mov	r24, r16
 834:	86 78       	andi	r24, 0x86	; 134
 836:	09 f0       	breq	.+2      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 838:	b3 94       	inc	r11
 83a:	03 fd       	sbrc	r16, 3
 83c:	11 c0       	rjmp	.+34     	; 0x860 <__DATA_REGION_LENGTH__+0x60>
 83e:	00 ff       	sbrs	r16, 0
 840:	06 c0       	rjmp	.+12     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 842:	bf 14       	cp	r11, r15
 844:	88 f4       	brcc	.+34     	; 0x868 <__DATA_REGION_LENGTH__+0x68>
 846:	fa 0c       	add	r15, r10
 848:	1f 2d       	mov	r17, r15
 84a:	1b 19       	sub	r17, r11
 84c:	0e c0       	rjmp	.+28     	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 84e:	bf 14       	cp	r11, r15
 850:	60 f4       	brcc	.+24     	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 852:	b6 01       	movw	r22, r12
 854:	80 e2       	ldi	r24, 0x20	; 32
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 85c:	b3 94       	inc	r11
 85e:	f7 cf       	rjmp	.-18     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 860:	bf 14       	cp	r11, r15
 862:	18 f4       	brcc	.+6      	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 864:	fb 18       	sub	r15, r11
 866:	02 c0       	rjmp	.+4      	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
 868:	1a 2d       	mov	r17, r10
 86a:	f1 2c       	mov	r15, r1
 86c:	04 ff       	sbrs	r16, 4
 86e:	10 c0       	rjmp	.+32     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 870:	b6 01       	movw	r22, r12
 872:	80 e3       	ldi	r24, 0x30	; 48
 874:	90 e0       	ldi	r25, 0x00	; 0
 876:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 87a:	02 ff       	sbrs	r16, 2
 87c:	17 c0       	rjmp	.+46     	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 87e:	01 fd       	sbrc	r16, 1
 880:	03 c0       	rjmp	.+6      	; 0x888 <__DATA_REGION_LENGTH__+0x88>
 882:	88 e7       	ldi	r24, 0x78	; 120
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	02 c0       	rjmp	.+4      	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
 888:	88 e5       	ldi	r24, 0x58	; 88
 88a:	90 e0       	ldi	r25, 0x00	; 0
 88c:	b6 01       	movw	r22, r12
 88e:	0c c0       	rjmp	.+24     	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
 890:	80 2f       	mov	r24, r16
 892:	86 78       	andi	r24, 0x86	; 134
 894:	59 f0       	breq	.+22     	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 896:	01 ff       	sbrs	r16, 1
 898:	02 c0       	rjmp	.+4      	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 89a:	8b e2       	ldi	r24, 0x2B	; 43
 89c:	01 c0       	rjmp	.+2      	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
 89e:	80 e2       	ldi	r24, 0x20	; 32
 8a0:	07 fd       	sbrc	r16, 7
 8a2:	8d e2       	ldi	r24, 0x2D	; 45
 8a4:	b6 01       	movw	r22, r12
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 8ac:	a1 16       	cp	r10, r17
 8ae:	38 f4       	brcc	.+14     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
 8b0:	b6 01       	movw	r22, r12
 8b2:	80 e3       	ldi	r24, 0x30	; 48
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 8ba:	11 50       	subi	r17, 0x01	; 1
 8bc:	f7 cf       	rjmp	.-18     	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 8be:	aa 94       	dec	r10
 8c0:	e1 e0       	ldi	r30, 0x01	; 1
 8c2:	f0 e0       	ldi	r31, 0x00	; 0
 8c4:	ec 0f       	add	r30, r28
 8c6:	fd 1f       	adc	r31, r29
 8c8:	ea 0d       	add	r30, r10
 8ca:	f1 1d       	adc	r31, r1
 8cc:	80 81       	ld	r24, Z
 8ce:	b6 01       	movw	r22, r12
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 8d6:	a1 10       	cpse	r10, r1
 8d8:	f2 cf       	rjmp	.-28     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
 8da:	19 c0       	rjmp	.+50     	; 0x90e <__stack+0xf>
 8dc:	f4 e0       	ldi	r31, 0x04	; 4
 8de:	ff 15       	cp	r31, r15
 8e0:	80 f5       	brcc	.+96     	; 0x942 <__stack+0x43>
 8e2:	84 e0       	ldi	r24, 0x04	; 4
 8e4:	f8 1a       	sub	r15, r24
 8e6:	73 fe       	sbrs	r7, 3
 8e8:	23 c0       	rjmp	.+70     	; 0x930 <__stack+0x31>
 8ea:	01 11       	cpse	r16, r1
 8ec:	2b c0       	rjmp	.+86     	; 0x944 <__stack+0x45>
 8ee:	53 fe       	sbrs	r5, 3
 8f0:	2f c0       	rjmp	.+94     	; 0x950 <__stack+0x51>
 8f2:	51 e4       	ldi	r21, 0x41	; 65
 8f4:	85 2e       	mov	r8, r21
 8f6:	52 e0       	ldi	r21, 0x02	; 2
 8f8:	95 2e       	mov	r9, r21
 8fa:	50 e0       	ldi	r21, 0x00	; 0
 8fc:	a5 2e       	mov	r10, r21
 8fe:	07 2d       	mov	r16, r7
 900:	00 71       	andi	r16, 0x10	; 16
 902:	f4 01       	movw	r30, r8
 904:	84 91       	lpm	r24, Z
 906:	a7 fc       	sbrc	r10, 7
 908:	80 81       	ld	r24, Z
 90a:	81 11       	cpse	r24, r1
 90c:	28 c0       	rjmp	.+80     	; 0x95e <__stack+0x5f>
 90e:	ff 20       	and	r15, r15
 910:	09 f4       	brne	.+2      	; 0x914 <__stack+0x15>
 912:	d2 cc       	rjmp	.-1628   	; 0x2b8 <vfprintf+0x72>
 914:	b6 01       	movw	r22, r12
 916:	80 e2       	ldi	r24, 0x20	; 32
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 91e:	fa 94       	dec	r15
 920:	f6 cf       	rjmp	.-20     	; 0x90e <__stack+0xf>
 922:	f6 01       	movw	r30, r12
 924:	87 81       	ldd	r24, Z+7	; 0x07
 926:	90 85       	ldd	r25, Z+8	; 0x08
 928:	2c c0       	rjmp	.+88     	; 0x982 <__stack+0x83>
 92a:	8f ef       	ldi	r24, 0xFF	; 255
 92c:	9f ef       	ldi	r25, 0xFF	; 255
 92e:	29 c0       	rjmp	.+82     	; 0x982 <__stack+0x83>
 930:	b6 01       	movw	r22, r12
 932:	80 e2       	ldi	r24, 0x20	; 32
 934:	90 e0       	ldi	r25, 0x00	; 0
 936:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 93a:	fa 94       	dec	r15
 93c:	f1 10       	cpse	r15, r1
 93e:	f8 cf       	rjmp	.-16     	; 0x930 <__stack+0x31>
 940:	d4 cf       	rjmp	.-88     	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
 942:	f1 2c       	mov	r15, r1
 944:	b6 01       	movw	r22, r12
 946:	80 2f       	mov	r24, r16
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 94e:	cf cf       	rjmp	.-98     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 950:	4d e3       	ldi	r20, 0x3D	; 61
 952:	84 2e       	mov	r8, r20
 954:	42 e0       	ldi	r20, 0x02	; 2
 956:	94 2e       	mov	r9, r20
 958:	40 e0       	ldi	r20, 0x00	; 0
 95a:	a4 2e       	mov	r10, r20
 95c:	d0 cf       	rjmp	.-96     	; 0x8fe <__DATA_REGION_LENGTH__+0xfe>
 95e:	01 11       	cpse	r16, r1
 960:	80 52       	subi	r24, 0x20	; 32
 962:	b6 01       	movw	r22, r12
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <fputc>
 96a:	ff ef       	ldi	r31, 0xFF	; 255
 96c:	8f 1a       	sub	r8, r31
 96e:	9f 0a       	sbc	r9, r31
 970:	af 0a       	sbc	r10, r31
 972:	c7 cf       	rjmp	.-114    	; 0x902 <__stack+0x3>
 974:	23 e0       	ldi	r18, 0x03	; 3
 976:	2f 15       	cp	r18, r15
 978:	10 f4       	brcc	.+4      	; 0x97e <__stack+0x7f>
 97a:	83 e0       	ldi	r24, 0x03	; 3
 97c:	b3 cf       	rjmp	.-154    	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
 97e:	f1 2c       	mov	r15, r1
 980:	b6 cf       	rjmp	.-148    	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 982:	64 96       	adiw	r28, 0x14	; 20
 984:	e2 e1       	ldi	r30, 0x12	; 18
 986:	0c 94 bf 0f 	jmp	0x1f7e	; 0x1f7e <__epilogue_restores__>

Disassembly of section .text.libgcc.prologue:

00001f0e <__prologue_saves__>:
    1f0e:	2f 92       	push	r2
    1f10:	3f 92       	push	r3
    1f12:	4f 92       	push	r4
    1f14:	5f 92       	push	r5
    1f16:	6f 92       	push	r6
    1f18:	7f 92       	push	r7
    1f1a:	8f 92       	push	r8
    1f1c:	9f 92       	push	r9
    1f1e:	af 92       	push	r10
    1f20:	bf 92       	push	r11
    1f22:	cf 92       	push	r12
    1f24:	df 92       	push	r13
    1f26:	ef 92       	push	r14
    1f28:	ff 92       	push	r15
    1f2a:	0f 93       	push	r16
    1f2c:	1f 93       	push	r17
    1f2e:	cf 93       	push	r28
    1f30:	df 93       	push	r29
    1f32:	cd b7       	in	r28, 0x3d	; 61
    1f34:	de b7       	in	r29, 0x3e	; 62
    1f36:	ca 1b       	sub	r28, r26
    1f38:	db 0b       	sbc	r29, r27
    1f3a:	0f b6       	in	r0, 0x3f	; 63
    1f3c:	f8 94       	cli
    1f3e:	de bf       	out	0x3e, r29	; 62
    1f40:	0f be       	out	0x3f, r0	; 63
    1f42:	cd bf       	out	0x3d, r28	; 61
    1f44:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00001f7e <__epilogue_restores__>:
    1f7e:	2a 88       	ldd	r2, Y+18	; 0x12
    1f80:	39 88       	ldd	r3, Y+17	; 0x11
    1f82:	48 88       	ldd	r4, Y+16	; 0x10
    1f84:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f86:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f88:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f8a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f8c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f8e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f90:	b9 84       	ldd	r11, Y+9	; 0x09
    1f92:	c8 84       	ldd	r12, Y+8	; 0x08
    1f94:	df 80       	ldd	r13, Y+7	; 0x07
    1f96:	ee 80       	ldd	r14, Y+6	; 0x06
    1f98:	fd 80       	ldd	r15, Y+5	; 0x05
    1f9a:	0c 81       	ldd	r16, Y+4	; 0x04
    1f9c:	1b 81       	ldd	r17, Y+3	; 0x03
    1f9e:	aa 81       	ldd	r26, Y+2	; 0x02
    1fa0:	b9 81       	ldd	r27, Y+1	; 0x01
    1fa2:	ce 0f       	add	r28, r30
    1fa4:	d1 1d       	adc	r29, r1
    1fa6:	0f b6       	in	r0, 0x3f	; 63
    1fa8:	f8 94       	cli
    1faa:	de bf       	out	0x3e, r29	; 62
    1fac:	0f be       	out	0x3f, r0	; 63
    1fae:	cd bf       	out	0x3d, r28	; 61
    1fb0:	ed 01       	movw	r28, r26
    1fb2:	08 95       	ret

Disassembly of section .text.avrlibc:

00001006 <__ftoa_engine>:
    1006:	28 30       	cpi	r18, 0x08	; 8
    1008:	08 f0       	brcs	.+2      	; 0x100c <__ftoa_engine+0x6>
    100a:	27 e0       	ldi	r18, 0x07	; 7
    100c:	33 27       	eor	r19, r19
    100e:	da 01       	movw	r26, r20
    1010:	99 0f       	add	r25, r25
    1012:	31 1d       	adc	r19, r1
    1014:	87 fd       	sbrc	r24, 7
    1016:	91 60       	ori	r25, 0x01	; 1
    1018:	00 96       	adiw	r24, 0x00	; 0
    101a:	61 05       	cpc	r22, r1
    101c:	71 05       	cpc	r23, r1
    101e:	39 f4       	brne	.+14     	; 0x102e <__ftoa_engine+0x28>
    1020:	32 60       	ori	r19, 0x02	; 2
    1022:	2e 5f       	subi	r18, 0xFE	; 254
    1024:	3d 93       	st	X+, r19
    1026:	30 e3       	ldi	r19, 0x30	; 48
    1028:	2a 95       	dec	r18
    102a:	e1 f7       	brne	.-8      	; 0x1024 <__ftoa_engine+0x1e>
    102c:	08 95       	ret
    102e:	9f 3f       	cpi	r25, 0xFF	; 255
    1030:	30 f0       	brcs	.+12     	; 0x103e <__ftoa_engine+0x38>
    1032:	80 38       	cpi	r24, 0x80	; 128
    1034:	71 05       	cpc	r23, r1
    1036:	61 05       	cpc	r22, r1
    1038:	09 f0       	breq	.+2      	; 0x103c <__ftoa_engine+0x36>
    103a:	3c 5f       	subi	r19, 0xFC	; 252
    103c:	3c 5f       	subi	r19, 0xFC	; 252
    103e:	3d 93       	st	X+, r19
    1040:	91 30       	cpi	r25, 0x01	; 1
    1042:	08 f0       	brcs	.+2      	; 0x1046 <__ftoa_engine+0x40>
    1044:	80 68       	ori	r24, 0x80	; 128
    1046:	91 1d       	adc	r25, r1
    1048:	df 93       	push	r29
    104a:	cf 93       	push	r28
    104c:	1f 93       	push	r17
    104e:	0f 93       	push	r16
    1050:	ff 92       	push	r15
    1052:	ef 92       	push	r14
    1054:	19 2f       	mov	r17, r25
    1056:	98 7f       	andi	r25, 0xF8	; 248
    1058:	96 95       	lsr	r25
    105a:	e9 2f       	mov	r30, r25
    105c:	96 95       	lsr	r25
    105e:	96 95       	lsr	r25
    1060:	e9 0f       	add	r30, r25
    1062:	ff 27       	eor	r31, r31
    1064:	e0 52       	subi	r30, 0x20	; 32
    1066:	ff 4f       	sbci	r31, 0xFF	; 255
    1068:	99 27       	eor	r25, r25
    106a:	33 27       	eor	r19, r19
    106c:	ee 24       	eor	r14, r14
    106e:	ff 24       	eor	r15, r15
    1070:	a7 01       	movw	r20, r14
    1072:	e7 01       	movw	r28, r14
    1074:	05 90       	lpm	r0, Z+
    1076:	08 94       	sec
    1078:	07 94       	ror	r0
    107a:	28 f4       	brcc	.+10     	; 0x1086 <__ftoa_engine+0x80>
    107c:	36 0f       	add	r19, r22
    107e:	e7 1e       	adc	r14, r23
    1080:	f8 1e       	adc	r15, r24
    1082:	49 1f       	adc	r20, r25
    1084:	51 1d       	adc	r21, r1
    1086:	66 0f       	add	r22, r22
    1088:	77 1f       	adc	r23, r23
    108a:	88 1f       	adc	r24, r24
    108c:	99 1f       	adc	r25, r25
    108e:	06 94       	lsr	r0
    1090:	a1 f7       	brne	.-24     	; 0x107a <__ftoa_engine+0x74>
    1092:	05 90       	lpm	r0, Z+
    1094:	07 94       	ror	r0
    1096:	28 f4       	brcc	.+10     	; 0x10a2 <__ftoa_engine+0x9c>
    1098:	e7 0e       	add	r14, r23
    109a:	f8 1e       	adc	r15, r24
    109c:	49 1f       	adc	r20, r25
    109e:	56 1f       	adc	r21, r22
    10a0:	c1 1d       	adc	r28, r1
    10a2:	77 0f       	add	r23, r23
    10a4:	88 1f       	adc	r24, r24
    10a6:	99 1f       	adc	r25, r25
    10a8:	66 1f       	adc	r22, r22
    10aa:	06 94       	lsr	r0
    10ac:	a1 f7       	brne	.-24     	; 0x1096 <__ftoa_engine+0x90>
    10ae:	05 90       	lpm	r0, Z+
    10b0:	07 94       	ror	r0
    10b2:	28 f4       	brcc	.+10     	; 0x10be <__ftoa_engine+0xb8>
    10b4:	f8 0e       	add	r15, r24
    10b6:	49 1f       	adc	r20, r25
    10b8:	56 1f       	adc	r21, r22
    10ba:	c7 1f       	adc	r28, r23
    10bc:	d1 1d       	adc	r29, r1
    10be:	88 0f       	add	r24, r24
    10c0:	99 1f       	adc	r25, r25
    10c2:	66 1f       	adc	r22, r22
    10c4:	77 1f       	adc	r23, r23
    10c6:	06 94       	lsr	r0
    10c8:	a1 f7       	brne	.-24     	; 0x10b2 <__ftoa_engine+0xac>
    10ca:	05 90       	lpm	r0, Z+
    10cc:	07 94       	ror	r0
    10ce:	20 f4       	brcc	.+8      	; 0x10d8 <__ftoa_engine+0xd2>
    10d0:	49 0f       	add	r20, r25
    10d2:	56 1f       	adc	r21, r22
    10d4:	c7 1f       	adc	r28, r23
    10d6:	d8 1f       	adc	r29, r24
    10d8:	99 0f       	add	r25, r25
    10da:	66 1f       	adc	r22, r22
    10dc:	77 1f       	adc	r23, r23
    10de:	88 1f       	adc	r24, r24
    10e0:	06 94       	lsr	r0
    10e2:	a9 f7       	brne	.-22     	; 0x10ce <__ftoa_engine+0xc8>
    10e4:	84 91       	lpm	r24, Z
    10e6:	10 95       	com	r17
    10e8:	17 70       	andi	r17, 0x07	; 7
    10ea:	41 f0       	breq	.+16     	; 0x10fc <__ftoa_engine+0xf6>
    10ec:	d6 95       	lsr	r29
    10ee:	c7 95       	ror	r28
    10f0:	57 95       	ror	r21
    10f2:	47 95       	ror	r20
    10f4:	f7 94       	ror	r15
    10f6:	e7 94       	ror	r14
    10f8:	1a 95       	dec	r17
    10fa:	c1 f7       	brne	.-16     	; 0x10ec <__ftoa_engine+0xe6>
    10fc:	e6 e8       	ldi	r30, 0x86	; 134
    10fe:	f0 e0       	ldi	r31, 0x00	; 0
    1100:	68 94       	set
    1102:	15 90       	lpm	r1, Z+
    1104:	15 91       	lpm	r17, Z+
    1106:	35 91       	lpm	r19, Z+
    1108:	65 91       	lpm	r22, Z+
    110a:	95 91       	lpm	r25, Z+
    110c:	05 90       	lpm	r0, Z+
    110e:	7f e2       	ldi	r23, 0x2F	; 47
    1110:	73 95       	inc	r23
    1112:	e1 18       	sub	r14, r1
    1114:	f1 0a       	sbc	r15, r17
    1116:	43 0b       	sbc	r20, r19
    1118:	56 0b       	sbc	r21, r22
    111a:	c9 0b       	sbc	r28, r25
    111c:	d0 09       	sbc	r29, r0
    111e:	c0 f7       	brcc	.-16     	; 0x1110 <__ftoa_engine+0x10a>
    1120:	e1 0c       	add	r14, r1
    1122:	f1 1e       	adc	r15, r17
    1124:	43 1f       	adc	r20, r19
    1126:	56 1f       	adc	r21, r22
    1128:	c9 1f       	adc	r28, r25
    112a:	d0 1d       	adc	r29, r0
    112c:	7e f4       	brtc	.+30     	; 0x114c <__ftoa_engine+0x146>
    112e:	70 33       	cpi	r23, 0x30	; 48
    1130:	11 f4       	brne	.+4      	; 0x1136 <__ftoa_engine+0x130>
    1132:	8a 95       	dec	r24
    1134:	e6 cf       	rjmp	.-52     	; 0x1102 <__ftoa_engine+0xfc>
    1136:	e8 94       	clt
    1138:	01 50       	subi	r16, 0x01	; 1
    113a:	30 f0       	brcs	.+12     	; 0x1148 <__ftoa_engine+0x142>
    113c:	08 0f       	add	r16, r24
    113e:	0a f4       	brpl	.+2      	; 0x1142 <__ftoa_engine+0x13c>
    1140:	00 27       	eor	r16, r16
    1142:	02 17       	cp	r16, r18
    1144:	08 f4       	brcc	.+2      	; 0x1148 <__ftoa_engine+0x142>
    1146:	20 2f       	mov	r18, r16
    1148:	23 95       	inc	r18
    114a:	02 2f       	mov	r16, r18
    114c:	7a 33       	cpi	r23, 0x3A	; 58
    114e:	28 f0       	brcs	.+10     	; 0x115a <__ftoa_engine+0x154>
    1150:	79 e3       	ldi	r23, 0x39	; 57
    1152:	7d 93       	st	X+, r23
    1154:	2a 95       	dec	r18
    1156:	e9 f7       	brne	.-6      	; 0x1152 <__ftoa_engine+0x14c>
    1158:	10 c0       	rjmp	.+32     	; 0x117a <__ftoa_engine+0x174>
    115a:	7d 93       	st	X+, r23
    115c:	2a 95       	dec	r18
    115e:	89 f6       	brne	.-94     	; 0x1102 <__ftoa_engine+0xfc>
    1160:	06 94       	lsr	r0
    1162:	97 95       	ror	r25
    1164:	67 95       	ror	r22
    1166:	37 95       	ror	r19
    1168:	17 95       	ror	r17
    116a:	17 94       	ror	r1
    116c:	e1 18       	sub	r14, r1
    116e:	f1 0a       	sbc	r15, r17
    1170:	43 0b       	sbc	r20, r19
    1172:	56 0b       	sbc	r21, r22
    1174:	c9 0b       	sbc	r28, r25
    1176:	d0 09       	sbc	r29, r0
    1178:	98 f0       	brcs	.+38     	; 0x11a0 <__ftoa_engine+0x19a>
    117a:	23 95       	inc	r18
    117c:	7e 91       	ld	r23, -X
    117e:	73 95       	inc	r23
    1180:	7a 33       	cpi	r23, 0x3A	; 58
    1182:	08 f0       	brcs	.+2      	; 0x1186 <__ftoa_engine+0x180>
    1184:	70 e3       	ldi	r23, 0x30	; 48
    1186:	7c 93       	st	X, r23
    1188:	20 13       	cpse	r18, r16
    118a:	b8 f7       	brcc	.-18     	; 0x117a <__ftoa_engine+0x174>
    118c:	7e 91       	ld	r23, -X
    118e:	70 61       	ori	r23, 0x10	; 16
    1190:	7d 93       	st	X+, r23
    1192:	30 f0       	brcs	.+12     	; 0x11a0 <__ftoa_engine+0x19a>
    1194:	83 95       	inc	r24
    1196:	71 e3       	ldi	r23, 0x31	; 49
    1198:	7d 93       	st	X+, r23
    119a:	70 e3       	ldi	r23, 0x30	; 48
    119c:	2a 95       	dec	r18
    119e:	e1 f7       	brne	.-8      	; 0x1198 <__ftoa_engine+0x192>
    11a0:	11 24       	eor	r1, r1
    11a2:	ef 90       	pop	r14
    11a4:	ff 90       	pop	r15
    11a6:	0f 91       	pop	r16
    11a8:	1f 91       	pop	r17
    11aa:	cf 91       	pop	r28
    11ac:	df 91       	pop	r29
    11ae:	99 27       	eor	r25, r25
    11b0:	87 fd       	sbrc	r24, 7
    11b2:	90 95       	com	r25
    11b4:	08 95       	ret

Disassembly of section .text.avrlibc:

00001fb4 <strnlen>:
    1fb4:	cf 92       	push	r12
    1fb6:	df 92       	push	r13
    1fb8:	ef 92       	push	r14
    1fba:	6b 01       	movw	r12, r22
    1fbc:	e8 2e       	mov	r14, r24
    1fbe:	a8 2f       	mov	r26, r24
    1fc0:	cb 01       	movw	r24, r22
    1fc2:	41 15       	cp	r20, r1
    1fc4:	51 05       	cpc	r21, r1
    1fc6:	31 f4       	brne	.+12     	; 0x1fd4 <strnlen+0x20>
    1fc8:	8c 19       	sub	r24, r12
    1fca:	9d 09       	sbc	r25, r13
    1fcc:	ef 90       	pop	r14
    1fce:	df 90       	pop	r13
    1fd0:	cf 90       	pop	r12
    1fd2:	08 95       	ret
    1fd4:	fc 01       	movw	r30, r24
    1fd6:	24 91       	lpm	r18, Z
    1fd8:	a7 fd       	sbrc	r26, 7
    1fda:	20 81       	ld	r18, Z
    1fdc:	22 23       	and	r18, r18
    1fde:	a1 f3       	breq	.-24     	; 0x1fc8 <strnlen+0x14>
    1fe0:	01 96       	adiw	r24, 0x01	; 1
    1fe2:	a1 1d       	adc	r26, r1
    1fe4:	41 50       	subi	r20, 0x01	; 1
    1fe6:	51 09       	sbc	r21, r1
    1fe8:	ec cf       	rjmp	.-40     	; 0x1fc2 <strnlen+0xe>

Disassembly of section .text.avrlibc:

00001874 <fdevopen>:
    1874:	0f 93       	push	r16
    1876:	1f 93       	push	r17
    1878:	cf 93       	push	r28
    187a:	df 93       	push	r29
    187c:	00 97       	sbiw	r24, 0x00	; 0
    187e:	31 f4       	brne	.+12     	; 0x188c <fdevopen+0x18>
    1880:	61 15       	cp	r22, r1
    1882:	71 05       	cpc	r23, r1
    1884:	19 f4       	brne	.+6      	; 0x188c <fdevopen+0x18>
    1886:	80 e0       	ldi	r24, 0x00	; 0
    1888:	90 e0       	ldi	r25, 0x00	; 0
    188a:	3b c0       	rjmp	.+118    	; 0x1902 <fdevopen+0x8e>
    188c:	8b 01       	movw	r16, r22
    188e:	ec 01       	movw	r28, r24
    1890:	6f e0       	ldi	r22, 0x0F	; 15
    1892:	70 e0       	ldi	r23, 0x00	; 0
    1894:	81 e0       	ldi	r24, 0x01	; 1
    1896:	90 e0       	ldi	r25, 0x00	; 0
    1898:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <calloc>
    189c:	fc 01       	movw	r30, r24
    189e:	89 2b       	or	r24, r25
    18a0:	91 f3       	breq	.-28     	; 0x1886 <fdevopen+0x12>
    18a2:	80 e8       	ldi	r24, 0x80	; 128
    18a4:	84 83       	std	Z+4, r24	; 0x04
    18a6:	01 15       	cp	r16, r1
    18a8:	11 05       	cpc	r17, r1
    18aa:	69 f0       	breq	.+26     	; 0x18c6 <fdevopen+0x52>
    18ac:	14 87       	std	Z+12, r17	; 0x0c
    18ae:	03 87       	std	Z+11, r16	; 0x0b
    18b0:	81 e8       	ldi	r24, 0x81	; 129
    18b2:	84 83       	std	Z+4, r24	; 0x04
    18b4:	a2 e0       	ldi	r26, 0x02	; 2
    18b6:	b1 e0       	ldi	r27, 0x01	; 1
    18b8:	8d 91       	ld	r24, X+
    18ba:	9c 91       	ld	r25, X
    18bc:	11 97       	sbiw	r26, 0x01	; 1
    18be:	89 2b       	or	r24, r25
    18c0:	11 f4       	brne	.+4      	; 0x18c6 <fdevopen+0x52>
    18c2:	ed 93       	st	X+, r30
    18c4:	fc 93       	st	X, r31
    18c6:	20 97       	sbiw	r28, 0x00	; 0
    18c8:	d9 f0       	breq	.+54     	; 0x1900 <fdevopen+0x8c>
    18ca:	d2 87       	std	Z+10, r29	; 0x0a
    18cc:	c1 87       	std	Z+9, r28	; 0x09
    18ce:	84 81       	ldd	r24, Z+4	; 0x04
    18d0:	82 60       	ori	r24, 0x02	; 2
    18d2:	84 83       	std	Z+4, r24	; 0x04
    18d4:	a2 e0       	ldi	r26, 0x02	; 2
    18d6:	b1 e0       	ldi	r27, 0x01	; 1
    18d8:	12 96       	adiw	r26, 0x02	; 2
    18da:	8d 91       	ld	r24, X+
    18dc:	9c 91       	ld	r25, X
    18de:	13 97       	sbiw	r26, 0x03	; 3
    18e0:	89 2b       	or	r24, r25
    18e2:	71 f4       	brne	.+28     	; 0x1900 <fdevopen+0x8c>
    18e4:	13 96       	adiw	r26, 0x03	; 3
    18e6:	fc 93       	st	X, r31
    18e8:	ee 93       	st	-X, r30
    18ea:	12 97       	sbiw	r26, 0x02	; 2
    18ec:	14 96       	adiw	r26, 0x04	; 4
    18ee:	8d 91       	ld	r24, X+
    18f0:	9c 91       	ld	r25, X
    18f2:	15 97       	sbiw	r26, 0x05	; 5
    18f4:	89 2b       	or	r24, r25
    18f6:	21 f4       	brne	.+8      	; 0x1900 <fdevopen+0x8c>
    18f8:	15 96       	adiw	r26, 0x05	; 5
    18fa:	fc 93       	st	X, r31
    18fc:	ee 93       	st	-X, r30
    18fe:	14 97       	sbiw	r26, 0x04	; 4
    1900:	cf 01       	movw	r24, r30
    1902:	df 91       	pop	r29
    1904:	cf 91       	pop	r28
    1906:	1f 91       	pop	r17
    1908:	0f 91       	pop	r16
    190a:	08 95       	ret

Disassembly of section .text.avrlibc:

00001a94 <fputc>:
    1a94:	0f 93       	push	r16
    1a96:	1f 93       	push	r17
    1a98:	cf 93       	push	r28
    1a9a:	df 93       	push	r29
    1a9c:	fb 01       	movw	r30, r22
    1a9e:	24 81       	ldd	r18, Z+4	; 0x04
    1aa0:	21 fd       	sbrc	r18, 1
    1aa2:	03 c0       	rjmp	.+6      	; 0x1aaa <fputc+0x16>
    1aa4:	8f ef       	ldi	r24, 0xFF	; 255
    1aa6:	9f ef       	ldi	r25, 0xFF	; 255
    1aa8:	2c c0       	rjmp	.+88     	; 0x1b02 <fputc+0x6e>
    1aaa:	22 ff       	sbrs	r18, 2
    1aac:	16 c0       	rjmp	.+44     	; 0x1ada <fputc+0x46>
    1aae:	47 81       	ldd	r20, Z+7	; 0x07
    1ab0:	50 85       	ldd	r21, Z+8	; 0x08
    1ab2:	25 81       	ldd	r18, Z+5	; 0x05
    1ab4:	36 81       	ldd	r19, Z+6	; 0x06
    1ab6:	42 17       	cp	r20, r18
    1ab8:	53 07       	cpc	r21, r19
    1aba:	44 f4       	brge	.+16     	; 0x1acc <fputc+0x38>
    1abc:	a0 81       	ld	r26, Z
    1abe:	b1 81       	ldd	r27, Z+1	; 0x01
    1ac0:	9d 01       	movw	r18, r26
    1ac2:	2f 5f       	subi	r18, 0xFF	; 255
    1ac4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ac6:	31 83       	std	Z+1, r19	; 0x01
    1ac8:	20 83       	st	Z, r18
    1aca:	8c 93       	st	X, r24
    1acc:	27 81       	ldd	r18, Z+7	; 0x07
    1ace:	30 85       	ldd	r19, Z+8	; 0x08
    1ad0:	2f 5f       	subi	r18, 0xFF	; 255
    1ad2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ad4:	30 87       	std	Z+8, r19	; 0x08
    1ad6:	27 83       	std	Z+7, r18	; 0x07
    1ad8:	14 c0       	rjmp	.+40     	; 0x1b02 <fputc+0x6e>
    1ada:	8b 01       	movw	r16, r22
    1adc:	ec 01       	movw	r28, r24
    1ade:	fb 01       	movw	r30, r22
    1ae0:	01 84       	ldd	r0, Z+9	; 0x09
    1ae2:	f2 85       	ldd	r31, Z+10	; 0x0a
    1ae4:	e0 2d       	mov	r30, r0
    1ae6:	09 95       	icall
    1ae8:	89 2b       	or	r24, r25
    1aea:	e1 f6       	brne	.-72     	; 0x1aa4 <fputc+0x10>
    1aec:	d8 01       	movw	r26, r16
    1aee:	17 96       	adiw	r26, 0x07	; 7
    1af0:	8d 91       	ld	r24, X+
    1af2:	9c 91       	ld	r25, X
    1af4:	18 97       	sbiw	r26, 0x08	; 8
    1af6:	01 96       	adiw	r24, 0x01	; 1
    1af8:	18 96       	adiw	r26, 0x08	; 8
    1afa:	9c 93       	st	X, r25
    1afc:	8e 93       	st	-X, r24
    1afe:	17 97       	sbiw	r26, 0x07	; 7
    1b00:	ce 01       	movw	r24, r28
    1b02:	df 91       	pop	r29
    1b04:	cf 91       	pop	r28
    1b06:	1f 91       	pop	r17
    1b08:	0f 91       	pop	r16
    1b0a:	08 95       	ret

Disassembly of section .text.avrlibc:

00002048 <printf>:
    2048:	a0 e0       	ldi	r26, 0x00	; 0
    204a:	b0 e0       	ldi	r27, 0x00	; 0
    204c:	ea e2       	ldi	r30, 0x2A	; 42
    204e:	f0 e1       	ldi	r31, 0x10	; 16
    2050:	0c 94 97 0f 	jmp	0x1f2e	; 0x1f2e <__prologue_saves__+0x20>
    2054:	9e 01       	movw	r18, r28
    2056:	2b 5f       	subi	r18, 0xFB	; 251
    2058:	3f 4f       	sbci	r19, 0xFF	; 255
    205a:	f9 01       	movw	r30, r18
    205c:	41 91       	ld	r20, Z+
    205e:	51 91       	ld	r21, Z+
    2060:	61 91       	ld	r22, Z+
    2062:	9f 01       	movw	r18, r30
    2064:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__iob+0x2>
    2068:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__iob+0x3>
    206c:	0e 94 23 01 	call	0x246	; 0x246 <vfprintf>
    2070:	e2 e0       	ldi	r30, 0x02	; 2
    2072:	0c 94 cf 0f 	jmp	0x1f9e	; 0x1f9e <__epilogue_restores__+0x20>

Disassembly of section .text.avrlibc:

000015ca <__ultoa_invert>:
    15ca:	fa 01       	movw	r30, r20
    15cc:	aa 27       	eor	r26, r26
    15ce:	28 30       	cpi	r18, 0x08	; 8
    15d0:	51 f1       	breq	.+84     	; 0x1626 <__ultoa_invert+0x5c>
    15d2:	20 31       	cpi	r18, 0x10	; 16
    15d4:	81 f1       	breq	.+96     	; 0x1636 <__ultoa_invert+0x6c>
    15d6:	e8 94       	clt
    15d8:	6f 93       	push	r22
    15da:	6e 7f       	andi	r22, 0xFE	; 254
    15dc:	6e 5f       	subi	r22, 0xFE	; 254
    15de:	7f 4f       	sbci	r23, 0xFF	; 255
    15e0:	8f 4f       	sbci	r24, 0xFF	; 255
    15e2:	9f 4f       	sbci	r25, 0xFF	; 255
    15e4:	af 4f       	sbci	r26, 0xFF	; 255
    15e6:	b1 e0       	ldi	r27, 0x01	; 1
    15e8:	3e d0       	rcall	.+124    	; 0x1666 <__ultoa_invert+0x9c>
    15ea:	b4 e0       	ldi	r27, 0x04	; 4
    15ec:	3c d0       	rcall	.+120    	; 0x1666 <__ultoa_invert+0x9c>
    15ee:	67 0f       	add	r22, r23
    15f0:	78 1f       	adc	r23, r24
    15f2:	89 1f       	adc	r24, r25
    15f4:	9a 1f       	adc	r25, r26
    15f6:	a1 1d       	adc	r26, r1
    15f8:	68 0f       	add	r22, r24
    15fa:	79 1f       	adc	r23, r25
    15fc:	8a 1f       	adc	r24, r26
    15fe:	91 1d       	adc	r25, r1
    1600:	a1 1d       	adc	r26, r1
    1602:	6a 0f       	add	r22, r26
    1604:	71 1d       	adc	r23, r1
    1606:	81 1d       	adc	r24, r1
    1608:	91 1d       	adc	r25, r1
    160a:	a1 1d       	adc	r26, r1
    160c:	20 d0       	rcall	.+64     	; 0x164e <__ultoa_invert+0x84>
    160e:	09 f4       	brne	.+2      	; 0x1612 <__ultoa_invert+0x48>
    1610:	68 94       	set
    1612:	3f 91       	pop	r19
    1614:	2a e0       	ldi	r18, 0x0A	; 10
    1616:	26 9f       	mul	r18, r22
    1618:	11 24       	eor	r1, r1
    161a:	30 19       	sub	r19, r0
    161c:	30 5d       	subi	r19, 0xD0	; 208
    161e:	31 93       	st	Z+, r19
    1620:	de f6       	brtc	.-74     	; 0x15d8 <__ultoa_invert+0xe>
    1622:	cf 01       	movw	r24, r30
    1624:	08 95       	ret
    1626:	46 2f       	mov	r20, r22
    1628:	47 70       	andi	r20, 0x07	; 7
    162a:	40 5d       	subi	r20, 0xD0	; 208
    162c:	41 93       	st	Z+, r20
    162e:	b3 e0       	ldi	r27, 0x03	; 3
    1630:	0f d0       	rcall	.+30     	; 0x1650 <__ultoa_invert+0x86>
    1632:	c9 f7       	brne	.-14     	; 0x1626 <__ultoa_invert+0x5c>
    1634:	f6 cf       	rjmp	.-20     	; 0x1622 <__ultoa_invert+0x58>
    1636:	46 2f       	mov	r20, r22
    1638:	4f 70       	andi	r20, 0x0F	; 15
    163a:	40 5d       	subi	r20, 0xD0	; 208
    163c:	4a 33       	cpi	r20, 0x3A	; 58
    163e:	18 f0       	brcs	.+6      	; 0x1646 <__ultoa_invert+0x7c>
    1640:	49 5d       	subi	r20, 0xD9	; 217
    1642:	31 fd       	sbrc	r19, 1
    1644:	40 52       	subi	r20, 0x20	; 32
    1646:	41 93       	st	Z+, r20
    1648:	02 d0       	rcall	.+4      	; 0x164e <__ultoa_invert+0x84>
    164a:	a9 f7       	brne	.-22     	; 0x1636 <__ultoa_invert+0x6c>
    164c:	ea cf       	rjmp	.-44     	; 0x1622 <__ultoa_invert+0x58>
    164e:	b4 e0       	ldi	r27, 0x04	; 4
    1650:	a6 95       	lsr	r26
    1652:	97 95       	ror	r25
    1654:	87 95       	ror	r24
    1656:	77 95       	ror	r23
    1658:	67 95       	ror	r22
    165a:	ba 95       	dec	r27
    165c:	c9 f7       	brne	.-14     	; 0x1650 <__ultoa_invert+0x86>
    165e:	00 97       	sbiw	r24, 0x00	; 0
    1660:	61 05       	cpc	r22, r1
    1662:	71 05       	cpc	r23, r1
    1664:	08 95       	ret
    1666:	9b 01       	movw	r18, r22
    1668:	ac 01       	movw	r20, r24
    166a:	0a 2e       	mov	r0, r26
    166c:	06 94       	lsr	r0
    166e:	57 95       	ror	r21
    1670:	47 95       	ror	r20
    1672:	37 95       	ror	r19
    1674:	27 95       	ror	r18
    1676:	ba 95       	dec	r27
    1678:	c9 f7       	brne	.-14     	; 0x166c <__ultoa_invert+0xa2>
    167a:	62 0f       	add	r22, r18
    167c:	73 1f       	adc	r23, r19
    167e:	84 1f       	adc	r24, r20
    1680:	95 1f       	adc	r25, r21
    1682:	a0 1d       	adc	r26, r0
    1684:	08 95       	ret

Disassembly of section .text.avrlibc:

00001f46 <calloc>:
    1f46:	0f 93       	push	r16
    1f48:	1f 93       	push	r17
    1f4a:	cf 93       	push	r28
    1f4c:	df 93       	push	r29
    1f4e:	86 9f       	mul	r24, r22
    1f50:	80 01       	movw	r16, r0
    1f52:	87 9f       	mul	r24, r23
    1f54:	10 0d       	add	r17, r0
    1f56:	96 9f       	mul	r25, r22
    1f58:	10 0d       	add	r17, r0
    1f5a:	11 24       	eor	r1, r1
    1f5c:	c8 01       	movw	r24, r16
    1f5e:	0e 94 c5 04 	call	0x98a	; 0x98a <malloc>
    1f62:	ec 01       	movw	r28, r24
    1f64:	00 97       	sbiw	r24, 0x00	; 0
    1f66:	29 f0       	breq	.+10     	; 0x1f72 <calloc+0x2c>
    1f68:	a8 01       	movw	r20, r16
    1f6a:	60 e0       	ldi	r22, 0x00	; 0
    1f6c:	70 e0       	ldi	r23, 0x00	; 0
    1f6e:	0e 94 fe 10 	call	0x21fc	; 0x21fc <memset>
    1f72:	ce 01       	movw	r24, r28
    1f74:	df 91       	pop	r29
    1f76:	cf 91       	pop	r28
    1f78:	1f 91       	pop	r17
    1f7a:	0f 91       	pop	r16
    1f7c:	08 95       	ret

Disassembly of section .text.avrlibc:

0000098a <malloc>:
 98a:	0f 93       	push	r16
 98c:	1f 93       	push	r17
 98e:	cf 93       	push	r28
 990:	df 93       	push	r29
 992:	82 30       	cpi	r24, 0x02	; 2
 994:	91 05       	cpc	r25, r1
 996:	10 f4       	brcc	.+4      	; 0x99c <malloc+0x12>
 998:	82 e0       	ldi	r24, 0x02	; 2
 99a:	90 e0       	ldi	r25, 0x00	; 0
 99c:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__flp>
 9a0:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <__flp+0x1>
 9a4:	20 e0       	ldi	r18, 0x00	; 0
 9a6:	30 e0       	ldi	r19, 0x00	; 0
 9a8:	a0 e0       	ldi	r26, 0x00	; 0
 9aa:	b0 e0       	ldi	r27, 0x00	; 0
 9ac:	30 97       	sbiw	r30, 0x00	; 0
 9ae:	19 f1       	breq	.+70     	; 0x9f6 <malloc+0x6c>
 9b0:	40 81       	ld	r20, Z
 9b2:	51 81       	ldd	r21, Z+1	; 0x01
 9b4:	02 81       	ldd	r16, Z+2	; 0x02
 9b6:	13 81       	ldd	r17, Z+3	; 0x03
 9b8:	48 17       	cp	r20, r24
 9ba:	59 07       	cpc	r21, r25
 9bc:	c8 f0       	brcs	.+50     	; 0x9f0 <malloc+0x66>
 9be:	84 17       	cp	r24, r20
 9c0:	95 07       	cpc	r25, r21
 9c2:	69 f4       	brne	.+26     	; 0x9de <malloc+0x54>
 9c4:	10 97       	sbiw	r26, 0x00	; 0
 9c6:	31 f0       	breq	.+12     	; 0x9d4 <malloc+0x4a>
 9c8:	12 96       	adiw	r26, 0x02	; 2
 9ca:	0c 93       	st	X, r16
 9cc:	12 97       	sbiw	r26, 0x02	; 2
 9ce:	13 96       	adiw	r26, 0x03	; 3
 9d0:	1c 93       	st	X, r17
 9d2:	27 c0       	rjmp	.+78     	; 0xa22 <malloc+0x98>
 9d4:	00 93 0a 01 	sts	0x010A, r16	; 0x80010a <__flp>
 9d8:	10 93 0b 01 	sts	0x010B, r17	; 0x80010b <__flp+0x1>
 9dc:	22 c0       	rjmp	.+68     	; 0xa22 <malloc+0x98>
 9de:	21 15       	cp	r18, r1
 9e0:	31 05       	cpc	r19, r1
 9e2:	19 f0       	breq	.+6      	; 0x9ea <malloc+0x60>
 9e4:	42 17       	cp	r20, r18
 9e6:	53 07       	cpc	r21, r19
 9e8:	18 f4       	brcc	.+6      	; 0x9f0 <malloc+0x66>
 9ea:	9a 01       	movw	r18, r20
 9ec:	bd 01       	movw	r22, r26
 9ee:	ef 01       	movw	r28, r30
 9f0:	df 01       	movw	r26, r30
 9f2:	f8 01       	movw	r30, r16
 9f4:	db cf       	rjmp	.-74     	; 0x9ac <malloc+0x22>
 9f6:	21 15       	cp	r18, r1
 9f8:	31 05       	cpc	r19, r1
 9fa:	f9 f0       	breq	.+62     	; 0xa3a <malloc+0xb0>
 9fc:	28 1b       	sub	r18, r24
 9fe:	39 0b       	sbc	r19, r25
 a00:	24 30       	cpi	r18, 0x04	; 4
 a02:	31 05       	cpc	r19, r1
 a04:	80 f4       	brcc	.+32     	; 0xa26 <malloc+0x9c>
 a06:	8a 81       	ldd	r24, Y+2	; 0x02
 a08:	9b 81       	ldd	r25, Y+3	; 0x03
 a0a:	61 15       	cp	r22, r1
 a0c:	71 05       	cpc	r23, r1
 a0e:	21 f0       	breq	.+8      	; 0xa18 <malloc+0x8e>
 a10:	fb 01       	movw	r30, r22
 a12:	93 83       	std	Z+3, r25	; 0x03
 a14:	82 83       	std	Z+2, r24	; 0x02
 a16:	04 c0       	rjmp	.+8      	; 0xa20 <malloc+0x96>
 a18:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__flp+0x1>
 a1c:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__flp>
 a20:	fe 01       	movw	r30, r28
 a22:	32 96       	adiw	r30, 0x02	; 2
 a24:	44 c0       	rjmp	.+136    	; 0xaae <malloc+0x124>
 a26:	fe 01       	movw	r30, r28
 a28:	e2 0f       	add	r30, r18
 a2a:	f3 1f       	adc	r31, r19
 a2c:	81 93       	st	Z+, r24
 a2e:	91 93       	st	Z+, r25
 a30:	22 50       	subi	r18, 0x02	; 2
 a32:	31 09       	sbc	r19, r1
 a34:	39 83       	std	Y+1, r19	; 0x01
 a36:	28 83       	st	Y, r18
 a38:	3a c0       	rjmp	.+116    	; 0xaae <malloc+0x124>
 a3a:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 a3e:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 a42:	23 2b       	or	r18, r19
 a44:	41 f4       	brne	.+16     	; 0xa56 <malloc+0xcc>
 a46:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_start>
 a4a:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_start+0x1>
 a4e:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <__brkval+0x1>
 a52:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <__brkval>
 a56:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__malloc_heap_end>
 a5a:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__malloc_heap_end+0x1>
 a5e:	21 15       	cp	r18, r1
 a60:	31 05       	cpc	r19, r1
 a62:	41 f4       	brne	.+16     	; 0xa74 <malloc+0xea>
 a64:	2d b7       	in	r18, 0x3d	; 61
 a66:	3e b7       	in	r19, 0x3e	; 62
 a68:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <__malloc_margin>
 a6c:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <__malloc_margin+0x1>
 a70:	24 1b       	sub	r18, r20
 a72:	35 0b       	sbc	r19, r21
 a74:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__brkval>
 a78:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__brkval+0x1>
 a7c:	e2 17       	cp	r30, r18
 a7e:	f3 07       	cpc	r31, r19
 a80:	a0 f4       	brcc	.+40     	; 0xaaa <malloc+0x120>
 a82:	2e 1b       	sub	r18, r30
 a84:	3f 0b       	sbc	r19, r31
 a86:	28 17       	cp	r18, r24
 a88:	39 07       	cpc	r19, r25
 a8a:	78 f0       	brcs	.+30     	; 0xaaa <malloc+0x120>
 a8c:	ac 01       	movw	r20, r24
 a8e:	4e 5f       	subi	r20, 0xFE	; 254
 a90:	5f 4f       	sbci	r21, 0xFF	; 255
 a92:	24 17       	cp	r18, r20
 a94:	35 07       	cpc	r19, r21
 a96:	48 f0       	brcs	.+18     	; 0xaaa <malloc+0x120>
 a98:	4e 0f       	add	r20, r30
 a9a:	5f 1f       	adc	r21, r31
 a9c:	50 93 09 01 	sts	0x0109, r21	; 0x800109 <__brkval+0x1>
 aa0:	40 93 08 01 	sts	0x0108, r20	; 0x800108 <__brkval>
 aa4:	81 93       	st	Z+, r24
 aa6:	91 93       	st	Z+, r25
 aa8:	02 c0       	rjmp	.+4      	; 0xaae <malloc+0x124>
 aaa:	e0 e0       	ldi	r30, 0x00	; 0
 aac:	f0 e0       	ldi	r31, 0x00	; 0
 aae:	cf 01       	movw	r24, r30
 ab0:	df 91       	pop	r29
 ab2:	cf 91       	pop	r28
 ab4:	1f 91       	pop	r17
 ab6:	0f 91       	pop	r16
 ab8:	08 95       	ret

00000aba <free>:
 aba:	cf 93       	push	r28
 abc:	df 93       	push	r29
 abe:	00 97       	sbiw	r24, 0x00	; 0
 ac0:	09 f4       	brne	.+2      	; 0xac4 <free+0xa>
 ac2:	81 c0       	rjmp	.+258    	; 0xbc6 <free+0x10c>
 ac4:	fc 01       	movw	r30, r24
 ac6:	32 97       	sbiw	r30, 0x02	; 2
 ac8:	13 82       	std	Z+3, r1	; 0x03
 aca:	12 82       	std	Z+2, r1	; 0x02
 acc:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <__flp>
 ad0:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <__flp+0x1>
 ad4:	10 97       	sbiw	r26, 0x00	; 0
 ad6:	81 f4       	brne	.+32     	; 0xaf8 <free+0x3e>
 ad8:	20 81       	ld	r18, Z
 ada:	31 81       	ldd	r19, Z+1	; 0x01
 adc:	82 0f       	add	r24, r18
 ade:	93 1f       	adc	r25, r19
 ae0:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 ae4:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 ae8:	28 17       	cp	r18, r24
 aea:	39 07       	cpc	r19, r25
 aec:	51 f5       	brne	.+84     	; 0xb42 <free+0x88>
 aee:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__brkval+0x1>
 af2:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__brkval>
 af6:	67 c0       	rjmp	.+206    	; 0xbc6 <free+0x10c>
 af8:	ed 01       	movw	r28, r26
 afa:	20 e0       	ldi	r18, 0x00	; 0
 afc:	30 e0       	ldi	r19, 0x00	; 0
 afe:	ce 17       	cp	r28, r30
 b00:	df 07       	cpc	r29, r31
 b02:	40 f4       	brcc	.+16     	; 0xb14 <free+0x5a>
 b04:	4a 81       	ldd	r20, Y+2	; 0x02
 b06:	5b 81       	ldd	r21, Y+3	; 0x03
 b08:	9e 01       	movw	r18, r28
 b0a:	41 15       	cp	r20, r1
 b0c:	51 05       	cpc	r21, r1
 b0e:	f1 f0       	breq	.+60     	; 0xb4c <free+0x92>
 b10:	ea 01       	movw	r28, r20
 b12:	f5 cf       	rjmp	.-22     	; 0xafe <free+0x44>
 b14:	d3 83       	std	Z+3, r29	; 0x03
 b16:	c2 83       	std	Z+2, r28	; 0x02
 b18:	40 81       	ld	r20, Z
 b1a:	51 81       	ldd	r21, Z+1	; 0x01
 b1c:	84 0f       	add	r24, r20
 b1e:	95 1f       	adc	r25, r21
 b20:	c8 17       	cp	r28, r24
 b22:	d9 07       	cpc	r29, r25
 b24:	59 f4       	brne	.+22     	; 0xb3c <free+0x82>
 b26:	88 81       	ld	r24, Y
 b28:	99 81       	ldd	r25, Y+1	; 0x01
 b2a:	84 0f       	add	r24, r20
 b2c:	95 1f       	adc	r25, r21
 b2e:	02 96       	adiw	r24, 0x02	; 2
 b30:	91 83       	std	Z+1, r25	; 0x01
 b32:	80 83       	st	Z, r24
 b34:	8a 81       	ldd	r24, Y+2	; 0x02
 b36:	9b 81       	ldd	r25, Y+3	; 0x03
 b38:	93 83       	std	Z+3, r25	; 0x03
 b3a:	82 83       	std	Z+2, r24	; 0x02
 b3c:	21 15       	cp	r18, r1
 b3e:	31 05       	cpc	r19, r1
 b40:	29 f4       	brne	.+10     	; 0xb4c <free+0x92>
 b42:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__flp+0x1>
 b46:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__flp>
 b4a:	3d c0       	rjmp	.+122    	; 0xbc6 <free+0x10c>
 b4c:	e9 01       	movw	r28, r18
 b4e:	fb 83       	std	Y+3, r31	; 0x03
 b50:	ea 83       	std	Y+2, r30	; 0x02
 b52:	49 91       	ld	r20, Y+
 b54:	59 91       	ld	r21, Y+
 b56:	c4 0f       	add	r28, r20
 b58:	d5 1f       	adc	r29, r21
 b5a:	ec 17       	cp	r30, r28
 b5c:	fd 07       	cpc	r31, r29
 b5e:	61 f4       	brne	.+24     	; 0xb78 <free+0xbe>
 b60:	80 81       	ld	r24, Z
 b62:	91 81       	ldd	r25, Z+1	; 0x01
 b64:	84 0f       	add	r24, r20
 b66:	95 1f       	adc	r25, r21
 b68:	02 96       	adiw	r24, 0x02	; 2
 b6a:	e9 01       	movw	r28, r18
 b6c:	99 83       	std	Y+1, r25	; 0x01
 b6e:	88 83       	st	Y, r24
 b70:	82 81       	ldd	r24, Z+2	; 0x02
 b72:	93 81       	ldd	r25, Z+3	; 0x03
 b74:	9b 83       	std	Y+3, r25	; 0x03
 b76:	8a 83       	std	Y+2, r24	; 0x02
 b78:	e0 e0       	ldi	r30, 0x00	; 0
 b7a:	f0 e0       	ldi	r31, 0x00	; 0
 b7c:	12 96       	adiw	r26, 0x02	; 2
 b7e:	8d 91       	ld	r24, X+
 b80:	9c 91       	ld	r25, X
 b82:	13 97       	sbiw	r26, 0x03	; 3
 b84:	00 97       	sbiw	r24, 0x00	; 0
 b86:	19 f0       	breq	.+6      	; 0xb8e <free+0xd4>
 b88:	fd 01       	movw	r30, r26
 b8a:	dc 01       	movw	r26, r24
 b8c:	f7 cf       	rjmp	.-18     	; 0xb7c <free+0xc2>
 b8e:	8d 91       	ld	r24, X+
 b90:	9c 91       	ld	r25, X
 b92:	11 97       	sbiw	r26, 0x01	; 1
 b94:	9d 01       	movw	r18, r26
 b96:	2e 5f       	subi	r18, 0xFE	; 254
 b98:	3f 4f       	sbci	r19, 0xFF	; 255
 b9a:	82 0f       	add	r24, r18
 b9c:	93 1f       	adc	r25, r19
 b9e:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 ba2:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 ba6:	28 17       	cp	r18, r24
 ba8:	39 07       	cpc	r19, r25
 baa:	69 f4       	brne	.+26     	; 0xbc6 <free+0x10c>
 bac:	30 97       	sbiw	r30, 0x00	; 0
 bae:	29 f4       	brne	.+10     	; 0xbba <free+0x100>
 bb0:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <__flp+0x1>
 bb4:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__flp>
 bb8:	02 c0       	rjmp	.+4      	; 0xbbe <free+0x104>
 bba:	13 82       	std	Z+3, r1	; 0x03
 bbc:	12 82       	std	Z+2, r1	; 0x02
 bbe:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <__brkval+0x1>
 bc2:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <__brkval>
 bc6:	df 91       	pop	r29
 bc8:	cf 91       	pop	r28
 bca:	08 95       	ret

Disassembly of section .text.avrlibc:

000021fc <memset>:
    21fc:	dc 01       	movw	r26, r24
    21fe:	01 c0       	rjmp	.+2      	; 0x2202 <memset+0x6>
    2200:	6d 93       	st	X+, r22
    2202:	41 50       	subi	r20, 0x01	; 1
    2204:	50 40       	sbci	r21, 0x00	; 0
    2206:	e0 f7       	brcc	.-8      	; 0x2200 <memset+0x4>
    2208:	08 95       	ret
