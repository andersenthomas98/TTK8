
application.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00002020  2**0
                  ALLOC, LOAD, DATA
  1 .text         000001c8  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800100  00800100  00002020  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00002020  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001d8  00000000  00000000  0000207b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002cea  00000000  00000000  00002253  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000e88  00000000  00000000  00004f3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001082  00000000  00000000  00005dc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000544  00000000  00000000  00006e48  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b8  00000000  00000000  0000738c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000010e4  00000000  00000000  00007744  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000148  00000000  00000000  00008828  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00001f62  00001f62  00002016  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00008970  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.encoder_init 0000002e  00001d88  00001d88  00001e3c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.encoder_read_tick 0000001e  00001e74  00001e74  00001f28  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.encoder_get_accumulated_ticks_left 00000046  00001aa8  00001aa8  00001b5c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.encoder_get_accumulated_ticks_right 00000046  00001aee  00001aee  00001ba2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_1 0000009e  00001510  00001510  000015c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_2 0000009e  000015ae  000015ae  00001662  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.encoder_ticks_right 00000004  00800112  00800112  00002020  2**0
                  ALLOC
 21 .bss.encoder_ticks_left 00000004  00800116  00800116  00002020  2**0
                  ALLOC
 22 .text.abs     00000030  00001d58  00001d58  00001e0c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.motor_init 0000001e  00001e92  00001e92  00001f46  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.set_left_motor_dir 00000020  00001e54  00001e54  00001f08  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.motor_left 00000042  00001bbe  00001bbe  00001c72  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.pwm_init 0000001a  00001eb0  00001eb0  00001f64  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.pwm_set_duty_cycle_left 0000002c  00001de4  00001de4  00001e98  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.PID_controller_set_parameters 0000007c  00001770  00001770  00001824  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.PID_controller_init 00000064  00001950  00001950  00001a04  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.PID_controller_get_control_action 0000029c  00000930  00000930  000009e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.speed_estimator_init 00000072  000018de  000018de  00001992  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.speed_estimator_left_rad_per_s 00000046  00001b34  00001b34  00001be8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.__vector_11 0000013c  00000fbe  00000fbe  00001072  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .bss.rad_per_s_right 00000004  0080011a  0080011a  00002020  2**0
                  ALLOC
 35 .bss.rad_per_s_left 00000004  0080011e  0080011e  00002020  2**0
                  ALLOC
 36 .bss.prev_ticks_left 00000002  00800126  00800126  00002020  2**0
                  ALLOC
 37 .bss.prev_ticks_right 00000002  00800128  00800128  00002020  2**0
                  ALLOC
 38 .bss.ticks_left 00000002  0080012a  0080012a  00002020  2**0
                  ALLOC
 39 .bss.ticks_right 00000002  0080012c  0080012c  00002020  2**0
                  ALLOC
 40 .text.timer_init 00000040  00001c00  00001c00  00001cb4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.timer_reset 0000004e  00001a12  00001a12  00001ac6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.timer_timeout 0000003c  00001c40  00001c40  00001cf4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.__vector_7 0000008c  000016e4  000016e4  00001798  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .bss.timer_flag 00000002  0080012e  0080012e  00002020  2**0
                  ALLOC
 45 .bss.elapsed_ms 00000004  00800122  00800122  00002020  2**0
                  ALLOC
 46 .text.usart_tx 0000000e  00001eca  00001eca  00001f7e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.usart_rx 0000000e  00001ed8  00001ed8  00001f8c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.usart_init 00000022  00001e10  00001e10  00001ec4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .progmemx.data 0000001c  000001c8  000001c8  0000027c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 50 .text.main    000000da  000011d8  000011d8  0000128c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.avrlibc.fplib 0000000e  00001ee6  00001ee6  00001f9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.avrlibc.fplib 000000ce  00001386  00001386  0000143a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.avrlibc.fplib 0000000a  00001f38  00001f38  00001fec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.avrlibc.fplib 00000008  00001f4c  00001f4c  00002000  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.avrlibc.fplib 000000de  000010fa  000010fa  000011ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.avrlibc.fplib 0000005e  000019b4  000019b4  00001a68  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.avrlibc.fplib 0000007a  000017ec  000017ec  000018a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.avrlibc.fplib 00000048  00001a60  00001a60  00001b14  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.avrlibc.fplib 0000000c  00001f2c  00001f2c  00001fe0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.avrlibc.fplib 00000006  00001f5c  00001f5c  00002010  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.avrlibc.fplib 0000000e  00001ef4  00001ef4  00001fa8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.avrlibc.fplib 0000000e  00001f02  00001f02  00001fb6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.avrlibc.fplib 00000022  00001e32  00001e32  00001ee6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.avrlibc.fplib 00000044  00001b7a  00001b7a  00001c2e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.avrlibc.fplib 0000000e  00001f10  00001f10  00001fc4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.avrlibc.fplib 0000000a  00001f42  00001f42  00001ff6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.avrlibc.fplib 00000008  00001f54  00001f54  00002008  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.avrlibc.fplib 000000d4  000012b2  000012b2  00001366  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .progmemx.data 00000008  000001e4  000001e4  00000298  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 70 .text.avrlibc 00000744  000001ec  000001ec  000002a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.libgcc.prologue 00000038  00001c7c  00001c7c  00001d30  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text.libgcc.prologue 00000036  00001cec  00001cec  00001da0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.avrlibc 000001b0  00000e0e  00000e0e  00000ec2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.avrlibc 00000036  00001d22  00001d22  00001dd6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.avrlibc 00000098  0000164c  0000164c  00001700  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.avrlibc 00000078  00001866  00001866  0000191a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.avrlibc 0000002e  00001db6  00001db6  00001e6a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.avrlibc 000000bc  00001454  00001454  00001508  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.avrlibc 00000038  00001cb4  00001cb4  00001d68  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .data         00000006  0080010c  00001f66  0000201a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 81 .text.avrlibc 00000242  00000bcc  00000bcc  00000c80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.avrlibc 0000000e  00001f1e  00001f1e  00001fd2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 ba 00 	jmp	0x174	; 0x174 <__ctors_end>
   4:	0c 94 88 0a 	jmp	0x1510	; 0x1510 <__vector_1>
   8:	0c 94 d7 0a 	jmp	0x15ae	; 0x15ae <__vector_2>
   c:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  10:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  14:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  18:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  1c:	0c 94 72 0b 	jmp	0x16e4	; 0x16e4 <__vector_7>
  20:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  24:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  28:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  2c:	0c 94 df 07 	jmp	0xfbe	; 0xfbe <__vector_11>
  30:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  34:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  38:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  3c:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  40:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  44:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  48:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  4c:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  50:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  54:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  58:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  5c:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  60:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>
  64:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 0c       	add	r0, r1
  6c:	80 01       	movw	r16, r0
  6e:	0c 01       	movw	r0, r24
  70:	12 00       	.word	0x0012	; ????
  72:	1f 66       	ori	r17, 0x6F	; 111
  74:	01 12       	cpse	r0, r17
  76:	01 30       	cpi	r16, 0x01	; 1
  78:	80 00       	.word	0x0080	; ????

0000007a <__trampolines_end>:
  7a:	00 40       	sbci	r16, 0x00	; 0
  7c:	7a 10       	cpse	r7, r10
  7e:	f3 5a       	subi	r31, 0xA3	; 163
  80:	00 a0       	ldd	r0, Z+32	; 0x20
  82:	72 4e       	sbci	r23, 0xE2	; 226
  84:	18 09       	sbc	r17, r8
  86:	00 10       	cpse	r0, r0
  88:	a5 d4       	rcall	.+2378   	; 0x9d4 <PID_controller_get_control_action+0xa4>
  8a:	e8 00       	.word	0x00e8	; ????
  8c:	00 e8       	ldi	r16, 0x80	; 128
  8e:	76 48       	sbci	r23, 0x86	; 134
  90:	17 00       	.word	0x0017	; ????
  92:	00 e4       	ldi	r16, 0x40	; 64
  94:	0b 54       	subi	r16, 0x4B	; 75
  96:	02 00       	.word	0x0002	; ????
  98:	00 ca       	rjmp	.-3072   	; 0xfffff49a <__eeprom_end+0xff7ef49a>
  9a:	9a 3b       	cpi	r25, 0xBA	; 186
  9c:	00 00       	nop
  9e:	00 e1       	ldi	r16, 0x10	; 16
  a0:	f5 05       	cpc	r31, r5
  a2:	00 00       	nop
  a4:	80 96       	adiw	r24, 0x20	; 32
  a6:	98 00       	.word	0x0098	; ????
  a8:	00 00       	nop
  aa:	40 42       	sbci	r20, 0x20	; 32
  ac:	0f 00       	.word	0x000f	; ????
  ae:	00 00       	nop
  b0:	a0 86       	std	Z+8, r10	; 0x08
  b2:	01 00       	.word	0x0001	; ????
  b4:	00 00       	nop
  b6:	10 27       	eor	r17, r16
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	e8 03       	fmulsu	r22, r16
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	64 00       	.word	0x0064	; ????
  c4:	00 00       	nop
  c6:	00 00       	nop
  c8:	0a 00       	.word	0x000a	; ????
  ca:	00 00       	nop
  cc:	00 00       	nop
  ce:	01 00       	.word	0x0001	; ????
  d0:	00 00       	nop
  d2:	00 00       	nop
  d4:	2c 76       	andi	r18, 0x6C	; 108
  d6:	d8 88       	ldd	r13, Y+16	; 0x10
  d8:	dc 67       	ori	r29, 0x7C	; 124
  da:	4f 08       	sbc	r4, r15
  dc:	23 df       	rcall	.-442    	; 0xffffff24 <__eeprom_end+0xff7eff24>
  de:	c1 df       	rcall	.-126    	; 0x62 <__SREG__+0x23>
  e0:	ae 59       	subi	r26, 0x9E	; 158
  e2:	e1 b1       	in	r30, 0x01	; 1
  e4:	b7 96       	adiw	r30, 0x27	; 39
  e6:	e5 e3       	ldi	r30, 0x35	; 53
  e8:	e4 53       	subi	r30, 0x34	; 52
  ea:	c6 3a       	cpi	r28, 0xA6	; 166
  ec:	e6 51       	subi	r30, 0x16	; 22
  ee:	99 76       	andi	r25, 0x69	; 105
  f0:	96 e8       	ldi	r25, 0x86	; 134
  f2:	e6 c2       	rjmp	.+1484   	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
  f4:	84 26       	eor	r8, r20
  f6:	eb 89       	ldd	r30, Y+19	; 0x13
  f8:	8c 9b       	sbis	0x11, 4	; 17
  fa:	62 ed       	ldi	r22, 0xD2	; 210
  fc:	40 7c       	andi	r20, 0xC0	; 192
  fe:	6f fc       	.word	0xfc6f	; ????
 100:	ef bc       	out	0x2f, r14	; 47
 102:	9c 9f       	mul	r25, r28
 104:	40 f2       	brcs	.-112    	; 0x96 <__trampolines_end+0x1c>
 106:	ba a5       	ldd	r27, Y+42	; 0x2a
 108:	6f a5       	ldd	r22, Y+47	; 0x2f
 10a:	f4 90       	lpm	r15, Z
 10c:	05 5a       	subi	r16, 0xA5	; 165
 10e:	2a f7       	brpl	.-54     	; 0xda <__trampolines_end+0x60>
 110:	5c 93       	st	X, r21
 112:	6b 6c       	ori	r22, 0xCB	; 203
 114:	f9 67       	ori	r31, 0x79	; 121
 116:	6d c1       	rjmp	.+730    	; 0x3f2 <vfprintf+0x206>
 118:	1b fc       	.word	0xfc1b	; ????
 11a:	e0 e4       	ldi	r30, 0x40	; 64
 11c:	0d 47       	sbci	r16, 0x7D	; 125
 11e:	fe f5       	brtc	.+126    	; 0x19e <__do_copy_data+0x1e>
 120:	20 e6       	ldi	r18, 0x60	; 96
 122:	b5 00       	.word	0x00b5	; ????
 124:	d0 ed       	ldi	r29, 0xD0	; 208
 126:	90 2e       	mov	r9, r16
 128:	03 00       	.word	0x0003	; ????
 12a:	94 35       	cpi	r25, 0x54	; 84
 12c:	77 05       	cpc	r23, r7
 12e:	00 80       	ld	r0, Z
 130:	84 1e       	adc	r8, r20
 132:	08 00       	.word	0x0008	; ????
 134:	00 20       	and	r0, r0
 136:	4e 0a       	sbc	r4, r30
 138:	00 00       	nop
 13a:	00 c8       	rjmp	.-4096   	; 0xfffff13c <__eeprom_end+0xff7ef13c>
 13c:	0c 33       	cpi	r16, 0x3C	; 60
 13e:	33 33       	cpi	r19, 0x33	; 51
 140:	33 0f       	add	r19, r19
 142:	98 6e       	ori	r25, 0xE8	; 232
 144:	12 83       	std	Z+2, r17	; 0x02
 146:	11 41       	sbci	r17, 0x11	; 17
 148:	ef 8d       	ldd	r30, Y+31	; 0x1f
 14a:	21 14       	cp	r2, r1
 14c:	89 3b       	cpi	r24, 0xB9	; 185
 14e:	e6 55       	subi	r30, 0x56	; 86
 150:	16 cf       	rjmp	.-468    	; 0xffffff7e <__eeprom_end+0xff7eff7e>
 152:	fe e6       	ldi	r31, 0x6E	; 110
 154:	db 18       	sub	r13, r11
 156:	d1 84       	ldd	r13, Z+9	; 0x09
 158:	4b 38       	cpi	r20, 0x8B	; 139
 15a:	1b f7       	brvc	.-58     	; 0x122 <__trampolines_end+0xa8>
 15c:	7c 1d       	adc	r23, r12
 15e:	90 1d       	adc	r25, r0
 160:	a4 bb       	out	0x14, r26	; 20
 162:	e4 24       	eor	r14, r4
 164:	20 32       	cpi	r18, 0x20	; 32
 166:	84 72       	andi	r24, 0x24	; 36
 168:	5e 22       	and	r5, r30
 16a:	81 00       	.word	0x0081	; ????
 16c:	c9 f1       	breq	.+114    	; 0x1e0 <_etext+0x18>
 16e:	24 ec       	ldi	r18, 0xC4	; 196
 170:	a1 e5       	ldi	r26, 0x51	; 81
 172:	3d 27       	eor	r19, r29

00000174 <__ctors_end>:
 174:	11 24       	eor	r1, r1
 176:	1f be       	out	0x3f, r1	; 63
 178:	cf ef       	ldi	r28, 0xFF	; 255
 17a:	d8 e0       	ldi	r29, 0x08	; 8
 17c:	de bf       	out	0x3e, r29	; 62
 17e:	cd bf       	out	0x3d, r28	; 61

00000180 <__do_copy_data>:
 180:	e8 e6       	ldi	r30, 0x68	; 104
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	40 e0       	ldi	r20, 0x00	; 0
 186:	17 c0       	rjmp	.+46     	; 0x1b6 <__do_clear_bss+0x8>
 188:	b5 91       	lpm	r27, Z+
 18a:	a5 91       	lpm	r26, Z+
 18c:	35 91       	lpm	r19, Z+
 18e:	25 91       	lpm	r18, Z+
 190:	05 91       	lpm	r16, Z+
 192:	07 fd       	sbrc	r16, 7
 194:	0c c0       	rjmp	.+24     	; 0x1ae <__do_clear_bss>
 196:	95 91       	lpm	r25, Z+
 198:	85 91       	lpm	r24, Z+
 19a:	ef 01       	movw	r28, r30
 19c:	f9 2f       	mov	r31, r25
 19e:	e8 2f       	mov	r30, r24
 1a0:	05 90       	lpm	r0, Z+
 1a2:	0d 92       	st	X+, r0
 1a4:	a2 17       	cp	r26, r18
 1a6:	b3 07       	cpc	r27, r19
 1a8:	d9 f7       	brne	.-10     	; 0x1a0 <__do_copy_data+0x20>
 1aa:	fe 01       	movw	r30, r28
 1ac:	04 c0       	rjmp	.+8      	; 0x1b6 <__do_clear_bss+0x8>

000001ae <__do_clear_bss>:
 1ae:	1d 92       	st	X+, r1
 1b0:	a2 17       	cp	r26, r18
 1b2:	b3 07       	cpc	r27, r19
 1b4:	e1 f7       	brne	.-8      	; 0x1ae <__do_clear_bss>
 1b6:	e9 37       	cpi	r30, 0x79	; 121
 1b8:	f4 07       	cpc	r31, r20
 1ba:	31 f7       	brne	.-52     	; 0x188 <__do_copy_data+0x8>
 1bc:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <main>
 1c0:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <_exit>

000001c4 <_exit>:
 1c4:	f8 94       	cli

000001c6 <__stop_program>:
 1c6:	ff cf       	rjmp	.-2      	; 0x1c6 <__stop_program>

Disassembly of section .text:

00001f62 <__bad_interrupt>:
    1f62:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.encoder_init:

00001d88 <encoder_init>:
static volatile long encoder_ticks_left = 0;
static volatile long encoder_ticks_right = 0;

void encoder_init(void) {
	
	cli();
    1d88:	f8 94       	cli
	
	// Set digital inputs with internal pull-up (unsure if internal pull-up should be used)
	DDRD &= ~(1 << ENCA1);
    1d8a:	8a b1       	in	r24, 0x0a	; 10
    1d8c:	8b 7f       	andi	r24, 0xFB	; 251
    1d8e:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA1);
    1d90:	8b b1       	in	r24, 0x0b	; 11
    1d92:	84 60       	ori	r24, 0x04	; 4
    1d94:	8b b9       	out	0x0b, r24	; 11
	
	DDRD &= ~(1 << ENCA2);
    1d96:	8a b1       	in	r24, 0x0a	; 10
    1d98:	87 7f       	andi	r24, 0xF7	; 247
    1d9a:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA2);
    1d9c:	8b b1       	in	r24, 0x0b	; 11
    1d9e:	88 60       	ori	r24, 0x08	; 8
    1da0:	8b b9       	out	0x0b, r24	; 11
	
	// Rising edge of INT0 and INT1 will generate an interrupt request
	EICRA |= (1 << ISC00) | (1 << ISC01) | (1 << ISC10) | (1 << ISC11);
    1da2:	e9 e6       	ldi	r30, 0x69	; 105
    1da4:	f0 e0       	ldi	r31, 0x00	; 0
    1da6:	80 81       	ld	r24, Z
    1da8:	8f 60       	ori	r24, 0x0F	; 15
    1daa:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0) | (1 << INT1);
    1dac:	8d b3       	in	r24, 0x1d	; 29
    1dae:	83 60       	ori	r24, 0x03	; 3
    1db0:	8d bb       	out	0x1d, r24	; 29
	
	// Enable global interrupts
	sei();
    1db2:	78 94       	sei
    1db4:	08 95       	ret

Disassembly of section .text.encoder_read_tick:

00001e74 <encoder_read_tick>:
	
	
}

int encoder_read_tick(int encoder_pin) {
	if (PIND & (1<<encoder_pin)) {
    1e74:	29 b1       	in	r18, 0x09	; 9
    1e76:	30 e0       	ldi	r19, 0x00	; 0
    1e78:	02 c0       	rjmp	.+4      	; 0x1e7e <encoder_read_tick+0xa>
    1e7a:	35 95       	asr	r19
    1e7c:	27 95       	ror	r18
    1e7e:	8a 95       	dec	r24
    1e80:	e2 f7       	brpl	.-8      	; 0x1e7a <encoder_read_tick+0x6>
    1e82:	c9 01       	movw	r24, r18
    1e84:	81 70       	andi	r24, 0x01	; 1
    1e86:	99 27       	eor	r25, r25
    1e88:	20 ff       	sbrs	r18, 0
    1e8a:	02 c0       	rjmp	.+4      	; 0x1e90 <encoder_read_tick+0x1c>
		return 1;
    1e8c:	81 e0       	ldi	r24, 0x01	; 1
    1e8e:	90 e0       	ldi	r25, 0x00	; 0
	}
	return 0;
}
    1e90:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_left:

00001aa8 <encoder_get_accumulated_ticks_left>:

long encoder_get_accumulated_ticks_left(void) {
    1aa8:	cf 93       	push	r28
    1aaa:	df 93       	push	r29
    1aac:	1f 92       	push	r1
    1aae:	cd b7       	in	r28, 0x3d	; 61
    1ab0:	de b7       	in	r29, 0x3e	; 62
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1ab2:	8f b7       	in	r24, 0x3f	; 63
    1ab4:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1ab6:	f8 94       	cli
    1ab8:	81 e0       	ldi	r24, 0x01	; 1
    1aba:	09 c0       	rjmp	.+18     	; 0x1ace <encoder_get_accumulated_ticks_left+0x26>
		ticks = encoder_ticks_left;
    1abc:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <encoder_ticks_left>
    1ac0:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <encoder_ticks_left+0x1>
    1ac4:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <encoder_ticks_left+0x2>
    1ac8:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <encoder_ticks_left+0x3>
	return 0;
}

long encoder_get_accumulated_ticks_left(void) {
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1acc:	80 e0       	ldi	r24, 0x00	; 0
    1ace:	81 11       	cpse	r24, r1
    1ad0:	f5 cf       	rjmp	.-22     	; 0x1abc <encoder_get_accumulated_ticks_left+0x14>
    1ad2:	ce 01       	movw	r24, r28
    1ad4:	01 96       	adiw	r24, 0x01	; 1
    1ad6:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1ad8:	fc 01       	movw	r30, r24
    1ada:	84 91       	lpm	r24, Z
    1adc:	a7 fd       	sbrc	r26, 7
    1ade:	80 81       	ld	r24, Z
    1ae0:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_left;
	}
	return ticks;
}
    1ae2:	cb 01       	movw	r24, r22
    1ae4:	ba 01       	movw	r22, r20
    1ae6:	0f 90       	pop	r0
    1ae8:	df 91       	pop	r29
    1aea:	cf 91       	pop	r28
    1aec:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_right:

00001aee <encoder_get_accumulated_ticks_right>:

long encoder_get_accumulated_ticks_right(void) {
    1aee:	cf 93       	push	r28
    1af0:	df 93       	push	r29
    1af2:	1f 92       	push	r1
    1af4:	cd b7       	in	r28, 0x3d	; 61
    1af6:	de b7       	in	r29, 0x3e	; 62
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1af8:	8f b7       	in	r24, 0x3f	; 63
    1afa:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1afc:	f8 94       	cli
    1afe:	81 e0       	ldi	r24, 0x01	; 1
    1b00:	09 c0       	rjmp	.+18     	; 0x1b14 <encoder_get_accumulated_ticks_right+0x26>
		ticks = encoder_ticks_right;
    1b02:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <encoder_ticks_right>
    1b06:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <encoder_ticks_right+0x1>
    1b0a:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <encoder_ticks_right+0x2>
    1b0e:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <encoder_ticks_right+0x3>
	return ticks;
}

long encoder_get_accumulated_ticks_right(void) {
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1b12:	80 e0       	ldi	r24, 0x00	; 0
    1b14:	81 11       	cpse	r24, r1
    1b16:	f5 cf       	rjmp	.-22     	; 0x1b02 <encoder_get_accumulated_ticks_right+0x14>
    1b18:	ce 01       	movw	r24, r28
    1b1a:	01 96       	adiw	r24, 0x01	; 1
    1b1c:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1b1e:	fc 01       	movw	r30, r24
    1b20:	84 91       	lpm	r24, Z
    1b22:	a7 fd       	sbrc	r26, 7
    1b24:	80 81       	ld	r24, Z
    1b26:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_right;
	}
	return ticks;
}
    1b28:	cb 01       	movw	r24, r22
    1b2a:	ba 01       	movw	r22, r20
    1b2c:	0f 90       	pop	r0
    1b2e:	df 91       	pop	r29
    1b30:	cf 91       	pop	r28
    1b32:	08 95       	ret

Disassembly of section .text.__vector_1:

00001510 <__vector_1>:



// Interrupt service routine for INT0
// Triggered on rising edge of channel A encoder signal for left wheel
ISR(INT0_vect) {
    1510:	1f 92       	push	r1
    1512:	0f 92       	push	r0
    1514:	0f b6       	in	r0, 0x3f	; 63
    1516:	0f 92       	push	r0
    1518:	11 24       	eor	r1, r1
    151a:	2f 93       	push	r18
    151c:	3f 93       	push	r19
    151e:	4f 93       	push	r20
    1520:	5f 93       	push	r21
    1522:	6f 93       	push	r22
    1524:	7f 93       	push	r23
    1526:	8f 93       	push	r24
    1528:	9f 93       	push	r25
    152a:	af 93       	push	r26
    152c:	bf 93       	push	r27
    152e:	ef 93       	push	r30
    1530:	ff 93       	push	r31
	int encb1 = encoder_read_tick(ENCB1);
    1532:	84 e0       	ldi	r24, 0x04	; 4
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <encoder_read_tick>
	if (encb1) {
    153a:	89 2b       	or	r24, r25
    153c:	a1 f0       	breq	.+40     	; 0x1566 <__vector_1+0x56>
		encoder_ticks_left++;
    153e:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <encoder_ticks_left>
    1542:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <encoder_ticks_left+0x1>
    1546:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <encoder_ticks_left+0x2>
    154a:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <encoder_ticks_left+0x3>
    154e:	01 96       	adiw	r24, 0x01	; 1
    1550:	a1 1d       	adc	r26, r1
    1552:	b1 1d       	adc	r27, r1
    1554:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <encoder_ticks_left>
    1558:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <encoder_ticks_left+0x1>
    155c:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <encoder_ticks_left+0x2>
    1560:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <encoder_ticks_left+0x3>
    1564:	13 c0       	rjmp	.+38     	; 0x158c <__vector_1+0x7c>
	} else {
		encoder_ticks_left--;
    1566:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <encoder_ticks_left>
    156a:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <encoder_ticks_left+0x1>
    156e:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <encoder_ticks_left+0x2>
    1572:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <encoder_ticks_left+0x3>
    1576:	01 97       	sbiw	r24, 0x01	; 1
    1578:	a1 09       	sbc	r26, r1
    157a:	b1 09       	sbc	r27, r1
    157c:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <encoder_ticks_left>
    1580:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <encoder_ticks_left+0x1>
    1584:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <encoder_ticks_left+0x2>
    1588:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <encoder_ticks_left+0x3>
	}
}
    158c:	ff 91       	pop	r31
    158e:	ef 91       	pop	r30
    1590:	bf 91       	pop	r27
    1592:	af 91       	pop	r26
    1594:	9f 91       	pop	r25
    1596:	8f 91       	pop	r24
    1598:	7f 91       	pop	r23
    159a:	6f 91       	pop	r22
    159c:	5f 91       	pop	r21
    159e:	4f 91       	pop	r20
    15a0:	3f 91       	pop	r19
    15a2:	2f 91       	pop	r18
    15a4:	0f 90       	pop	r0
    15a6:	0f be       	out	0x3f, r0	; 63
    15a8:	0f 90       	pop	r0
    15aa:	1f 90       	pop	r1
    15ac:	18 95       	reti

Disassembly of section .text.__vector_2:

000015ae <__vector_2>:

// Interrupt service routine for INT1
// Triggered on rising edge of channel A encoder signal for right wheel
ISR(INT1_vect) {
    15ae:	1f 92       	push	r1
    15b0:	0f 92       	push	r0
    15b2:	0f b6       	in	r0, 0x3f	; 63
    15b4:	0f 92       	push	r0
    15b6:	11 24       	eor	r1, r1
    15b8:	2f 93       	push	r18
    15ba:	3f 93       	push	r19
    15bc:	4f 93       	push	r20
    15be:	5f 93       	push	r21
    15c0:	6f 93       	push	r22
    15c2:	7f 93       	push	r23
    15c4:	8f 93       	push	r24
    15c6:	9f 93       	push	r25
    15c8:	af 93       	push	r26
    15ca:	bf 93       	push	r27
    15cc:	ef 93       	push	r30
    15ce:	ff 93       	push	r31
	int encb2 = encoder_read_tick(ENCB2);
    15d0:	87 e0       	ldi	r24, 0x07	; 7
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <encoder_read_tick>
	if (encb2) {
    15d8:	89 2b       	or	r24, r25
    15da:	a1 f0       	breq	.+40     	; 0x1604 <__vector_2+0x56>
		encoder_ticks_right++;
    15dc:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_right>
    15e0:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_right+0x1>
    15e4:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <encoder_ticks_right+0x2>
    15e8:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <encoder_ticks_right+0x3>
    15ec:	01 96       	adiw	r24, 0x01	; 1
    15ee:	a1 1d       	adc	r26, r1
    15f0:	b1 1d       	adc	r27, r1
    15f2:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <encoder_ticks_right>
    15f6:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <encoder_ticks_right+0x1>
    15fa:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <encoder_ticks_right+0x2>
    15fe:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <encoder_ticks_right+0x3>
    1602:	13 c0       	rjmp	.+38     	; 0x162a <__vector_2+0x7c>
		} 
	else {
		encoder_ticks_right--;
    1604:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_right>
    1608:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_right+0x1>
    160c:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <encoder_ticks_right+0x2>
    1610:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <encoder_ticks_right+0x3>
    1614:	01 97       	sbiw	r24, 0x01	; 1
    1616:	a1 09       	sbc	r26, r1
    1618:	b1 09       	sbc	r27, r1
    161a:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <encoder_ticks_right>
    161e:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <encoder_ticks_right+0x1>
    1622:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <encoder_ticks_right+0x2>
    1626:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <encoder_ticks_right+0x3>
	}
    162a:	ff 91       	pop	r31
    162c:	ef 91       	pop	r30
    162e:	bf 91       	pop	r27
    1630:	af 91       	pop	r26
    1632:	9f 91       	pop	r25
    1634:	8f 91       	pop	r24
    1636:	7f 91       	pop	r23
    1638:	6f 91       	pop	r22
    163a:	5f 91       	pop	r21
    163c:	4f 91       	pop	r20
    163e:	3f 91       	pop	r19
    1640:	2f 91       	pop	r18
    1642:	0f 90       	pop	r0
    1644:	0f be       	out	0x3f, r0	; 63
    1646:	0f 90       	pop	r0
    1648:	1f 90       	pop	r1
    164a:	18 95       	reti

Disassembly of section .text.abs:

00001d58 <abs>:
 *  Author: thoander
 */ 

#include "misc.h"

float abs(float val) {
    1d58:	cf 92       	push	r12
    1d5a:	df 92       	push	r13
    1d5c:	ef 92       	push	r14
    1d5e:	ff 92       	push	r15
    1d60:	6b 01       	movw	r12, r22
    1d62:	7c 01       	movw	r14, r24
	if (val < 0) {
    1d64:	20 e0       	ldi	r18, 0x00	; 0
    1d66:	30 e0       	ldi	r19, 0x00	; 0
    1d68:	a9 01       	movw	r20, r18
    1d6a:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <__cmpsf2>
    1d6e:	88 23       	and	r24, r24
    1d70:	24 f4       	brge	.+8      	; 0x1d7a <abs+0x22>
		return val*(-1.0);
    1d72:	c7 01       	movw	r24, r14
    1d74:	b6 01       	movw	r22, r12
    1d76:	90 58       	subi	r25, 0x80	; 128
    1d78:	02 c0       	rjmp	.+4      	; 0x1d7e <abs+0x26>
	}
	return val;
    1d7a:	c7 01       	movw	r24, r14
    1d7c:	b6 01       	movw	r22, r12
    1d7e:	ff 90       	pop	r15
    1d80:	ef 90       	pop	r14
    1d82:	df 90       	pop	r13
    1d84:	cf 90       	pop	r12
    1d86:	08 95       	ret

Disassembly of section .text.motor_init:

00001e92 <motor_init>:


void motor_init(void) {
	
	// For motor control
	pwm_init();
    1e92:	0e 94 58 0f 	call	0x1eb0	; 0x1eb0 <pwm_init>
	
	// Set direction control pins to L298N as outputs
	DDRC |= (1 << OUT1);
    1e96:	87 b1       	in	r24, 0x07	; 7
    1e98:	81 60       	ori	r24, 0x01	; 1
    1e9a:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT2);
    1e9c:	87 b1       	in	r24, 0x07	; 7
    1e9e:	82 60       	ori	r24, 0x02	; 2
    1ea0:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT3);
    1ea2:	87 b1       	in	r24, 0x07	; 7
    1ea4:	84 60       	ori	r24, 0x04	; 4
    1ea6:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT4);
    1ea8:	87 b1       	in	r24, 0x07	; 7
    1eaa:	80 61       	ori	r24, 0x10	; 16
    1eac:	87 b9       	out	0x07, r24	; 7
    1eae:	08 95       	ret

Disassembly of section .text.set_left_motor_dir:

00001e54 <set_left_motor_dir>:
}

void set_left_motor_dir(int dir) {
	if (dir == FORWARD) {
    1e54:	01 97       	sbiw	r24, 0x01	; 1
    1e56:	39 f4       	brne	.+14     	; 0x1e66 <set_left_motor_dir+0x12>
		PORTC |= (1 << OUT1);
    1e58:	88 b1       	in	r24, 0x08	; 8
    1e5a:	81 60       	ori	r24, 0x01	; 1
    1e5c:	88 b9       	out	0x08, r24	; 8
		PORTC &= ~(1 << OUT2);
    1e5e:	88 b1       	in	r24, 0x08	; 8
    1e60:	8d 7f       	andi	r24, 0xFD	; 253
    1e62:	88 b9       	out	0x08, r24	; 8
    1e64:	08 95       	ret
	} else {
		PORTC &= ~(1 << OUT1);
    1e66:	88 b1       	in	r24, 0x08	; 8
    1e68:	8e 7f       	andi	r24, 0xFE	; 254
    1e6a:	88 b9       	out	0x08, r24	; 8
		PORTC |= (1 << OUT2);
    1e6c:	88 b1       	in	r24, 0x08	; 8
    1e6e:	82 60       	ori	r24, 0x02	; 2
    1e70:	88 b9       	out	0x08, r24	; 8
    1e72:	08 95       	ret

Disassembly of section .text.motor_left:

00001bbe <motor_left>:
		PORTC &= ~(1 << OUT3);
		PORTC |= (1 << OUT4);
	}
}

void motor_left(float duty) {
    1bbe:	cf 92       	push	r12
    1bc0:	df 92       	push	r13
    1bc2:	ef 92       	push	r14
    1bc4:	ff 92       	push	r15
    1bc6:	6b 01       	movw	r12, r22
    1bc8:	7c 01       	movw	r14, r24
	if (duty < 0) {
    1bca:	20 e0       	ldi	r18, 0x00	; 0
    1bcc:	30 e0       	ldi	r19, 0x00	; 0
    1bce:	a9 01       	movw	r20, r18
    1bd0:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <__cmpsf2>
    1bd4:	88 23       	and	r24, r24
    1bd6:	2c f4       	brge	.+10     	; 0x1be2 <motor_left+0x24>
		set_left_motor_dir(BACKWARD);
    1bd8:	80 e0       	ldi	r24, 0x00	; 0
    1bda:	90 e0       	ldi	r25, 0x00	; 0
    1bdc:	0e 94 2a 0f 	call	0x1e54	; 0x1e54 <set_left_motor_dir>
    1be0:	04 c0       	rjmp	.+8      	; 0x1bea <motor_left+0x2c>
	} else {
		set_left_motor_dir(FORWARD);
    1be2:	81 e0       	ldi	r24, 0x01	; 1
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	0e 94 2a 0f 	call	0x1e54	; 0x1e54 <set_left_motor_dir>
	}
	float abs_duty = abs(duty);
    1bea:	c7 01       	movw	r24, r14
    1bec:	b6 01       	movw	r22, r12
    1bee:	0e 94 ac 0e 	call	0x1d58	; 0x1d58 <abs>
	pwm_set_duty_cycle_left(abs_duty);	
    1bf2:	0e 94 f2 0e 	call	0x1de4	; 0x1de4 <pwm_set_duty_cycle_left>
}
    1bf6:	ff 90       	pop	r15
    1bf8:	ef 90       	pop	r14
    1bfa:	df 90       	pop	r13
    1bfc:	cf 90       	pop	r12
    1bfe:	08 95       	ret

Disassembly of section .text.pwm_init:

00001eb0 <pwm_init>:
#include "pwm.h"

void pwm_init(void) {
	
	// Set as output (one for each wheel)
	DDRD |= (1 << PWM1);
    1eb0:	8a b1       	in	r24, 0x0a	; 10
    1eb2:	80 64       	ori	r24, 0x40	; 64
    1eb4:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << PWM2);
    1eb6:	8a b1       	in	r24, 0x0a	; 10
    1eb8:	80 62       	ori	r24, 0x20	; 32
    1eba:	8a b9       	out	0x0a, r24	; 10
	TCCR0B |= (1 << CS02) | (1 << CS00); // 1024 prescalar
	*/
	
	// Phase correct PWM mode
	// PWM frequency will be (with no prescaler) 31kHz (outside audible spectrum)
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00);
    1ebc:	84 b5       	in	r24, 0x24	; 36
    1ebe:	81 6a       	ori	r24, 0xA1	; 161
    1ec0:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS00); // no pre-scaling
    1ec2:	85 b5       	in	r24, 0x25	; 37
    1ec4:	81 60       	ori	r24, 0x01	; 1
    1ec6:	85 bd       	out	0x25, r24	; 37
    1ec8:	08 95       	ret

Disassembly of section .text.pwm_set_duty_cycle_left:

00001de4 <pwm_set_duty_cycle_left>:
	
}

void pwm_set_duty_cycle_left(float d) {
	// value should be between 0-255
	float value = d / 100.0 * (255 - MIN_PWM_DUTY_LEFT) + MIN_PWM_DUTY_LEFT;
    1de4:	20 e0       	ldi	r18, 0x00	; 0
    1de6:	30 e0       	ldi	r19, 0x00	; 0
    1de8:	48 ec       	ldi	r20, 0xC8	; 200
    1dea:	52 e4       	ldi	r21, 0x42	; 66
    1dec:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__divsf3>
    1df0:	20 e0       	ldi	r18, 0x00	; 0
    1df2:	30 e0       	ldi	r19, 0x00	; 0
    1df4:	40 ef       	ldi	r20, 0xF0	; 240
    1df6:	52 e4       	ldi	r21, 0x42	; 66
    1df8:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <__mulsf3>
    1dfc:	20 e0       	ldi	r18, 0x00	; 0
    1dfe:	30 e0       	ldi	r19, 0x00	; 0
    1e00:	47 e0       	ldi	r20, 0x07	; 7
    1e02:	53 e4       	ldi	r21, 0x43	; 67
    1e04:	0e 94 74 0f 	call	0x1ee8	; 0x1ee8 <__addsf3>
	OCR0A = (uint8_t)value;
    1e08:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <__fixunssfsi>
    1e0c:	67 bd       	out	0x27, r22	; 39
    1e0e:	08 95       	ret

Disassembly of section .text.PID_controller_set_parameters:

00001770 <PID_controller_set_parameters>:

void PID_controller_set_reference(PID_controller *pid, float ref) {
	pid->reference = ref;
}

void PID_controller_set_parameters(PID_controller *pid, float P, float I, float D, float loop_period) {
    1770:	8f 92       	push	r8
    1772:	9f 92       	push	r9
    1774:	af 92       	push	r10
    1776:	bf 92       	push	r11
    1778:	cf 92       	push	r12
    177a:	df 92       	push	r13
    177c:	ef 92       	push	r14
    177e:	ff 92       	push	r15
    1780:	0f 93       	push	r16
    1782:	1f 93       	push	r17
    1784:	cf 93       	push	r28
    1786:	df 93       	push	r29
    1788:	1f 92       	push	r1
    178a:	cd b7       	in	r28, 0x3d	; 61
    178c:	de b7       	in	r29, 0x3e	; 62
    178e:	fc 01       	movw	r30, r24
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1790:	8f b7       	in	r24, 0x3f	; 63
    1792:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1794:	f8 94       	cli
    1796:	81 e0       	ldi	r24, 0x01	; 1
    1798:	11 c0       	rjmp	.+34     	; 0x17bc <PID_controller_set_parameters+0x4c>
		pid->Kp = P;
    179a:	44 8b       	std	Z+20, r20	; 0x14
    179c:	55 8b       	std	Z+21, r21	; 0x15
    179e:	66 8b       	std	Z+22, r22	; 0x16
    17a0:	77 8b       	std	Z+23, r23	; 0x17
		pid->Ki = I;
    17a2:	00 8f       	std	Z+24, r16	; 0x18
    17a4:	11 8f       	std	Z+25, r17	; 0x19
    17a6:	22 8f       	std	Z+26, r18	; 0x1a
    17a8:	33 8f       	std	Z+27, r19	; 0x1b
		pid->Kd = D;
    17aa:	c4 8e       	std	Z+28, r12	; 0x1c
    17ac:	d5 8e       	std	Z+29, r13	; 0x1d
    17ae:	e6 8e       	std	Z+30, r14	; 0x1e
    17b0:	f7 8e       	std	Z+31, r15	; 0x1f
		pid->loop_period = loop_period;
    17b2:	80 a2       	std	Z+32, r8	; 0x20
    17b4:	91 a2       	std	Z+33, r9	; 0x21
    17b6:	a2 a2       	std	Z+34, r10	; 0x22
    17b8:	b3 a2       	std	Z+35, r11	; 0x23
void PID_controller_set_reference(PID_controller *pid, float ref) {
	pid->reference = ref;
}

void PID_controller_set_parameters(PID_controller *pid, float P, float I, float D, float loop_period) {
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    17ba:	80 e0       	ldi	r24, 0x00	; 0
    17bc:	81 11       	cpse	r24, r1
    17be:	ed cf       	rjmp	.-38     	; 0x179a <PID_controller_set_parameters+0x2a>
    17c0:	ce 01       	movw	r24, r28
    17c2:	01 96       	adiw	r24, 0x01	; 1
    17c4:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    17c6:	fc 01       	movw	r30, r24
    17c8:	84 91       	lpm	r24, Z
    17ca:	a7 fd       	sbrc	r26, 7
    17cc:	80 81       	ld	r24, Z
    17ce:	8f bf       	out	0x3f, r24	; 63
		pid->Kp = P;
		pid->Ki = I;
		pid->Kd = D;
		pid->loop_period = loop_period;
	}
}
    17d0:	0f 90       	pop	r0
    17d2:	df 91       	pop	r29
    17d4:	cf 91       	pop	r28
    17d6:	1f 91       	pop	r17
    17d8:	0f 91       	pop	r16
    17da:	ff 90       	pop	r15
    17dc:	ef 90       	pop	r14
    17de:	df 90       	pop	r13
    17e0:	cf 90       	pop	r12
    17e2:	bf 90       	pop	r11
    17e4:	af 90       	pop	r10
    17e6:	9f 90       	pop	r9
    17e8:	8f 90       	pop	r8
    17ea:	08 95       	ret

Disassembly of section .text.PID_controller_init:

00001950 <PID_controller_init>:

void PID_controller_init(PID_controller *pid) {
    1950:	fc 01       	movw	r30, r24
	pid->Kp = 0.0;
    1952:	14 8a       	std	Z+20, r1	; 0x14
    1954:	15 8a       	std	Z+21, r1	; 0x15
    1956:	16 8a       	std	Z+22, r1	; 0x16
    1958:	17 8a       	std	Z+23, r1	; 0x17
	pid->Ki = 0.0;
    195a:	10 8e       	std	Z+24, r1	; 0x18
    195c:	11 8e       	std	Z+25, r1	; 0x19
    195e:	12 8e       	std	Z+26, r1	; 0x1a
    1960:	13 8e       	std	Z+27, r1	; 0x1b
	pid->Kp = 0.0;
	pid->loop_period = 0.0;
    1962:	10 a2       	std	Z+32, r1	; 0x20
    1964:	11 a2       	std	Z+33, r1	; 0x21
    1966:	12 a2       	std	Z+34, r1	; 0x22
    1968:	13 a2       	std	Z+35, r1	; 0x23
	pid->reference = 0.0;
    196a:	10 82       	st	Z, r1
    196c:	11 82       	std	Z+1, r1	; 0x01
    196e:	12 82       	std	Z+2, r1	; 0x02
    1970:	13 82       	std	Z+3, r1	; 0x03
	pid->prev_reference = 0.0;
    1972:	14 82       	std	Z+4, r1	; 0x04
    1974:	15 82       	std	Z+5, r1	; 0x05
    1976:	16 82       	std	Z+6, r1	; 0x06
    1978:	17 82       	std	Z+7, r1	; 0x07
	pid->error = 0.0;
    197a:	10 86       	std	Z+8, r1	; 0x08
    197c:	11 86       	std	Z+9, r1	; 0x09
    197e:	12 86       	std	Z+10, r1	; 0x0a
    1980:	13 86       	std	Z+11, r1	; 0x0b
	pid->prev_error = 0.0;
    1982:	14 86       	std	Z+12, r1	; 0x0c
    1984:	15 86       	std	Z+13, r1	; 0x0d
    1986:	16 86       	std	Z+14, r1	; 0x0e
    1988:	17 86       	std	Z+15, r1	; 0x0f
	pid->integral_error = 0.0;
    198a:	10 8a       	std	Z+16, r1	; 0x10
    198c:	11 8a       	std	Z+17, r1	; 0x11
    198e:	12 8a       	std	Z+18, r1	; 0x12
    1990:	13 8a       	std	Z+19, r1	; 0x13
	pid->max_control_action = 100;
    1992:	80 e0       	ldi	r24, 0x00	; 0
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	a8 ec       	ldi	r26, 0xC8	; 200
    1998:	b2 e4       	ldi	r27, 0x42	; 66
    199a:	84 a3       	std	Z+36, r24	; 0x24
    199c:	95 a3       	std	Z+37, r25	; 0x25
    199e:	a6 a3       	std	Z+38, r26	; 0x26
    19a0:	b7 a3       	std	Z+39, r27	; 0x27
	pid->min_control_action = -100; 
    19a2:	80 e0       	ldi	r24, 0x00	; 0
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	a8 ec       	ldi	r26, 0xC8	; 200
    19a8:	b2 ec       	ldi	r27, 0xC2	; 194
    19aa:	80 a7       	std	Z+40, r24	; 0x28
    19ac:	91 a7       	std	Z+41, r25	; 0x29
    19ae:	a2 a7       	std	Z+42, r26	; 0x2a
    19b0:	b3 a7       	std	Z+43, r27	; 0x2b
    19b2:	08 95       	ret

Disassembly of section .text.PID_controller_get_control_action:

00000930 <PID_controller_get_control_action>:
float Kd = 0.0;



void PID_controller_set_reference(PID_controller *pid, float ref) {
	pid->reference = ref;
 930:	2f 92       	push	r2
 932:	3f 92       	push	r3
 934:	4f 92       	push	r4
 936:	5f 92       	push	r5
 938:	6f 92       	push	r6
 93a:	7f 92       	push	r7
 93c:	8f 92       	push	r8
 93e:	9f 92       	push	r9
 940:	af 92       	push	r10
 942:	bf 92       	push	r11
 944:	cf 92       	push	r12
 946:	df 92       	push	r13
 948:	ef 92       	push	r14
 94a:	ff 92       	push	r15
 94c:	0f 93       	push	r16
 94e:	1f 93       	push	r17
 950:	cf 93       	push	r28
 952:	df 93       	push	r29
 954:	cd b7       	in	r28, 0x3d	; 61
 956:	de b7       	in	r29, 0x3e	; 62
 958:	62 97       	sbiw	r28, 0x12	; 18
 95a:	0f b6       	in	r0, 0x3f	; 63
 95c:	f8 94       	cli
 95e:	de bf       	out	0x3e, r29	; 62
 960:	0f be       	out	0x3f, r0	; 63
 962:	cd bf       	out	0x3d, r28	; 61
 964:	9a 8b       	std	Y+18, r25	; 0x12
 966:	89 8b       	std	Y+17, r24	; 0x11
 968:	6a 01       	movw	r12, r20
 96a:	7b 01       	movw	r14, r22
 96c:	dc 01       	movw	r26, r24
 96e:	90 96       	adiw	r26, 0x20	; 32
 970:	8d 91       	ld	r24, X+
 972:	9d 91       	ld	r25, X+
 974:	0d 90       	ld	r0, X+
 976:	bc 91       	ld	r27, X
 978:	a0 2d       	mov	r26, r0
 97a:	89 83       	std	Y+1, r24	; 0x01
 97c:	9a 83       	std	Y+2, r25	; 0x02
 97e:	ab 83       	std	Y+3, r26	; 0x03
 980:	bc 83       	std	Y+4, r27	; 0x04
 982:	9a 01       	movw	r18, r20
 984:	ab 01       	movw	r20, r22
 986:	bc 01       	movw	r22, r24
 988:	cd 01       	movw	r24, r26
 98a:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <__mulsf3>
 98e:	e9 89       	ldd	r30, Y+17	; 0x11
 990:	fa 89       	ldd	r31, Y+18	; 0x12
 992:	20 89       	ldd	r18, Z+16	; 0x10
 994:	31 89       	ldd	r19, Z+17	; 0x11
 996:	42 89       	ldd	r20, Z+18	; 0x12
 998:	53 89       	ldd	r21, Z+19	; 0x13
 99a:	0e 94 74 0f 	call	0x1ee8	; 0x1ee8 <__addsf3>
 99e:	6d 83       	std	Y+5, r22	; 0x05
 9a0:	7e 83       	std	Y+6, r23	; 0x06
 9a2:	8f 83       	std	Y+7, r24	; 0x07
 9a4:	98 87       	std	Y+8, r25	; 0x08
 9a6:	a9 89       	ldd	r26, Y+17	; 0x11
 9a8:	ba 89       	ldd	r27, Y+18	; 0x12
 9aa:	50 96       	adiw	r26, 0x10	; 16
 9ac:	6d 93       	st	X+, r22
 9ae:	7d 93       	st	X+, r23
 9b0:	8d 93       	st	X+, r24
 9b2:	9c 93       	st	X, r25
 9b4:	53 97       	sbiw	r26, 0x13	; 19
 9b6:	54 96       	adiw	r26, 0x14	; 20
 9b8:	2d 91       	ld	r18, X+
 9ba:	3d 91       	ld	r19, X+
 9bc:	4d 91       	ld	r20, X+
 9be:	5c 91       	ld	r21, X
 9c0:	57 97       	sbiw	r26, 0x17	; 23
 9c2:	c7 01       	movw	r24, r14
 9c4:	b6 01       	movw	r22, r12
 9c6:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <__mulsf3>
 9ca:	2b 01       	movw	r4, r22
 9cc:	3c 01       	movw	r6, r24
 9ce:	a9 89       	ldd	r26, Y+17	; 0x11
 9d0:	ba 89       	ldd	r27, Y+18	; 0x12
 9d2:	58 96       	adiw	r26, 0x18	; 24
 9d4:	8d 91       	ld	r24, X+
 9d6:	9d 91       	ld	r25, X+
 9d8:	0d 90       	ld	r0, X+
 9da:	bc 91       	ld	r27, X
 9dc:	a0 2d       	mov	r26, r0
 9de:	89 87       	std	Y+9, r24	; 0x09
 9e0:	9a 87       	std	Y+10, r25	; 0x0a
 9e2:	ab 87       	std	Y+11, r26	; 0x0b
 9e4:	bc 87       	std	Y+12, r27	; 0x0c
 9e6:	9c 01       	movw	r18, r24
 9e8:	ad 01       	movw	r20, r26
 9ea:	6d 81       	ldd	r22, Y+5	; 0x05
 9ec:	7e 81       	ldd	r23, Y+6	; 0x06
 9ee:	8f 81       	ldd	r24, Y+7	; 0x07
 9f0:	98 85       	ldd	r25, Y+8	; 0x08
 9f2:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <__mulsf3>
 9f6:	6d 87       	std	Y+13, r22	; 0x0d
 9f8:	7e 87       	std	Y+14, r23	; 0x0e
 9fa:	8f 87       	std	Y+15, r24	; 0x0f
 9fc:	98 8b       	std	Y+16, r25	; 0x10
 9fe:	e9 89       	ldd	r30, Y+17	; 0x11
 a00:	fa 89       	ldd	r31, Y+18	; 0x12
 a02:	84 8c       	ldd	r8, Z+28	; 0x1c
 a04:	95 8c       	ldd	r9, Z+29	; 0x1d
 a06:	a6 8c       	ldd	r10, Z+30	; 0x1e
 a08:	b7 8c       	ldd	r11, Z+31	; 0x1f
 a0a:	24 85       	ldd	r18, Z+12	; 0x0c
 a0c:	35 85       	ldd	r19, Z+13	; 0x0d
 a0e:	46 85       	ldd	r20, Z+14	; 0x0e
 a10:	57 85       	ldd	r21, Z+15	; 0x0f
 a12:	c7 01       	movw	r24, r14
 a14:	b6 01       	movw	r22, r12
 a16:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__subsf3>
 a1a:	9b 01       	movw	r18, r22
 a1c:	ac 01       	movw	r20, r24
 a1e:	c5 01       	movw	r24, r10
 a20:	b4 01       	movw	r22, r8
 a22:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <__mulsf3>
 a26:	29 81       	ldd	r18, Y+1	; 0x01
 a28:	3a 81       	ldd	r19, Y+2	; 0x02
 a2a:	4b 81       	ldd	r20, Y+3	; 0x03
 a2c:	5c 81       	ldd	r21, Y+4	; 0x04
 a2e:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__divsf3>
 a32:	4b 01       	movw	r8, r22
 a34:	5c 01       	movw	r10, r24
 a36:	2d 85       	ldd	r18, Y+13	; 0x0d
 a38:	3e 85       	ldd	r19, Y+14	; 0x0e
 a3a:	4f 85       	ldd	r20, Y+15	; 0x0f
 a3c:	58 89       	ldd	r21, Y+16	; 0x10
 a3e:	c3 01       	movw	r24, r6
 a40:	b2 01       	movw	r22, r4
 a42:	0e 94 74 0f 	call	0x1ee8	; 0x1ee8 <__addsf3>
 a46:	9b 01       	movw	r18, r22
 a48:	ac 01       	movw	r20, r24
 a4a:	c5 01       	movw	r24, r10
 a4c:	b4 01       	movw	r22, r8
 a4e:	0e 94 74 0f 	call	0x1ee8	; 0x1ee8 <__addsf3>
 a52:	76 2e       	mov	r7, r22
 a54:	67 2e       	mov	r6, r23
 a56:	58 2e       	mov	r5, r24
 a58:	49 2e       	mov	r4, r25
 a5a:	a9 89       	ldd	r26, Y+17	; 0x11
 a5c:	ba 89       	ldd	r27, Y+18	; 0x12
 a5e:	94 96       	adiw	r26, 0x24	; 36
 a60:	1c 91       	ld	r17, X
 a62:	94 97       	sbiw	r26, 0x24	; 36
 a64:	95 96       	adiw	r26, 0x25	; 37
 a66:	0c 91       	ld	r16, X
 a68:	95 97       	sbiw	r26, 0x25	; 37
 a6a:	96 96       	adiw	r26, 0x26	; 38
 a6c:	3c 90       	ld	r3, X
 a6e:	96 97       	sbiw	r26, 0x26	; 38
 a70:	97 96       	adiw	r26, 0x27	; 39
 a72:	2c 90       	ld	r2, X
 a74:	21 2f       	mov	r18, r17
 a76:	30 2f       	mov	r19, r16
 a78:	43 2d       	mov	r20, r3
 a7a:	52 2d       	mov	r21, r2
 a7c:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__gesf2>
 a80:	18 16       	cp	r1, r24
 a82:	7c f5       	brge	.+94     	; 0xae2 <PID_controller_get_control_action+0x1b2>
 a84:	29 85       	ldd	r18, Y+9	; 0x09
 a86:	3a 85       	ldd	r19, Y+10	; 0x0a
 a88:	4b 85       	ldd	r20, Y+11	; 0x0b
 a8a:	5c 85       	ldd	r21, Y+12	; 0x0c
 a8c:	69 81       	ldd	r22, Y+1	; 0x01
 a8e:	7a 81       	ldd	r23, Y+2	; 0x02
 a90:	8b 81       	ldd	r24, Y+3	; 0x03
 a92:	9c 81       	ldd	r25, Y+4	; 0x04
 a94:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__divsf3>
 a98:	4b 01       	movw	r8, r22
 a9a:	5c 01       	movw	r10, r24
 a9c:	27 2d       	mov	r18, r7
 a9e:	36 2d       	mov	r19, r6
 aa0:	45 2d       	mov	r20, r5
 aa2:	54 2d       	mov	r21, r4
 aa4:	61 2f       	mov	r22, r17
 aa6:	70 2f       	mov	r23, r16
 aa8:	83 2d       	mov	r24, r3
 aaa:	92 2d       	mov	r25, r2
 aac:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__subsf3>
 ab0:	9b 01       	movw	r18, r22
 ab2:	ac 01       	movw	r20, r24
 ab4:	c5 01       	movw	r24, r10
 ab6:	b4 01       	movw	r22, r8
 ab8:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <__mulsf3>
 abc:	9b 01       	movw	r18, r22
 abe:	ac 01       	movw	r20, r24
 ac0:	6d 81       	ldd	r22, Y+5	; 0x05
 ac2:	7e 81       	ldd	r23, Y+6	; 0x06
 ac4:	8f 81       	ldd	r24, Y+7	; 0x07
 ac6:	98 85       	ldd	r25, Y+8	; 0x08
 ac8:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__subsf3>
 acc:	e9 89       	ldd	r30, Y+17	; 0x11
 ace:	fa 89       	ldd	r31, Y+18	; 0x12
 ad0:	60 8b       	std	Z+16, r22	; 0x10
 ad2:	71 8b       	std	Z+17, r23	; 0x11
 ad4:	82 8b       	std	Z+18, r24	; 0x12
 ad6:	93 8b       	std	Z+19, r25	; 0x13
 ad8:	71 2e       	mov	r7, r17
 ada:	60 2e       	mov	r6, r16
 adc:	53 2c       	mov	r5, r3
 ade:	42 2c       	mov	r4, r2
 ae0:	47 c0       	rjmp	.+142    	; 0xb70 <PID_controller_get_control_action+0x240>
 ae2:	a9 89       	ldd	r26, Y+17	; 0x11
 ae4:	ba 89       	ldd	r27, Y+18	; 0x12
 ae6:	98 96       	adiw	r26, 0x28	; 40
 ae8:	1c 91       	ld	r17, X
 aea:	98 97       	sbiw	r26, 0x28	; 40
 aec:	99 96       	adiw	r26, 0x29	; 41
 aee:	0c 91       	ld	r16, X
 af0:	99 97       	sbiw	r26, 0x29	; 41
 af2:	9a 96       	adiw	r26, 0x2a	; 42
 af4:	3c 90       	ld	r3, X
 af6:	9a 97       	sbiw	r26, 0x2a	; 42
 af8:	9b 96       	adiw	r26, 0x2b	; 43
 afa:	2c 90       	ld	r2, X
 afc:	21 2f       	mov	r18, r17
 afe:	30 2f       	mov	r19, r16
 b00:	43 2d       	mov	r20, r3
 b02:	52 2d       	mov	r21, r2
 b04:	67 2d       	mov	r22, r7
 b06:	76 2d       	mov	r23, r6
 b08:	85 2d       	mov	r24, r5
 b0a:	94 2d       	mov	r25, r4
 b0c:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <__cmpsf2>
 b10:	88 23       	and	r24, r24
 b12:	74 f5       	brge	.+92     	; 0xb70 <PID_controller_get_control_action+0x240>
 b14:	29 85       	ldd	r18, Y+9	; 0x09
 b16:	3a 85       	ldd	r19, Y+10	; 0x0a
 b18:	4b 85       	ldd	r20, Y+11	; 0x0b
 b1a:	5c 85       	ldd	r21, Y+12	; 0x0c
 b1c:	69 81       	ldd	r22, Y+1	; 0x01
 b1e:	7a 81       	ldd	r23, Y+2	; 0x02
 b20:	8b 81       	ldd	r24, Y+3	; 0x03
 b22:	9c 81       	ldd	r25, Y+4	; 0x04
 b24:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__divsf3>
 b28:	4b 01       	movw	r8, r22
 b2a:	5c 01       	movw	r10, r24
 b2c:	27 2d       	mov	r18, r7
 b2e:	36 2d       	mov	r19, r6
 b30:	45 2d       	mov	r20, r5
 b32:	54 2d       	mov	r21, r4
 b34:	61 2f       	mov	r22, r17
 b36:	70 2f       	mov	r23, r16
 b38:	83 2d       	mov	r24, r3
 b3a:	92 2d       	mov	r25, r2
 b3c:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__subsf3>
 b40:	9b 01       	movw	r18, r22
 b42:	ac 01       	movw	r20, r24
 b44:	c5 01       	movw	r24, r10
 b46:	b4 01       	movw	r22, r8
 b48:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <__mulsf3>
 b4c:	9b 01       	movw	r18, r22
 b4e:	ac 01       	movw	r20, r24
 b50:	6d 81       	ldd	r22, Y+5	; 0x05
 b52:	7e 81       	ldd	r23, Y+6	; 0x06
 b54:	8f 81       	ldd	r24, Y+7	; 0x07
 b56:	98 85       	ldd	r25, Y+8	; 0x08
 b58:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__subsf3>
 b5c:	e9 89       	ldd	r30, Y+17	; 0x11
 b5e:	fa 89       	ldd	r31, Y+18	; 0x12
 b60:	60 8b       	std	Z+16, r22	; 0x10
 b62:	71 8b       	std	Z+17, r23	; 0x11
 b64:	82 8b       	std	Z+18, r24	; 0x12
 b66:	93 8b       	std	Z+19, r25	; 0x13
 b68:	71 2e       	mov	r7, r17
 b6a:	60 2e       	mov	r6, r16
 b6c:	53 2c       	mov	r5, r3
 b6e:	42 2c       	mov	r4, r2
 b70:	a9 89       	ldd	r26, Y+17	; 0x11
 b72:	ba 89       	ldd	r27, Y+18	; 0x12
 b74:	1c 96       	adiw	r26, 0x0c	; 12
 b76:	cd 92       	st	X+, r12
 b78:	dd 92       	st	X+, r13
 b7a:	ed 92       	st	X+, r14
 b7c:	fc 92       	st	X, r15
 b7e:	1f 97       	sbiw	r26, 0x0f	; 15
 b80:	fd 01       	movw	r30, r26
 b82:	80 81       	ld	r24, Z
 b84:	91 81       	ldd	r25, Z+1	; 0x01
 b86:	a2 81       	ldd	r26, Z+2	; 0x02
 b88:	b3 81       	ldd	r27, Z+3	; 0x03
 b8a:	84 83       	std	Z+4, r24	; 0x04
 b8c:	95 83       	std	Z+5, r25	; 0x05
 b8e:	a6 83       	std	Z+6, r26	; 0x06
 b90:	b7 83       	std	Z+7, r27	; 0x07
 b92:	67 2d       	mov	r22, r7
 b94:	76 2d       	mov	r23, r6
 b96:	85 2d       	mov	r24, r5
 b98:	94 2d       	mov	r25, r4
 b9a:	62 96       	adiw	r28, 0x12	; 18
 b9c:	0f b6       	in	r0, 0x3f	; 63
 b9e:	f8 94       	cli
 ba0:	de bf       	out	0x3e, r29	; 62
 ba2:	0f be       	out	0x3f, r0	; 63
 ba4:	cd bf       	out	0x3d, r28	; 61
 ba6:	df 91       	pop	r29
 ba8:	cf 91       	pop	r28
 baa:	1f 91       	pop	r17
 bac:	0f 91       	pop	r16
 bae:	ff 90       	pop	r15
 bb0:	ef 90       	pop	r14
 bb2:	df 90       	pop	r13
 bb4:	cf 90       	pop	r12
 bb6:	bf 90       	pop	r11
 bb8:	af 90       	pop	r10
 bba:	9f 90       	pop	r9
 bbc:	8f 90       	pop	r8
 bbe:	7f 90       	pop	r7
 bc0:	6f 90       	pop	r6
 bc2:	5f 90       	pop	r5
 bc4:	4f 90       	pop	r4
 bc6:	3f 90       	pop	r3
 bc8:	2f 90       	pop	r2
 bca:	08 95       	ret

Disassembly of section .text.speed_estimator_init:

000018de <speed_estimator_init>:
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
		rad_per_s = rad_per_s_right;
	}
	return rad_per_s;
}
    18de:	cf 93       	push	r28
    18e0:	df 93       	push	r29
    18e2:	1f 92       	push	r1
    18e4:	cd b7       	in	r28, 0x3d	; 61
    18e6:	de b7       	in	r29, 0x3e	; 62
    18e8:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <encoder_init>
    18ec:	8f b7       	in	r24, 0x3f	; 63
    18ee:	89 83       	std	Y+1, r24	; 0x01
    18f0:	f8 94       	cli
    18f2:	81 e0       	ldi	r24, 0x01	; 1
    18f4:	0d c0       	rjmp	.+26     	; 0x1910 <speed_estimator_init+0x32>
    18f6:	0e 94 77 0d 	call	0x1aee	; 0x1aee <encoder_get_accumulated_ticks_right>
    18fa:	70 93 2d 01 	sts	0x012D, r23	; 0x80012d <ticks_right+0x1>
    18fe:	60 93 2c 01 	sts	0x012C, r22	; 0x80012c <ticks_right>
    1902:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <encoder_get_accumulated_ticks_left>
    1906:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <ticks_left+0x1>
    190a:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <ticks_left>
    190e:	80 e0       	ldi	r24, 0x00	; 0
    1910:	81 11       	cpse	r24, r1
    1912:	f1 cf       	rjmp	.-30     	; 0x18f6 <speed_estimator_init+0x18>
    1914:	ce 01       	movw	r24, r28
    1916:	01 96       	adiw	r24, 0x01	; 1
    1918:	a0 e8       	ldi	r26, 0x80	; 128
    191a:	fc 01       	movw	r30, r24
    191c:	84 91       	lpm	r24, Z
    191e:	a7 fd       	sbrc	r26, 7
    1920:	80 81       	ld	r24, Z
    1922:	8f bf       	out	0x3f, r24	; 63
    1924:	f8 94       	cli
    1926:	84 e0       	ldi	r24, 0x04	; 4
    1928:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    192c:	81 ee       	ldi	r24, 0xE1	; 225
    192e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1932:	e1 e8       	ldi	r30, 0x81	; 129
    1934:	f0 e0       	ldi	r31, 0x00	; 0
    1936:	80 81       	ld	r24, Z
    1938:	8c 60       	ori	r24, 0x0C	; 12
    193a:	80 83       	st	Z, r24
    193c:	ef e6       	ldi	r30, 0x6F	; 111
    193e:	f0 e0       	ldi	r31, 0x00	; 0
    1940:	80 81       	ld	r24, Z
    1942:	82 60       	ori	r24, 0x02	; 2
    1944:	80 83       	st	Z, r24
    1946:	78 94       	sei
    1948:	0f 90       	pop	r0
    194a:	df 91       	pop	r29
    194c:	cf 91       	pop	r28
    194e:	08 95       	ret

Disassembly of section .text.speed_estimator_left_rad_per_s:

00001b34 <speed_estimator_left_rad_per_s>:

float speed_estimator_left_rad_per_s() {
    1b34:	cf 93       	push	r28
    1b36:	df 93       	push	r29
    1b38:	1f 92       	push	r1
    1b3a:	cd b7       	in	r28, 0x3d	; 61
    1b3c:	de b7       	in	r29, 0x3e	; 62
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1b3e:	8f b7       	in	r24, 0x3f	; 63
    1b40:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1b42:	f8 94       	cli
    1b44:	81 e0       	ldi	r24, 0x01	; 1
    1b46:	09 c0       	rjmp	.+18     	; 0x1b5a <speed_estimator_left_rad_per_s+0x26>
		rad_per_s = rad_per_s_left;
    1b48:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <rad_per_s_left>
    1b4c:	50 91 1f 01 	lds	r21, 0x011F	; 0x80011f <rad_per_s_left+0x1>
    1b50:	60 91 20 01 	lds	r22, 0x0120	; 0x800120 <rad_per_s_left+0x2>
    1b54:	70 91 21 01 	lds	r23, 0x0121	; 0x800121 <rad_per_s_left+0x3>
	return rad_per_s;
}

float speed_estimator_left_rad_per_s() {
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1b58:	80 e0       	ldi	r24, 0x00	; 0
    1b5a:	81 11       	cpse	r24, r1
    1b5c:	f5 cf       	rjmp	.-22     	; 0x1b48 <speed_estimator_left_rad_per_s+0x14>
    1b5e:	ce 01       	movw	r24, r28
    1b60:	01 96       	adiw	r24, 0x01	; 1
    1b62:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1b64:	fc 01       	movw	r30, r24
    1b66:	84 91       	lpm	r24, Z
    1b68:	a7 fd       	sbrc	r26, 7
    1b6a:	80 81       	ld	r24, Z
    1b6c:	8f bf       	out	0x3f, r24	; 63
		rad_per_s = rad_per_s_left;
	}
	return rad_per_s;
}
    1b6e:	cb 01       	movw	r24, r22
    1b70:	ba 01       	movw	r22, r20
    1b72:	0f 90       	pop	r0
    1b74:	df 91       	pop	r29
    1b76:	cf 91       	pop	r28
    1b78:	08 95       	ret

Disassembly of section .text.__vector_11:

00000fbe <__vector_11>:
	float rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
		rad_per_s = rad_per_s_right;
	}
	return rad_per_s;
}
     fbe:	1f 92       	push	r1
     fc0:	0f 92       	push	r0
     fc2:	0f b6       	in	r0, 0x3f	; 63
     fc4:	0f 92       	push	r0
     fc6:	11 24       	eor	r1, r1
     fc8:	cf 92       	push	r12
     fca:	df 92       	push	r13
     fcc:	ef 92       	push	r14
     fce:	ff 92       	push	r15
     fd0:	2f 93       	push	r18
     fd2:	3f 93       	push	r19
     fd4:	4f 93       	push	r20
     fd6:	5f 93       	push	r21
     fd8:	6f 93       	push	r22
     fda:	7f 93       	push	r23
     fdc:	8f 93       	push	r24
     fde:	9f 93       	push	r25
     fe0:	af 93       	push	r26
     fe2:	bf 93       	push	r27
     fe4:	ef 93       	push	r30
     fe6:	ff 93       	push	r31
     fe8:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <ticks_right>
     fec:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <ticks_right+0x1>
     ff0:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <prev_ticks_right+0x1>
     ff4:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <prev_ticks_right>
     ff8:	0e 94 77 0d 	call	0x1aee	; 0x1aee <encoder_get_accumulated_ticks_right>
     ffc:	70 93 2d 01 	sts	0x012D, r23	; 0x80012d <ticks_right+0x1>
    1000:	60 93 2c 01 	sts	0x012C, r22	; 0x80012c <ticks_right>
    1004:	07 2e       	mov	r0, r23
    1006:	00 0c       	add	r0, r0
    1008:	88 0b       	sbc	r24, r24
    100a:	99 0b       	sbc	r25, r25
    100c:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <__floatsisf>
    1010:	6b 01       	movw	r12, r22
    1012:	7c 01       	movw	r14, r24
    1014:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <prev_ticks_right>
    1018:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <prev_ticks_right+0x1>
    101c:	07 2e       	mov	r0, r23
    101e:	00 0c       	add	r0, r0
    1020:	88 0b       	sbc	r24, r24
    1022:	99 0b       	sbc	r25, r25
    1024:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <__floatsisf>
    1028:	9b 01       	movw	r18, r22
    102a:	ac 01       	movw	r20, r24
    102c:	c7 01       	movw	r24, r14
    102e:	b6 01       	movw	r22, r12
    1030:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__subsf3>
    1034:	2b ed       	ldi	r18, 0xDB	; 219
    1036:	3f e0       	ldi	r19, 0x0F	; 15
    1038:	49 ec       	ldi	r20, 0xC9	; 201
    103a:	50 e4       	ldi	r21, 0x40	; 64
    103c:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <__mulsf3>
    1040:	20 e0       	ldi	r18, 0x00	; 0
    1042:	30 e0       	ldi	r19, 0x00	; 0
    1044:	48 e8       	ldi	r20, 0x88	; 136
    1046:	51 e4       	ldi	r21, 0x41	; 65
    1048:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__divsf3>
    104c:	60 93 1a 01 	sts	0x011A, r22	; 0x80011a <rad_per_s_right>
    1050:	70 93 1b 01 	sts	0x011B, r23	; 0x80011b <rad_per_s_right+0x1>
    1054:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <rad_per_s_right+0x2>
    1058:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <rad_per_s_right+0x3>
    105c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <ticks_left>
    1060:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <ticks_left+0x1>
    1064:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <prev_ticks_left+0x1>
    1068:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <prev_ticks_left>
    106c:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <encoder_get_accumulated_ticks_left>
    1070:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <ticks_left+0x1>
    1074:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <ticks_left>
    1078:	07 2e       	mov	r0, r23
    107a:	00 0c       	add	r0, r0
    107c:	88 0b       	sbc	r24, r24
    107e:	99 0b       	sbc	r25, r25
    1080:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <__floatsisf>
    1084:	6b 01       	movw	r12, r22
    1086:	7c 01       	movw	r14, r24
    1088:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <prev_ticks_left>
    108c:	70 91 27 01 	lds	r23, 0x0127	; 0x800127 <prev_ticks_left+0x1>
    1090:	07 2e       	mov	r0, r23
    1092:	00 0c       	add	r0, r0
    1094:	88 0b       	sbc	r24, r24
    1096:	99 0b       	sbc	r25, r25
    1098:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <__floatsisf>
    109c:	9b 01       	movw	r18, r22
    109e:	ac 01       	movw	r20, r24
    10a0:	c7 01       	movw	r24, r14
    10a2:	b6 01       	movw	r22, r12
    10a4:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__subsf3>
    10a8:	2b ed       	ldi	r18, 0xDB	; 219
    10aa:	3f e0       	ldi	r19, 0x0F	; 15
    10ac:	49 ec       	ldi	r20, 0xC9	; 201
    10ae:	50 e4       	ldi	r21, 0x40	; 64
    10b0:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <__mulsf3>
    10b4:	20 e0       	ldi	r18, 0x00	; 0
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	48 e8       	ldi	r20, 0x88	; 136
    10ba:	51 e4       	ldi	r21, 0x41	; 65
    10bc:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__divsf3>
    10c0:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <rad_per_s_left>
    10c4:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <rad_per_s_left+0x1>
    10c8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <rad_per_s_left+0x2>
    10cc:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <rad_per_s_left+0x3>
    10d0:	ff 91       	pop	r31
    10d2:	ef 91       	pop	r30
    10d4:	bf 91       	pop	r27
    10d6:	af 91       	pop	r26
    10d8:	9f 91       	pop	r25
    10da:	8f 91       	pop	r24
    10dc:	7f 91       	pop	r23
    10de:	6f 91       	pop	r22
    10e0:	5f 91       	pop	r21
    10e2:	4f 91       	pop	r20
    10e4:	3f 91       	pop	r19
    10e6:	2f 91       	pop	r18
    10e8:	ff 90       	pop	r15
    10ea:	ef 90       	pop	r14
    10ec:	df 90       	pop	r13
    10ee:	cf 90       	pop	r12
    10f0:	0f 90       	pop	r0
    10f2:	0f be       	out	0x3f, r0	; 63
    10f4:	0f 90       	pop	r0
    10f6:	1f 90       	pop	r1
    10f8:	18 95       	reti

Disassembly of section .text.timer_init:

00001c00 <timer_init>:
static volatile unsigned int timer_flag = 0;
unsigned int timeout_ms;

void timer_init(unsigned int timeout) {
	
	cli();
    1c00:	f8 94       	cli
	
	timer_flag = 0;
    1c02:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <timer_flag+0x1>
    1c06:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <timer_flag>
	timeout_ms = timeout;
    1c0a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c0e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	// Use 8-bit timer 2 for keeping-time
	TCCR2B = 0x00;
    1c12:	e1 eb       	ldi	r30, 0xB1	; 177
    1c14:	f0 e0       	ldi	r31, 0x00	; 0
    1c16:	10 82       	st	Z, r1
	TCNT2 = 0x00;
    1c18:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
	OCR2A = 0xF9;
    1c1c:	89 ef       	ldi	r24, 0xF9	; 249
    1c1e:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	TCCR2A |= (1 << WGM21) | (1 << CS22); // CTC (Clear timer on compare match with OCR2A), 64 as prescaler
    1c22:	a0 eb       	ldi	r26, 0xB0	; 176
    1c24:	b0 e0       	ldi	r27, 0x00	; 0
    1c26:	8c 91       	ld	r24, X
    1c28:	86 60       	ori	r24, 0x06	; 6
    1c2a:	8c 93       	st	X, r24
	TCCR2B |= (1 << CS22);
    1c2c:	80 81       	ld	r24, Z
    1c2e:	84 60       	ori	r24, 0x04	; 4
    1c30:	80 83       	st	Z, r24
	
	
	// Enable interrupt
	TIMSK2 |= (1 << OCIE2A);
    1c32:	e0 e7       	ldi	r30, 0x70	; 112
    1c34:	f0 e0       	ldi	r31, 0x00	; 0
    1c36:	80 81       	ld	r24, Z
    1c38:	82 60       	ori	r24, 0x02	; 2
    1c3a:	80 83       	st	Z, r24
	
	// Enable interrupt
	TIMSK1 |= (1 << OCIE1A);
	//SREG |= (1 << 7);*/
	
	sei();
    1c3c:	78 94       	sei
    1c3e:	08 95       	ret

Disassembly of section .text.timer_reset:

00001a12 <timer_reset>:
		ms = elapsed_ms;
	}
	return ms;
}

void timer_reset(void) {
    1a12:	cf 93       	push	r28
    1a14:	df 93       	push	r29
    1a16:	1f 92       	push	r1
    1a18:	cd b7       	in	r28, 0x3d	; 61
    1a1a:	de b7       	in	r29, 0x3e	; 62
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1a1c:	8f b7       	in	r24, 0x3f	; 63
    1a1e:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1a20:	f8 94       	cli
    1a22:	81 e0       	ldi	r24, 0x01	; 1
    1a24:	0f c0       	rjmp	.+30     	; 0x1a44 <timer_reset+0x32>
		elapsed_ms = 0;
    1a26:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <elapsed_ms>
    1a2a:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <elapsed_ms+0x1>
    1a2e:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <elapsed_ms+0x2>
    1a32:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <elapsed_ms+0x3>
		TCNT2 = 0x00;
    1a36:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
		timer_flag = 0;
    1a3a:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <timer_flag+0x1>
    1a3e:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <timer_flag>
	}
	return ms;
}

void timer_reset(void) {
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1a42:	80 e0       	ldi	r24, 0x00	; 0
    1a44:	81 11       	cpse	r24, r1
    1a46:	ef cf       	rjmp	.-34     	; 0x1a26 <timer_reset+0x14>
    1a48:	ce 01       	movw	r24, r28
    1a4a:	01 96       	adiw	r24, 0x01	; 1
    1a4c:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1a4e:	fc 01       	movw	r30, r24
    1a50:	84 91       	lpm	r24, Z
    1a52:	a7 fd       	sbrc	r26, 7
    1a54:	80 81       	ld	r24, Z
    1a56:	8f bf       	out	0x3f, r24	; 63
		elapsed_ms = 0;
		TCNT2 = 0x00;
		timer_flag = 0;
	}
}
    1a58:	0f 90       	pop	r0
    1a5a:	df 91       	pop	r29
    1a5c:	cf 91       	pop	r28
    1a5e:	08 95       	ret

Disassembly of section .text.timer_timeout:

00001c40 <timer_timeout>:

unsigned int timer_timeout(void) {
    1c40:	cf 93       	push	r28
    1c42:	df 93       	push	r29
    1c44:	1f 92       	push	r1
    1c46:	cd b7       	in	r28, 0x3d	; 61
    1c48:	de b7       	in	r29, 0x3e	; 62
	unsigned int flag;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1c4a:	8f b7       	in	r24, 0x3f	; 63
    1c4c:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1c4e:	f8 94       	cli
    1c50:	91 e0       	ldi	r25, 0x01	; 1
    1c52:	05 c0       	rjmp	.+10     	; 0x1c5e <timer_timeout+0x1e>
		flag = timer_flag;
    1c54:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <timer_flag>
    1c58:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <timer_flag+0x1>
	}
}

unsigned int timer_timeout(void) {
	unsigned int flag;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1c5c:	90 e0       	ldi	r25, 0x00	; 0
    1c5e:	91 11       	cpse	r25, r1
    1c60:	f9 cf       	rjmp	.-14     	; 0x1c54 <timer_timeout+0x14>
    1c62:	ce 01       	movw	r24, r28
    1c64:	01 96       	adiw	r24, 0x01	; 1
    1c66:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1c68:	fc 01       	movw	r30, r24
    1c6a:	84 91       	lpm	r24, Z
    1c6c:	a7 fd       	sbrc	r26, 7
    1c6e:	80 81       	ld	r24, Z
    1c70:	8f bf       	out	0x3f, r24	; 63
		flag = timer_flag;
	}
	return flag;
}
    1c72:	c9 01       	movw	r24, r18
    1c74:	0f 90       	pop	r0
    1c76:	df 91       	pop	r29
    1c78:	cf 91       	pop	r28
    1c7a:	08 95       	ret

Disassembly of section .text.__vector_7:

000016e4 <__vector_7>:
	unsigned long ms;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
		ms = elapsed_ms;
	}
	return ms;
}
    16e4:	1f 92       	push	r1
    16e6:	0f 92       	push	r0
    16e8:	0f b6       	in	r0, 0x3f	; 63
    16ea:	0f 92       	push	r0
    16ec:	11 24       	eor	r1, r1
    16ee:	4f 93       	push	r20
    16f0:	5f 93       	push	r21
    16f2:	6f 93       	push	r22
    16f4:	7f 93       	push	r23
    16f6:	8f 93       	push	r24
    16f8:	9f 93       	push	r25
    16fa:	af 93       	push	r26
    16fc:	bf 93       	push	r27
    16fe:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <elapsed_ms>
    1702:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <elapsed_ms+0x1>
    1706:	a0 91 24 01 	lds	r26, 0x0124	; 0x800124 <elapsed_ms+0x2>
    170a:	b0 91 25 01 	lds	r27, 0x0125	; 0x800125 <elapsed_ms+0x3>
    170e:	01 96       	adiw	r24, 0x01	; 1
    1710:	a1 1d       	adc	r26, r1
    1712:	b1 1d       	adc	r27, r1
    1714:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <elapsed_ms>
    1718:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <elapsed_ms+0x1>
    171c:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <elapsed_ms+0x2>
    1720:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <elapsed_ms+0x3>
    1724:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1728:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    172c:	a0 e0       	ldi	r26, 0x00	; 0
    172e:	b0 e0       	ldi	r27, 0x00	; 0
    1730:	40 91 22 01 	lds	r20, 0x0122	; 0x800122 <elapsed_ms>
    1734:	50 91 23 01 	lds	r21, 0x0123	; 0x800123 <elapsed_ms+0x1>
    1738:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <elapsed_ms+0x2>
    173c:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <elapsed_ms+0x3>
    1740:	48 17       	cp	r20, r24
    1742:	59 07       	cpc	r21, r25
    1744:	6a 07       	cpc	r22, r26
    1746:	7b 07       	cpc	r23, r27
    1748:	30 f0       	brcs	.+12     	; 0x1756 <__vector_7+0x72>
    174a:	81 e0       	ldi	r24, 0x01	; 1
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <timer_flag+0x1>
    1752:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <timer_flag>
    1756:	bf 91       	pop	r27
    1758:	af 91       	pop	r26
    175a:	9f 91       	pop	r25
    175c:	8f 91       	pop	r24
    175e:	7f 91       	pop	r23
    1760:	6f 91       	pop	r22
    1762:	5f 91       	pop	r21
    1764:	4f 91       	pop	r20
    1766:	0f 90       	pop	r0
    1768:	0f be       	out	0x3f, r0	; 63
    176a:	0f 90       	pop	r0
    176c:	1f 90       	pop	r1
    176e:	18 95       	reti

Disassembly of section .text.usart_tx:

00001eca <usart_tx>:

#include <avr/io.h>
#include "usart.h"

void usart_tx(unsigned char data) {
	while (! (UCSR0A & (1 << UDRE0))) {
    1eca:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    1ece:	95 ff       	sbrs	r25, 5
    1ed0:	fc cf       	rjmp	.-8      	; 0x1eca <usart_tx>
		// wait for buffer to empty
	}
	// Place data in buffer
	UDR0 = data;
    1ed2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    1ed6:	08 95       	ret

Disassembly of section .text.usart_rx:

00001ed8 <usart_rx>:
}

unsigned char usart_rx(void) {
	while(!(UCSR0A & (1 << RXC0))) {
    1ed8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    1edc:	88 23       	and	r24, r24
    1ede:	e4 f7       	brge	.-8      	; 0x1ed8 <usart_rx>
		// Wait for data to be received
	}
	return UDR0;
    1ee0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
    1ee4:	08 95       	ret

Disassembly of section .text.usart_init:

00001e10 <usart_init>:

void usart_init(unsigned int ubrr) {
	// Set baud rate
	UBRR0H = ubrr>>8;
    1e10:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = ubrr;
    1e14:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	// Enable rx and tx
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
    1e18:	88 e1       	ldi	r24, 0x18	; 24
    1e1a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	
	// Set frame format: 8data 2stop bit
	UCSR0C = (1 << USBS0) | (3 << UCSZ00);
    1e1e:	8e e0       	ldi	r24, 0x0E	; 14
    1e20:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	
	// Use printf for serial communication
	fdevopen(usart_tx, usart_rx);
    1e24:	6c e6       	ldi	r22, 0x6C	; 108
    1e26:	7f e0       	ldi	r23, 0x0F	; 15
    1e28:	85 e6       	ldi	r24, 0x65	; 101
    1e2a:	9f e0       	ldi	r25, 0x0F	; 15
    1e2c:	0e 94 26 0b 	call	0x164c	; 0x164c <fdevopen>
    1e30:	08 95       	ret

Disassembly of section .text.main:

000011d8 <main>:
#include "drivers/timer/timer.h"
#include "drivers/speed_estimator/speed_estimator.h"
#include "drivers/PID_controller/PID_controller.h"

int main(void)
{
    11d8:	cf 93       	push	r28
    11da:	df 93       	push	r29
    11dc:	cd b7       	in	r28, 0x3d	; 61
    11de:	de b7       	in	r29, 0x3e	; 62
    11e0:	ac 97       	sbiw	r28, 0x2c	; 44
    11e2:	0f b6       	in	r0, 0x3f	; 63
    11e4:	f8 94       	cli
    11e6:	de bf       	out	0x3e, r29	; 62
    11e8:	0f be       	out	0x3f, r0	; 63
    11ea:	cd bf       	out	0x3d, r28	; 61
	usart_init(UBRR);
    11ec:	87 e6       	ldi	r24, 0x67	; 103
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <usart_init>
	speed_estimator_init();
    11f4:	0e 94 6f 0c 	call	0x18de	; 0x18de <speed_estimator_init>
	motor_init();
    11f8:	0e 94 49 0f 	call	0x1e92	; 0x1e92 <motor_init>

	//encoder_init();
	
	timer_init(50); // Set control loop period to 50 ms (Obs: Should check if code takes longer time to run!)
    11fc:	82 e3       	ldi	r24, 0x32	; 50
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	0e 94 00 0e 	call	0x1c00	; 0x1c00 <timer_init>
	
	printf("Starting application\n\r");
    1204:	88 ec       	ldi	r24, 0xC8	; 200
    1206:	91 e0       	ldi	r25, 0x01	; 1
    1208:	a0 e0       	ldi	r26, 0x00	; 0
    120a:	af 93       	push	r26
    120c:	9f 93       	push	r25
    120e:	8f 93       	push	r24
    1210:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <printf>
	
	
	PID_controller left_motor;
	PID_controller_init(&left_motor);
    1214:	ce 01       	movw	r24, r28
    1216:	01 96       	adiw	r24, 0x01	; 1
    1218:	0e 94 a8 0c 	call	0x1950	; 0x1950 <PID_controller_init>
	PID_controller_set_parameters(&left_motor, 10.0, 10.0, 0.0, 0.05);
    121c:	0f 2e       	mov	r0, r31
    121e:	fd ec       	ldi	r31, 0xCD	; 205
    1220:	8f 2e       	mov	r8, r31
    1222:	fc ec       	ldi	r31, 0xCC	; 204
    1224:	9f 2e       	mov	r9, r31
    1226:	fc e4       	ldi	r31, 0x4C	; 76
    1228:	af 2e       	mov	r10, r31
    122a:	fd e3       	ldi	r31, 0x3D	; 61
    122c:	bf 2e       	mov	r11, r31
    122e:	f0 2d       	mov	r31, r0
    1230:	c1 2c       	mov	r12, r1
    1232:	d1 2c       	mov	r13, r1
    1234:	76 01       	movw	r14, r12
    1236:	00 e0       	ldi	r16, 0x00	; 0
    1238:	10 e0       	ldi	r17, 0x00	; 0
    123a:	20 e2       	ldi	r18, 0x20	; 32
    123c:	31 e4       	ldi	r19, 0x41	; 65
    123e:	b9 01       	movw	r22, r18
    1240:	a8 01       	movw	r20, r16
    1242:	ce 01       	movw	r24, r28
    1244:	01 96       	adiw	r24, 0x01	; 1
    1246:	0e 94 b8 0b 	call	0x1770	; 0x1770 <PID_controller_set_parameters>
    124a:	0f 90       	pop	r0
    124c:	0f 90       	pop	r0
    124e:	0f 90       	pop	r0
	float right_error_rps; // right wheel error [rad/s]
	
	while(1)
	{
		// wheel speed control loop
		if (timer_timeout()) {
    1250:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <timer_timeout>
    1254:	89 2b       	or	r24, r25
    1256:	e1 f3       	breq	.-8      	; 0x1250 <main+0x78>
			timer_reset();
    1258:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <timer_reset>
			
			left_speed_rps = speed_estimator_left_rad_per_s();
    125c:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <speed_estimator_left_rad_per_s>
    1260:	16 2f       	mov	r17, r22
    1262:	07 2f       	mov	r16, r23
    1264:	f8 2e       	mov	r15, r24
    1266:	e9 2e       	mov	r14, r25
			left_error_rps = left_speed_ref_rps - left_speed_rps;
    1268:	76 2f       	mov	r23, r22
    126a:	27 2f       	mov	r18, r23
    126c:	30 2f       	mov	r19, r16
    126e:	4f 2d       	mov	r20, r15
    1270:	5e 2d       	mov	r21, r14
    1272:	6b ed       	ldi	r22, 0xDB	; 219
    1274:	7f e0       	ldi	r23, 0x0F	; 15
    1276:	89 ec       	ldi	r24, 0xC9	; 201
    1278:	90 e4       	ldi	r25, 0x40	; 64
    127a:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__subsf3>
    127e:	ab 01       	movw	r20, r22
    1280:	bc 01       	movw	r22, r24
			left_u = PID_controller_get_control_action(&left_motor, left_error_rps);
    1282:	ce 01       	movw	r24, r28
    1284:	01 96       	adiw	r24, 0x01	; 1
    1286:	0e 94 98 04 	call	0x930	; 0x930 <PID_controller_get_control_action>
			motor_left(left_u);
    128a:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <motor_left>
			
			printf("%f\n\r", left_speed_rps);
    128e:	ef 92       	push	r14
    1290:	ff 92       	push	r15
    1292:	0f 93       	push	r16
    1294:	1f 93       	push	r17
    1296:	8f ed       	ldi	r24, 0xDF	; 223
    1298:	91 e0       	ldi	r25, 0x01	; 1
    129a:	a0 e0       	ldi	r26, 0x00	; 0
    129c:	af 93       	push	r26
    129e:	9f 93       	push	r25
    12a0:	8f 93       	push	r24
    12a2:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <printf>
    12a6:	0f b6       	in	r0, 0x3f	; 63
    12a8:	f8 94       	cli
    12aa:	de bf       	out	0x3e, r29	; 62
    12ac:	0f be       	out	0x3f, r0	; 63
    12ae:	cd bf       	out	0x3d, r28	; 61
    12b0:	cf cf       	rjmp	.-98     	; 0x1250 <main+0x78>

Disassembly of section .text.avrlibc.fplib:

00001ee6 <__subsf3>:
    1ee6:	50 58       	subi	r21, 0x80	; 128

00001ee8 <__addsf3>:
    1ee8:	bb 27       	eor	r27, r27
    1eea:	aa 27       	eor	r26, r26
    1eec:	0e 94 c3 09 	call	0x1386	; 0x1386 <__addsf3x>
    1ef0:	0c 94 19 0f 	jmp	0x1e32	; 0x1e32 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001386 <__addsf3x>:
    1386:	11 c0       	rjmp	.+34     	; 0x13aa <__addsf3x+0x24>
    1388:	0e 94 7a 0f 	call	0x1ef4	; 0x1ef4 <__fp_pscA>
    138c:	38 f0       	brcs	.+14     	; 0x139c <__addsf3x+0x16>
    138e:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__fp_pscB>
    1392:	20 f0       	brcs	.+8      	; 0x139c <__addsf3x+0x16>
    1394:	39 f4       	brne	.+14     	; 0x13a4 <__addsf3x+0x1e>
    1396:	9f 3f       	cpi	r25, 0xFF	; 255
    1398:	19 f4       	brne	.+6      	; 0x13a0 <__addsf3x+0x1a>
    139a:	26 f4       	brtc	.+8      	; 0x13a4 <__addsf3x+0x1e>
    139c:	0c 94 ae 0f 	jmp	0x1f5c	; 0x1f5c <__fp_nan>
    13a0:	0e f4       	brtc	.+2      	; 0x13a4 <__addsf3x+0x1e>
    13a2:	e0 95       	com	r30
    13a4:	e7 fb       	bst	r30, 7
    13a6:	0c 94 96 0f 	jmp	0x1f2c	; 0x1f2c <__fp_inf>
    13aa:	e9 2f       	mov	r30, r25
    13ac:	0e 94 bd 0d 	call	0x1b7a	; 0x1b7a <__fp_split3>
    13b0:	58 f3       	brcs	.-42     	; 0x1388 <__addsf3x+0x2>
    13b2:	ba 17       	cp	r27, r26
    13b4:	62 07       	cpc	r22, r18
    13b6:	73 07       	cpc	r23, r19
    13b8:	84 07       	cpc	r24, r20
    13ba:	95 07       	cpc	r25, r21
    13bc:	20 f0       	brcs	.+8      	; 0x13c6 <__addsf3x+0x40>
    13be:	79 f4       	brne	.+30     	; 0x13de <__addsf3x+0x58>
    13c0:	a6 f5       	brtc	.+104    	; 0x142a <__addsf3x+0xa4>
    13c2:	0c 94 88 0f 	jmp	0x1f10	; 0x1f10 <__fp_zero>
    13c6:	0e f4       	brtc	.+2      	; 0x13ca <__addsf3x+0x44>
    13c8:	e0 95       	com	r30
    13ca:	0b 2e       	mov	r0, r27
    13cc:	ba 2f       	mov	r27, r26
    13ce:	a0 2d       	mov	r26, r0
    13d0:	0b 01       	movw	r0, r22
    13d2:	b9 01       	movw	r22, r18
    13d4:	90 01       	movw	r18, r0
    13d6:	0c 01       	movw	r0, r24
    13d8:	ca 01       	movw	r24, r20
    13da:	a0 01       	movw	r20, r0
    13dc:	11 24       	eor	r1, r1
    13de:	ff 27       	eor	r31, r31
    13e0:	59 1b       	sub	r21, r25
    13e2:	99 f0       	breq	.+38     	; 0x140a <__addsf3x+0x84>
    13e4:	59 3f       	cpi	r21, 0xF9	; 249
    13e6:	50 f4       	brcc	.+20     	; 0x13fc <__addsf3x+0x76>
    13e8:	50 3e       	cpi	r21, 0xE0	; 224
    13ea:	68 f1       	brcs	.+90     	; 0x1446 <__addsf3x+0xc0>
    13ec:	1a 16       	cp	r1, r26
    13ee:	f0 40       	sbci	r31, 0x00	; 0
    13f0:	a2 2f       	mov	r26, r18
    13f2:	23 2f       	mov	r18, r19
    13f4:	34 2f       	mov	r19, r20
    13f6:	44 27       	eor	r20, r20
    13f8:	58 5f       	subi	r21, 0xF8	; 248
    13fa:	f3 cf       	rjmp	.-26     	; 0x13e2 <__addsf3x+0x5c>
    13fc:	46 95       	lsr	r20
    13fe:	37 95       	ror	r19
    1400:	27 95       	ror	r18
    1402:	a7 95       	ror	r26
    1404:	f0 40       	sbci	r31, 0x00	; 0
    1406:	53 95       	inc	r21
    1408:	c9 f7       	brne	.-14     	; 0x13fc <__addsf3x+0x76>
    140a:	7e f4       	brtc	.+30     	; 0x142a <__addsf3x+0xa4>
    140c:	1f 16       	cp	r1, r31
    140e:	ba 0b       	sbc	r27, r26
    1410:	62 0b       	sbc	r22, r18
    1412:	73 0b       	sbc	r23, r19
    1414:	84 0b       	sbc	r24, r20
    1416:	ba f0       	brmi	.+46     	; 0x1446 <__addsf3x+0xc0>
    1418:	91 50       	subi	r25, 0x01	; 1
    141a:	a1 f0       	breq	.+40     	; 0x1444 <__addsf3x+0xbe>
    141c:	ff 0f       	add	r31, r31
    141e:	bb 1f       	adc	r27, r27
    1420:	66 1f       	adc	r22, r22
    1422:	77 1f       	adc	r23, r23
    1424:	88 1f       	adc	r24, r24
    1426:	c2 f7       	brpl	.-16     	; 0x1418 <__addsf3x+0x92>
    1428:	0e c0       	rjmp	.+28     	; 0x1446 <__addsf3x+0xc0>
    142a:	ba 0f       	add	r27, r26
    142c:	62 1f       	adc	r22, r18
    142e:	73 1f       	adc	r23, r19
    1430:	84 1f       	adc	r24, r20
    1432:	48 f4       	brcc	.+18     	; 0x1446 <__addsf3x+0xc0>
    1434:	87 95       	ror	r24
    1436:	77 95       	ror	r23
    1438:	67 95       	ror	r22
    143a:	b7 95       	ror	r27
    143c:	f7 95       	ror	r31
    143e:	9e 3f       	cpi	r25, 0xFE	; 254
    1440:	08 f0       	brcs	.+2      	; 0x1444 <__addsf3x+0xbe>
    1442:	b0 cf       	rjmp	.-160    	; 0x13a4 <__addsf3x+0x1e>
    1444:	93 95       	inc	r25
    1446:	88 0f       	add	r24, r24
    1448:	08 f0       	brcs	.+2      	; 0x144c <__addsf3x+0xc6>
    144a:	99 27       	eor	r25, r25
    144c:	ee 0f       	add	r30, r30
    144e:	97 95       	ror	r25
    1450:	87 95       	ror	r24
    1452:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f38 <__cmpsf2>:
    1f38:	0e 94 30 0d 	call	0x1a60	; 0x1a60 <__fp_cmp>
    1f3c:	08 f4       	brcc	.+2      	; 0x1f40 <__cmpsf2+0x8>
    1f3e:	81 e0       	ldi	r24, 0x01	; 1
    1f40:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f4c <__divsf3>:
    1f4c:	0e 94 7d 08 	call	0x10fa	; 0x10fa <__divsf3x>
    1f50:	0c 94 19 0f 	jmp	0x1e32	; 0x1e32 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

000010fa <__divsf3x>:
    10fa:	10 c0       	rjmp	.+32     	; 0x111c <__divsf3x+0x22>
    10fc:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__fp_pscB>
    1100:	58 f0       	brcs	.+22     	; 0x1118 <__divsf3x+0x1e>
    1102:	0e 94 7a 0f 	call	0x1ef4	; 0x1ef4 <__fp_pscA>
    1106:	40 f0       	brcs	.+16     	; 0x1118 <__divsf3x+0x1e>
    1108:	29 f4       	brne	.+10     	; 0x1114 <__divsf3x+0x1a>
    110a:	5f 3f       	cpi	r21, 0xFF	; 255
    110c:	29 f0       	breq	.+10     	; 0x1118 <__divsf3x+0x1e>
    110e:	0c 94 96 0f 	jmp	0x1f2c	; 0x1f2c <__fp_inf>
    1112:	51 11       	cpse	r21, r1
    1114:	0c 94 89 0f 	jmp	0x1f12	; 0x1f12 <__fp_szero>
    1118:	0c 94 ae 0f 	jmp	0x1f5c	; 0x1f5c <__fp_nan>
    111c:	0e 94 bd 0d 	call	0x1b7a	; 0x1b7a <__fp_split3>
    1120:	68 f3       	brcs	.-38     	; 0x10fc <__divsf3x+0x2>

00001122 <__divsf3_pse>:
    1122:	99 23       	and	r25, r25
    1124:	b1 f3       	breq	.-20     	; 0x1112 <__divsf3x+0x18>
    1126:	55 23       	and	r21, r21
    1128:	91 f3       	breq	.-28     	; 0x110e <__divsf3x+0x14>
    112a:	95 1b       	sub	r25, r21
    112c:	55 0b       	sbc	r21, r21
    112e:	bb 27       	eor	r27, r27
    1130:	aa 27       	eor	r26, r26
    1132:	62 17       	cp	r22, r18
    1134:	73 07       	cpc	r23, r19
    1136:	84 07       	cpc	r24, r20
    1138:	38 f0       	brcs	.+14     	; 0x1148 <__divsf3_pse+0x26>
    113a:	9f 5f       	subi	r25, 0xFF	; 255
    113c:	5f 4f       	sbci	r21, 0xFF	; 255
    113e:	22 0f       	add	r18, r18
    1140:	33 1f       	adc	r19, r19
    1142:	44 1f       	adc	r20, r20
    1144:	aa 1f       	adc	r26, r26
    1146:	a9 f3       	breq	.-22     	; 0x1132 <__divsf3_pse+0x10>
    1148:	35 d0       	rcall	.+106    	; 0x11b4 <__divsf3_pse+0x92>
    114a:	0e 2e       	mov	r0, r30
    114c:	3a f0       	brmi	.+14     	; 0x115c <__divsf3_pse+0x3a>
    114e:	e0 e8       	ldi	r30, 0x80	; 128
    1150:	32 d0       	rcall	.+100    	; 0x11b6 <__divsf3_pse+0x94>
    1152:	91 50       	subi	r25, 0x01	; 1
    1154:	50 40       	sbci	r21, 0x00	; 0
    1156:	e6 95       	lsr	r30
    1158:	00 1c       	adc	r0, r0
    115a:	ca f7       	brpl	.-14     	; 0x114e <__divsf3_pse+0x2c>
    115c:	2b d0       	rcall	.+86     	; 0x11b4 <__divsf3_pse+0x92>
    115e:	fe 2f       	mov	r31, r30
    1160:	29 d0       	rcall	.+82     	; 0x11b4 <__divsf3_pse+0x92>
    1162:	66 0f       	add	r22, r22
    1164:	77 1f       	adc	r23, r23
    1166:	88 1f       	adc	r24, r24
    1168:	bb 1f       	adc	r27, r27
    116a:	26 17       	cp	r18, r22
    116c:	37 07       	cpc	r19, r23
    116e:	48 07       	cpc	r20, r24
    1170:	ab 07       	cpc	r26, r27
    1172:	b0 e8       	ldi	r27, 0x80	; 128
    1174:	09 f0       	breq	.+2      	; 0x1178 <__divsf3_pse+0x56>
    1176:	bb 0b       	sbc	r27, r27
    1178:	80 2d       	mov	r24, r0
    117a:	bf 01       	movw	r22, r30
    117c:	ff 27       	eor	r31, r31
    117e:	93 58       	subi	r25, 0x83	; 131
    1180:	5f 4f       	sbci	r21, 0xFF	; 255
    1182:	3a f0       	brmi	.+14     	; 0x1192 <__divsf3_pse+0x70>
    1184:	9e 3f       	cpi	r25, 0xFE	; 254
    1186:	51 05       	cpc	r21, r1
    1188:	78 f0       	brcs	.+30     	; 0x11a8 <__divsf3_pse+0x86>
    118a:	0c 94 96 0f 	jmp	0x1f2c	; 0x1f2c <__fp_inf>
    118e:	0c 94 89 0f 	jmp	0x1f12	; 0x1f12 <__fp_szero>
    1192:	5f 3f       	cpi	r21, 0xFF	; 255
    1194:	e4 f3       	brlt	.-8      	; 0x118e <__divsf3_pse+0x6c>
    1196:	98 3e       	cpi	r25, 0xE8	; 232
    1198:	d4 f3       	brlt	.-12     	; 0x118e <__divsf3_pse+0x6c>
    119a:	86 95       	lsr	r24
    119c:	77 95       	ror	r23
    119e:	67 95       	ror	r22
    11a0:	b7 95       	ror	r27
    11a2:	f7 95       	ror	r31
    11a4:	9f 5f       	subi	r25, 0xFF	; 255
    11a6:	c9 f7       	brne	.-14     	; 0x119a <__divsf3_pse+0x78>
    11a8:	88 0f       	add	r24, r24
    11aa:	91 1d       	adc	r25, r1
    11ac:	96 95       	lsr	r25
    11ae:	87 95       	ror	r24
    11b0:	97 f9       	bld	r25, 7
    11b2:	08 95       	ret
    11b4:	e1 e0       	ldi	r30, 0x01	; 1
    11b6:	66 0f       	add	r22, r22
    11b8:	77 1f       	adc	r23, r23
    11ba:	88 1f       	adc	r24, r24
    11bc:	bb 1f       	adc	r27, r27
    11be:	62 17       	cp	r22, r18
    11c0:	73 07       	cpc	r23, r19
    11c2:	84 07       	cpc	r24, r20
    11c4:	ba 07       	cpc	r27, r26
    11c6:	20 f0       	brcs	.+8      	; 0x11d0 <__divsf3_pse+0xae>
    11c8:	62 1b       	sub	r22, r18
    11ca:	73 0b       	sbc	r23, r19
    11cc:	84 0b       	sbc	r24, r20
    11ce:	ba 0b       	sbc	r27, r26
    11d0:	ee 1f       	adc	r30, r30
    11d2:	88 f7       	brcc	.-30     	; 0x11b6 <__divsf3_pse+0x94>
    11d4:	e0 95       	com	r30
    11d6:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000019b4 <__fixunssfsi>:
    19b4:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <__fp_splitA>
    19b8:	88 f0       	brcs	.+34     	; 0x19dc <__fixunssfsi+0x28>
    19ba:	9f 57       	subi	r25, 0x7F	; 127
    19bc:	98 f0       	brcs	.+38     	; 0x19e4 <__fixunssfsi+0x30>
    19be:	b9 2f       	mov	r27, r25
    19c0:	99 27       	eor	r25, r25
    19c2:	b7 51       	subi	r27, 0x17	; 23
    19c4:	b0 f0       	brcs	.+44     	; 0x19f2 <__fixunssfsi+0x3e>
    19c6:	e1 f0       	breq	.+56     	; 0x1a00 <__fixunssfsi+0x4c>
    19c8:	66 0f       	add	r22, r22
    19ca:	77 1f       	adc	r23, r23
    19cc:	88 1f       	adc	r24, r24
    19ce:	99 1f       	adc	r25, r25
    19d0:	1a f0       	brmi	.+6      	; 0x19d8 <__fixunssfsi+0x24>
    19d2:	ba 95       	dec	r27
    19d4:	c9 f7       	brne	.-14     	; 0x19c8 <__fixunssfsi+0x14>
    19d6:	14 c0       	rjmp	.+40     	; 0x1a00 <__fixunssfsi+0x4c>
    19d8:	b1 30       	cpi	r27, 0x01	; 1
    19da:	91 f0       	breq	.+36     	; 0x1a00 <__fixunssfsi+0x4c>
    19dc:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__fp_zero>
    19e0:	b1 e0       	ldi	r27, 0x01	; 1
    19e2:	08 95       	ret
    19e4:	0c 94 88 0f 	jmp	0x1f10	; 0x1f10 <__fp_zero>
    19e8:	67 2f       	mov	r22, r23
    19ea:	78 2f       	mov	r23, r24
    19ec:	88 27       	eor	r24, r24
    19ee:	b8 5f       	subi	r27, 0xF8	; 248
    19f0:	39 f0       	breq	.+14     	; 0x1a00 <__fixunssfsi+0x4c>
    19f2:	b9 3f       	cpi	r27, 0xF9	; 249
    19f4:	cc f3       	brlt	.-14     	; 0x19e8 <__fixunssfsi+0x34>
    19f6:	86 95       	lsr	r24
    19f8:	77 95       	ror	r23
    19fa:	67 95       	ror	r22
    19fc:	b3 95       	inc	r27
    19fe:	d9 f7       	brne	.-10     	; 0x19f6 <__fixunssfsi+0x42>
    1a00:	3e f4       	brtc	.+14     	; 0x1a10 <__fixunssfsi+0x5c>
    1a02:	90 95       	com	r25
    1a04:	80 95       	com	r24
    1a06:	70 95       	com	r23
    1a08:	61 95       	neg	r22
    1a0a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a0c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a0e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a10:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000017ec <__floatunsisf>:
    17ec:	e8 94       	clt
    17ee:	09 c0       	rjmp	.+18     	; 0x1802 <__floatsisf+0x12>

000017f0 <__floatsisf>:
    17f0:	97 fb       	bst	r25, 7
    17f2:	3e f4       	brtc	.+14     	; 0x1802 <__floatsisf+0x12>
    17f4:	90 95       	com	r25
    17f6:	80 95       	com	r24
    17f8:	70 95       	com	r23
    17fa:	61 95       	neg	r22
    17fc:	7f 4f       	sbci	r23, 0xFF	; 255
    17fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1800:	9f 4f       	sbci	r25, 0xFF	; 255
    1802:	99 23       	and	r25, r25
    1804:	a9 f0       	breq	.+42     	; 0x1830 <__floatsisf+0x40>
    1806:	f9 2f       	mov	r31, r25
    1808:	96 e9       	ldi	r25, 0x96	; 150
    180a:	bb 27       	eor	r27, r27
    180c:	93 95       	inc	r25
    180e:	f6 95       	lsr	r31
    1810:	87 95       	ror	r24
    1812:	77 95       	ror	r23
    1814:	67 95       	ror	r22
    1816:	b7 95       	ror	r27
    1818:	f1 11       	cpse	r31, r1
    181a:	f8 cf       	rjmp	.-16     	; 0x180c <__floatsisf+0x1c>
    181c:	fa f4       	brpl	.+62     	; 0x185c <__floatsisf+0x6c>
    181e:	bb 0f       	add	r27, r27
    1820:	11 f4       	brne	.+4      	; 0x1826 <__floatsisf+0x36>
    1822:	60 ff       	sbrs	r22, 0
    1824:	1b c0       	rjmp	.+54     	; 0x185c <__floatsisf+0x6c>
    1826:	6f 5f       	subi	r22, 0xFF	; 255
    1828:	7f 4f       	sbci	r23, 0xFF	; 255
    182a:	8f 4f       	sbci	r24, 0xFF	; 255
    182c:	9f 4f       	sbci	r25, 0xFF	; 255
    182e:	16 c0       	rjmp	.+44     	; 0x185c <__floatsisf+0x6c>
    1830:	88 23       	and	r24, r24
    1832:	11 f0       	breq	.+4      	; 0x1838 <__floatsisf+0x48>
    1834:	96 e9       	ldi	r25, 0x96	; 150
    1836:	11 c0       	rjmp	.+34     	; 0x185a <__floatsisf+0x6a>
    1838:	77 23       	and	r23, r23
    183a:	21 f0       	breq	.+8      	; 0x1844 <__floatsisf+0x54>
    183c:	9e e8       	ldi	r25, 0x8E	; 142
    183e:	87 2f       	mov	r24, r23
    1840:	76 2f       	mov	r23, r22
    1842:	05 c0       	rjmp	.+10     	; 0x184e <__floatsisf+0x5e>
    1844:	66 23       	and	r22, r22
    1846:	71 f0       	breq	.+28     	; 0x1864 <__floatsisf+0x74>
    1848:	96 e8       	ldi	r25, 0x86	; 134
    184a:	86 2f       	mov	r24, r22
    184c:	70 e0       	ldi	r23, 0x00	; 0
    184e:	60 e0       	ldi	r22, 0x00	; 0
    1850:	2a f0       	brmi	.+10     	; 0x185c <__floatsisf+0x6c>
    1852:	9a 95       	dec	r25
    1854:	66 0f       	add	r22, r22
    1856:	77 1f       	adc	r23, r23
    1858:	88 1f       	adc	r24, r24
    185a:	da f7       	brpl	.-10     	; 0x1852 <__floatsisf+0x62>
    185c:	88 0f       	add	r24, r24
    185e:	96 95       	lsr	r25
    1860:	87 95       	ror	r24
    1862:	97 f9       	bld	r25, 7
    1864:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001a60 <__fp_cmp>:
    1a60:	99 0f       	add	r25, r25
    1a62:	00 08       	sbc	r0, r0
    1a64:	55 0f       	add	r21, r21
    1a66:	aa 0b       	sbc	r26, r26
    1a68:	e0 e8       	ldi	r30, 0x80	; 128
    1a6a:	fe ef       	ldi	r31, 0xFE	; 254
    1a6c:	16 16       	cp	r1, r22
    1a6e:	17 06       	cpc	r1, r23
    1a70:	e8 07       	cpc	r30, r24
    1a72:	f9 07       	cpc	r31, r25
    1a74:	c0 f0       	brcs	.+48     	; 0x1aa6 <__fp_cmp+0x46>
    1a76:	12 16       	cp	r1, r18
    1a78:	13 06       	cpc	r1, r19
    1a7a:	e4 07       	cpc	r30, r20
    1a7c:	f5 07       	cpc	r31, r21
    1a7e:	98 f0       	brcs	.+38     	; 0x1aa6 <__fp_cmp+0x46>
    1a80:	62 1b       	sub	r22, r18
    1a82:	73 0b       	sbc	r23, r19
    1a84:	84 0b       	sbc	r24, r20
    1a86:	95 0b       	sbc	r25, r21
    1a88:	39 f4       	brne	.+14     	; 0x1a98 <__fp_cmp+0x38>
    1a8a:	0a 26       	eor	r0, r26
    1a8c:	61 f0       	breq	.+24     	; 0x1aa6 <__fp_cmp+0x46>
    1a8e:	23 2b       	or	r18, r19
    1a90:	24 2b       	or	r18, r20
    1a92:	25 2b       	or	r18, r21
    1a94:	21 f4       	brne	.+8      	; 0x1a9e <__fp_cmp+0x3e>
    1a96:	08 95       	ret
    1a98:	0a 26       	eor	r0, r26
    1a9a:	09 f4       	brne	.+2      	; 0x1a9e <__fp_cmp+0x3e>
    1a9c:	a1 40       	sbci	r26, 0x01	; 1
    1a9e:	a6 95       	lsr	r26
    1aa0:	8f ef       	ldi	r24, 0xFF	; 255
    1aa2:	81 1d       	adc	r24, r1
    1aa4:	81 1d       	adc	r24, r1
    1aa6:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f2c <__fp_inf>:
    1f2c:	97 f9       	bld	r25, 7
    1f2e:	9f 67       	ori	r25, 0x7F	; 127
    1f30:	80 e8       	ldi	r24, 0x80	; 128
    1f32:	70 e0       	ldi	r23, 0x00	; 0
    1f34:	60 e0       	ldi	r22, 0x00	; 0
    1f36:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f5c <__fp_nan>:
    1f5c:	9f ef       	ldi	r25, 0xFF	; 255
    1f5e:	80 ec       	ldi	r24, 0xC0	; 192
    1f60:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001ef4 <__fp_pscA>:
    1ef4:	00 24       	eor	r0, r0
    1ef6:	0a 94       	dec	r0
    1ef8:	16 16       	cp	r1, r22
    1efa:	17 06       	cpc	r1, r23
    1efc:	18 06       	cpc	r1, r24
    1efe:	09 06       	cpc	r0, r25
    1f00:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f02 <__fp_pscB>:
    1f02:	00 24       	eor	r0, r0
    1f04:	0a 94       	dec	r0
    1f06:	12 16       	cp	r1, r18
    1f08:	13 06       	cpc	r1, r19
    1f0a:	14 06       	cpc	r1, r20
    1f0c:	05 06       	cpc	r0, r21
    1f0e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001e32 <__fp_round>:
    1e32:	09 2e       	mov	r0, r25
    1e34:	03 94       	inc	r0
    1e36:	00 0c       	add	r0, r0
    1e38:	11 f4       	brne	.+4      	; 0x1e3e <__fp_round+0xc>
    1e3a:	88 23       	and	r24, r24
    1e3c:	52 f0       	brmi	.+20     	; 0x1e52 <__fp_round+0x20>
    1e3e:	bb 0f       	add	r27, r27
    1e40:	40 f4       	brcc	.+16     	; 0x1e52 <__fp_round+0x20>
    1e42:	bf 2b       	or	r27, r31
    1e44:	11 f4       	brne	.+4      	; 0x1e4a <__fp_round+0x18>
    1e46:	60 ff       	sbrs	r22, 0
    1e48:	04 c0       	rjmp	.+8      	; 0x1e52 <__fp_round+0x20>
    1e4a:	6f 5f       	subi	r22, 0xFF	; 255
    1e4c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e4e:	8f 4f       	sbci	r24, 0xFF	; 255
    1e50:	9f 4f       	sbci	r25, 0xFF	; 255
    1e52:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001b7a <__fp_split3>:
    1b7a:	57 fd       	sbrc	r21, 7
    1b7c:	90 58       	subi	r25, 0x80	; 128
    1b7e:	44 0f       	add	r20, r20
    1b80:	55 1f       	adc	r21, r21
    1b82:	59 f0       	breq	.+22     	; 0x1b9a <__fp_splitA+0x10>
    1b84:	5f 3f       	cpi	r21, 0xFF	; 255
    1b86:	71 f0       	breq	.+28     	; 0x1ba4 <__fp_splitA+0x1a>
    1b88:	47 95       	ror	r20

00001b8a <__fp_splitA>:
    1b8a:	88 0f       	add	r24, r24
    1b8c:	97 fb       	bst	r25, 7
    1b8e:	99 1f       	adc	r25, r25
    1b90:	61 f0       	breq	.+24     	; 0x1baa <__fp_splitA+0x20>
    1b92:	9f 3f       	cpi	r25, 0xFF	; 255
    1b94:	79 f0       	breq	.+30     	; 0x1bb4 <__fp_splitA+0x2a>
    1b96:	87 95       	ror	r24
    1b98:	08 95       	ret
    1b9a:	12 16       	cp	r1, r18
    1b9c:	13 06       	cpc	r1, r19
    1b9e:	14 06       	cpc	r1, r20
    1ba0:	55 1f       	adc	r21, r21
    1ba2:	f2 cf       	rjmp	.-28     	; 0x1b88 <__fp_split3+0xe>
    1ba4:	46 95       	lsr	r20
    1ba6:	f1 df       	rcall	.-30     	; 0x1b8a <__fp_splitA>
    1ba8:	08 c0       	rjmp	.+16     	; 0x1bba <__fp_splitA+0x30>
    1baa:	16 16       	cp	r1, r22
    1bac:	17 06       	cpc	r1, r23
    1bae:	18 06       	cpc	r1, r24
    1bb0:	99 1f       	adc	r25, r25
    1bb2:	f1 cf       	rjmp	.-30     	; 0x1b96 <__fp_splitA+0xc>
    1bb4:	86 95       	lsr	r24
    1bb6:	71 05       	cpc	r23, r1
    1bb8:	61 05       	cpc	r22, r1
    1bba:	08 94       	sec
    1bbc:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f10 <__fp_zero>:
    1f10:	e8 94       	clt

00001f12 <__fp_szero>:
    1f12:	bb 27       	eor	r27, r27
    1f14:	66 27       	eor	r22, r22
    1f16:	77 27       	eor	r23, r23
    1f18:	cb 01       	movw	r24, r22
    1f1a:	97 f9       	bld	r25, 7
    1f1c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f42 <__gesf2>:
    1f42:	0e 94 30 0d 	call	0x1a60	; 0x1a60 <__fp_cmp>
    1f46:	08 f4       	brcc	.+2      	; 0x1f4a <__gesf2+0x8>
    1f48:	8f ef       	ldi	r24, 0xFF	; 255
    1f4a:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f54 <__mulsf3>:
    1f54:	0e 94 59 09 	call	0x12b2	; 0x12b2 <__mulsf3x>
    1f58:	0c 94 19 0f 	jmp	0x1e32	; 0x1e32 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

000012b2 <__mulsf3x>:
    12b2:	0f c0       	rjmp	.+30     	; 0x12d2 <__mulsf3x+0x20>
    12b4:	0e 94 7a 0f 	call	0x1ef4	; 0x1ef4 <__fp_pscA>
    12b8:	38 f0       	brcs	.+14     	; 0x12c8 <__mulsf3x+0x16>
    12ba:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__fp_pscB>
    12be:	20 f0       	brcs	.+8      	; 0x12c8 <__mulsf3x+0x16>
    12c0:	95 23       	and	r25, r21
    12c2:	11 f0       	breq	.+4      	; 0x12c8 <__mulsf3x+0x16>
    12c4:	0c 94 96 0f 	jmp	0x1f2c	; 0x1f2c <__fp_inf>
    12c8:	0c 94 ae 0f 	jmp	0x1f5c	; 0x1f5c <__fp_nan>
    12cc:	11 24       	eor	r1, r1
    12ce:	0c 94 89 0f 	jmp	0x1f12	; 0x1f12 <__fp_szero>
    12d2:	0e 94 bd 0d 	call	0x1b7a	; 0x1b7a <__fp_split3>
    12d6:	70 f3       	brcs	.-36     	; 0x12b4 <__mulsf3x+0x2>

000012d8 <__mulsf3_pse>:
    12d8:	95 9f       	mul	r25, r21
    12da:	c1 f3       	breq	.-16     	; 0x12cc <__mulsf3x+0x1a>
    12dc:	95 0f       	add	r25, r21
    12de:	50 e0       	ldi	r21, 0x00	; 0
    12e0:	55 1f       	adc	r21, r21
    12e2:	62 9f       	mul	r22, r18
    12e4:	f0 01       	movw	r30, r0
    12e6:	72 9f       	mul	r23, r18
    12e8:	bb 27       	eor	r27, r27
    12ea:	f0 0d       	add	r31, r0
    12ec:	b1 1d       	adc	r27, r1
    12ee:	63 9f       	mul	r22, r19
    12f0:	aa 27       	eor	r26, r26
    12f2:	f0 0d       	add	r31, r0
    12f4:	b1 1d       	adc	r27, r1
    12f6:	aa 1f       	adc	r26, r26
    12f8:	64 9f       	mul	r22, r20
    12fa:	66 27       	eor	r22, r22
    12fc:	b0 0d       	add	r27, r0
    12fe:	a1 1d       	adc	r26, r1
    1300:	66 1f       	adc	r22, r22
    1302:	82 9f       	mul	r24, r18
    1304:	22 27       	eor	r18, r18
    1306:	b0 0d       	add	r27, r0
    1308:	a1 1d       	adc	r26, r1
    130a:	62 1f       	adc	r22, r18
    130c:	73 9f       	mul	r23, r19
    130e:	b0 0d       	add	r27, r0
    1310:	a1 1d       	adc	r26, r1
    1312:	62 1f       	adc	r22, r18
    1314:	83 9f       	mul	r24, r19
    1316:	a0 0d       	add	r26, r0
    1318:	61 1d       	adc	r22, r1
    131a:	22 1f       	adc	r18, r18
    131c:	74 9f       	mul	r23, r20
    131e:	33 27       	eor	r19, r19
    1320:	a0 0d       	add	r26, r0
    1322:	61 1d       	adc	r22, r1
    1324:	23 1f       	adc	r18, r19
    1326:	84 9f       	mul	r24, r20
    1328:	60 0d       	add	r22, r0
    132a:	21 1d       	adc	r18, r1
    132c:	82 2f       	mov	r24, r18
    132e:	76 2f       	mov	r23, r22
    1330:	6a 2f       	mov	r22, r26
    1332:	11 24       	eor	r1, r1
    1334:	9f 57       	subi	r25, 0x7F	; 127
    1336:	50 40       	sbci	r21, 0x00	; 0
    1338:	9a f0       	brmi	.+38     	; 0x1360 <__mulsf3_pse+0x88>
    133a:	f1 f0       	breq	.+60     	; 0x1378 <__mulsf3_pse+0xa0>
    133c:	88 23       	and	r24, r24
    133e:	4a f0       	brmi	.+18     	; 0x1352 <__mulsf3_pse+0x7a>
    1340:	ee 0f       	add	r30, r30
    1342:	ff 1f       	adc	r31, r31
    1344:	bb 1f       	adc	r27, r27
    1346:	66 1f       	adc	r22, r22
    1348:	77 1f       	adc	r23, r23
    134a:	88 1f       	adc	r24, r24
    134c:	91 50       	subi	r25, 0x01	; 1
    134e:	50 40       	sbci	r21, 0x00	; 0
    1350:	a9 f7       	brne	.-22     	; 0x133c <__mulsf3_pse+0x64>
    1352:	9e 3f       	cpi	r25, 0xFE	; 254
    1354:	51 05       	cpc	r21, r1
    1356:	80 f0       	brcs	.+32     	; 0x1378 <__mulsf3_pse+0xa0>
    1358:	0c 94 96 0f 	jmp	0x1f2c	; 0x1f2c <__fp_inf>
    135c:	0c 94 89 0f 	jmp	0x1f12	; 0x1f12 <__fp_szero>
    1360:	5f 3f       	cpi	r21, 0xFF	; 255
    1362:	e4 f3       	brlt	.-8      	; 0x135c <__mulsf3_pse+0x84>
    1364:	98 3e       	cpi	r25, 0xE8	; 232
    1366:	d4 f3       	brlt	.-12     	; 0x135c <__mulsf3_pse+0x84>
    1368:	86 95       	lsr	r24
    136a:	77 95       	ror	r23
    136c:	67 95       	ror	r22
    136e:	b7 95       	ror	r27
    1370:	f7 95       	ror	r31
    1372:	e7 95       	ror	r30
    1374:	9f 5f       	subi	r25, 0xFF	; 255
    1376:	c1 f7       	brne	.-16     	; 0x1368 <__mulsf3_pse+0x90>
    1378:	fe 2b       	or	r31, r30
    137a:	88 0f       	add	r24, r24
    137c:	91 1d       	adc	r25, r1
    137e:	96 95       	lsr	r25
    1380:	87 95       	ror	r24
    1382:	97 f9       	bld	r25, 7
    1384:	08 95       	ret

Disassembly of section .text.avrlibc:

000001ec <vfprintf>:
 1ec:	a4 e1       	ldi	r26, 0x14	; 20
 1ee:	b0 e0       	ldi	r27, 0x00	; 0
 1f0:	ec ef       	ldi	r30, 0xFC	; 252
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	0c 94 3e 0e 	jmp	0x1c7c	; 0x1c7c <__prologue_saves__>
 1f8:	6c 01       	movw	r12, r24
 1fa:	1a 01       	movw	r2, r20
 1fc:	46 2e       	mov	r4, r22
 1fe:	59 01       	movw	r10, r18
 200:	fc 01       	movw	r30, r24
 202:	10 86       	std	Z+8, r1	; 0x08
 204:	17 82       	std	Z+7, r1	; 0x07
 206:	84 81       	ldd	r24, Z+4	; 0x04
 208:	81 ff       	sbrs	r24, 1
 20a:	62 c3       	rjmp	.+1732   	; 0x8d0 <__DATA_REGION_LENGTH__+0xd0>
 20c:	ce 01       	movw	r24, r28
 20e:	01 96       	adiw	r24, 0x01	; 1
 210:	9d 87       	std	Y+13, r25	; 0x0d
 212:	8c 87       	std	Y+12, r24	; 0x0c
 214:	a0 e8       	ldi	r26, 0x80	; 128
 216:	8a 8b       	std	Y+18, r24	; 0x12
 218:	9b 8b       	std	Y+19, r25	; 0x13
 21a:	ac 8b       	std	Y+20, r26	; 0x14
 21c:	f1 01       	movw	r30, r2
 21e:	84 91       	lpm	r24, Z
 220:	47 fc       	sbrc	r4, 7
 222:	80 81       	ld	r24, Z
 224:	88 23       	and	r24, r24
 226:	09 f4       	brne	.+2      	; 0x22a <vfprintf+0x3e>
 228:	4f c3       	rjmp	.+1694   	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 22a:	44 2d       	mov	r20, r4
 22c:	91 01       	movw	r18, r2
 22e:	2f 5f       	subi	r18, 0xFF	; 255
 230:	3f 4f       	sbci	r19, 0xFF	; 255
 232:	4f 4f       	sbci	r20, 0xFF	; 255
 234:	85 32       	cpi	r24, 0x25	; 37
 236:	19 f0       	breq	.+6      	; 0x23e <vfprintf+0x52>
 238:	19 01       	movw	r2, r18
 23a:	44 2e       	mov	r4, r20
 23c:	0a c0       	rjmp	.+20     	; 0x252 <vfprintf+0x66>
 23e:	f9 01       	movw	r30, r18
 240:	84 91       	lpm	r24, Z
 242:	47 fd       	sbrc	r20, 7
 244:	80 81       	ld	r24, Z
 246:	92 e0       	ldi	r25, 0x02	; 2
 248:	29 0e       	add	r2, r25
 24a:	31 1c       	adc	r3, r1
 24c:	41 1c       	adc	r4, r1
 24e:	85 32       	cpi	r24, 0x25	; 37
 250:	49 f4       	brne	.+18     	; 0x264 <vfprintf+0x78>
 252:	b6 01       	movw	r22, r12
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 25a:	bf 86       	std	Y+15, r11	; 0x0f
 25c:	ae 86       	std	Y+14, r10	; 0x0e
 25e:	ae 84       	ldd	r10, Y+14	; 0x0e
 260:	bf 84       	ldd	r11, Y+15	; 0x0f
 262:	dc cf       	rjmp	.-72     	; 0x21c <vfprintf+0x30>
 264:	10 e0       	ldi	r17, 0x00	; 0
 266:	f1 2c       	mov	r15, r1
 268:	00 e0       	ldi	r16, 0x00	; 0
 26a:	00 32       	cpi	r16, 0x20	; 32
 26c:	a0 f4       	brcc	.+40     	; 0x296 <vfprintf+0xaa>
 26e:	8b 32       	cpi	r24, 0x2B	; 43
 270:	69 f0       	breq	.+26     	; 0x28c <vfprintf+0xa0>
 272:	30 f4       	brcc	.+12     	; 0x280 <vfprintf+0x94>
 274:	80 32       	cpi	r24, 0x20	; 32
 276:	59 f0       	breq	.+22     	; 0x28e <vfprintf+0xa2>
 278:	83 32       	cpi	r24, 0x23	; 35
 27a:	69 f4       	brne	.+26     	; 0x296 <vfprintf+0xaa>
 27c:	00 61       	ori	r16, 0x10	; 16
 27e:	2c c0       	rjmp	.+88     	; 0x2d8 <vfprintf+0xec>
 280:	8d 32       	cpi	r24, 0x2D	; 45
 282:	39 f0       	breq	.+14     	; 0x292 <vfprintf+0xa6>
 284:	80 33       	cpi	r24, 0x30	; 48
 286:	39 f4       	brne	.+14     	; 0x296 <vfprintf+0xaa>
 288:	01 60       	ori	r16, 0x01	; 1
 28a:	26 c0       	rjmp	.+76     	; 0x2d8 <vfprintf+0xec>
 28c:	02 60       	ori	r16, 0x02	; 2
 28e:	04 60       	ori	r16, 0x04	; 4
 290:	23 c0       	rjmp	.+70     	; 0x2d8 <vfprintf+0xec>
 292:	08 60       	ori	r16, 0x08	; 8
 294:	21 c0       	rjmp	.+66     	; 0x2d8 <vfprintf+0xec>
 296:	07 fd       	sbrc	r16, 7
 298:	29 c0       	rjmp	.+82     	; 0x2ec <vfprintf+0x100>
 29a:	90 ed       	ldi	r25, 0xD0	; 208
 29c:	98 0f       	add	r25, r24
 29e:	9a 30       	cpi	r25, 0x0A	; 10
 2a0:	78 f4       	brcc	.+30     	; 0x2c0 <vfprintf+0xd4>
 2a2:	06 ff       	sbrs	r16, 6
 2a4:	06 c0       	rjmp	.+12     	; 0x2b2 <vfprintf+0xc6>
 2a6:	aa e0       	ldi	r26, 0x0A	; 10
 2a8:	1a 9f       	mul	r17, r26
 2aa:	90 0d       	add	r25, r0
 2ac:	11 24       	eor	r1, r1
 2ae:	19 2f       	mov	r17, r25
 2b0:	13 c0       	rjmp	.+38     	; 0x2d8 <vfprintf+0xec>
 2b2:	ea e0       	ldi	r30, 0x0A	; 10
 2b4:	fe 9e       	mul	r15, r30
 2b6:	90 0d       	add	r25, r0
 2b8:	11 24       	eor	r1, r1
 2ba:	f9 2e       	mov	r15, r25
 2bc:	00 62       	ori	r16, 0x20	; 32
 2be:	0c c0       	rjmp	.+24     	; 0x2d8 <vfprintf+0xec>
 2c0:	8e 32       	cpi	r24, 0x2E	; 46
 2c2:	21 f4       	brne	.+8      	; 0x2cc <vfprintf+0xe0>
 2c4:	06 fd       	sbrc	r16, 6
 2c6:	00 c3       	rjmp	.+1536   	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 2c8:	00 64       	ori	r16, 0x40	; 64
 2ca:	06 c0       	rjmp	.+12     	; 0x2d8 <vfprintf+0xec>
 2cc:	8c 36       	cpi	r24, 0x6C	; 108
 2ce:	11 f4       	brne	.+4      	; 0x2d4 <vfprintf+0xe8>
 2d0:	00 68       	ori	r16, 0x80	; 128
 2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <vfprintf+0xec>
 2d4:	88 36       	cpi	r24, 0x68	; 104
 2d6:	51 f4       	brne	.+20     	; 0x2ec <vfprintf+0x100>
 2d8:	f1 01       	movw	r30, r2
 2da:	84 91       	lpm	r24, Z
 2dc:	47 fc       	sbrc	r4, 7
 2de:	80 81       	ld	r24, Z
 2e0:	ff ef       	ldi	r31, 0xFF	; 255
 2e2:	2f 1a       	sub	r2, r31
 2e4:	3f 0a       	sbc	r3, r31
 2e6:	4f 0a       	sbc	r4, r31
 2e8:	81 11       	cpse	r24, r1
 2ea:	bf cf       	rjmp	.-130    	; 0x26a <vfprintf+0x7e>
 2ec:	9b eb       	ldi	r25, 0xBB	; 187
 2ee:	98 0f       	add	r25, r24
 2f0:	93 30       	cpi	r25, 0x03	; 3
 2f2:	18 f4       	brcc	.+6      	; 0x2fa <vfprintf+0x10e>
 2f4:	00 61       	ori	r16, 0x10	; 16
 2f6:	80 5e       	subi	r24, 0xE0	; 224
 2f8:	06 c0       	rjmp	.+12     	; 0x306 <vfprintf+0x11a>
 2fa:	9b e9       	ldi	r25, 0x9B	; 155
 2fc:	98 0f       	add	r25, r24
 2fe:	93 30       	cpi	r25, 0x03	; 3
 300:	08 f0       	brcs	.+2      	; 0x304 <vfprintf+0x118>
 302:	66 c1       	rjmp	.+716    	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 304:	0f 7e       	andi	r16, 0xEF	; 239
 306:	06 ff       	sbrs	r16, 6
 308:	16 e0       	ldi	r17, 0x06	; 6
 30a:	0f 73       	andi	r16, 0x3F	; 63
 30c:	70 2e       	mov	r7, r16
 30e:	85 36       	cpi	r24, 0x65	; 101
 310:	21 f4       	brne	.+8      	; 0x31a <vfprintf+0x12e>
 312:	20 2f       	mov	r18, r16
 314:	20 64       	ori	r18, 0x40	; 64
 316:	72 2e       	mov	r7, r18
 318:	08 c0       	rjmp	.+16     	; 0x32a <vfprintf+0x13e>
 31a:	86 36       	cpi	r24, 0x66	; 102
 31c:	21 f4       	brne	.+8      	; 0x326 <vfprintf+0x13a>
 31e:	80 2f       	mov	r24, r16
 320:	80 68       	ori	r24, 0x80	; 128
 322:	78 2e       	mov	r7, r24
 324:	02 c0       	rjmp	.+4      	; 0x32a <vfprintf+0x13e>
 326:	11 11       	cpse	r17, r1
 328:	11 50       	subi	r17, 0x01	; 1
 32a:	77 fe       	sbrs	r7, 7
 32c:	07 c0       	rjmp	.+14     	; 0x33c <vfprintf+0x150>
 32e:	1c 33       	cpi	r17, 0x3C	; 60
 330:	50 f4       	brcc	.+20     	; 0x346 <vfprintf+0x15a>
 332:	ee 24       	eor	r14, r14
 334:	e3 94       	inc	r14
 336:	e1 0e       	add	r14, r17
 338:	27 e0       	ldi	r18, 0x07	; 7
 33a:	0b c0       	rjmp	.+22     	; 0x352 <vfprintf+0x166>
 33c:	18 30       	cpi	r17, 0x08	; 8
 33e:	38 f0       	brcs	.+14     	; 0x34e <vfprintf+0x162>
 340:	27 e0       	ldi	r18, 0x07	; 7
 342:	17 e0       	ldi	r17, 0x07	; 7
 344:	05 c0       	rjmp	.+10     	; 0x350 <vfprintf+0x164>
 346:	27 e0       	ldi	r18, 0x07	; 7
 348:	6c e3       	ldi	r22, 0x3C	; 60
 34a:	e6 2e       	mov	r14, r22
 34c:	02 c0       	rjmp	.+4      	; 0x352 <vfprintf+0x166>
 34e:	21 2f       	mov	r18, r17
 350:	e1 2c       	mov	r14, r1
 352:	f5 01       	movw	r30, r10
 354:	34 96       	adiw	r30, 0x04	; 4
 356:	ff 87       	std	Y+15, r31	; 0x0f
 358:	ee 87       	std	Y+14, r30	; 0x0e
 35a:	f5 01       	movw	r30, r10
 35c:	60 81       	ld	r22, Z
 35e:	71 81       	ldd	r23, Z+1	; 0x01
 360:	82 81       	ldd	r24, Z+2	; 0x02
 362:	93 81       	ldd	r25, Z+3	; 0x03
 364:	0e 2d       	mov	r16, r14
 366:	ae 01       	movw	r20, r28
 368:	4f 5f       	subi	r20, 0xFF	; 255
 36a:	5f 4f       	sbci	r21, 0xFF	; 255
 36c:	0e 94 07 07 	call	0xe0e	; 0xe0e <__ftoa_engine>
 370:	5c 01       	movw	r10, r24
 372:	59 80       	ldd	r5, Y+1	; 0x01
 374:	50 fe       	sbrs	r5, 0
 376:	02 c0       	rjmp	.+4      	; 0x37c <vfprintf+0x190>
 378:	53 fe       	sbrs	r5, 3
 37a:	06 c0       	rjmp	.+12     	; 0x388 <vfprintf+0x19c>
 37c:	71 fc       	sbrc	r7, 1
 37e:	06 c0       	rjmp	.+12     	; 0x38c <vfprintf+0x1a0>
 380:	72 fe       	sbrs	r7, 2
 382:	06 c0       	rjmp	.+12     	; 0x390 <vfprintf+0x1a4>
 384:	00 e2       	ldi	r16, 0x20	; 32
 386:	05 c0       	rjmp	.+10     	; 0x392 <vfprintf+0x1a6>
 388:	0d e2       	ldi	r16, 0x2D	; 45
 38a:	03 c0       	rjmp	.+6      	; 0x392 <vfprintf+0x1a6>
 38c:	0b e2       	ldi	r16, 0x2B	; 43
 38e:	01 c0       	rjmp	.+2      	; 0x392 <vfprintf+0x1a6>
 390:	00 e0       	ldi	r16, 0x00	; 0
 392:	85 2d       	mov	r24, r5
 394:	8c 70       	andi	r24, 0x0C	; 12
 396:	19 f0       	breq	.+6      	; 0x39e <vfprintf+0x1b2>
 398:	01 11       	cpse	r16, r1
 39a:	73 c2       	rjmp	.+1254   	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 39c:	be c2       	rjmp	.+1404   	; 0x91a <__stack+0x1b>
 39e:	77 fe       	sbrs	r7, 7
 3a0:	0f c0       	rjmp	.+30     	; 0x3c0 <vfprintf+0x1d4>
 3a2:	ea 0c       	add	r14, r10
 3a4:	54 fe       	sbrs	r5, 4
 3a6:	04 c0       	rjmp	.+8      	; 0x3b0 <vfprintf+0x1c4>
 3a8:	8a 81       	ldd	r24, Y+2	; 0x02
 3aa:	81 33       	cpi	r24, 0x31	; 49
 3ac:	09 f4       	brne	.+2      	; 0x3b0 <vfprintf+0x1c4>
 3ae:	ea 94       	dec	r14
 3b0:	1e 14       	cp	r1, r14
 3b2:	74 f5       	brge	.+92     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3b4:	28 e0       	ldi	r18, 0x08	; 8
 3b6:	2e 15       	cp	r18, r14
 3b8:	78 f5       	brcc	.+94     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 3ba:	38 e0       	ldi	r19, 0x08	; 8
 3bc:	e3 2e       	mov	r14, r19
 3be:	2c c0       	rjmp	.+88     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 3c0:	76 fc       	sbrc	r7, 6
 3c2:	2a c0       	rjmp	.+84     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 3c4:	81 2f       	mov	r24, r17
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	8a 15       	cp	r24, r10
 3ca:	9b 05       	cpc	r25, r11
 3cc:	9c f0       	brlt	.+38     	; 0x3f4 <vfprintf+0x208>
 3ce:	8c ef       	ldi	r24, 0xFC	; 252
 3d0:	a8 16       	cp	r10, r24
 3d2:	8f ef       	ldi	r24, 0xFF	; 255
 3d4:	b8 06       	cpc	r11, r24
 3d6:	74 f0       	brlt	.+28     	; 0x3f4 <vfprintf+0x208>
 3d8:	97 2d       	mov	r25, r7
 3da:	90 68       	ori	r25, 0x80	; 128
 3dc:	79 2e       	mov	r7, r25
 3de:	0a c0       	rjmp	.+20     	; 0x3f4 <vfprintf+0x208>
 3e0:	e2 e0       	ldi	r30, 0x02	; 2
 3e2:	f0 e0       	ldi	r31, 0x00	; 0
 3e4:	ec 0f       	add	r30, r28
 3e6:	fd 1f       	adc	r31, r29
 3e8:	e1 0f       	add	r30, r17
 3ea:	f1 1d       	adc	r31, r1
 3ec:	80 81       	ld	r24, Z
 3ee:	80 33       	cpi	r24, 0x30	; 48
 3f0:	19 f4       	brne	.+6      	; 0x3f8 <vfprintf+0x20c>
 3f2:	11 50       	subi	r17, 0x01	; 1
 3f4:	11 11       	cpse	r17, r1
 3f6:	f4 cf       	rjmp	.-24     	; 0x3e0 <vfprintf+0x1f4>
 3f8:	77 fe       	sbrs	r7, 7
 3fa:	0e c0       	rjmp	.+28     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 3fc:	ee 24       	eor	r14, r14
 3fe:	e3 94       	inc	r14
 400:	e1 0e       	add	r14, r17
 402:	81 2f       	mov	r24, r17
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	a8 16       	cp	r10, r24
 408:	b9 06       	cpc	r11, r25
 40a:	2c f4       	brge	.+10     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 40c:	1a 19       	sub	r17, r10
 40e:	04 c0       	rjmp	.+8      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 410:	ee 24       	eor	r14, r14
 412:	e3 94       	inc	r14
 414:	01 c0       	rjmp	.+2      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 416:	10 e0       	ldi	r17, 0x00	; 0
 418:	77 fe       	sbrs	r7, 7
 41a:	06 c0       	rjmp	.+12     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 41c:	1a 14       	cp	r1, r10
 41e:	1b 04       	cpc	r1, r11
 420:	34 f4       	brge	.+12     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 422:	c5 01       	movw	r24, r10
 424:	01 96       	adiw	r24, 0x01	; 1
 426:	05 c0       	rjmp	.+10     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 428:	85 e0       	ldi	r24, 0x05	; 5
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	02 c0       	rjmp	.+4      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	01 11       	cpse	r16, r1
 434:	01 96       	adiw	r24, 0x01	; 1
 436:	11 23       	and	r17, r17
 438:	31 f0       	breq	.+12     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 43a:	21 2f       	mov	r18, r17
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	2f 5f       	subi	r18, 0xFF	; 255
 440:	3f 4f       	sbci	r19, 0xFF	; 255
 442:	82 0f       	add	r24, r18
 444:	93 1f       	adc	r25, r19
 446:	2f 2d       	mov	r18, r15
 448:	30 e0       	ldi	r19, 0x00	; 0
 44a:	82 17       	cp	r24, r18
 44c:	93 07       	cpc	r25, r19
 44e:	14 f4       	brge	.+4      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 450:	f8 1a       	sub	r15, r24
 452:	01 c0       	rjmp	.+2      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 454:	f1 2c       	mov	r15, r1
 456:	87 2d       	mov	r24, r7
 458:	89 70       	andi	r24, 0x09	; 9
 45a:	49 f4       	brne	.+18     	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 45c:	ff 20       	and	r15, r15
 45e:	39 f0       	breq	.+14     	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 460:	b6 01       	movw	r22, r12
 462:	80 e2       	ldi	r24, 0x20	; 32
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 46a:	fa 94       	dec	r15
 46c:	f7 cf       	rjmp	.-18     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 46e:	00 23       	and	r16, r16
 470:	29 f0       	breq	.+10     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 472:	b6 01       	movw	r22, r12
 474:	80 2f       	mov	r24, r16
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 47c:	73 fc       	sbrc	r7, 3
 47e:	09 c0       	rjmp	.+18     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 480:	ff 20       	and	r15, r15
 482:	39 f0       	breq	.+14     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 484:	b6 01       	movw	r22, r12
 486:	80 e3       	ldi	r24, 0x30	; 48
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 48e:	fa 94       	dec	r15
 490:	f7 cf       	rjmp	.-18     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 492:	77 fe       	sbrs	r7, 7
 494:	49 c0       	rjmp	.+146    	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 496:	35 01       	movw	r6, r10
 498:	b7 fe       	sbrs	r11, 7
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 49c:	61 2c       	mov	r6, r1
 49e:	71 2c       	mov	r7, r1
 4a0:	c5 01       	movw	r24, r10
 4a2:	86 19       	sub	r24, r6
 4a4:	97 09       	sbc	r25, r7
 4a6:	88 24       	eor	r8, r8
 4a8:	83 94       	inc	r8
 4aa:	91 2c       	mov	r9, r1
 4ac:	8c 0e       	add	r8, r28
 4ae:	9d 1e       	adc	r9, r29
 4b0:	88 0e       	add	r8, r24
 4b2:	99 1e       	adc	r9, r25
 4b4:	f5 01       	movw	r30, r10
 4b6:	ee 19       	sub	r30, r14
 4b8:	f1 09       	sbc	r31, r1
 4ba:	f9 8b       	std	Y+17, r31	; 0x11
 4bc:	e8 8b       	std	Y+16, r30	; 0x10
 4be:	01 2f       	mov	r16, r17
 4c0:	10 e0       	ldi	r17, 0x00	; 0
 4c2:	11 95       	neg	r17
 4c4:	01 95       	neg	r16
 4c6:	11 09       	sbc	r17, r1
 4c8:	ff ef       	ldi	r31, 0xFF	; 255
 4ca:	6f 16       	cp	r6, r31
 4cc:	7f 06       	cpc	r7, r31
 4ce:	29 f4       	brne	.+10     	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4d0:	b6 01       	movw	r22, r12
 4d2:	8e e2       	ldi	r24, 0x2E	; 46
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 4da:	a6 14       	cp	r10, r6
 4dc:	b7 04       	cpc	r11, r7
 4de:	44 f0       	brlt	.+16     	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 4e0:	88 89       	ldd	r24, Y+16	; 0x10
 4e2:	99 89       	ldd	r25, Y+17	; 0x11
 4e4:	86 15       	cp	r24, r6
 4e6:	97 05       	cpc	r25, r7
 4e8:	1c f4       	brge	.+6      	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 4ea:	f4 01       	movw	r30, r8
 4ec:	81 81       	ldd	r24, Z+1	; 0x01
 4ee:	01 c0       	rjmp	.+2      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 4f0:	80 e3       	ldi	r24, 0x30	; 48
 4f2:	f1 e0       	ldi	r31, 0x01	; 1
 4f4:	6f 1a       	sub	r6, r31
 4f6:	71 08       	sbc	r7, r1
 4f8:	2f ef       	ldi	r18, 0xFF	; 255
 4fa:	82 1a       	sub	r8, r18
 4fc:	92 0a       	sbc	r9, r18
 4fe:	60 16       	cp	r6, r16
 500:	71 06       	cpc	r7, r17
 502:	2c f0       	brlt	.+10     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 504:	b6 01       	movw	r22, r12
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 50c:	dd cf       	rjmp	.-70     	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 50e:	a6 14       	cp	r10, r6
 510:	b7 04       	cpc	r11, r7
 512:	39 f4       	brne	.+14     	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
 514:	9a 81       	ldd	r25, Y+2	; 0x02
 516:	96 33       	cpi	r25, 0x36	; 54
 518:	18 f4       	brcc	.+6      	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
 51a:	95 33       	cpi	r25, 0x35	; 53
 51c:	11 f4       	brne	.+4      	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
 51e:	54 fe       	sbrs	r5, 4
 520:	81 e3       	ldi	r24, 0x31	; 49
 522:	b6 01       	movw	r22, r12
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	51 c0       	rjmp	.+162    	; 0x5ca <__EEPROM_REGION_LENGTH__+0x1ca>
 528:	8a 81       	ldd	r24, Y+2	; 0x02
 52a:	81 33       	cpi	r24, 0x31	; 49
 52c:	19 f0       	breq	.+6      	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 52e:	95 2d       	mov	r25, r5
 530:	9f 7e       	andi	r25, 0xEF	; 239
 532:	59 2e       	mov	r5, r25
 534:	b6 01       	movw	r22, r12
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 53c:	11 11       	cpse	r17, r1
 53e:	05 c0       	rjmp	.+10     	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 540:	74 fc       	sbrc	r7, 4
 542:	1c c0       	rjmp	.+56     	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
 544:	85 e6       	ldi	r24, 0x65	; 101
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	1b c0       	rjmp	.+54     	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
 54a:	b6 01       	movw	r22, r12
 54c:	8e e2       	ldi	r24, 0x2E	; 46
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 554:	02 e0       	ldi	r16, 0x02	; 2
 556:	01 0f       	add	r16, r17
 558:	82 e0       	ldi	r24, 0x02	; 2
 55a:	11 e0       	ldi	r17, 0x01	; 1
 55c:	18 0f       	add	r17, r24
 55e:	e1 e0       	ldi	r30, 0x01	; 1
 560:	f0 e0       	ldi	r31, 0x00	; 0
 562:	ec 0f       	add	r30, r28
 564:	fd 1f       	adc	r31, r29
 566:	e8 0f       	add	r30, r24
 568:	f1 1d       	adc	r31, r1
 56a:	80 81       	ld	r24, Z
 56c:	b6 01       	movw	r22, r12
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 574:	81 2f       	mov	r24, r17
 576:	10 13       	cpse	r17, r16
 578:	f0 cf       	rjmp	.-32     	; 0x55a <__EEPROM_REGION_LENGTH__+0x15a>
 57a:	e2 cf       	rjmp	.-60     	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 57c:	85 e4       	ldi	r24, 0x45	; 69
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	b6 01       	movw	r22, r12
 582:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 586:	b7 fc       	sbrc	r11, 7
 588:	05 c0       	rjmp	.+10     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
 58a:	a1 14       	cp	r10, r1
 58c:	b1 04       	cpc	r11, r1
 58e:	39 f4       	brne	.+14     	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
 590:	54 fe       	sbrs	r5, 4
 592:	05 c0       	rjmp	.+10     	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
 594:	b1 94       	neg	r11
 596:	a1 94       	neg	r10
 598:	b1 08       	sbc	r11, r1
 59a:	8d e2       	ldi	r24, 0x2D	; 45
 59c:	01 c0       	rjmp	.+2      	; 0x5a0 <__EEPROM_REGION_LENGTH__+0x1a0>
 59e:	8b e2       	ldi	r24, 0x2B	; 43
 5a0:	b6 01       	movw	r22, r12
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 5a8:	80 e3       	ldi	r24, 0x30	; 48
 5aa:	ea e0       	ldi	r30, 0x0A	; 10
 5ac:	ae 16       	cp	r10, r30
 5ae:	b1 04       	cpc	r11, r1
 5b0:	2c f0       	brlt	.+10     	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
 5b2:	8f 5f       	subi	r24, 0xFF	; 255
 5b4:	aa e0       	ldi	r26, 0x0A	; 10
 5b6:	aa 1a       	sub	r10, r26
 5b8:	b1 08       	sbc	r11, r1
 5ba:	f7 cf       	rjmp	.-18     	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 5bc:	b6 01       	movw	r22, r12
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 5c4:	b6 01       	movw	r22, r12
 5c6:	c5 01       	movw	r24, r10
 5c8:	c0 96       	adiw	r24, 0x30	; 48
 5ca:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 5ce:	72 c1       	rjmp	.+740    	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
 5d0:	83 36       	cpi	r24, 0x63	; 99
 5d2:	31 f0       	breq	.+12     	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
 5d4:	83 37       	cpi	r24, 0x73	; 115
 5d6:	91 f0       	breq	.+36     	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5d8:	83 35       	cpi	r24, 0x53	; 83
 5da:	09 f0       	breq	.+2      	; 0x5de <__EEPROM_REGION_LENGTH__+0x1de>
 5dc:	5d c0       	rjmp	.+186    	; 0x698 <__EEPROM_REGION_LENGTH__+0x298>
 5de:	24 c0       	rjmp	.+72     	; 0x628 <__EEPROM_REGION_LENGTH__+0x228>
 5e0:	c5 01       	movw	r24, r10
 5e2:	02 96       	adiw	r24, 0x02	; 2
 5e4:	9f 87       	std	Y+15, r25	; 0x0f
 5e6:	8e 87       	std	Y+14, r24	; 0x0e
 5e8:	f5 01       	movw	r30, r10
 5ea:	80 81       	ld	r24, Z
 5ec:	89 83       	std	Y+1, r24	; 0x01
 5ee:	6a 88       	ldd	r6, Y+18	; 0x12
 5f0:	7b 88       	ldd	r7, Y+19	; 0x13
 5f2:	8c 88       	ldd	r8, Y+20	; 0x14
 5f4:	aa 24       	eor	r10, r10
 5f6:	a3 94       	inc	r10
 5f8:	b1 2c       	mov	r11, r1
 5fa:	14 c0       	rjmp	.+40     	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 5fc:	c5 01       	movw	r24, r10
 5fe:	03 96       	adiw	r24, 0x03	; 3
 600:	9f 87       	std	Y+15, r25	; 0x0f
 602:	8e 87       	std	Y+14, r24	; 0x0e
 604:	f5 01       	movw	r30, r10
 606:	60 80       	ld	r6, Z
 608:	71 80       	ldd	r7, Z+1	; 0x01
 60a:	82 80       	ldd	r8, Z+2	; 0x02
 60c:	06 ff       	sbrs	r16, 6
 60e:	03 c0       	rjmp	.+6      	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
 610:	41 2f       	mov	r20, r17
 612:	50 e0       	ldi	r21, 0x00	; 0
 614:	02 c0       	rjmp	.+4      	; 0x61a <__EEPROM_REGION_LENGTH__+0x21a>
 616:	4f ef       	ldi	r20, 0xFF	; 255
 618:	5f ef       	ldi	r21, 0xFF	; 255
 61a:	88 2d       	mov	r24, r8
 61c:	b3 01       	movw	r22, r6
 61e:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <strnlen>
 622:	5c 01       	movw	r10, r24
 624:	0f 77       	andi	r16, 0x7F	; 127
 626:	15 c0       	rjmp	.+42     	; 0x652 <__EEPROM_REGION_LENGTH__+0x252>
 628:	c5 01       	movw	r24, r10
 62a:	03 96       	adiw	r24, 0x03	; 3
 62c:	9f 87       	std	Y+15, r25	; 0x0f
 62e:	8e 87       	std	Y+14, r24	; 0x0e
 630:	f5 01       	movw	r30, r10
 632:	60 80       	ld	r6, Z
 634:	71 80       	ldd	r7, Z+1	; 0x01
 636:	82 80       	ldd	r8, Z+2	; 0x02
 638:	06 ff       	sbrs	r16, 6
 63a:	03 c0       	rjmp	.+6      	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
 63c:	41 2f       	mov	r20, r17
 63e:	50 e0       	ldi	r21, 0x00	; 0
 640:	02 c0       	rjmp	.+4      	; 0x646 <__EEPROM_REGION_LENGTH__+0x246>
 642:	4f ef       	ldi	r20, 0xFF	; 255
 644:	5f ef       	ldi	r21, 0xFF	; 255
 646:	88 2d       	mov	r24, r8
 648:	b3 01       	movw	r22, r6
 64a:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <strnlen>
 64e:	5c 01       	movw	r10, r24
 650:	00 68       	ori	r16, 0x80	; 128
 652:	03 fd       	sbrc	r16, 3
 654:	1d c0       	rjmp	.+58     	; 0x690 <__EEPROM_REGION_LENGTH__+0x290>
 656:	8f 2d       	mov	r24, r15
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	a8 16       	cp	r10, r24
 65c:	b9 06       	cpc	r11, r25
 65e:	c0 f4       	brcc	.+48     	; 0x690 <__EEPROM_REGION_LENGTH__+0x290>
 660:	b6 01       	movw	r22, r12
 662:	80 e2       	ldi	r24, 0x20	; 32
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 66a:	fa 94       	dec	r15
 66c:	f4 cf       	rjmp	.-24     	; 0x656 <__EEPROM_REGION_LENGTH__+0x256>
 66e:	f3 01       	movw	r30, r6
 670:	84 91       	lpm	r24, Z
 672:	87 fc       	sbrc	r8, 7
 674:	80 81       	ld	r24, Z
 676:	ff ef       	ldi	r31, 0xFF	; 255
 678:	6f 1a       	sub	r6, r31
 67a:	7f 0a       	sbc	r7, r31
 67c:	8f 0a       	sbc	r8, r31
 67e:	b6 01       	movw	r22, r12
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 686:	f1 10       	cpse	r15, r1
 688:	fa 94       	dec	r15
 68a:	21 e0       	ldi	r18, 0x01	; 1
 68c:	a2 1a       	sub	r10, r18
 68e:	b1 08       	sbc	r11, r1
 690:	a1 14       	cp	r10, r1
 692:	b1 04       	cpc	r11, r1
 694:	61 f7       	brne	.-40     	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
 696:	0e c1       	rjmp	.+540    	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
 698:	84 36       	cpi	r24, 0x64	; 100
 69a:	11 f0       	breq	.+4      	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
 69c:	89 36       	cpi	r24, 0x69	; 105
 69e:	79 f5       	brne	.+94     	; 0x6fe <__EEPROM_REGION_LENGTH__+0x2fe>
 6a0:	c5 01       	movw	r24, r10
 6a2:	07 ff       	sbrs	r16, 7
 6a4:	09 c0       	rjmp	.+18     	; 0x6b8 <__EEPROM_REGION_LENGTH__+0x2b8>
 6a6:	04 96       	adiw	r24, 0x04	; 4
 6a8:	9f 87       	std	Y+15, r25	; 0x0f
 6aa:	8e 87       	std	Y+14, r24	; 0x0e
 6ac:	f5 01       	movw	r30, r10
 6ae:	60 81       	ld	r22, Z
 6b0:	71 81       	ldd	r23, Z+1	; 0x01
 6b2:	82 81       	ldd	r24, Z+2	; 0x02
 6b4:	93 81       	ldd	r25, Z+3	; 0x03
 6b6:	0a c0       	rjmp	.+20     	; 0x6cc <__EEPROM_REGION_LENGTH__+0x2cc>
 6b8:	02 96       	adiw	r24, 0x02	; 2
 6ba:	9f 87       	std	Y+15, r25	; 0x0f
 6bc:	8e 87       	std	Y+14, r24	; 0x0e
 6be:	f5 01       	movw	r30, r10
 6c0:	60 81       	ld	r22, Z
 6c2:	71 81       	ldd	r23, Z+1	; 0x01
 6c4:	07 2e       	mov	r0, r23
 6c6:	00 0c       	add	r0, r0
 6c8:	88 0b       	sbc	r24, r24
 6ca:	99 0b       	sbc	r25, r25
 6cc:	0f 76       	andi	r16, 0x6F	; 111
 6ce:	e0 2e       	mov	r14, r16
 6d0:	97 ff       	sbrs	r25, 7
 6d2:	0a c0       	rjmp	.+20     	; 0x6e8 <__EEPROM_REGION_LENGTH__+0x2e8>
 6d4:	90 95       	com	r25
 6d6:	80 95       	com	r24
 6d8:	70 95       	com	r23
 6da:	61 95       	neg	r22
 6dc:	7f 4f       	sbci	r23, 0xFF	; 255
 6de:	8f 4f       	sbci	r24, 0xFF	; 255
 6e0:	9f 4f       	sbci	r25, 0xFF	; 255
 6e2:	f0 2f       	mov	r31, r16
 6e4:	f0 68       	ori	r31, 0x80	; 128
 6e6:	ef 2e       	mov	r14, r31
 6e8:	2a e0       	ldi	r18, 0x0A	; 10
 6ea:	30 e0       	ldi	r19, 0x00	; 0
 6ec:	ae 01       	movw	r20, r28
 6ee:	4f 5f       	subi	r20, 0xFF	; 255
 6f0:	5f 4f       	sbci	r21, 0xFF	; 255
 6f2:	0e 94 2a 0a 	call	0x1454	; 0x1454 <__ultoa_invert>
 6f6:	a8 2e       	mov	r10, r24
 6f8:	2c 85       	ldd	r18, Y+12	; 0x0c
 6fa:	a2 1a       	sub	r10, r18
 6fc:	4b c0       	rjmp	.+150    	; 0x794 <__EEPROM_REGION_LENGTH__+0x394>
 6fe:	85 37       	cpi	r24, 0x75	; 117
 700:	29 f4       	brne	.+10     	; 0x70c <__EEPROM_REGION_LENGTH__+0x30c>
 702:	0f 7e       	andi	r16, 0xEF	; 239
 704:	e0 2e       	mov	r14, r16
 706:	2a e0       	ldi	r18, 0x0A	; 10
 708:	30 e0       	ldi	r19, 0x00	; 0
 70a:	25 c0       	rjmp	.+74     	; 0x756 <__EEPROM_REGION_LENGTH__+0x356>
 70c:	90 2f       	mov	r25, r16
 70e:	99 7f       	andi	r25, 0xF9	; 249
 710:	e9 2e       	mov	r14, r25
 712:	8f 36       	cpi	r24, 0x6F	; 111
 714:	c1 f0       	breq	.+48     	; 0x746 <__EEPROM_REGION_LENGTH__+0x346>
 716:	18 f4       	brcc	.+6      	; 0x71e <__EEPROM_REGION_LENGTH__+0x31e>
 718:	88 35       	cpi	r24, 0x58	; 88
 71a:	79 f0       	breq	.+30     	; 0x73a <__EEPROM_REGION_LENGTH__+0x33a>
 71c:	d5 c0       	rjmp	.+426    	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 71e:	80 37       	cpi	r24, 0x70	; 112
 720:	19 f0       	breq	.+6      	; 0x728 <__EEPROM_REGION_LENGTH__+0x328>
 722:	88 37       	cpi	r24, 0x78	; 120
 724:	21 f0       	breq	.+8      	; 0x72e <__EEPROM_REGION_LENGTH__+0x32e>
 726:	d0 c0       	rjmp	.+416    	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 728:	a9 2f       	mov	r26, r25
 72a:	a0 61       	ori	r26, 0x10	; 16
 72c:	ea 2e       	mov	r14, r26
 72e:	e4 fe       	sbrs	r14, 4
 730:	0d c0       	rjmp	.+26     	; 0x74c <__EEPROM_REGION_LENGTH__+0x34c>
 732:	ee 2d       	mov	r30, r14
 734:	e4 60       	ori	r30, 0x04	; 4
 736:	ee 2e       	mov	r14, r30
 738:	09 c0       	rjmp	.+18     	; 0x74c <__EEPROM_REGION_LENGTH__+0x34c>
 73a:	04 ff       	sbrs	r16, 4
 73c:	0a c0       	rjmp	.+20     	; 0x752 <__EEPROM_REGION_LENGTH__+0x352>
 73e:	f9 2f       	mov	r31, r25
 740:	f6 60       	ori	r31, 0x06	; 6
 742:	ef 2e       	mov	r14, r31
 744:	06 c0       	rjmp	.+12     	; 0x752 <__EEPROM_REGION_LENGTH__+0x352>
 746:	28 e0       	ldi	r18, 0x08	; 8
 748:	30 e0       	ldi	r19, 0x00	; 0
 74a:	05 c0       	rjmp	.+10     	; 0x756 <__EEPROM_REGION_LENGTH__+0x356>
 74c:	20 e1       	ldi	r18, 0x10	; 16
 74e:	30 e0       	ldi	r19, 0x00	; 0
 750:	02 c0       	rjmp	.+4      	; 0x756 <__EEPROM_REGION_LENGTH__+0x356>
 752:	20 e1       	ldi	r18, 0x10	; 16
 754:	32 e0       	ldi	r19, 0x02	; 2
 756:	c5 01       	movw	r24, r10
 758:	e7 fe       	sbrs	r14, 7
 75a:	09 c0       	rjmp	.+18     	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
 75c:	04 96       	adiw	r24, 0x04	; 4
 75e:	9f 87       	std	Y+15, r25	; 0x0f
 760:	8e 87       	std	Y+14, r24	; 0x0e
 762:	f5 01       	movw	r30, r10
 764:	60 81       	ld	r22, Z
 766:	71 81       	ldd	r23, Z+1	; 0x01
 768:	82 81       	ldd	r24, Z+2	; 0x02
 76a:	93 81       	ldd	r25, Z+3	; 0x03
 76c:	08 c0       	rjmp	.+16     	; 0x77e <__EEPROM_REGION_LENGTH__+0x37e>
 76e:	02 96       	adiw	r24, 0x02	; 2
 770:	9f 87       	std	Y+15, r25	; 0x0f
 772:	8e 87       	std	Y+14, r24	; 0x0e
 774:	f5 01       	movw	r30, r10
 776:	60 81       	ld	r22, Z
 778:	71 81       	ldd	r23, Z+1	; 0x01
 77a:	80 e0       	ldi	r24, 0x00	; 0
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	ae 01       	movw	r20, r28
 780:	4f 5f       	subi	r20, 0xFF	; 255
 782:	5f 4f       	sbci	r21, 0xFF	; 255
 784:	0e 94 2a 0a 	call	0x1454	; 0x1454 <__ultoa_invert>
 788:	a8 2e       	mov	r10, r24
 78a:	fc 85       	ldd	r31, Y+12	; 0x0c
 78c:	af 1a       	sub	r10, r31
 78e:	2e 2d       	mov	r18, r14
 790:	2f 77       	andi	r18, 0x7F	; 127
 792:	e2 2e       	mov	r14, r18
 794:	e6 fe       	sbrs	r14, 6
 796:	0b c0       	rjmp	.+22     	; 0x7ae <__EEPROM_REGION_LENGTH__+0x3ae>
 798:	0e 2d       	mov	r16, r14
 79a:	0e 7f       	andi	r16, 0xFE	; 254
 79c:	a1 16       	cp	r10, r17
 79e:	50 f4       	brcc	.+20     	; 0x7b4 <__EEPROM_REGION_LENGTH__+0x3b4>
 7a0:	e4 fe       	sbrs	r14, 4
 7a2:	0a c0       	rjmp	.+20     	; 0x7b8 <__EEPROM_REGION_LENGTH__+0x3b8>
 7a4:	e2 fc       	sbrc	r14, 2
 7a6:	08 c0       	rjmp	.+16     	; 0x7b8 <__EEPROM_REGION_LENGTH__+0x3b8>
 7a8:	0e 2d       	mov	r16, r14
 7aa:	0e 7e       	andi	r16, 0xEE	; 238
 7ac:	05 c0       	rjmp	.+10     	; 0x7b8 <__EEPROM_REGION_LENGTH__+0x3b8>
 7ae:	ba 2c       	mov	r11, r10
 7b0:	0e 2d       	mov	r16, r14
 7b2:	03 c0       	rjmp	.+6      	; 0x7ba <__EEPROM_REGION_LENGTH__+0x3ba>
 7b4:	ba 2c       	mov	r11, r10
 7b6:	01 c0       	rjmp	.+2      	; 0x7ba <__EEPROM_REGION_LENGTH__+0x3ba>
 7b8:	b1 2e       	mov	r11, r17
 7ba:	04 ff       	sbrs	r16, 4
 7bc:	0d c0       	rjmp	.+26     	; 0x7d8 <__EEPROM_REGION_LENGTH__+0x3d8>
 7be:	fe 01       	movw	r30, r28
 7c0:	ea 0d       	add	r30, r10
 7c2:	f1 1d       	adc	r31, r1
 7c4:	80 81       	ld	r24, Z
 7c6:	80 33       	cpi	r24, 0x30	; 48
 7c8:	11 f4       	brne	.+4      	; 0x7ce <__EEPROM_REGION_LENGTH__+0x3ce>
 7ca:	09 7e       	andi	r16, 0xE9	; 233
 7cc:	09 c0       	rjmp	.+18     	; 0x7e0 <__EEPROM_REGION_LENGTH__+0x3e0>
 7ce:	02 ff       	sbrs	r16, 2
 7d0:	06 c0       	rjmp	.+12     	; 0x7de <__EEPROM_REGION_LENGTH__+0x3de>
 7d2:	b3 94       	inc	r11
 7d4:	b3 94       	inc	r11
 7d6:	04 c0       	rjmp	.+8      	; 0x7e0 <__EEPROM_REGION_LENGTH__+0x3e0>
 7d8:	80 2f       	mov	r24, r16
 7da:	86 78       	andi	r24, 0x86	; 134
 7dc:	09 f0       	breq	.+2      	; 0x7e0 <__EEPROM_REGION_LENGTH__+0x3e0>
 7de:	b3 94       	inc	r11
 7e0:	03 fd       	sbrc	r16, 3
 7e2:	11 c0       	rjmp	.+34     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7e4:	00 ff       	sbrs	r16, 0
 7e6:	06 c0       	rjmp	.+12     	; 0x7f4 <__EEPROM_REGION_LENGTH__+0x3f4>
 7e8:	bf 14       	cp	r11, r15
 7ea:	88 f4       	brcc	.+34     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 7ec:	fa 0c       	add	r15, r10
 7ee:	1f 2d       	mov	r17, r15
 7f0:	1b 19       	sub	r17, r11
 7f2:	0e c0       	rjmp	.+28     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7f4:	bf 14       	cp	r11, r15
 7f6:	60 f4       	brcc	.+24     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7f8:	b6 01       	movw	r22, r12
 7fa:	80 e2       	ldi	r24, 0x20	; 32
 7fc:	90 e0       	ldi	r25, 0x00	; 0
 7fe:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 802:	b3 94       	inc	r11
 804:	f7 cf       	rjmp	.-18     	; 0x7f4 <__EEPROM_REGION_LENGTH__+0x3f4>
 806:	bf 14       	cp	r11, r15
 808:	18 f4       	brcc	.+6      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 80a:	fb 18       	sub	r15, r11
 80c:	02 c0       	rjmp	.+4      	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 80e:	1a 2d       	mov	r17, r10
 810:	f1 2c       	mov	r15, r1
 812:	04 ff       	sbrs	r16, 4
 814:	10 c0       	rjmp	.+32     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 816:	b6 01       	movw	r22, r12
 818:	80 e3       	ldi	r24, 0x30	; 48
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 820:	02 ff       	sbrs	r16, 2
 822:	17 c0       	rjmp	.+46     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 824:	01 fd       	sbrc	r16, 1
 826:	03 c0       	rjmp	.+6      	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 828:	88 e7       	ldi	r24, 0x78	; 120
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	02 c0       	rjmp	.+4      	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 82e:	88 e5       	ldi	r24, 0x58	; 88
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	b6 01       	movw	r22, r12
 834:	0c c0       	rjmp	.+24     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 836:	80 2f       	mov	r24, r16
 838:	86 78       	andi	r24, 0x86	; 134
 83a:	59 f0       	breq	.+22     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 83c:	01 ff       	sbrs	r16, 1
 83e:	02 c0       	rjmp	.+4      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 840:	8b e2       	ldi	r24, 0x2B	; 43
 842:	01 c0       	rjmp	.+2      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 844:	80 e2       	ldi	r24, 0x20	; 32
 846:	07 fd       	sbrc	r16, 7
 848:	8d e2       	ldi	r24, 0x2D	; 45
 84a:	b6 01       	movw	r22, r12
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 852:	a1 16       	cp	r10, r17
 854:	38 f4       	brcc	.+14     	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 856:	b6 01       	movw	r22, r12
 858:	80 e3       	ldi	r24, 0x30	; 48
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 860:	11 50       	subi	r17, 0x01	; 1
 862:	f7 cf       	rjmp	.-18     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 864:	aa 94       	dec	r10
 866:	e1 e0       	ldi	r30, 0x01	; 1
 868:	f0 e0       	ldi	r31, 0x00	; 0
 86a:	ec 0f       	add	r30, r28
 86c:	fd 1f       	adc	r31, r29
 86e:	ea 0d       	add	r30, r10
 870:	f1 1d       	adc	r31, r1
 872:	80 81       	ld	r24, Z
 874:	b6 01       	movw	r22, r12
 876:	90 e0       	ldi	r25, 0x00	; 0
 878:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 87c:	a1 10       	cpse	r10, r1
 87e:	f2 cf       	rjmp	.-28     	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 880:	19 c0       	rjmp	.+50     	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
 882:	f4 e0       	ldi	r31, 0x04	; 4
 884:	ff 15       	cp	r31, r15
 886:	80 f5       	brcc	.+96     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
 888:	84 e0       	ldi	r24, 0x04	; 4
 88a:	f8 1a       	sub	r15, r24
 88c:	73 fe       	sbrs	r7, 3
 88e:	23 c0       	rjmp	.+70     	; 0x8d6 <__DATA_REGION_LENGTH__+0xd6>
 890:	01 11       	cpse	r16, r1
 892:	2b c0       	rjmp	.+86     	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
 894:	53 fe       	sbrs	r5, 3
 896:	2f c0       	rjmp	.+94     	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
 898:	58 ee       	ldi	r21, 0xE8	; 232
 89a:	85 2e       	mov	r8, r21
 89c:	51 e0       	ldi	r21, 0x01	; 1
 89e:	95 2e       	mov	r9, r21
 8a0:	50 e0       	ldi	r21, 0x00	; 0
 8a2:	a5 2e       	mov	r10, r21
 8a4:	07 2d       	mov	r16, r7
 8a6:	00 71       	andi	r16, 0x10	; 16
 8a8:	f4 01       	movw	r30, r8
 8aa:	84 91       	lpm	r24, Z
 8ac:	a7 fc       	sbrc	r10, 7
 8ae:	80 81       	ld	r24, Z
 8b0:	81 11       	cpse	r24, r1
 8b2:	28 c0       	rjmp	.+80     	; 0x904 <__stack+0x5>
 8b4:	ff 20       	and	r15, r15
 8b6:	09 f4       	brne	.+2      	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 8b8:	d2 cc       	rjmp	.-1628   	; 0x25e <vfprintf+0x72>
 8ba:	b6 01       	movw	r22, r12
 8bc:	80 e2       	ldi	r24, 0x20	; 32
 8be:	90 e0       	ldi	r25, 0x00	; 0
 8c0:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 8c4:	fa 94       	dec	r15
 8c6:	f6 cf       	rjmp	.-20     	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
 8c8:	f6 01       	movw	r30, r12
 8ca:	87 81       	ldd	r24, Z+7	; 0x07
 8cc:	90 85       	ldd	r25, Z+8	; 0x08
 8ce:	2c c0       	rjmp	.+88     	; 0x928 <__stack+0x29>
 8d0:	8f ef       	ldi	r24, 0xFF	; 255
 8d2:	9f ef       	ldi	r25, 0xFF	; 255
 8d4:	29 c0       	rjmp	.+82     	; 0x928 <__stack+0x29>
 8d6:	b6 01       	movw	r22, r12
 8d8:	80 e2       	ldi	r24, 0x20	; 32
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 8e0:	fa 94       	dec	r15
 8e2:	f1 10       	cpse	r15, r1
 8e4:	f8 cf       	rjmp	.-16     	; 0x8d6 <__DATA_REGION_LENGTH__+0xd6>
 8e6:	d4 cf       	rjmp	.-88     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 8e8:	f1 2c       	mov	r15, r1
 8ea:	b6 01       	movw	r22, r12
 8ec:	80 2f       	mov	r24, r16
 8ee:	90 e0       	ldi	r25, 0x00	; 0
 8f0:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 8f4:	cf cf       	rjmp	.-98     	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 8f6:	44 ee       	ldi	r20, 0xE4	; 228
 8f8:	84 2e       	mov	r8, r20
 8fa:	41 e0       	ldi	r20, 0x01	; 1
 8fc:	94 2e       	mov	r9, r20
 8fe:	40 e0       	ldi	r20, 0x00	; 0
 900:	a4 2e       	mov	r10, r20
 902:	d0 cf       	rjmp	.-96     	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
 904:	01 11       	cpse	r16, r1
 906:	80 52       	subi	r24, 0x20	; 32
 908:	b6 01       	movw	r22, r12
 90a:	90 e0       	ldi	r25, 0x00	; 0
 90c:	0e 94 33 0c 	call	0x1866	; 0x1866 <fputc>
 910:	ff ef       	ldi	r31, 0xFF	; 255
 912:	8f 1a       	sub	r8, r31
 914:	9f 0a       	sbc	r9, r31
 916:	af 0a       	sbc	r10, r31
 918:	c7 cf       	rjmp	.-114    	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
 91a:	23 e0       	ldi	r18, 0x03	; 3
 91c:	2f 15       	cp	r18, r15
 91e:	10 f4       	brcc	.+4      	; 0x924 <__stack+0x25>
 920:	83 e0       	ldi	r24, 0x03	; 3
 922:	b3 cf       	rjmp	.-154    	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
 924:	f1 2c       	mov	r15, r1
 926:	b6 cf       	rjmp	.-148    	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 928:	64 96       	adiw	r28, 0x14	; 20
 92a:	e2 e1       	ldi	r30, 0x12	; 18
 92c:	0c 94 76 0e 	jmp	0x1cec	; 0x1cec <__epilogue_restores__>

Disassembly of section .text.libgcc.prologue:

00001c7c <__prologue_saves__>:
    1c7c:	2f 92       	push	r2
    1c7e:	3f 92       	push	r3
    1c80:	4f 92       	push	r4
    1c82:	5f 92       	push	r5
    1c84:	6f 92       	push	r6
    1c86:	7f 92       	push	r7
    1c88:	8f 92       	push	r8
    1c8a:	9f 92       	push	r9
    1c8c:	af 92       	push	r10
    1c8e:	bf 92       	push	r11
    1c90:	cf 92       	push	r12
    1c92:	df 92       	push	r13
    1c94:	ef 92       	push	r14
    1c96:	ff 92       	push	r15
    1c98:	0f 93       	push	r16
    1c9a:	1f 93       	push	r17
    1c9c:	cf 93       	push	r28
    1c9e:	df 93       	push	r29
    1ca0:	cd b7       	in	r28, 0x3d	; 61
    1ca2:	de b7       	in	r29, 0x3e	; 62
    1ca4:	ca 1b       	sub	r28, r26
    1ca6:	db 0b       	sbc	r29, r27
    1ca8:	0f b6       	in	r0, 0x3f	; 63
    1caa:	f8 94       	cli
    1cac:	de bf       	out	0x3e, r29	; 62
    1cae:	0f be       	out	0x3f, r0	; 63
    1cb0:	cd bf       	out	0x3d, r28	; 61
    1cb2:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00001cec <__epilogue_restores__>:
    1cec:	2a 88       	ldd	r2, Y+18	; 0x12
    1cee:	39 88       	ldd	r3, Y+17	; 0x11
    1cf0:	48 88       	ldd	r4, Y+16	; 0x10
    1cf2:	5f 84       	ldd	r5, Y+15	; 0x0f
    1cf4:	6e 84       	ldd	r6, Y+14	; 0x0e
    1cf6:	7d 84       	ldd	r7, Y+13	; 0x0d
    1cf8:	8c 84       	ldd	r8, Y+12	; 0x0c
    1cfa:	9b 84       	ldd	r9, Y+11	; 0x0b
    1cfc:	aa 84       	ldd	r10, Y+10	; 0x0a
    1cfe:	b9 84       	ldd	r11, Y+9	; 0x09
    1d00:	c8 84       	ldd	r12, Y+8	; 0x08
    1d02:	df 80       	ldd	r13, Y+7	; 0x07
    1d04:	ee 80       	ldd	r14, Y+6	; 0x06
    1d06:	fd 80       	ldd	r15, Y+5	; 0x05
    1d08:	0c 81       	ldd	r16, Y+4	; 0x04
    1d0a:	1b 81       	ldd	r17, Y+3	; 0x03
    1d0c:	aa 81       	ldd	r26, Y+2	; 0x02
    1d0e:	b9 81       	ldd	r27, Y+1	; 0x01
    1d10:	ce 0f       	add	r28, r30
    1d12:	d1 1d       	adc	r29, r1
    1d14:	0f b6       	in	r0, 0x3f	; 63
    1d16:	f8 94       	cli
    1d18:	de bf       	out	0x3e, r29	; 62
    1d1a:	0f be       	out	0x3f, r0	; 63
    1d1c:	cd bf       	out	0x3d, r28	; 61
    1d1e:	ed 01       	movw	r28, r26
    1d20:	08 95       	ret

Disassembly of section .text.avrlibc:

00000e0e <__ftoa_engine>:
 e0e:	28 30       	cpi	r18, 0x08	; 8
 e10:	08 f0       	brcs	.+2      	; 0xe14 <__ftoa_engine+0x6>
 e12:	27 e0       	ldi	r18, 0x07	; 7
 e14:	33 27       	eor	r19, r19
 e16:	da 01       	movw	r26, r20
 e18:	99 0f       	add	r25, r25
 e1a:	31 1d       	adc	r19, r1
 e1c:	87 fd       	sbrc	r24, 7
 e1e:	91 60       	ori	r25, 0x01	; 1
 e20:	00 96       	adiw	r24, 0x00	; 0
 e22:	61 05       	cpc	r22, r1
 e24:	71 05       	cpc	r23, r1
 e26:	39 f4       	brne	.+14     	; 0xe36 <__ftoa_engine+0x28>
 e28:	32 60       	ori	r19, 0x02	; 2
 e2a:	2e 5f       	subi	r18, 0xFE	; 254
 e2c:	3d 93       	st	X+, r19
 e2e:	30 e3       	ldi	r19, 0x30	; 48
 e30:	2a 95       	dec	r18
 e32:	e1 f7       	brne	.-8      	; 0xe2c <__ftoa_engine+0x1e>
 e34:	08 95       	ret
 e36:	9f 3f       	cpi	r25, 0xFF	; 255
 e38:	30 f0       	brcs	.+12     	; 0xe46 <__ftoa_engine+0x38>
 e3a:	80 38       	cpi	r24, 0x80	; 128
 e3c:	71 05       	cpc	r23, r1
 e3e:	61 05       	cpc	r22, r1
 e40:	09 f0       	breq	.+2      	; 0xe44 <__ftoa_engine+0x36>
 e42:	3c 5f       	subi	r19, 0xFC	; 252
 e44:	3c 5f       	subi	r19, 0xFC	; 252
 e46:	3d 93       	st	X+, r19
 e48:	91 30       	cpi	r25, 0x01	; 1
 e4a:	08 f0       	brcs	.+2      	; 0xe4e <__ftoa_engine+0x40>
 e4c:	80 68       	ori	r24, 0x80	; 128
 e4e:	91 1d       	adc	r25, r1
 e50:	df 93       	push	r29
 e52:	cf 93       	push	r28
 e54:	1f 93       	push	r17
 e56:	0f 93       	push	r16
 e58:	ff 92       	push	r15
 e5a:	ef 92       	push	r14
 e5c:	19 2f       	mov	r17, r25
 e5e:	98 7f       	andi	r25, 0xF8	; 248
 e60:	96 95       	lsr	r25
 e62:	e9 2f       	mov	r30, r25
 e64:	96 95       	lsr	r25
 e66:	96 95       	lsr	r25
 e68:	e9 0f       	add	r30, r25
 e6a:	ff 27       	eor	r31, r31
 e6c:	ec 52       	subi	r30, 0x2C	; 44
 e6e:	ff 4f       	sbci	r31, 0xFF	; 255
 e70:	99 27       	eor	r25, r25
 e72:	33 27       	eor	r19, r19
 e74:	ee 24       	eor	r14, r14
 e76:	ff 24       	eor	r15, r15
 e78:	a7 01       	movw	r20, r14
 e7a:	e7 01       	movw	r28, r14
 e7c:	05 90       	lpm	r0, Z+
 e7e:	08 94       	sec
 e80:	07 94       	ror	r0
 e82:	28 f4       	brcc	.+10     	; 0xe8e <__ftoa_engine+0x80>
 e84:	36 0f       	add	r19, r22
 e86:	e7 1e       	adc	r14, r23
 e88:	f8 1e       	adc	r15, r24
 e8a:	49 1f       	adc	r20, r25
 e8c:	51 1d       	adc	r21, r1
 e8e:	66 0f       	add	r22, r22
 e90:	77 1f       	adc	r23, r23
 e92:	88 1f       	adc	r24, r24
 e94:	99 1f       	adc	r25, r25
 e96:	06 94       	lsr	r0
 e98:	a1 f7       	brne	.-24     	; 0xe82 <__ftoa_engine+0x74>
 e9a:	05 90       	lpm	r0, Z+
 e9c:	07 94       	ror	r0
 e9e:	28 f4       	brcc	.+10     	; 0xeaa <__ftoa_engine+0x9c>
 ea0:	e7 0e       	add	r14, r23
 ea2:	f8 1e       	adc	r15, r24
 ea4:	49 1f       	adc	r20, r25
 ea6:	56 1f       	adc	r21, r22
 ea8:	c1 1d       	adc	r28, r1
 eaa:	77 0f       	add	r23, r23
 eac:	88 1f       	adc	r24, r24
 eae:	99 1f       	adc	r25, r25
 eb0:	66 1f       	adc	r22, r22
 eb2:	06 94       	lsr	r0
 eb4:	a1 f7       	brne	.-24     	; 0xe9e <__ftoa_engine+0x90>
 eb6:	05 90       	lpm	r0, Z+
 eb8:	07 94       	ror	r0
 eba:	28 f4       	brcc	.+10     	; 0xec6 <__ftoa_engine+0xb8>
 ebc:	f8 0e       	add	r15, r24
 ebe:	49 1f       	adc	r20, r25
 ec0:	56 1f       	adc	r21, r22
 ec2:	c7 1f       	adc	r28, r23
 ec4:	d1 1d       	adc	r29, r1
 ec6:	88 0f       	add	r24, r24
 ec8:	99 1f       	adc	r25, r25
 eca:	66 1f       	adc	r22, r22
 ecc:	77 1f       	adc	r23, r23
 ece:	06 94       	lsr	r0
 ed0:	a1 f7       	brne	.-24     	; 0xeba <__ftoa_engine+0xac>
 ed2:	05 90       	lpm	r0, Z+
 ed4:	07 94       	ror	r0
 ed6:	20 f4       	brcc	.+8      	; 0xee0 <__ftoa_engine+0xd2>
 ed8:	49 0f       	add	r20, r25
 eda:	56 1f       	adc	r21, r22
 edc:	c7 1f       	adc	r28, r23
 ede:	d8 1f       	adc	r29, r24
 ee0:	99 0f       	add	r25, r25
 ee2:	66 1f       	adc	r22, r22
 ee4:	77 1f       	adc	r23, r23
 ee6:	88 1f       	adc	r24, r24
 ee8:	06 94       	lsr	r0
 eea:	a9 f7       	brne	.-22     	; 0xed6 <__ftoa_engine+0xc8>
 eec:	84 91       	lpm	r24, Z
 eee:	10 95       	com	r17
 ef0:	17 70       	andi	r17, 0x07	; 7
 ef2:	41 f0       	breq	.+16     	; 0xf04 <__ftoa_engine+0xf6>
 ef4:	d6 95       	lsr	r29
 ef6:	c7 95       	ror	r28
 ef8:	57 95       	ror	r21
 efa:	47 95       	ror	r20
 efc:	f7 94       	ror	r15
 efe:	e7 94       	ror	r14
 f00:	1a 95       	dec	r17
 f02:	c1 f7       	brne	.-16     	; 0xef4 <__ftoa_engine+0xe6>
 f04:	ea e7       	ldi	r30, 0x7A	; 122
 f06:	f0 e0       	ldi	r31, 0x00	; 0
 f08:	68 94       	set
 f0a:	15 90       	lpm	r1, Z+
 f0c:	15 91       	lpm	r17, Z+
 f0e:	35 91       	lpm	r19, Z+
 f10:	65 91       	lpm	r22, Z+
 f12:	95 91       	lpm	r25, Z+
 f14:	05 90       	lpm	r0, Z+
 f16:	7f e2       	ldi	r23, 0x2F	; 47
 f18:	73 95       	inc	r23
 f1a:	e1 18       	sub	r14, r1
 f1c:	f1 0a       	sbc	r15, r17
 f1e:	43 0b       	sbc	r20, r19
 f20:	56 0b       	sbc	r21, r22
 f22:	c9 0b       	sbc	r28, r25
 f24:	d0 09       	sbc	r29, r0
 f26:	c0 f7       	brcc	.-16     	; 0xf18 <__ftoa_engine+0x10a>
 f28:	e1 0c       	add	r14, r1
 f2a:	f1 1e       	adc	r15, r17
 f2c:	43 1f       	adc	r20, r19
 f2e:	56 1f       	adc	r21, r22
 f30:	c9 1f       	adc	r28, r25
 f32:	d0 1d       	adc	r29, r0
 f34:	7e f4       	brtc	.+30     	; 0xf54 <__ftoa_engine+0x146>
 f36:	70 33       	cpi	r23, 0x30	; 48
 f38:	11 f4       	brne	.+4      	; 0xf3e <__ftoa_engine+0x130>
 f3a:	8a 95       	dec	r24
 f3c:	e6 cf       	rjmp	.-52     	; 0xf0a <__ftoa_engine+0xfc>
 f3e:	e8 94       	clt
 f40:	01 50       	subi	r16, 0x01	; 1
 f42:	30 f0       	brcs	.+12     	; 0xf50 <__ftoa_engine+0x142>
 f44:	08 0f       	add	r16, r24
 f46:	0a f4       	brpl	.+2      	; 0xf4a <__ftoa_engine+0x13c>
 f48:	00 27       	eor	r16, r16
 f4a:	02 17       	cp	r16, r18
 f4c:	08 f4       	brcc	.+2      	; 0xf50 <__ftoa_engine+0x142>
 f4e:	20 2f       	mov	r18, r16
 f50:	23 95       	inc	r18
 f52:	02 2f       	mov	r16, r18
 f54:	7a 33       	cpi	r23, 0x3A	; 58
 f56:	28 f0       	brcs	.+10     	; 0xf62 <__ftoa_engine+0x154>
 f58:	79 e3       	ldi	r23, 0x39	; 57
 f5a:	7d 93       	st	X+, r23
 f5c:	2a 95       	dec	r18
 f5e:	e9 f7       	brne	.-6      	; 0xf5a <__ftoa_engine+0x14c>
 f60:	10 c0       	rjmp	.+32     	; 0xf82 <__ftoa_engine+0x174>
 f62:	7d 93       	st	X+, r23
 f64:	2a 95       	dec	r18
 f66:	89 f6       	brne	.-94     	; 0xf0a <__ftoa_engine+0xfc>
 f68:	06 94       	lsr	r0
 f6a:	97 95       	ror	r25
 f6c:	67 95       	ror	r22
 f6e:	37 95       	ror	r19
 f70:	17 95       	ror	r17
 f72:	17 94       	ror	r1
 f74:	e1 18       	sub	r14, r1
 f76:	f1 0a       	sbc	r15, r17
 f78:	43 0b       	sbc	r20, r19
 f7a:	56 0b       	sbc	r21, r22
 f7c:	c9 0b       	sbc	r28, r25
 f7e:	d0 09       	sbc	r29, r0
 f80:	98 f0       	brcs	.+38     	; 0xfa8 <__ftoa_engine+0x19a>
 f82:	23 95       	inc	r18
 f84:	7e 91       	ld	r23, -X
 f86:	73 95       	inc	r23
 f88:	7a 33       	cpi	r23, 0x3A	; 58
 f8a:	08 f0       	brcs	.+2      	; 0xf8e <__ftoa_engine+0x180>
 f8c:	70 e3       	ldi	r23, 0x30	; 48
 f8e:	7c 93       	st	X, r23
 f90:	20 13       	cpse	r18, r16
 f92:	b8 f7       	brcc	.-18     	; 0xf82 <__ftoa_engine+0x174>
 f94:	7e 91       	ld	r23, -X
 f96:	70 61       	ori	r23, 0x10	; 16
 f98:	7d 93       	st	X+, r23
 f9a:	30 f0       	brcs	.+12     	; 0xfa8 <__ftoa_engine+0x19a>
 f9c:	83 95       	inc	r24
 f9e:	71 e3       	ldi	r23, 0x31	; 49
 fa0:	7d 93       	st	X+, r23
 fa2:	70 e3       	ldi	r23, 0x30	; 48
 fa4:	2a 95       	dec	r18
 fa6:	e1 f7       	brne	.-8      	; 0xfa0 <__ftoa_engine+0x192>
 fa8:	11 24       	eor	r1, r1
 faa:	ef 90       	pop	r14
 fac:	ff 90       	pop	r15
 fae:	0f 91       	pop	r16
 fb0:	1f 91       	pop	r17
 fb2:	cf 91       	pop	r28
 fb4:	df 91       	pop	r29
 fb6:	99 27       	eor	r25, r25
 fb8:	87 fd       	sbrc	r24, 7
 fba:	90 95       	com	r25
 fbc:	08 95       	ret

Disassembly of section .text.avrlibc:

00001d22 <strnlen>:
    1d22:	cf 92       	push	r12
    1d24:	df 92       	push	r13
    1d26:	ef 92       	push	r14
    1d28:	6b 01       	movw	r12, r22
    1d2a:	e8 2e       	mov	r14, r24
    1d2c:	a8 2f       	mov	r26, r24
    1d2e:	cb 01       	movw	r24, r22
    1d30:	41 15       	cp	r20, r1
    1d32:	51 05       	cpc	r21, r1
    1d34:	31 f4       	brne	.+12     	; 0x1d42 <strnlen+0x20>
    1d36:	8c 19       	sub	r24, r12
    1d38:	9d 09       	sbc	r25, r13
    1d3a:	ef 90       	pop	r14
    1d3c:	df 90       	pop	r13
    1d3e:	cf 90       	pop	r12
    1d40:	08 95       	ret
    1d42:	fc 01       	movw	r30, r24
    1d44:	24 91       	lpm	r18, Z
    1d46:	a7 fd       	sbrc	r26, 7
    1d48:	20 81       	ld	r18, Z
    1d4a:	22 23       	and	r18, r18
    1d4c:	a1 f3       	breq	.-24     	; 0x1d36 <strnlen+0x14>
    1d4e:	01 96       	adiw	r24, 0x01	; 1
    1d50:	a1 1d       	adc	r26, r1
    1d52:	41 50       	subi	r20, 0x01	; 1
    1d54:	51 09       	sbc	r21, r1
    1d56:	ec cf       	rjmp	.-40     	; 0x1d30 <strnlen+0xe>

Disassembly of section .text.avrlibc:

0000164c <fdevopen>:
    164c:	0f 93       	push	r16
    164e:	1f 93       	push	r17
    1650:	cf 93       	push	r28
    1652:	df 93       	push	r29
    1654:	00 97       	sbiw	r24, 0x00	; 0
    1656:	31 f4       	brne	.+12     	; 0x1664 <fdevopen+0x18>
    1658:	61 15       	cp	r22, r1
    165a:	71 05       	cpc	r23, r1
    165c:	19 f4       	brne	.+6      	; 0x1664 <fdevopen+0x18>
    165e:	80 e0       	ldi	r24, 0x00	; 0
    1660:	90 e0       	ldi	r25, 0x00	; 0
    1662:	3b c0       	rjmp	.+118    	; 0x16da <fdevopen+0x8e>
    1664:	8b 01       	movw	r16, r22
    1666:	ec 01       	movw	r28, r24
    1668:	6f e0       	ldi	r22, 0x0F	; 15
    166a:	70 e0       	ldi	r23, 0x00	; 0
    166c:	81 e0       	ldi	r24, 0x01	; 1
    166e:	90 e0       	ldi	r25, 0x00	; 0
    1670:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <calloc>
    1674:	fc 01       	movw	r30, r24
    1676:	89 2b       	or	r24, r25
    1678:	91 f3       	breq	.-28     	; 0x165e <fdevopen+0x12>
    167a:	80 e8       	ldi	r24, 0x80	; 128
    167c:	84 83       	std	Z+4, r24	; 0x04
    167e:	01 15       	cp	r16, r1
    1680:	11 05       	cpc	r17, r1
    1682:	69 f0       	breq	.+26     	; 0x169e <fdevopen+0x52>
    1684:	14 87       	std	Z+12, r17	; 0x0c
    1686:	03 87       	std	Z+11, r16	; 0x0b
    1688:	81 e8       	ldi	r24, 0x81	; 129
    168a:	84 83       	std	Z+4, r24	; 0x04
    168c:	a2 e0       	ldi	r26, 0x02	; 2
    168e:	b1 e0       	ldi	r27, 0x01	; 1
    1690:	8d 91       	ld	r24, X+
    1692:	9c 91       	ld	r25, X
    1694:	11 97       	sbiw	r26, 0x01	; 1
    1696:	89 2b       	or	r24, r25
    1698:	11 f4       	brne	.+4      	; 0x169e <fdevopen+0x52>
    169a:	ed 93       	st	X+, r30
    169c:	fc 93       	st	X, r31
    169e:	20 97       	sbiw	r28, 0x00	; 0
    16a0:	d9 f0       	breq	.+54     	; 0x16d8 <fdevopen+0x8c>
    16a2:	d2 87       	std	Z+10, r29	; 0x0a
    16a4:	c1 87       	std	Z+9, r28	; 0x09
    16a6:	84 81       	ldd	r24, Z+4	; 0x04
    16a8:	82 60       	ori	r24, 0x02	; 2
    16aa:	84 83       	std	Z+4, r24	; 0x04
    16ac:	a2 e0       	ldi	r26, 0x02	; 2
    16ae:	b1 e0       	ldi	r27, 0x01	; 1
    16b0:	12 96       	adiw	r26, 0x02	; 2
    16b2:	8d 91       	ld	r24, X+
    16b4:	9c 91       	ld	r25, X
    16b6:	13 97       	sbiw	r26, 0x03	; 3
    16b8:	89 2b       	or	r24, r25
    16ba:	71 f4       	brne	.+28     	; 0x16d8 <fdevopen+0x8c>
    16bc:	13 96       	adiw	r26, 0x03	; 3
    16be:	fc 93       	st	X, r31
    16c0:	ee 93       	st	-X, r30
    16c2:	12 97       	sbiw	r26, 0x02	; 2
    16c4:	14 96       	adiw	r26, 0x04	; 4
    16c6:	8d 91       	ld	r24, X+
    16c8:	9c 91       	ld	r25, X
    16ca:	15 97       	sbiw	r26, 0x05	; 5
    16cc:	89 2b       	or	r24, r25
    16ce:	21 f4       	brne	.+8      	; 0x16d8 <fdevopen+0x8c>
    16d0:	15 96       	adiw	r26, 0x05	; 5
    16d2:	fc 93       	st	X, r31
    16d4:	ee 93       	st	-X, r30
    16d6:	14 97       	sbiw	r26, 0x04	; 4
    16d8:	cf 01       	movw	r24, r30
    16da:	df 91       	pop	r29
    16dc:	cf 91       	pop	r28
    16de:	1f 91       	pop	r17
    16e0:	0f 91       	pop	r16
    16e2:	08 95       	ret

Disassembly of section .text.avrlibc:

00001866 <fputc>:
    1866:	0f 93       	push	r16
    1868:	1f 93       	push	r17
    186a:	cf 93       	push	r28
    186c:	df 93       	push	r29
    186e:	fb 01       	movw	r30, r22
    1870:	24 81       	ldd	r18, Z+4	; 0x04
    1872:	21 fd       	sbrc	r18, 1
    1874:	03 c0       	rjmp	.+6      	; 0x187c <fputc+0x16>
    1876:	8f ef       	ldi	r24, 0xFF	; 255
    1878:	9f ef       	ldi	r25, 0xFF	; 255
    187a:	2c c0       	rjmp	.+88     	; 0x18d4 <fputc+0x6e>
    187c:	22 ff       	sbrs	r18, 2
    187e:	16 c0       	rjmp	.+44     	; 0x18ac <fputc+0x46>
    1880:	47 81       	ldd	r20, Z+7	; 0x07
    1882:	50 85       	ldd	r21, Z+8	; 0x08
    1884:	25 81       	ldd	r18, Z+5	; 0x05
    1886:	36 81       	ldd	r19, Z+6	; 0x06
    1888:	42 17       	cp	r20, r18
    188a:	53 07       	cpc	r21, r19
    188c:	44 f4       	brge	.+16     	; 0x189e <fputc+0x38>
    188e:	a0 81       	ld	r26, Z
    1890:	b1 81       	ldd	r27, Z+1	; 0x01
    1892:	9d 01       	movw	r18, r26
    1894:	2f 5f       	subi	r18, 0xFF	; 255
    1896:	3f 4f       	sbci	r19, 0xFF	; 255
    1898:	31 83       	std	Z+1, r19	; 0x01
    189a:	20 83       	st	Z, r18
    189c:	8c 93       	st	X, r24
    189e:	27 81       	ldd	r18, Z+7	; 0x07
    18a0:	30 85       	ldd	r19, Z+8	; 0x08
    18a2:	2f 5f       	subi	r18, 0xFF	; 255
    18a4:	3f 4f       	sbci	r19, 0xFF	; 255
    18a6:	30 87       	std	Z+8, r19	; 0x08
    18a8:	27 83       	std	Z+7, r18	; 0x07
    18aa:	14 c0       	rjmp	.+40     	; 0x18d4 <fputc+0x6e>
    18ac:	8b 01       	movw	r16, r22
    18ae:	ec 01       	movw	r28, r24
    18b0:	fb 01       	movw	r30, r22
    18b2:	01 84       	ldd	r0, Z+9	; 0x09
    18b4:	f2 85       	ldd	r31, Z+10	; 0x0a
    18b6:	e0 2d       	mov	r30, r0
    18b8:	09 95       	icall
    18ba:	89 2b       	or	r24, r25
    18bc:	e1 f6       	brne	.-72     	; 0x1876 <fputc+0x10>
    18be:	d8 01       	movw	r26, r16
    18c0:	17 96       	adiw	r26, 0x07	; 7
    18c2:	8d 91       	ld	r24, X+
    18c4:	9c 91       	ld	r25, X
    18c6:	18 97       	sbiw	r26, 0x08	; 8
    18c8:	01 96       	adiw	r24, 0x01	; 1
    18ca:	18 96       	adiw	r26, 0x08	; 8
    18cc:	9c 93       	st	X, r25
    18ce:	8e 93       	st	-X, r24
    18d0:	17 97       	sbiw	r26, 0x07	; 7
    18d2:	ce 01       	movw	r24, r28
    18d4:	df 91       	pop	r29
    18d6:	cf 91       	pop	r28
    18d8:	1f 91       	pop	r17
    18da:	0f 91       	pop	r16
    18dc:	08 95       	ret

Disassembly of section .text.avrlibc:

00001db6 <printf>:
    1db6:	a0 e0       	ldi	r26, 0x00	; 0
    1db8:	b0 e0       	ldi	r27, 0x00	; 0
    1dba:	e1 ee       	ldi	r30, 0xE1	; 225
    1dbc:	fe e0       	ldi	r31, 0x0E	; 14
    1dbe:	0c 94 4e 0e 	jmp	0x1c9c	; 0x1c9c <__prologue_saves__+0x20>
    1dc2:	9e 01       	movw	r18, r28
    1dc4:	2b 5f       	subi	r18, 0xFB	; 251
    1dc6:	3f 4f       	sbci	r19, 0xFF	; 255
    1dc8:	f9 01       	movw	r30, r18
    1dca:	41 91       	ld	r20, Z+
    1dcc:	51 91       	ld	r21, Z+
    1dce:	61 91       	ld	r22, Z+
    1dd0:	9f 01       	movw	r18, r30
    1dd2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__iob+0x2>
    1dd6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__iob+0x3>
    1dda:	0e 94 f6 00 	call	0x1ec	; 0x1ec <vfprintf>
    1dde:	e2 e0       	ldi	r30, 0x02	; 2
    1de0:	0c 94 86 0e 	jmp	0x1d0c	; 0x1d0c <__epilogue_restores__+0x20>

Disassembly of section .text.avrlibc:

00001454 <__ultoa_invert>:
    1454:	fa 01       	movw	r30, r20
    1456:	aa 27       	eor	r26, r26
    1458:	28 30       	cpi	r18, 0x08	; 8
    145a:	51 f1       	breq	.+84     	; 0x14b0 <__ultoa_invert+0x5c>
    145c:	20 31       	cpi	r18, 0x10	; 16
    145e:	81 f1       	breq	.+96     	; 0x14c0 <__ultoa_invert+0x6c>
    1460:	e8 94       	clt
    1462:	6f 93       	push	r22
    1464:	6e 7f       	andi	r22, 0xFE	; 254
    1466:	6e 5f       	subi	r22, 0xFE	; 254
    1468:	7f 4f       	sbci	r23, 0xFF	; 255
    146a:	8f 4f       	sbci	r24, 0xFF	; 255
    146c:	9f 4f       	sbci	r25, 0xFF	; 255
    146e:	af 4f       	sbci	r26, 0xFF	; 255
    1470:	b1 e0       	ldi	r27, 0x01	; 1
    1472:	3e d0       	rcall	.+124    	; 0x14f0 <__ultoa_invert+0x9c>
    1474:	b4 e0       	ldi	r27, 0x04	; 4
    1476:	3c d0       	rcall	.+120    	; 0x14f0 <__ultoa_invert+0x9c>
    1478:	67 0f       	add	r22, r23
    147a:	78 1f       	adc	r23, r24
    147c:	89 1f       	adc	r24, r25
    147e:	9a 1f       	adc	r25, r26
    1480:	a1 1d       	adc	r26, r1
    1482:	68 0f       	add	r22, r24
    1484:	79 1f       	adc	r23, r25
    1486:	8a 1f       	adc	r24, r26
    1488:	91 1d       	adc	r25, r1
    148a:	a1 1d       	adc	r26, r1
    148c:	6a 0f       	add	r22, r26
    148e:	71 1d       	adc	r23, r1
    1490:	81 1d       	adc	r24, r1
    1492:	91 1d       	adc	r25, r1
    1494:	a1 1d       	adc	r26, r1
    1496:	20 d0       	rcall	.+64     	; 0x14d8 <__ultoa_invert+0x84>
    1498:	09 f4       	brne	.+2      	; 0x149c <__ultoa_invert+0x48>
    149a:	68 94       	set
    149c:	3f 91       	pop	r19
    149e:	2a e0       	ldi	r18, 0x0A	; 10
    14a0:	26 9f       	mul	r18, r22
    14a2:	11 24       	eor	r1, r1
    14a4:	30 19       	sub	r19, r0
    14a6:	30 5d       	subi	r19, 0xD0	; 208
    14a8:	31 93       	st	Z+, r19
    14aa:	de f6       	brtc	.-74     	; 0x1462 <__ultoa_invert+0xe>
    14ac:	cf 01       	movw	r24, r30
    14ae:	08 95       	ret
    14b0:	46 2f       	mov	r20, r22
    14b2:	47 70       	andi	r20, 0x07	; 7
    14b4:	40 5d       	subi	r20, 0xD0	; 208
    14b6:	41 93       	st	Z+, r20
    14b8:	b3 e0       	ldi	r27, 0x03	; 3
    14ba:	0f d0       	rcall	.+30     	; 0x14da <__ultoa_invert+0x86>
    14bc:	c9 f7       	brne	.-14     	; 0x14b0 <__ultoa_invert+0x5c>
    14be:	f6 cf       	rjmp	.-20     	; 0x14ac <__ultoa_invert+0x58>
    14c0:	46 2f       	mov	r20, r22
    14c2:	4f 70       	andi	r20, 0x0F	; 15
    14c4:	40 5d       	subi	r20, 0xD0	; 208
    14c6:	4a 33       	cpi	r20, 0x3A	; 58
    14c8:	18 f0       	brcs	.+6      	; 0x14d0 <__ultoa_invert+0x7c>
    14ca:	49 5d       	subi	r20, 0xD9	; 217
    14cc:	31 fd       	sbrc	r19, 1
    14ce:	40 52       	subi	r20, 0x20	; 32
    14d0:	41 93       	st	Z+, r20
    14d2:	02 d0       	rcall	.+4      	; 0x14d8 <__ultoa_invert+0x84>
    14d4:	a9 f7       	brne	.-22     	; 0x14c0 <__ultoa_invert+0x6c>
    14d6:	ea cf       	rjmp	.-44     	; 0x14ac <__ultoa_invert+0x58>
    14d8:	b4 e0       	ldi	r27, 0x04	; 4
    14da:	a6 95       	lsr	r26
    14dc:	97 95       	ror	r25
    14de:	87 95       	ror	r24
    14e0:	77 95       	ror	r23
    14e2:	67 95       	ror	r22
    14e4:	ba 95       	dec	r27
    14e6:	c9 f7       	brne	.-14     	; 0x14da <__ultoa_invert+0x86>
    14e8:	00 97       	sbiw	r24, 0x00	; 0
    14ea:	61 05       	cpc	r22, r1
    14ec:	71 05       	cpc	r23, r1
    14ee:	08 95       	ret
    14f0:	9b 01       	movw	r18, r22
    14f2:	ac 01       	movw	r20, r24
    14f4:	0a 2e       	mov	r0, r26
    14f6:	06 94       	lsr	r0
    14f8:	57 95       	ror	r21
    14fa:	47 95       	ror	r20
    14fc:	37 95       	ror	r19
    14fe:	27 95       	ror	r18
    1500:	ba 95       	dec	r27
    1502:	c9 f7       	brne	.-14     	; 0x14f6 <__ultoa_invert+0xa2>
    1504:	62 0f       	add	r22, r18
    1506:	73 1f       	adc	r23, r19
    1508:	84 1f       	adc	r24, r20
    150a:	95 1f       	adc	r25, r21
    150c:	a0 1d       	adc	r26, r0
    150e:	08 95       	ret

Disassembly of section .text.avrlibc:

00001cb4 <calloc>:
    1cb4:	0f 93       	push	r16
    1cb6:	1f 93       	push	r17
    1cb8:	cf 93       	push	r28
    1cba:	df 93       	push	r29
    1cbc:	86 9f       	mul	r24, r22
    1cbe:	80 01       	movw	r16, r0
    1cc0:	87 9f       	mul	r24, r23
    1cc2:	10 0d       	add	r17, r0
    1cc4:	96 9f       	mul	r25, r22
    1cc6:	10 0d       	add	r17, r0
    1cc8:	11 24       	eor	r1, r1
    1cca:	c8 01       	movw	r24, r16
    1ccc:	0e 94 e6 05 	call	0xbcc	; 0xbcc <malloc>
    1cd0:	ec 01       	movw	r28, r24
    1cd2:	00 97       	sbiw	r24, 0x00	; 0
    1cd4:	29 f0       	breq	.+10     	; 0x1ce0 <calloc+0x2c>
    1cd6:	a8 01       	movw	r20, r16
    1cd8:	60 e0       	ldi	r22, 0x00	; 0
    1cda:	70 e0       	ldi	r23, 0x00	; 0
    1cdc:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <memset>
    1ce0:	ce 01       	movw	r24, r28
    1ce2:	df 91       	pop	r29
    1ce4:	cf 91       	pop	r28
    1ce6:	1f 91       	pop	r17
    1ce8:	0f 91       	pop	r16
    1cea:	08 95       	ret

Disassembly of section .text.avrlibc:

00000bcc <malloc>:
 bcc:	0f 93       	push	r16
 bce:	1f 93       	push	r17
 bd0:	cf 93       	push	r28
 bd2:	df 93       	push	r29
 bd4:	82 30       	cpi	r24, 0x02	; 2
 bd6:	91 05       	cpc	r25, r1
 bd8:	10 f4       	brcc	.+4      	; 0xbde <malloc+0x12>
 bda:	82 e0       	ldi	r24, 0x02	; 2
 bdc:	90 e0       	ldi	r25, 0x00	; 0
 bde:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__flp>
 be2:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <__flp+0x1>
 be6:	20 e0       	ldi	r18, 0x00	; 0
 be8:	30 e0       	ldi	r19, 0x00	; 0
 bea:	a0 e0       	ldi	r26, 0x00	; 0
 bec:	b0 e0       	ldi	r27, 0x00	; 0
 bee:	30 97       	sbiw	r30, 0x00	; 0
 bf0:	19 f1       	breq	.+70     	; 0xc38 <malloc+0x6c>
 bf2:	40 81       	ld	r20, Z
 bf4:	51 81       	ldd	r21, Z+1	; 0x01
 bf6:	02 81       	ldd	r16, Z+2	; 0x02
 bf8:	13 81       	ldd	r17, Z+3	; 0x03
 bfa:	48 17       	cp	r20, r24
 bfc:	59 07       	cpc	r21, r25
 bfe:	c8 f0       	brcs	.+50     	; 0xc32 <malloc+0x66>
 c00:	84 17       	cp	r24, r20
 c02:	95 07       	cpc	r25, r21
 c04:	69 f4       	brne	.+26     	; 0xc20 <malloc+0x54>
 c06:	10 97       	sbiw	r26, 0x00	; 0
 c08:	31 f0       	breq	.+12     	; 0xc16 <malloc+0x4a>
 c0a:	12 96       	adiw	r26, 0x02	; 2
 c0c:	0c 93       	st	X, r16
 c0e:	12 97       	sbiw	r26, 0x02	; 2
 c10:	13 96       	adiw	r26, 0x03	; 3
 c12:	1c 93       	st	X, r17
 c14:	27 c0       	rjmp	.+78     	; 0xc64 <malloc+0x98>
 c16:	00 93 0a 01 	sts	0x010A, r16	; 0x80010a <__flp>
 c1a:	10 93 0b 01 	sts	0x010B, r17	; 0x80010b <__flp+0x1>
 c1e:	22 c0       	rjmp	.+68     	; 0xc64 <malloc+0x98>
 c20:	21 15       	cp	r18, r1
 c22:	31 05       	cpc	r19, r1
 c24:	19 f0       	breq	.+6      	; 0xc2c <malloc+0x60>
 c26:	42 17       	cp	r20, r18
 c28:	53 07       	cpc	r21, r19
 c2a:	18 f4       	brcc	.+6      	; 0xc32 <malloc+0x66>
 c2c:	9a 01       	movw	r18, r20
 c2e:	bd 01       	movw	r22, r26
 c30:	ef 01       	movw	r28, r30
 c32:	df 01       	movw	r26, r30
 c34:	f8 01       	movw	r30, r16
 c36:	db cf       	rjmp	.-74     	; 0xbee <malloc+0x22>
 c38:	21 15       	cp	r18, r1
 c3a:	31 05       	cpc	r19, r1
 c3c:	f9 f0       	breq	.+62     	; 0xc7c <malloc+0xb0>
 c3e:	28 1b       	sub	r18, r24
 c40:	39 0b       	sbc	r19, r25
 c42:	24 30       	cpi	r18, 0x04	; 4
 c44:	31 05       	cpc	r19, r1
 c46:	80 f4       	brcc	.+32     	; 0xc68 <malloc+0x9c>
 c48:	8a 81       	ldd	r24, Y+2	; 0x02
 c4a:	9b 81       	ldd	r25, Y+3	; 0x03
 c4c:	61 15       	cp	r22, r1
 c4e:	71 05       	cpc	r23, r1
 c50:	21 f0       	breq	.+8      	; 0xc5a <malloc+0x8e>
 c52:	fb 01       	movw	r30, r22
 c54:	93 83       	std	Z+3, r25	; 0x03
 c56:	82 83       	std	Z+2, r24	; 0x02
 c58:	04 c0       	rjmp	.+8      	; 0xc62 <malloc+0x96>
 c5a:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__flp+0x1>
 c5e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__flp>
 c62:	fe 01       	movw	r30, r28
 c64:	32 96       	adiw	r30, 0x02	; 2
 c66:	44 c0       	rjmp	.+136    	; 0xcf0 <malloc+0x124>
 c68:	fe 01       	movw	r30, r28
 c6a:	e2 0f       	add	r30, r18
 c6c:	f3 1f       	adc	r31, r19
 c6e:	81 93       	st	Z+, r24
 c70:	91 93       	st	Z+, r25
 c72:	22 50       	subi	r18, 0x02	; 2
 c74:	31 09       	sbc	r19, r1
 c76:	39 83       	std	Y+1, r19	; 0x01
 c78:	28 83       	st	Y, r18
 c7a:	3a c0       	rjmp	.+116    	; 0xcf0 <malloc+0x124>
 c7c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 c80:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 c84:	23 2b       	or	r18, r19
 c86:	41 f4       	brne	.+16     	; 0xc98 <malloc+0xcc>
 c88:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_start>
 c8c:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_start+0x1>
 c90:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <__brkval+0x1>
 c94:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <__brkval>
 c98:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__malloc_heap_end>
 c9c:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__malloc_heap_end+0x1>
 ca0:	21 15       	cp	r18, r1
 ca2:	31 05       	cpc	r19, r1
 ca4:	41 f4       	brne	.+16     	; 0xcb6 <malloc+0xea>
 ca6:	2d b7       	in	r18, 0x3d	; 61
 ca8:	3e b7       	in	r19, 0x3e	; 62
 caa:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <__malloc_margin>
 cae:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <__malloc_margin+0x1>
 cb2:	24 1b       	sub	r18, r20
 cb4:	35 0b       	sbc	r19, r21
 cb6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__brkval>
 cba:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__brkval+0x1>
 cbe:	e2 17       	cp	r30, r18
 cc0:	f3 07       	cpc	r31, r19
 cc2:	a0 f4       	brcc	.+40     	; 0xcec <malloc+0x120>
 cc4:	2e 1b       	sub	r18, r30
 cc6:	3f 0b       	sbc	r19, r31
 cc8:	28 17       	cp	r18, r24
 cca:	39 07       	cpc	r19, r25
 ccc:	78 f0       	brcs	.+30     	; 0xcec <malloc+0x120>
 cce:	ac 01       	movw	r20, r24
 cd0:	4e 5f       	subi	r20, 0xFE	; 254
 cd2:	5f 4f       	sbci	r21, 0xFF	; 255
 cd4:	24 17       	cp	r18, r20
 cd6:	35 07       	cpc	r19, r21
 cd8:	48 f0       	brcs	.+18     	; 0xcec <malloc+0x120>
 cda:	4e 0f       	add	r20, r30
 cdc:	5f 1f       	adc	r21, r31
 cde:	50 93 09 01 	sts	0x0109, r21	; 0x800109 <__brkval+0x1>
 ce2:	40 93 08 01 	sts	0x0108, r20	; 0x800108 <__brkval>
 ce6:	81 93       	st	Z+, r24
 ce8:	91 93       	st	Z+, r25
 cea:	02 c0       	rjmp	.+4      	; 0xcf0 <malloc+0x124>
 cec:	e0 e0       	ldi	r30, 0x00	; 0
 cee:	f0 e0       	ldi	r31, 0x00	; 0
 cf0:	cf 01       	movw	r24, r30
 cf2:	df 91       	pop	r29
 cf4:	cf 91       	pop	r28
 cf6:	1f 91       	pop	r17
 cf8:	0f 91       	pop	r16
 cfa:	08 95       	ret

00000cfc <free>:
 cfc:	cf 93       	push	r28
 cfe:	df 93       	push	r29
 d00:	00 97       	sbiw	r24, 0x00	; 0
 d02:	09 f4       	brne	.+2      	; 0xd06 <free+0xa>
 d04:	81 c0       	rjmp	.+258    	; 0xe08 <free+0x10c>
 d06:	fc 01       	movw	r30, r24
 d08:	32 97       	sbiw	r30, 0x02	; 2
 d0a:	13 82       	std	Z+3, r1	; 0x03
 d0c:	12 82       	std	Z+2, r1	; 0x02
 d0e:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <__flp>
 d12:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <__flp+0x1>
 d16:	10 97       	sbiw	r26, 0x00	; 0
 d18:	81 f4       	brne	.+32     	; 0xd3a <free+0x3e>
 d1a:	20 81       	ld	r18, Z
 d1c:	31 81       	ldd	r19, Z+1	; 0x01
 d1e:	82 0f       	add	r24, r18
 d20:	93 1f       	adc	r25, r19
 d22:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 d26:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 d2a:	28 17       	cp	r18, r24
 d2c:	39 07       	cpc	r19, r25
 d2e:	51 f5       	brne	.+84     	; 0xd84 <free+0x88>
 d30:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__brkval+0x1>
 d34:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__brkval>
 d38:	67 c0       	rjmp	.+206    	; 0xe08 <free+0x10c>
 d3a:	ed 01       	movw	r28, r26
 d3c:	20 e0       	ldi	r18, 0x00	; 0
 d3e:	30 e0       	ldi	r19, 0x00	; 0
 d40:	ce 17       	cp	r28, r30
 d42:	df 07       	cpc	r29, r31
 d44:	40 f4       	brcc	.+16     	; 0xd56 <free+0x5a>
 d46:	4a 81       	ldd	r20, Y+2	; 0x02
 d48:	5b 81       	ldd	r21, Y+3	; 0x03
 d4a:	9e 01       	movw	r18, r28
 d4c:	41 15       	cp	r20, r1
 d4e:	51 05       	cpc	r21, r1
 d50:	f1 f0       	breq	.+60     	; 0xd8e <free+0x92>
 d52:	ea 01       	movw	r28, r20
 d54:	f5 cf       	rjmp	.-22     	; 0xd40 <free+0x44>
 d56:	d3 83       	std	Z+3, r29	; 0x03
 d58:	c2 83       	std	Z+2, r28	; 0x02
 d5a:	40 81       	ld	r20, Z
 d5c:	51 81       	ldd	r21, Z+1	; 0x01
 d5e:	84 0f       	add	r24, r20
 d60:	95 1f       	adc	r25, r21
 d62:	c8 17       	cp	r28, r24
 d64:	d9 07       	cpc	r29, r25
 d66:	59 f4       	brne	.+22     	; 0xd7e <free+0x82>
 d68:	88 81       	ld	r24, Y
 d6a:	99 81       	ldd	r25, Y+1	; 0x01
 d6c:	84 0f       	add	r24, r20
 d6e:	95 1f       	adc	r25, r21
 d70:	02 96       	adiw	r24, 0x02	; 2
 d72:	91 83       	std	Z+1, r25	; 0x01
 d74:	80 83       	st	Z, r24
 d76:	8a 81       	ldd	r24, Y+2	; 0x02
 d78:	9b 81       	ldd	r25, Y+3	; 0x03
 d7a:	93 83       	std	Z+3, r25	; 0x03
 d7c:	82 83       	std	Z+2, r24	; 0x02
 d7e:	21 15       	cp	r18, r1
 d80:	31 05       	cpc	r19, r1
 d82:	29 f4       	brne	.+10     	; 0xd8e <free+0x92>
 d84:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__flp+0x1>
 d88:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__flp>
 d8c:	3d c0       	rjmp	.+122    	; 0xe08 <free+0x10c>
 d8e:	e9 01       	movw	r28, r18
 d90:	fb 83       	std	Y+3, r31	; 0x03
 d92:	ea 83       	std	Y+2, r30	; 0x02
 d94:	49 91       	ld	r20, Y+
 d96:	59 91       	ld	r21, Y+
 d98:	c4 0f       	add	r28, r20
 d9a:	d5 1f       	adc	r29, r21
 d9c:	ec 17       	cp	r30, r28
 d9e:	fd 07       	cpc	r31, r29
 da0:	61 f4       	brne	.+24     	; 0xdba <free+0xbe>
 da2:	80 81       	ld	r24, Z
 da4:	91 81       	ldd	r25, Z+1	; 0x01
 da6:	84 0f       	add	r24, r20
 da8:	95 1f       	adc	r25, r21
 daa:	02 96       	adiw	r24, 0x02	; 2
 dac:	e9 01       	movw	r28, r18
 dae:	99 83       	std	Y+1, r25	; 0x01
 db0:	88 83       	st	Y, r24
 db2:	82 81       	ldd	r24, Z+2	; 0x02
 db4:	93 81       	ldd	r25, Z+3	; 0x03
 db6:	9b 83       	std	Y+3, r25	; 0x03
 db8:	8a 83       	std	Y+2, r24	; 0x02
 dba:	e0 e0       	ldi	r30, 0x00	; 0
 dbc:	f0 e0       	ldi	r31, 0x00	; 0
 dbe:	12 96       	adiw	r26, 0x02	; 2
 dc0:	8d 91       	ld	r24, X+
 dc2:	9c 91       	ld	r25, X
 dc4:	13 97       	sbiw	r26, 0x03	; 3
 dc6:	00 97       	sbiw	r24, 0x00	; 0
 dc8:	19 f0       	breq	.+6      	; 0xdd0 <free+0xd4>
 dca:	fd 01       	movw	r30, r26
 dcc:	dc 01       	movw	r26, r24
 dce:	f7 cf       	rjmp	.-18     	; 0xdbe <free+0xc2>
 dd0:	8d 91       	ld	r24, X+
 dd2:	9c 91       	ld	r25, X
 dd4:	11 97       	sbiw	r26, 0x01	; 1
 dd6:	9d 01       	movw	r18, r26
 dd8:	2e 5f       	subi	r18, 0xFE	; 254
 dda:	3f 4f       	sbci	r19, 0xFF	; 255
 ddc:	82 0f       	add	r24, r18
 dde:	93 1f       	adc	r25, r19
 de0:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 de4:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 de8:	28 17       	cp	r18, r24
 dea:	39 07       	cpc	r19, r25
 dec:	69 f4       	brne	.+26     	; 0xe08 <free+0x10c>
 dee:	30 97       	sbiw	r30, 0x00	; 0
 df0:	29 f4       	brne	.+10     	; 0xdfc <free+0x100>
 df2:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <__flp+0x1>
 df6:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__flp>
 dfa:	02 c0       	rjmp	.+4      	; 0xe00 <free+0x104>
 dfc:	13 82       	std	Z+3, r1	; 0x03
 dfe:	12 82       	std	Z+2, r1	; 0x02
 e00:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <__brkval+0x1>
 e04:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <__brkval>
 e08:	df 91       	pop	r29
 e0a:	cf 91       	pop	r28
 e0c:	08 95       	ret

Disassembly of section .text.avrlibc:

00001f1e <memset>:
    1f1e:	dc 01       	movw	r26, r24
    1f20:	01 c0       	rjmp	.+2      	; 0x1f24 <memset+0x6>
    1f22:	6d 93       	st	X+, r22
    1f24:	41 50       	subi	r20, 0x01	; 1
    1f26:	50 40       	sbci	r21, 0x00	; 0
    1f28:	e0 f7       	brcc	.-8      	; 0x1f22 <memset+0x4>
    1f2a:	08 95       	ret
