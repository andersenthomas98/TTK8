
application.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001b7c  2**0
                  ALLOC, LOAD, DATA
  1 .text         000001c8  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800100  00800100  00001b7c  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00001b7c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000148  00000000  00000000  00001bd7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001e9e  00000000  00000000  00001d1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b70  00000000  00000000  00003bbd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b56  00000000  00000000  0000472d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003b8  00000000  00000000  00005284  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000032d  00000000  00000000  0000563c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b63  00000000  00000000  00005969  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e8  00000000  00000000  000064cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00001a9e  00001a9e  00001b72  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000065b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.encoder_init 0000002e  000018ce  000018ce  000019a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.encoder_read_tick 0000001e  000019ba  000019ba  00001a8e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.encoder_get_accumulated_ticks_left 00000046  00001678  00001678  0000174c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.encoder_get_accumulated_ticks_right 00000046  000016be  000016be  00001792  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_1 0000009e  0000129a  0000129a  0000136e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_2 0000009e  00001338  00001338  0000140c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.encoder_ticks_right 00000004  00800110  00800110  00001b7c  2**0
                  ALLOC
 21 .bss.encoder_ticks_left 00000004  00800114  00800114  00001b7c  2**0
                  ALLOC
 22 .text.motor_init 0000001e  000019d8  000019d8  00001aac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.set_left_motor_dir 00000020  0000199a  0000199a  00001a6e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.abs     00000030  0000189e  0000189e  00001972  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.motor_left 00000042  00001748  00001748  0000181c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.pwm_init 0000001a  000019f6  000019f6  00001aca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.pwm_set_duty_cycle_left 0000002c  0000192a  0000192a  000019fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.speed_estimator_init 00000072  00001560  00001560  00001634  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .progmemx.data 00000038  000001c8  000001c8  0000029c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 30 .text.speed_estimator_left_rad_per_s 000000b8  000011e2  000011e2  000012b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__vector_11 00000150  00000d56  00000d56  00000e2a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .bss.smoothed_rad_per_s_left 00000004  00800118  00800118  00001b7c  2**0
                  ALLOC
 33 .bss.prev_rad_per_s_left 00000004  0080011c  0080011c  00001b7c  2**0
                  ALLOC
 34 .bss.rad_per_s_left 00000004  00800120  00800120  00001b7c  2**0
                  ALLOC
 35 .bss.prev_ticks_left 00000002  00800124  00800124  00001b7c  2**0
                  ALLOC
 36 .bss.prev_ticks_right 00000002  00800126  00800126  00001b7c  2**0
                  ALLOC
 37 .bss.ticks_left 00000002  00800128  00800128  00001b7c  2**0
                  ALLOC
 38 .bss.ticks_right 00000002  0080012a  0080012a  00001b7c  2**0
                  ALLOC
 39 .text.usart_tx 0000000e  00001a10  00001a10  00001ae4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.usart_rx 0000000e  00001a1e  00001a1e  00001af2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.usart_init 00000022  00001956  00001956  00001a2a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .progmemx.data 00000017  00000200  00000200  000002d4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 43 .text.main    00000038  0000178a  0000178a  0000185e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.avrlibc.fplib 0000000e  00001a2c  00001a2c  00001b00  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.avrlibc.fplib 000000ce  00001058  00001058  0000112c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.avrlibc.fplib 0000000a  00001a7e  00001a7e  00001b52  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.avrlibc.fplib 00000008  00001a88  00001a88  00001b5c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.avrlibc.fplib 000000de  00000ea6  00000ea6  00000f7a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.avrlibc.fplib 0000005e  000015d2  000015d2  000016a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.avrlibc.fplib 0000007a  0000146e  0000146e  00001542  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.avrlibc.fplib 00000048  00001630  00001630  00001704  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.avrlibc.fplib 0000000c  00001a72  00001a72  00001b46  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.avrlibc.fplib 00000006  00001a98  00001a98  00001b6c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.avrlibc.fplib 0000000e  00001a3a  00001a3a  00001b0e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.avrlibc.fplib 0000000e  00001a48  00001a48  00001b1c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.avrlibc.fplib 00000022  00001978  00001978  00001a4c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.avrlibc.fplib 00000044  00001704  00001704  000017d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.avrlibc.fplib 0000000e  00001a56  00001a56  00001b2a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.avrlibc.fplib 00000008  00001a90  00001a90  00001b64  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.avrlibc.fplib 000000d4  00000f84  00000f84  00001058  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .progmemx.data 00000008  00000217  00000217  000002eb  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 62 .text.avrlibc 00000744  00000220  00000220  000002f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.libgcc.prologue 00000038  000017c2  000017c2  00001896  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.libgcc.prologue 00000036  00001832  00001832  00001906  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.avrlibc 000001b0  00000ba6  00000ba6  00000c7a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.avrlibc 00000036  00001868  00001868  0000193c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.avrlibc 00000098  000013d6  000013d6  000014aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.avrlibc 00000078  000014e8  000014e8  000015bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.avrlibc 0000002e  000018fc  000018fc  000019d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text.avrlibc 000000bc  00001126  00001126  000011fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.avrlibc 00000038  000017fa  000017fa  000018ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .data         00000006  0080010a  00001aa2  00001b76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 73 .text.avrlibc 00000242  00000964  00000964  00000a38  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.avrlibc 0000000e  00001a64  00001a64  00001b38  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 ba 00 	jmp	0x174	; 0x174 <__ctors_end>
   4:	0c 94 4d 09 	jmp	0x129a	; 0x129a <__vector_1>
   8:	0c 94 9c 09 	jmp	0x1338	; 0x1338 <__vector_2>
   c:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  10:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  14:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  18:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  1c:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  20:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  24:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  28:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  2c:	0c 94 ab 06 	jmp	0xd56	; 0xd56 <__vector_11>
  30:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  34:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  38:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  3c:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  40:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  44:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  48:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  4c:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  50:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  54:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  58:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  5c:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  60:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>
  64:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 0a       	sbc	r0, r17
  6c:	80 01       	movw	r16, r0
  6e:	0a 01       	movw	r0, r20
  70:	10 00       	.word	0x0010	; ????
  72:	1a a2       	std	Y+34, r1	; 0x22
  74:	01 10       	cpse	r0, r1
  76:	01 2c       	mov	r0, r1
  78:	80 00       	.word	0x0080	; ????

0000007a <__trampolines_end>:
  7a:	00 40       	sbci	r16, 0x00	; 0
  7c:	7a 10       	cpse	r7, r10
  7e:	f3 5a       	subi	r31, 0xA3	; 163
  80:	00 a0       	ldd	r0, Z+32	; 0x20
  82:	72 4e       	sbci	r23, 0xE2	; 226
  84:	18 09       	sbc	r17, r8
  86:	00 10       	cpse	r0, r0
  88:	a5 d4       	rcall	.+2378   	; 0x9d4 <malloc+0x70>
  8a:	e8 00       	.word	0x00e8	; ????
  8c:	00 e8       	ldi	r16, 0x80	; 128
  8e:	76 48       	sbci	r23, 0x86	; 134
  90:	17 00       	.word	0x0017	; ????
  92:	00 e4       	ldi	r16, 0x40	; 64
  94:	0b 54       	subi	r16, 0x4B	; 75
  96:	02 00       	.word	0x0002	; ????
  98:	00 ca       	rjmp	.-3072   	; 0xfffff49a <__eeprom_end+0xff7ef49a>
  9a:	9a 3b       	cpi	r25, 0xBA	; 186
  9c:	00 00       	nop
  9e:	00 e1       	ldi	r16, 0x10	; 16
  a0:	f5 05       	cpc	r31, r5
  a2:	00 00       	nop
  a4:	80 96       	adiw	r24, 0x20	; 32
  a6:	98 00       	.word	0x0098	; ????
  a8:	00 00       	nop
  aa:	40 42       	sbci	r20, 0x20	; 32
  ac:	0f 00       	.word	0x000f	; ????
  ae:	00 00       	nop
  b0:	a0 86       	std	Z+8, r10	; 0x08
  b2:	01 00       	.word	0x0001	; ????
  b4:	00 00       	nop
  b6:	10 27       	eor	r17, r16
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	e8 03       	fmulsu	r22, r16
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	64 00       	.word	0x0064	; ????
  c4:	00 00       	nop
  c6:	00 00       	nop
  c8:	0a 00       	.word	0x000a	; ????
  ca:	00 00       	nop
  cc:	00 00       	nop
  ce:	01 00       	.word	0x0001	; ????
  d0:	00 00       	nop
  d2:	00 00       	nop
  d4:	2c 76       	andi	r18, 0x6C	; 108
  d6:	d8 88       	ldd	r13, Y+16	; 0x10
  d8:	dc 67       	ori	r29, 0x7C	; 124
  da:	4f 08       	sbc	r4, r15
  dc:	23 df       	rcall	.-442    	; 0xffffff24 <__eeprom_end+0xff7eff24>
  de:	c1 df       	rcall	.-126    	; 0x62 <__SREG__+0x23>
  e0:	ae 59       	subi	r26, 0x9E	; 158
  e2:	e1 b1       	in	r30, 0x01	; 1
  e4:	b7 96       	adiw	r30, 0x27	; 39
  e6:	e5 e3       	ldi	r30, 0x35	; 53
  e8:	e4 53       	subi	r30, 0x34	; 52
  ea:	c6 3a       	cpi	r28, 0xA6	; 166
  ec:	e6 51       	subi	r30, 0x16	; 22
  ee:	99 76       	andi	r25, 0x69	; 105
  f0:	96 e8       	ldi	r25, 0x86	; 134
  f2:	e6 c2       	rjmp	.+1484   	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
  f4:	84 26       	eor	r8, r20
  f6:	eb 89       	ldd	r30, Y+19	; 0x13
  f8:	8c 9b       	sbis	0x11, 4	; 17
  fa:	62 ed       	ldi	r22, 0xD2	; 210
  fc:	40 7c       	andi	r20, 0xC0	; 192
  fe:	6f fc       	.word	0xfc6f	; ????
 100:	ef bc       	out	0x2f, r14	; 47
 102:	9c 9f       	mul	r25, r28
 104:	40 f2       	brcs	.-112    	; 0x96 <__trampolines_end+0x1c>
 106:	ba a5       	ldd	r27, Y+42	; 0x2a
 108:	6f a5       	ldd	r22, Y+47	; 0x2f
 10a:	f4 90       	lpm	r15, Z
 10c:	05 5a       	subi	r16, 0xA5	; 165
 10e:	2a f7       	brpl	.-54     	; 0xda <__trampolines_end+0x60>
 110:	5c 93       	st	X, r21
 112:	6b 6c       	ori	r22, 0xCB	; 203
 114:	f9 67       	ori	r31, 0x79	; 121
 116:	6d c1       	rjmp	.+730    	; 0x3f2 <vfprintf+0x1d2>
 118:	1b fc       	.word	0xfc1b	; ????
 11a:	e0 e4       	ldi	r30, 0x40	; 64
 11c:	0d 47       	sbci	r16, 0x7D	; 125
 11e:	fe f5       	brtc	.+126    	; 0x19e <__do_copy_data+0x1e>
 120:	20 e6       	ldi	r18, 0x60	; 96
 122:	b5 00       	.word	0x00b5	; ????
 124:	d0 ed       	ldi	r29, 0xD0	; 208
 126:	90 2e       	mov	r9, r16
 128:	03 00       	.word	0x0003	; ????
 12a:	94 35       	cpi	r25, 0x54	; 84
 12c:	77 05       	cpc	r23, r7
 12e:	00 80       	ld	r0, Z
 130:	84 1e       	adc	r8, r20
 132:	08 00       	.word	0x0008	; ????
 134:	00 20       	and	r0, r0
 136:	4e 0a       	sbc	r4, r30
 138:	00 00       	nop
 13a:	00 c8       	rjmp	.-4096   	; 0xfffff13c <__eeprom_end+0xff7ef13c>
 13c:	0c 33       	cpi	r16, 0x3C	; 60
 13e:	33 33       	cpi	r19, 0x33	; 51
 140:	33 0f       	add	r19, r19
 142:	98 6e       	ori	r25, 0xE8	; 232
 144:	12 83       	std	Z+2, r17	; 0x02
 146:	11 41       	sbci	r17, 0x11	; 17
 148:	ef 8d       	ldd	r30, Y+31	; 0x1f
 14a:	21 14       	cp	r2, r1
 14c:	89 3b       	cpi	r24, 0xB9	; 185
 14e:	e6 55       	subi	r30, 0x56	; 86
 150:	16 cf       	rjmp	.-468    	; 0xffffff7e <__eeprom_end+0xff7eff7e>
 152:	fe e6       	ldi	r31, 0x6E	; 110
 154:	db 18       	sub	r13, r11
 156:	d1 84       	ldd	r13, Z+9	; 0x09
 158:	4b 38       	cpi	r20, 0x8B	; 139
 15a:	1b f7       	brvc	.-58     	; 0x122 <__trampolines_end+0xa8>
 15c:	7c 1d       	adc	r23, r12
 15e:	90 1d       	adc	r25, r0
 160:	a4 bb       	out	0x14, r26	; 20
 162:	e4 24       	eor	r14, r4
 164:	20 32       	cpi	r18, 0x20	; 32
 166:	84 72       	andi	r24, 0x24	; 36
 168:	5e 22       	and	r5, r30
 16a:	81 00       	.word	0x0081	; ????
 16c:	c9 f1       	breq	.+114    	; 0x1e0 <_etext+0x18>
 16e:	24 ec       	ldi	r18, 0xC4	; 196
 170:	a1 e5       	ldi	r26, 0x51	; 81
 172:	3d 27       	eor	r19, r29

00000174 <__ctors_end>:
 174:	11 24       	eor	r1, r1
 176:	1f be       	out	0x3f, r1	; 63
 178:	cf ef       	ldi	r28, 0xFF	; 255
 17a:	d8 e0       	ldi	r29, 0x08	; 8
 17c:	de bf       	out	0x3e, r29	; 62
 17e:	cd bf       	out	0x3d, r28	; 61

00000180 <__do_copy_data>:
 180:	e8 e6       	ldi	r30, 0x68	; 104
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	40 e0       	ldi	r20, 0x00	; 0
 186:	17 c0       	rjmp	.+46     	; 0x1b6 <__do_clear_bss+0x8>
 188:	b5 91       	lpm	r27, Z+
 18a:	a5 91       	lpm	r26, Z+
 18c:	35 91       	lpm	r19, Z+
 18e:	25 91       	lpm	r18, Z+
 190:	05 91       	lpm	r16, Z+
 192:	07 fd       	sbrc	r16, 7
 194:	0c c0       	rjmp	.+24     	; 0x1ae <__do_clear_bss>
 196:	95 91       	lpm	r25, Z+
 198:	85 91       	lpm	r24, Z+
 19a:	ef 01       	movw	r28, r30
 19c:	f9 2f       	mov	r31, r25
 19e:	e8 2f       	mov	r30, r24
 1a0:	05 90       	lpm	r0, Z+
 1a2:	0d 92       	st	X+, r0
 1a4:	a2 17       	cp	r26, r18
 1a6:	b3 07       	cpc	r27, r19
 1a8:	d9 f7       	brne	.-10     	; 0x1a0 <__do_copy_data+0x20>
 1aa:	fe 01       	movw	r30, r28
 1ac:	04 c0       	rjmp	.+8      	; 0x1b6 <__do_clear_bss+0x8>

000001ae <__do_clear_bss>:
 1ae:	1d 92       	st	X+, r1
 1b0:	a2 17       	cp	r26, r18
 1b2:	b3 07       	cpc	r27, r19
 1b4:	e1 f7       	brne	.-8      	; 0x1ae <__do_clear_bss>
 1b6:	e9 37       	cpi	r30, 0x79	; 121
 1b8:	f4 07       	cpc	r31, r20
 1ba:	31 f7       	brne	.-52     	; 0x188 <__do_copy_data+0x8>
 1bc:	0e 94 c5 0b 	call	0x178a	; 0x178a <main>
 1c0:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <_exit>

000001c4 <_exit>:
 1c4:	f8 94       	cli

000001c6 <__stop_program>:
 1c6:	ff cf       	rjmp	.-2      	; 0x1c6 <__stop_program>

Disassembly of section .text:

00001a9e <__bad_interrupt>:
    1a9e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.encoder_init:

000018ce <encoder_init>:
static volatile long encoder_ticks_left = 0;
static volatile long encoder_ticks_right = 0;

void encoder_init(void) {
	
	cli();
    18ce:	f8 94       	cli
	
	// Set digital inputs with internal pull-up (unsure if internal pull-up should be used)
	DDRD &= ~(1 << ENCA1);
    18d0:	8a b1       	in	r24, 0x0a	; 10
    18d2:	8b 7f       	andi	r24, 0xFB	; 251
    18d4:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA1);
    18d6:	8b b1       	in	r24, 0x0b	; 11
    18d8:	84 60       	ori	r24, 0x04	; 4
    18da:	8b b9       	out	0x0b, r24	; 11
	
	DDRD &= ~(1 << ENCA2);
    18dc:	8a b1       	in	r24, 0x0a	; 10
    18de:	87 7f       	andi	r24, 0xF7	; 247
    18e0:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA2);
    18e2:	8b b1       	in	r24, 0x0b	; 11
    18e4:	88 60       	ori	r24, 0x08	; 8
    18e6:	8b b9       	out	0x0b, r24	; 11
	
	// Rising edge of INT0 and INT1 will generate an interrupt request
	EICRA |= (1 << ISC00) | (1 << ISC01) | (1 << ISC10) | (1 << ISC11);
    18e8:	e9 e6       	ldi	r30, 0x69	; 105
    18ea:	f0 e0       	ldi	r31, 0x00	; 0
    18ec:	80 81       	ld	r24, Z
    18ee:	8f 60       	ori	r24, 0x0F	; 15
    18f0:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0) | (1 << INT1);
    18f2:	8d b3       	in	r24, 0x1d	; 29
    18f4:	83 60       	ori	r24, 0x03	; 3
    18f6:	8d bb       	out	0x1d, r24	; 29
	
	// Enable global interrupts
	sei();
    18f8:	78 94       	sei
    18fa:	08 95       	ret

Disassembly of section .text.encoder_read_tick:

000019ba <encoder_read_tick>:
	
	
}

int encoder_read_tick(int encoder_pin) {
	if (PIND & (1<<encoder_pin)) {
    19ba:	29 b1       	in	r18, 0x09	; 9
    19bc:	30 e0       	ldi	r19, 0x00	; 0
    19be:	02 c0       	rjmp	.+4      	; 0x19c4 <encoder_read_tick+0xa>
    19c0:	35 95       	asr	r19
    19c2:	27 95       	ror	r18
    19c4:	8a 95       	dec	r24
    19c6:	e2 f7       	brpl	.-8      	; 0x19c0 <encoder_read_tick+0x6>
    19c8:	c9 01       	movw	r24, r18
    19ca:	81 70       	andi	r24, 0x01	; 1
    19cc:	99 27       	eor	r25, r25
    19ce:	20 ff       	sbrs	r18, 0
    19d0:	02 c0       	rjmp	.+4      	; 0x19d6 <encoder_read_tick+0x1c>
		return 1;
    19d2:	81 e0       	ldi	r24, 0x01	; 1
    19d4:	90 e0       	ldi	r25, 0x00	; 0
	}
	return 0;
}
    19d6:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_left:

00001678 <encoder_get_accumulated_ticks_left>:

long encoder_get_accumulated_ticks_left(void) {
    1678:	cf 93       	push	r28
    167a:	df 93       	push	r29
    167c:	1f 92       	push	r1
    167e:	cd b7       	in	r28, 0x3d	; 61
    1680:	de b7       	in	r29, 0x3e	; 62
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1682:	8f b7       	in	r24, 0x3f	; 63
    1684:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1686:	f8 94       	cli
    1688:	81 e0       	ldi	r24, 0x01	; 1
    168a:	09 c0       	rjmp	.+18     	; 0x169e <encoder_get_accumulated_ticks_left+0x26>
		ticks = encoder_ticks_left;
    168c:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <encoder_ticks_left>
    1690:	50 91 15 01 	lds	r21, 0x0115	; 0x800115 <encoder_ticks_left+0x1>
    1694:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <encoder_ticks_left+0x2>
    1698:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <encoder_ticks_left+0x3>
	return 0;
}

long encoder_get_accumulated_ticks_left(void) {
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    169c:	80 e0       	ldi	r24, 0x00	; 0
    169e:	81 11       	cpse	r24, r1
    16a0:	f5 cf       	rjmp	.-22     	; 0x168c <encoder_get_accumulated_ticks_left+0x14>
    16a2:	ce 01       	movw	r24, r28
    16a4:	01 96       	adiw	r24, 0x01	; 1
    16a6:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    16a8:	fc 01       	movw	r30, r24
    16aa:	84 91       	lpm	r24, Z
    16ac:	a7 fd       	sbrc	r26, 7
    16ae:	80 81       	ld	r24, Z
    16b0:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_left;
	}
	return ticks;
}
    16b2:	cb 01       	movw	r24, r22
    16b4:	ba 01       	movw	r22, r20
    16b6:	0f 90       	pop	r0
    16b8:	df 91       	pop	r29
    16ba:	cf 91       	pop	r28
    16bc:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_right:

000016be <encoder_get_accumulated_ticks_right>:

long encoder_get_accumulated_ticks_right(void) {
    16be:	cf 93       	push	r28
    16c0:	df 93       	push	r29
    16c2:	1f 92       	push	r1
    16c4:	cd b7       	in	r28, 0x3d	; 61
    16c6:	de b7       	in	r29, 0x3e	; 62
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    16c8:	8f b7       	in	r24, 0x3f	; 63
    16ca:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    16cc:	f8 94       	cli
    16ce:	81 e0       	ldi	r24, 0x01	; 1
    16d0:	09 c0       	rjmp	.+18     	; 0x16e4 <encoder_get_accumulated_ticks_right+0x26>
		ticks = encoder_ticks_right;
    16d2:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <encoder_ticks_right>
    16d6:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <encoder_ticks_right+0x1>
    16da:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <encoder_ticks_right+0x2>
    16de:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <encoder_ticks_right+0x3>
	return ticks;
}

long encoder_get_accumulated_ticks_right(void) {
	long ticks;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    16e2:	80 e0       	ldi	r24, 0x00	; 0
    16e4:	81 11       	cpse	r24, r1
    16e6:	f5 cf       	rjmp	.-22     	; 0x16d2 <encoder_get_accumulated_ticks_right+0x14>
    16e8:	ce 01       	movw	r24, r28
    16ea:	01 96       	adiw	r24, 0x01	; 1
    16ec:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    16ee:	fc 01       	movw	r30, r24
    16f0:	84 91       	lpm	r24, Z
    16f2:	a7 fd       	sbrc	r26, 7
    16f4:	80 81       	ld	r24, Z
    16f6:	8f bf       	out	0x3f, r24	; 63
		ticks = encoder_ticks_right;
	}
	return ticks;
}
    16f8:	cb 01       	movw	r24, r22
    16fa:	ba 01       	movw	r22, r20
    16fc:	0f 90       	pop	r0
    16fe:	df 91       	pop	r29
    1700:	cf 91       	pop	r28
    1702:	08 95       	ret

Disassembly of section .text.__vector_1:

0000129a <__vector_1>:



// Interrupt service routine for INT0
// Triggered on rising edge of channel A encoder signal for left wheel
ISR(INT0_vect) {
    129a:	1f 92       	push	r1
    129c:	0f 92       	push	r0
    129e:	0f b6       	in	r0, 0x3f	; 63
    12a0:	0f 92       	push	r0
    12a2:	11 24       	eor	r1, r1
    12a4:	2f 93       	push	r18
    12a6:	3f 93       	push	r19
    12a8:	4f 93       	push	r20
    12aa:	5f 93       	push	r21
    12ac:	6f 93       	push	r22
    12ae:	7f 93       	push	r23
    12b0:	8f 93       	push	r24
    12b2:	9f 93       	push	r25
    12b4:	af 93       	push	r26
    12b6:	bf 93       	push	r27
    12b8:	ef 93       	push	r30
    12ba:	ff 93       	push	r31
	int encb1 = encoder_read_tick(ENCB1);
    12bc:	84 e0       	ldi	r24, 0x04	; 4
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <encoder_read_tick>
	if (encb1) {
    12c4:	89 2b       	or	r24, r25
    12c6:	a1 f0       	breq	.+40     	; 0x12f0 <__vector_1+0x56>
		encoder_ticks_left++;
    12c8:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <encoder_ticks_left>
    12cc:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <encoder_ticks_left+0x1>
    12d0:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <encoder_ticks_left+0x2>
    12d4:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <encoder_ticks_left+0x3>
    12d8:	01 96       	adiw	r24, 0x01	; 1
    12da:	a1 1d       	adc	r26, r1
    12dc:	b1 1d       	adc	r27, r1
    12de:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <encoder_ticks_left>
    12e2:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <encoder_ticks_left+0x1>
    12e6:	a0 93 16 01 	sts	0x0116, r26	; 0x800116 <encoder_ticks_left+0x2>
    12ea:	b0 93 17 01 	sts	0x0117, r27	; 0x800117 <encoder_ticks_left+0x3>
    12ee:	13 c0       	rjmp	.+38     	; 0x1316 <__vector_1+0x7c>
	} else {
		encoder_ticks_left--;
    12f0:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <encoder_ticks_left>
    12f4:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <encoder_ticks_left+0x1>
    12f8:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <encoder_ticks_left+0x2>
    12fc:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <encoder_ticks_left+0x3>
    1300:	01 97       	sbiw	r24, 0x01	; 1
    1302:	a1 09       	sbc	r26, r1
    1304:	b1 09       	sbc	r27, r1
    1306:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <encoder_ticks_left>
    130a:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <encoder_ticks_left+0x1>
    130e:	a0 93 16 01 	sts	0x0116, r26	; 0x800116 <encoder_ticks_left+0x2>
    1312:	b0 93 17 01 	sts	0x0117, r27	; 0x800117 <encoder_ticks_left+0x3>
	}
}
    1316:	ff 91       	pop	r31
    1318:	ef 91       	pop	r30
    131a:	bf 91       	pop	r27
    131c:	af 91       	pop	r26
    131e:	9f 91       	pop	r25
    1320:	8f 91       	pop	r24
    1322:	7f 91       	pop	r23
    1324:	6f 91       	pop	r22
    1326:	5f 91       	pop	r21
    1328:	4f 91       	pop	r20
    132a:	3f 91       	pop	r19
    132c:	2f 91       	pop	r18
    132e:	0f 90       	pop	r0
    1330:	0f be       	out	0x3f, r0	; 63
    1332:	0f 90       	pop	r0
    1334:	1f 90       	pop	r1
    1336:	18 95       	reti

Disassembly of section .text.__vector_2:

00001338 <__vector_2>:

// Interrupt service routine for INT1
// Triggered on rising edge of channel A encoder signal for right wheel
ISR(INT1_vect) {
    1338:	1f 92       	push	r1
    133a:	0f 92       	push	r0
    133c:	0f b6       	in	r0, 0x3f	; 63
    133e:	0f 92       	push	r0
    1340:	11 24       	eor	r1, r1
    1342:	2f 93       	push	r18
    1344:	3f 93       	push	r19
    1346:	4f 93       	push	r20
    1348:	5f 93       	push	r21
    134a:	6f 93       	push	r22
    134c:	7f 93       	push	r23
    134e:	8f 93       	push	r24
    1350:	9f 93       	push	r25
    1352:	af 93       	push	r26
    1354:	bf 93       	push	r27
    1356:	ef 93       	push	r30
    1358:	ff 93       	push	r31
	int encb2 = encoder_read_tick(ENCB2);
    135a:	87 e0       	ldi	r24, 0x07	; 7
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <encoder_read_tick>
	if (encb2) {
    1362:	89 2b       	or	r24, r25
    1364:	a1 f0       	breq	.+40     	; 0x138e <__vector_2+0x56>
		encoder_ticks_right++;
    1366:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <encoder_ticks_right>
    136a:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <encoder_ticks_right+0x1>
    136e:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <encoder_ticks_right+0x2>
    1372:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <encoder_ticks_right+0x3>
    1376:	01 96       	adiw	r24, 0x01	; 1
    1378:	a1 1d       	adc	r26, r1
    137a:	b1 1d       	adc	r27, r1
    137c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <encoder_ticks_right>
    1380:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <encoder_ticks_right+0x1>
    1384:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <encoder_ticks_right+0x2>
    1388:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <encoder_ticks_right+0x3>
    138c:	13 c0       	rjmp	.+38     	; 0x13b4 <__vector_2+0x7c>
		} 
	else {
		encoder_ticks_right--;
    138e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <encoder_ticks_right>
    1392:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <encoder_ticks_right+0x1>
    1396:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <encoder_ticks_right+0x2>
    139a:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <encoder_ticks_right+0x3>
    139e:	01 97       	sbiw	r24, 0x01	; 1
    13a0:	a1 09       	sbc	r26, r1
    13a2:	b1 09       	sbc	r27, r1
    13a4:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <encoder_ticks_right>
    13a8:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <encoder_ticks_right+0x1>
    13ac:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <encoder_ticks_right+0x2>
    13b0:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <encoder_ticks_right+0x3>
	}
    13b4:	ff 91       	pop	r31
    13b6:	ef 91       	pop	r30
    13b8:	bf 91       	pop	r27
    13ba:	af 91       	pop	r26
    13bc:	9f 91       	pop	r25
    13be:	8f 91       	pop	r24
    13c0:	7f 91       	pop	r23
    13c2:	6f 91       	pop	r22
    13c4:	5f 91       	pop	r21
    13c6:	4f 91       	pop	r20
    13c8:	3f 91       	pop	r19
    13ca:	2f 91       	pop	r18
    13cc:	0f 90       	pop	r0
    13ce:	0f be       	out	0x3f, r0	; 63
    13d0:	0f 90       	pop	r0
    13d2:	1f 90       	pop	r1
    13d4:	18 95       	reti

Disassembly of section .text.motor_init:

000019d8 <motor_init>:


void motor_init(void) {
	
	// For motor control
	pwm_init();
    19d8:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <pwm_init>
	
	// Set direction control pins to L298N as outputs
	DDRC |= (1 << OUT1);
    19dc:	87 b1       	in	r24, 0x07	; 7
    19de:	81 60       	ori	r24, 0x01	; 1
    19e0:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT2);
    19e2:	87 b1       	in	r24, 0x07	; 7
    19e4:	82 60       	ori	r24, 0x02	; 2
    19e6:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT3);
    19e8:	87 b1       	in	r24, 0x07	; 7
    19ea:	84 60       	ori	r24, 0x04	; 4
    19ec:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << OUT4);
    19ee:	87 b1       	in	r24, 0x07	; 7
    19f0:	80 61       	ori	r24, 0x10	; 16
    19f2:	87 b9       	out	0x07, r24	; 7
    19f4:	08 95       	ret

Disassembly of section .text.set_left_motor_dir:

0000199a <set_left_motor_dir>:
}

void set_left_motor_dir(int dir) {
	if (dir == FORWARD) {
    199a:	01 97       	sbiw	r24, 0x01	; 1
    199c:	39 f4       	brne	.+14     	; 0x19ac <set_left_motor_dir+0x12>
		PORTC |= (1 << OUT1);
    199e:	88 b1       	in	r24, 0x08	; 8
    19a0:	81 60       	ori	r24, 0x01	; 1
    19a2:	88 b9       	out	0x08, r24	; 8
		PORTC &= ~(1 << OUT2);
    19a4:	88 b1       	in	r24, 0x08	; 8
    19a6:	8d 7f       	andi	r24, 0xFD	; 253
    19a8:	88 b9       	out	0x08, r24	; 8
    19aa:	08 95       	ret
	} else {
		PORTC &= ~(1 << OUT1);
    19ac:	88 b1       	in	r24, 0x08	; 8
    19ae:	8e 7f       	andi	r24, 0xFE	; 254
    19b0:	88 b9       	out	0x08, r24	; 8
		PORTC |= (1 << OUT2);
    19b2:	88 b1       	in	r24, 0x08	; 8
    19b4:	82 60       	ori	r24, 0x02	; 2
    19b6:	88 b9       	out	0x08, r24	; 8
    19b8:	08 95       	ret

Disassembly of section .text.abs:

0000189e <abs>:
		PORTC |= (1 << OUT4);
	}
}


float abs(float val) {
    189e:	cf 92       	push	r12
    18a0:	df 92       	push	r13
    18a2:	ef 92       	push	r14
    18a4:	ff 92       	push	r15
    18a6:	6b 01       	movw	r12, r22
    18a8:	7c 01       	movw	r14, r24
	if (val < 0) {
    18aa:	20 e0       	ldi	r18, 0x00	; 0
    18ac:	30 e0       	ldi	r19, 0x00	; 0
    18ae:	a9 01       	movw	r20, r18
    18b0:	0e 94 3f 0d 	call	0x1a7e	; 0x1a7e <__cmpsf2>
    18b4:	88 23       	and	r24, r24
    18b6:	24 f4       	brge	.+8      	; 0x18c0 <abs+0x22>
		return val*(-1.0);
    18b8:	c7 01       	movw	r24, r14
    18ba:	b6 01       	movw	r22, r12
    18bc:	90 58       	subi	r25, 0x80	; 128
    18be:	02 c0       	rjmp	.+4      	; 0x18c4 <abs+0x26>
	}
	return val;
    18c0:	c7 01       	movw	r24, r14
    18c2:	b6 01       	movw	r22, r12
}
    18c4:	ff 90       	pop	r15
    18c6:	ef 90       	pop	r14
    18c8:	df 90       	pop	r13
    18ca:	cf 90       	pop	r12
    18cc:	08 95       	ret

Disassembly of section .text.motor_left:

00001748 <motor_left>:
	if (dir == FORWARD) {
		PORTC |= (1 << OUT3);
		PORTC &= ~(1 << OUT4);
	} else {
		PORTC &= ~(1 << OUT3);
		PORTC |= (1 << OUT4);
    1748:	cf 92       	push	r12
    174a:	df 92       	push	r13
    174c:	ef 92       	push	r14
    174e:	ff 92       	push	r15
    1750:	6b 01       	movw	r12, r22
    1752:	7c 01       	movw	r14, r24
    1754:	20 e0       	ldi	r18, 0x00	; 0
    1756:	30 e0       	ldi	r19, 0x00	; 0
    1758:	a9 01       	movw	r20, r18
    175a:	0e 94 3f 0d 	call	0x1a7e	; 0x1a7e <__cmpsf2>
    175e:	88 23       	and	r24, r24
    1760:	2c f4       	brge	.+10     	; 0x176c <motor_left+0x24>
    1762:	80 e0       	ldi	r24, 0x00	; 0
    1764:	90 e0       	ldi	r25, 0x00	; 0
    1766:	0e 94 cd 0c 	call	0x199a	; 0x199a <set_left_motor_dir>
    176a:	04 c0       	rjmp	.+8      	; 0x1774 <motor_left+0x2c>
    176c:	81 e0       	ldi	r24, 0x01	; 1
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	0e 94 cd 0c 	call	0x199a	; 0x199a <set_left_motor_dir>
    1774:	c7 01       	movw	r24, r14
    1776:	b6 01       	movw	r22, r12
    1778:	0e 94 4f 0c 	call	0x189e	; 0x189e <abs>
    177c:	0e 94 95 0c 	call	0x192a	; 0x192a <pwm_set_duty_cycle_left>
    1780:	ff 90       	pop	r15
    1782:	ef 90       	pop	r14
    1784:	df 90       	pop	r13
    1786:	cf 90       	pop	r12
    1788:	08 95       	ret

Disassembly of section .text.pwm_init:

000019f6 <pwm_init>:
#include "pwm.h"

void pwm_init(void) {
	
	// Set as output (one for each wheel)
	DDRD |= (1 << PWM1);
    19f6:	8a b1       	in	r24, 0x0a	; 10
    19f8:	80 64       	ori	r24, 0x40	; 64
    19fa:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << PWM2);
    19fc:	8a b1       	in	r24, 0x0a	; 10
    19fe:	80 62       	ori	r24, 0x20	; 32
    1a00:	8a b9       	out	0x0a, r24	; 10
	TCCR0B |= (1 << CS02) | (1 << CS00); // 1024 prescalar
	*/
	
	// Phase correct PWM mode
	// PWM frequency will be (with no prescaler) 31kHz (outside audible spectrum)
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00);
    1a02:	84 b5       	in	r24, 0x24	; 36
    1a04:	81 6a       	ori	r24, 0xA1	; 161
    1a06:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS00); // no pre-scaling
    1a08:	85 b5       	in	r24, 0x25	; 37
    1a0a:	81 60       	ori	r24, 0x01	; 1
    1a0c:	85 bd       	out	0x25, r24	; 37
    1a0e:	08 95       	ret

Disassembly of section .text.pwm_set_duty_cycle_left:

0000192a <pwm_set_duty_cycle_left>:
	
}

void pwm_set_duty_cycle_left(float d) {
	// value should be between 0-255
	float value = d / 100.0 * (255 - MIN_PWM_DUTY_LEFT) + MIN_PWM_DUTY_LEFT;
    192a:	20 e0       	ldi	r18, 0x00	; 0
    192c:	30 e0       	ldi	r19, 0x00	; 0
    192e:	48 ec       	ldi	r20, 0xC8	; 200
    1930:	52 e4       	ldi	r21, 0x42	; 66
    1932:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <__divsf3>
    1936:	20 e0       	ldi	r18, 0x00	; 0
    1938:	30 e0       	ldi	r19, 0x00	; 0
    193a:	40 ef       	ldi	r20, 0xF0	; 240
    193c:	52 e4       	ldi	r21, 0x42	; 66
    193e:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <__mulsf3>
    1942:	20 e0       	ldi	r18, 0x00	; 0
    1944:	30 e0       	ldi	r19, 0x00	; 0
    1946:	47 e0       	ldi	r20, 0x07	; 7
    1948:	53 e4       	ldi	r21, 0x43	; 67
    194a:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <__addsf3>
	OCR0A = (uint8_t)value;
    194e:	0e 94 e9 0a 	call	0x15d2	; 0x15d2 <__fixunssfsi>
    1952:	67 bd       	out	0x27, r22	; 39
    1954:	08 95       	ret

Disassembly of section .text.speed_estimator_init:

00001560 <speed_estimator_init>:
float smoothed_rad_per_s_left = 0;

// Should be updated if timer is adjusted!
const float encoder_measurement_period = 0.02;//0.01; //0.05;

void speed_estimator_init(void) {
    1560:	cf 93       	push	r28
    1562:	df 93       	push	r29
    1564:	1f 92       	push	r1
    1566:	cd b7       	in	r28, 0x3d	; 61
    1568:	de b7       	in	r29, 0x3e	; 62
	
	encoder_init();
    156a:	0e 94 67 0c 	call	0x18ce	; 0x18ce <encoder_init>
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    156e:	8f b7       	in	r24, 0x3f	; 63
    1570:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1572:	f8 94       	cli
    1574:	81 e0       	ldi	r24, 0x01	; 1
    1576:	0d c0       	rjmp	.+26     	; 0x1592 <speed_estimator_init+0x32>
		ticks_right = encoder_get_accumulated_ticks_right();
    1578:	0e 94 5f 0b 	call	0x16be	; 0x16be <encoder_get_accumulated_ticks_right>
    157c:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <ticks_right+0x1>
    1580:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <ticks_right>
		ticks_left = encoder_get_accumulated_ticks_left();	
    1584:	0e 94 3c 0b 	call	0x1678	; 0x1678 <encoder_get_accumulated_ticks_left>
    1588:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <ticks_left+0x1>
    158c:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <ticks_left>
const float encoder_measurement_period = 0.02;//0.01; //0.05;

void speed_estimator_init(void) {
	
	encoder_init();
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1590:	80 e0       	ldi	r24, 0x00	; 0
    1592:	81 11       	cpse	r24, r1
    1594:	f1 cf       	rjmp	.-30     	; 0x1578 <speed_estimator_init+0x18>
    1596:	ce 01       	movw	r24, r28
    1598:	01 96       	adiw	r24, 0x01	; 1
    159a:	a0 e8       	ldi	r26, 0x80	; 128
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    159c:	fc 01       	movw	r30, r24
    159e:	84 91       	lpm	r24, Z
    15a0:	a7 fd       	sbrc	r26, 7
    15a2:	80 81       	ld	r24, Z
    15a4:	8f bf       	out	0x3f, r24	; 63
	(2^8*1024) / (16000000) * 255/255 = 0.016384
	
	OCR1A = measurement_period * F_CPU * (2^16-1) / (2^16*prescalar)
	
	*/
	cli();
    15a6:	f8 94       	cli
	// Enable interrupt
	TIMSK2 |= (1 << OCIE2A);
	*/
	
	// 16-bit Timer1
	OCR1AH = 0x04;
    15a8:	84 e0       	ldi	r24, 0x04	; 4
    15aa:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0xE1;
    15ae:	81 ee       	ldi	r24, 0xE1	; 225
    15b0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	//OCR1A = 15999;
	TCCR1B |= (1 << WGM12) | (1 << CS12); // CTC mode (clear on match with OCR1A), 256 prescalar
    15b4:	e1 e8       	ldi	r30, 0x81	; 129
    15b6:	f0 e0       	ldi	r31, 0x00	; 0
    15b8:	80 81       	ld	r24, Z
    15ba:	8c 60       	ori	r24, 0x0C	; 12
    15bc:	80 83       	st	Z, r24
	
	// Enable interrupt
	TIMSK1 |= (1 << OCIE1A);
    15be:	ef e6       	ldi	r30, 0x6F	; 111
    15c0:	f0 e0       	ldi	r31, 0x00	; 0
    15c2:	80 81       	ld	r24, Z
    15c4:	82 60       	ori	r24, 0x02	; 2
    15c6:	80 83       	st	Z, r24
	
	sei();
    15c8:	78 94       	sei
}
    15ca:	0f 90       	pop	r0
    15cc:	df 91       	pop	r29
    15ce:	cf 91       	pop	r28
    15d0:	08 95       	ret

Disassembly of section .text.speed_estimator_left_rad_per_s:

000011e2 <speed_estimator_left_rad_per_s>:
	}
	rad_per_s = 2.0*PI*((float)ticks - (float)prev_ticks) / ((float)TICKS_PER_ROT*encoder_measurement_period); 
	return rad_per_s;
}

float speed_estimator_left_rad_per_s() {
    11e2:	6f 92       	push	r6
    11e4:	7f 92       	push	r7
    11e6:	8f 92       	push	r8
    11e8:	ef 92       	push	r14
    11ea:	ff 92       	push	r15
    11ec:	0f 93       	push	r16
    11ee:	1f 93       	push	r17
    11f0:	cf 93       	push	r28
    11f2:	df 93       	push	r29
    11f4:	1f 92       	push	r1
    11f6:	cd b7       	in	r28, 0x3d	; 61
    11f8:	de b7       	in	r29, 0x3e	; 62
	int ticks;
	int prev_ticks;
	float rad_per_s;
	float smoothed_rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    11fa:	8f b7       	in	r24, 0x3f	; 63
    11fc:	89 83       	std	Y+1, r24	; 0x01
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    11fe:	f8 94       	cli
    1200:	81 e0       	ldi	r24, 0x01	; 1
    1202:	19 c0       	rjmp	.+50     	; 0x1236 <speed_estimator_left_rad_per_s+0x54>
		ticks = ticks_left;
    1204:	50 91 28 01 	lds	r21, 0x0128	; 0x800128 <ticks_left>
    1208:	60 91 29 01 	lds	r22, 0x0129	; 0x800129 <ticks_left+0x1>
		prev_ticks = prev_ticks_left;
    120c:	70 91 24 01 	lds	r23, 0x0124	; 0x800124 <prev_ticks_left>
    1210:	a0 91 25 01 	lds	r26, 0x0125	; 0x800125 <prev_ticks_left+0x1>
		rad_per_s = rad_per_s_left;
    1214:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <rad_per_s_left>
    1218:	20 91 21 01 	lds	r18, 0x0121	; 0x800121 <rad_per_s_left+0x1>
    121c:	30 91 22 01 	lds	r19, 0x0122	; 0x800122 <rad_per_s_left+0x2>
    1220:	40 91 23 01 	lds	r20, 0x0123	; 0x800123 <rad_per_s_left+0x3>
		smoothed_rad_per_s = smoothed_rad_per_s_left;
    1224:	e0 90 18 01 	lds	r14, 0x0118	; 0x800118 <smoothed_rad_per_s_left>
    1228:	f0 90 19 01 	lds	r15, 0x0119	; 0x800119 <smoothed_rad_per_s_left+0x1>
    122c:	00 91 1a 01 	lds	r16, 0x011A	; 0x80011a <smoothed_rad_per_s_left+0x2>
    1230:	10 91 1b 01 	lds	r17, 0x011B	; 0x80011b <smoothed_rad_per_s_left+0x3>
float speed_estimator_left_rad_per_s() {
	int ticks;
	int prev_ticks;
	float rad_per_s;
	float smoothed_rad_per_s;
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1234:	80 e0       	ldi	r24, 0x00	; 0
    1236:	81 11       	cpse	r24, r1
    1238:	e5 cf       	rjmp	.-54     	; 0x1204 <speed_estimator_left_rad_per_s+0x22>
    123a:	fe 01       	movw	r30, r28
    123c:	31 96       	adiw	r30, 0x01	; 1
    123e:	80 e8       	ldi	r24, 0x80	; 128
    1240:	88 2e       	mov	r8, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1242:	84 91       	lpm	r24, Z
    1244:	87 fc       	sbrc	r8, 7
    1246:	80 81       	ld	r24, Z
    1248:	8f bf       	out	0x3f, r24	; 63
		ticks = ticks_left;
		prev_ticks = prev_ticks_left;
		rad_per_s = rad_per_s_left;
		smoothed_rad_per_s = smoothed_rad_per_s_left;
	}
	printf("rad_per_s=%f | smoothed=%f | ticks=%d | prev_ticks=%d\n\r", rad_per_s, smoothed_rad_per_s, ticks, prev_ticks);
    124a:	af 93       	push	r26
    124c:	7f 93       	push	r23
    124e:	6f 93       	push	r22
    1250:	5f 93       	push	r21
    1252:	1f 93       	push	r17
    1254:	0f 93       	push	r16
    1256:	ff 92       	push	r15
    1258:	ef 92       	push	r14
    125a:	4f 93       	push	r20
    125c:	3f 93       	push	r19
    125e:	2f 93       	push	r18
    1260:	9f 93       	push	r25
    1262:	88 ec       	ldi	r24, 0xC8	; 200
    1264:	91 e0       	ldi	r25, 0x01	; 1
    1266:	a0 e0       	ldi	r26, 0x00	; 0
    1268:	af 93       	push	r26
    126a:	9f 93       	push	r25
    126c:	8f 93       	push	r24
    126e:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <printf>
	return smoothed_rad_per_s;
    1272:	0f b6       	in	r0, 0x3f	; 63
    1274:	f8 94       	cli
    1276:	de bf       	out	0x3e, r29	; 62
    1278:	0f be       	out	0x3f, r0	; 63
    127a:	cd bf       	out	0x3d, r28	; 61
}
    127c:	6e 2d       	mov	r22, r14
    127e:	7f 2d       	mov	r23, r15
    1280:	80 2f       	mov	r24, r16
    1282:	91 2f       	mov	r25, r17
    1284:	0f 90       	pop	r0
    1286:	df 91       	pop	r29
    1288:	cf 91       	pop	r28
    128a:	1f 91       	pop	r17
    128c:	0f 91       	pop	r16
    128e:	ff 90       	pop	r15
    1290:	ef 90       	pop	r14
    1292:	8f 90       	pop	r8
    1294:	7f 90       	pop	r7
    1296:	6f 90       	pop	r6
    1298:	08 95       	ret

Disassembly of section .text.__vector_11:

00000d56 <__vector_11>:
		ticks = ticks_right;
		prev_ticks = prev_ticks_right;
	}
	rad_per_s = 2.0*PI*((float)ticks - (float)prev_ticks) / ((float)TICKS_PER_ROT*encoder_measurement_period); 
	return rad_per_s;
}
 d56:	1f 92       	push	r1
 d58:	0f 92       	push	r0
 d5a:	0f b6       	in	r0, 0x3f	; 63
 d5c:	0f 92       	push	r0
 d5e:	11 24       	eor	r1, r1
 d60:	8f 92       	push	r8
 d62:	9f 92       	push	r9
 d64:	af 92       	push	r10
 d66:	bf 92       	push	r11
 d68:	cf 92       	push	r12
 d6a:	df 92       	push	r13
 d6c:	ef 92       	push	r14
 d6e:	ff 92       	push	r15
 d70:	2f 93       	push	r18
 d72:	3f 93       	push	r19
 d74:	4f 93       	push	r20
 d76:	5f 93       	push	r21
 d78:	6f 93       	push	r22
 d7a:	7f 93       	push	r23
 d7c:	8f 93       	push	r24
 d7e:	9f 93       	push	r25
 d80:	af 93       	push	r26
 d82:	bf 93       	push	r27
 d84:	ef 93       	push	r30
 d86:	ff 93       	push	r31
 d88:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <ticks_right>
 d8c:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <ticks_right+0x1>
 d90:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <prev_ticks_right+0x1>
 d94:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <prev_ticks_right>
 d98:	0e 94 5f 0b 	call	0x16be	; 0x16be <encoder_get_accumulated_ticks_right>
 d9c:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <ticks_right+0x1>
 da0:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <ticks_right>
 da4:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <ticks_left>
 da8:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <ticks_left+0x1>
 dac:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <prev_ticks_left+0x1>
 db0:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <prev_ticks_left>
 db4:	0e 94 3c 0b 	call	0x1678	; 0x1678 <encoder_get_accumulated_ticks_left>
 db8:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <ticks_left+0x1>
 dbc:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <ticks_left>
 dc0:	c0 90 20 01 	lds	r12, 0x0120	; 0x800120 <rad_per_s_left>
 dc4:	d0 90 21 01 	lds	r13, 0x0121	; 0x800121 <rad_per_s_left+0x1>
 dc8:	e0 90 22 01 	lds	r14, 0x0122	; 0x800122 <rad_per_s_left+0x2>
 dcc:	f0 90 23 01 	lds	r15, 0x0123	; 0x800123 <rad_per_s_left+0x3>
 dd0:	c0 92 1c 01 	sts	0x011C, r12	; 0x80011c <prev_rad_per_s_left>
 dd4:	d0 92 1d 01 	sts	0x011D, r13	; 0x80011d <prev_rad_per_s_left+0x1>
 dd8:	e0 92 1e 01 	sts	0x011E, r14	; 0x80011e <prev_rad_per_s_left+0x2>
 ddc:	f0 92 1f 01 	sts	0x011F, r15	; 0x80011f <prev_rad_per_s_left+0x3>
 de0:	07 2e       	mov	r0, r23
 de2:	00 0c       	add	r0, r0
 de4:	88 0b       	sbc	r24, r24
 de6:	99 0b       	sbc	r25, r25
 de8:	0e 94 39 0a 	call	0x1472	; 0x1472 <__floatsisf>
 dec:	4b 01       	movw	r8, r22
 dee:	5c 01       	movw	r10, r24
 df0:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <prev_ticks_left>
 df4:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <prev_ticks_left+0x1>
 df8:	07 2e       	mov	r0, r23
 dfa:	00 0c       	add	r0, r0
 dfc:	88 0b       	sbc	r24, r24
 dfe:	99 0b       	sbc	r25, r25
 e00:	0e 94 39 0a 	call	0x1472	; 0x1472 <__floatsisf>
 e04:	9b 01       	movw	r18, r22
 e06:	ac 01       	movw	r20, r24
 e08:	c5 01       	movw	r24, r10
 e0a:	b4 01       	movw	r22, r8
 e0c:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <__subsf3>
 e10:	2b ed       	ldi	r18, 0xDB	; 219
 e12:	3f e0       	ldi	r19, 0x0F	; 15
 e14:	49 ec       	ldi	r20, 0xC9	; 201
 e16:	50 e4       	ldi	r21, 0x40	; 64
 e18:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <__mulsf3>
 e1c:	20 e0       	ldi	r18, 0x00	; 0
 e1e:	30 e0       	ldi	r19, 0x00	; 0
 e20:	48 e8       	ldi	r20, 0x88	; 136
 e22:	51 e4       	ldi	r21, 0x41	; 65
 e24:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <__divsf3>
 e28:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <rad_per_s_left>
 e2c:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <rad_per_s_left+0x1>
 e30:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <rad_per_s_left+0x2>
 e34:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <rad_per_s_left+0x3>
 e38:	20 e0       	ldi	r18, 0x00	; 0
 e3a:	30 e0       	ldi	r19, 0x00	; 0
 e3c:	40 e0       	ldi	r20, 0x00	; 0
 e3e:	5f e3       	ldi	r21, 0x3F	; 63
 e40:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <__mulsf3>
 e44:	4b 01       	movw	r8, r22
 e46:	5c 01       	movw	r10, r24
 e48:	20 e0       	ldi	r18, 0x00	; 0
 e4a:	30 e0       	ldi	r19, 0x00	; 0
 e4c:	40 e0       	ldi	r20, 0x00	; 0
 e4e:	5f e3       	ldi	r21, 0x3F	; 63
 e50:	c7 01       	movw	r24, r14
 e52:	b6 01       	movw	r22, r12
 e54:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <__mulsf3>
 e58:	9b 01       	movw	r18, r22
 e5a:	ac 01       	movw	r20, r24
 e5c:	c5 01       	movw	r24, r10
 e5e:	b4 01       	movw	r22, r8
 e60:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <__addsf3>
 e64:	60 93 18 01 	sts	0x0118, r22	; 0x800118 <smoothed_rad_per_s_left>
 e68:	70 93 19 01 	sts	0x0119, r23	; 0x800119 <smoothed_rad_per_s_left+0x1>
 e6c:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <smoothed_rad_per_s_left+0x2>
 e70:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <smoothed_rad_per_s_left+0x3>
 e74:	ff 91       	pop	r31
 e76:	ef 91       	pop	r30
 e78:	bf 91       	pop	r27
 e7a:	af 91       	pop	r26
 e7c:	9f 91       	pop	r25
 e7e:	8f 91       	pop	r24
 e80:	7f 91       	pop	r23
 e82:	6f 91       	pop	r22
 e84:	5f 91       	pop	r21
 e86:	4f 91       	pop	r20
 e88:	3f 91       	pop	r19
 e8a:	2f 91       	pop	r18
 e8c:	ff 90       	pop	r15
 e8e:	ef 90       	pop	r14
 e90:	df 90       	pop	r13
 e92:	cf 90       	pop	r12
 e94:	bf 90       	pop	r11
 e96:	af 90       	pop	r10
 e98:	9f 90       	pop	r9
 e9a:	8f 90       	pop	r8
 e9c:	0f 90       	pop	r0
 e9e:	0f be       	out	0x3f, r0	; 63
 ea0:	0f 90       	pop	r0
 ea2:	1f 90       	pop	r1
 ea4:	18 95       	reti

Disassembly of section .text.usart_tx:

00001a10 <usart_tx>:

#include <avr/io.h>
#include "usart.h"

void usart_tx(unsigned char data) {
	while (! (UCSR0A & (1 << UDRE0))) {
    1a10:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    1a14:	95 ff       	sbrs	r25, 5
    1a16:	fc cf       	rjmp	.-8      	; 0x1a10 <usart_tx>
		// wait for buffer to empty
	}
	// Place data in buffer
	UDR0 = data;
    1a18:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    1a1c:	08 95       	ret

Disassembly of section .text.usart_rx:

00001a1e <usart_rx>:
}

unsigned char usart_rx(void) {
	while(!(UCSR0A & (1 << RXC0))) {
    1a1e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    1a22:	88 23       	and	r24, r24
    1a24:	e4 f7       	brge	.-8      	; 0x1a1e <usart_rx>
		// Wait for data to be received
	}
	return UDR0;
    1a26:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
    1a2a:	08 95       	ret

Disassembly of section .text.usart_init:

00001956 <usart_init>:

void usart_init(unsigned int ubrr) {
	// Set baud rate
	UBRR0H = ubrr>>8;
    1956:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = ubrr;
    195a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	// Enable rx and tx
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
    195e:	88 e1       	ldi	r24, 0x18	; 24
    1960:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	
	// Set frame format: 8data 2stop bit
	UCSR0C = (1 << USBS0) | (3 << UCSZ00);
    1964:	8e e0       	ldi	r24, 0x0E	; 14
    1966:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	
	// Use printf for serial communication
	fdevopen(usart_tx, usart_rx);
    196a:	6f e0       	ldi	r22, 0x0F	; 15
    196c:	7d e0       	ldi	r23, 0x0D	; 13
    196e:	88 e0       	ldi	r24, 0x08	; 8
    1970:	9d e0       	ldi	r25, 0x0D	; 13
    1972:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <fdevopen>
    1976:	08 95       	ret

Disassembly of section .text.main:

0000178a <main>:
//#include "drivers/timer/timer.h"
#include "drivers/speed_estimator/speed_estimator.h"

int main(void)
{
	usart_init(UBRR);
    178a:	87 e6       	ldi	r24, 0x67	; 103
    178c:	90 e0       	ldi	r25, 0x00	; 0
    178e:	0e 94 ab 0c 	call	0x1956	; 0x1956 <usart_init>
	motor_init();
    1792:	0e 94 ec 0c 	call	0x19d8	; 0x19d8 <motor_init>
	//timer_init();
	speed_estimator_init();
    1796:	0e 94 b0 0a 	call	0x1560	; 0x1560 <speed_estimator_init>
	//encoder_init();
	
	printf("Starting application\n\r");
    179a:	80 e0       	ldi	r24, 0x00	; 0
    179c:	92 e0       	ldi	r25, 0x02	; 2
    179e:	a0 e0       	ldi	r26, 0x00	; 0
    17a0:	af 93       	push	r26
    17a2:	9f 93       	push	r25
    17a4:	8f 93       	push	r24
    17a6:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <printf>
	
	//DDRB = (1<<BUILTIN_LED); //PB7 is digital pin 13 (LED), set as output
	//PORTB = (1<<BUILTIN_LED); //Set PB7 high to turn on LED
	motor_left(100);
    17aa:	60 e0       	ldi	r22, 0x00	; 0
    17ac:	70 e0       	ldi	r23, 0x00	; 0
    17ae:	88 ec       	ldi	r24, 0xC8	; 200
    17b0:	92 e4       	ldi	r25, 0x42	; 66
    17b2:	0e 94 a4 0b 	call	0x1748	; 0x1748 <motor_left>
    17b6:	0f 90       	pop	r0
    17b8:	0f 90       	pop	r0
    17ba:	0f 90       	pop	r0
		//motor_left(100);
		//_delay_ms(2000);
		//motor_left(-60);
		//_delay_ms(2000);
		
		float l = speed_estimator_left_rad_per_s();
    17bc:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <speed_estimator_left_rad_per_s>
    17c0:	fd cf       	rjmp	.-6      	; 0x17bc <main+0x32>

Disassembly of section .text.avrlibc.fplib:

00001a2c <__subsf3>:
    1a2c:	50 58       	subi	r21, 0x80	; 128

00001a2e <__addsf3>:
    1a2e:	bb 27       	eor	r27, r27
    1a30:	aa 27       	eor	r26, r26
    1a32:	0e 94 2c 08 	call	0x1058	; 0x1058 <__addsf3x>
    1a36:	0c 94 bc 0c 	jmp	0x1978	; 0x1978 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001058 <__addsf3x>:
    1058:	11 c0       	rjmp	.+34     	; 0x107c <__addsf3x+0x24>
    105a:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <__fp_pscA>
    105e:	38 f0       	brcs	.+14     	; 0x106e <__addsf3x+0x16>
    1060:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__fp_pscB>
    1064:	20 f0       	brcs	.+8      	; 0x106e <__addsf3x+0x16>
    1066:	39 f4       	brne	.+14     	; 0x1076 <__addsf3x+0x1e>
    1068:	9f 3f       	cpi	r25, 0xFF	; 255
    106a:	19 f4       	brne	.+6      	; 0x1072 <__addsf3x+0x1a>
    106c:	26 f4       	brtc	.+8      	; 0x1076 <__addsf3x+0x1e>
    106e:	0c 94 4c 0d 	jmp	0x1a98	; 0x1a98 <__fp_nan>
    1072:	0e f4       	brtc	.+2      	; 0x1076 <__addsf3x+0x1e>
    1074:	e0 95       	com	r30
    1076:	e7 fb       	bst	r30, 7
    1078:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__fp_inf>
    107c:	e9 2f       	mov	r30, r25
    107e:	0e 94 82 0b 	call	0x1704	; 0x1704 <__fp_split3>
    1082:	58 f3       	brcs	.-42     	; 0x105a <__addsf3x+0x2>
    1084:	ba 17       	cp	r27, r26
    1086:	62 07       	cpc	r22, r18
    1088:	73 07       	cpc	r23, r19
    108a:	84 07       	cpc	r24, r20
    108c:	95 07       	cpc	r25, r21
    108e:	20 f0       	brcs	.+8      	; 0x1098 <__addsf3x+0x40>
    1090:	79 f4       	brne	.+30     	; 0x10b0 <__addsf3x+0x58>
    1092:	a6 f5       	brtc	.+104    	; 0x10fc <__addsf3x+0xa4>
    1094:	0c 94 2b 0d 	jmp	0x1a56	; 0x1a56 <__fp_zero>
    1098:	0e f4       	brtc	.+2      	; 0x109c <__addsf3x+0x44>
    109a:	e0 95       	com	r30
    109c:	0b 2e       	mov	r0, r27
    109e:	ba 2f       	mov	r27, r26
    10a0:	a0 2d       	mov	r26, r0
    10a2:	0b 01       	movw	r0, r22
    10a4:	b9 01       	movw	r22, r18
    10a6:	90 01       	movw	r18, r0
    10a8:	0c 01       	movw	r0, r24
    10aa:	ca 01       	movw	r24, r20
    10ac:	a0 01       	movw	r20, r0
    10ae:	11 24       	eor	r1, r1
    10b0:	ff 27       	eor	r31, r31
    10b2:	59 1b       	sub	r21, r25
    10b4:	99 f0       	breq	.+38     	; 0x10dc <__addsf3x+0x84>
    10b6:	59 3f       	cpi	r21, 0xF9	; 249
    10b8:	50 f4       	brcc	.+20     	; 0x10ce <__addsf3x+0x76>
    10ba:	50 3e       	cpi	r21, 0xE0	; 224
    10bc:	68 f1       	brcs	.+90     	; 0x1118 <__addsf3x+0xc0>
    10be:	1a 16       	cp	r1, r26
    10c0:	f0 40       	sbci	r31, 0x00	; 0
    10c2:	a2 2f       	mov	r26, r18
    10c4:	23 2f       	mov	r18, r19
    10c6:	34 2f       	mov	r19, r20
    10c8:	44 27       	eor	r20, r20
    10ca:	58 5f       	subi	r21, 0xF8	; 248
    10cc:	f3 cf       	rjmp	.-26     	; 0x10b4 <__addsf3x+0x5c>
    10ce:	46 95       	lsr	r20
    10d0:	37 95       	ror	r19
    10d2:	27 95       	ror	r18
    10d4:	a7 95       	ror	r26
    10d6:	f0 40       	sbci	r31, 0x00	; 0
    10d8:	53 95       	inc	r21
    10da:	c9 f7       	brne	.-14     	; 0x10ce <__addsf3x+0x76>
    10dc:	7e f4       	brtc	.+30     	; 0x10fc <__addsf3x+0xa4>
    10de:	1f 16       	cp	r1, r31
    10e0:	ba 0b       	sbc	r27, r26
    10e2:	62 0b       	sbc	r22, r18
    10e4:	73 0b       	sbc	r23, r19
    10e6:	84 0b       	sbc	r24, r20
    10e8:	ba f0       	brmi	.+46     	; 0x1118 <__addsf3x+0xc0>
    10ea:	91 50       	subi	r25, 0x01	; 1
    10ec:	a1 f0       	breq	.+40     	; 0x1116 <__addsf3x+0xbe>
    10ee:	ff 0f       	add	r31, r31
    10f0:	bb 1f       	adc	r27, r27
    10f2:	66 1f       	adc	r22, r22
    10f4:	77 1f       	adc	r23, r23
    10f6:	88 1f       	adc	r24, r24
    10f8:	c2 f7       	brpl	.-16     	; 0x10ea <__addsf3x+0x92>
    10fa:	0e c0       	rjmp	.+28     	; 0x1118 <__addsf3x+0xc0>
    10fc:	ba 0f       	add	r27, r26
    10fe:	62 1f       	adc	r22, r18
    1100:	73 1f       	adc	r23, r19
    1102:	84 1f       	adc	r24, r20
    1104:	48 f4       	brcc	.+18     	; 0x1118 <__addsf3x+0xc0>
    1106:	87 95       	ror	r24
    1108:	77 95       	ror	r23
    110a:	67 95       	ror	r22
    110c:	b7 95       	ror	r27
    110e:	f7 95       	ror	r31
    1110:	9e 3f       	cpi	r25, 0xFE	; 254
    1112:	08 f0       	brcs	.+2      	; 0x1116 <__addsf3x+0xbe>
    1114:	b0 cf       	rjmp	.-160    	; 0x1076 <__addsf3x+0x1e>
    1116:	93 95       	inc	r25
    1118:	88 0f       	add	r24, r24
    111a:	08 f0       	brcs	.+2      	; 0x111e <__addsf3x+0xc6>
    111c:	99 27       	eor	r25, r25
    111e:	ee 0f       	add	r30, r30
    1120:	97 95       	ror	r25
    1122:	87 95       	ror	r24
    1124:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001a7e <__cmpsf2>:
    1a7e:	0e 94 18 0b 	call	0x1630	; 0x1630 <__fp_cmp>
    1a82:	08 f4       	brcc	.+2      	; 0x1a86 <__cmpsf2+0x8>
    1a84:	81 e0       	ldi	r24, 0x01	; 1
    1a86:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001a88 <__divsf3>:
    1a88:	0e 94 53 07 	call	0xea6	; 0xea6 <__divsf3x>
    1a8c:	0c 94 bc 0c 	jmp	0x1978	; 0x1978 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000ea6 <__divsf3x>:
 ea6:	10 c0       	rjmp	.+32     	; 0xec8 <__divsf3x+0x22>
 ea8:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__fp_pscB>
 eac:	58 f0       	brcs	.+22     	; 0xec4 <__divsf3x+0x1e>
 eae:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <__fp_pscA>
 eb2:	40 f0       	brcs	.+16     	; 0xec4 <__divsf3x+0x1e>
 eb4:	29 f4       	brne	.+10     	; 0xec0 <__divsf3x+0x1a>
 eb6:	5f 3f       	cpi	r21, 0xFF	; 255
 eb8:	29 f0       	breq	.+10     	; 0xec4 <__divsf3x+0x1e>
 eba:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__fp_inf>
 ebe:	51 11       	cpse	r21, r1
 ec0:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__fp_szero>
 ec4:	0c 94 4c 0d 	jmp	0x1a98	; 0x1a98 <__fp_nan>
 ec8:	0e 94 82 0b 	call	0x1704	; 0x1704 <__fp_split3>
 ecc:	68 f3       	brcs	.-38     	; 0xea8 <__divsf3x+0x2>

00000ece <__divsf3_pse>:
 ece:	99 23       	and	r25, r25
 ed0:	b1 f3       	breq	.-20     	; 0xebe <__divsf3x+0x18>
 ed2:	55 23       	and	r21, r21
 ed4:	91 f3       	breq	.-28     	; 0xeba <__divsf3x+0x14>
 ed6:	95 1b       	sub	r25, r21
 ed8:	55 0b       	sbc	r21, r21
 eda:	bb 27       	eor	r27, r27
 edc:	aa 27       	eor	r26, r26
 ede:	62 17       	cp	r22, r18
 ee0:	73 07       	cpc	r23, r19
 ee2:	84 07       	cpc	r24, r20
 ee4:	38 f0       	brcs	.+14     	; 0xef4 <__divsf3_pse+0x26>
 ee6:	9f 5f       	subi	r25, 0xFF	; 255
 ee8:	5f 4f       	sbci	r21, 0xFF	; 255
 eea:	22 0f       	add	r18, r18
 eec:	33 1f       	adc	r19, r19
 eee:	44 1f       	adc	r20, r20
 ef0:	aa 1f       	adc	r26, r26
 ef2:	a9 f3       	breq	.-22     	; 0xede <__divsf3_pse+0x10>
 ef4:	35 d0       	rcall	.+106    	; 0xf60 <__divsf3_pse+0x92>
 ef6:	0e 2e       	mov	r0, r30
 ef8:	3a f0       	brmi	.+14     	; 0xf08 <__divsf3_pse+0x3a>
 efa:	e0 e8       	ldi	r30, 0x80	; 128
 efc:	32 d0       	rcall	.+100    	; 0xf62 <__divsf3_pse+0x94>
 efe:	91 50       	subi	r25, 0x01	; 1
 f00:	50 40       	sbci	r21, 0x00	; 0
 f02:	e6 95       	lsr	r30
 f04:	00 1c       	adc	r0, r0
 f06:	ca f7       	brpl	.-14     	; 0xefa <__divsf3_pse+0x2c>
 f08:	2b d0       	rcall	.+86     	; 0xf60 <__divsf3_pse+0x92>
 f0a:	fe 2f       	mov	r31, r30
 f0c:	29 d0       	rcall	.+82     	; 0xf60 <__divsf3_pse+0x92>
 f0e:	66 0f       	add	r22, r22
 f10:	77 1f       	adc	r23, r23
 f12:	88 1f       	adc	r24, r24
 f14:	bb 1f       	adc	r27, r27
 f16:	26 17       	cp	r18, r22
 f18:	37 07       	cpc	r19, r23
 f1a:	48 07       	cpc	r20, r24
 f1c:	ab 07       	cpc	r26, r27
 f1e:	b0 e8       	ldi	r27, 0x80	; 128
 f20:	09 f0       	breq	.+2      	; 0xf24 <__divsf3_pse+0x56>
 f22:	bb 0b       	sbc	r27, r27
 f24:	80 2d       	mov	r24, r0
 f26:	bf 01       	movw	r22, r30
 f28:	ff 27       	eor	r31, r31
 f2a:	93 58       	subi	r25, 0x83	; 131
 f2c:	5f 4f       	sbci	r21, 0xFF	; 255
 f2e:	3a f0       	brmi	.+14     	; 0xf3e <__divsf3_pse+0x70>
 f30:	9e 3f       	cpi	r25, 0xFE	; 254
 f32:	51 05       	cpc	r21, r1
 f34:	78 f0       	brcs	.+30     	; 0xf54 <__divsf3_pse+0x86>
 f36:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__fp_inf>
 f3a:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__fp_szero>
 f3e:	5f 3f       	cpi	r21, 0xFF	; 255
 f40:	e4 f3       	brlt	.-8      	; 0xf3a <__divsf3_pse+0x6c>
 f42:	98 3e       	cpi	r25, 0xE8	; 232
 f44:	d4 f3       	brlt	.-12     	; 0xf3a <__divsf3_pse+0x6c>
 f46:	86 95       	lsr	r24
 f48:	77 95       	ror	r23
 f4a:	67 95       	ror	r22
 f4c:	b7 95       	ror	r27
 f4e:	f7 95       	ror	r31
 f50:	9f 5f       	subi	r25, 0xFF	; 255
 f52:	c9 f7       	brne	.-14     	; 0xf46 <__divsf3_pse+0x78>
 f54:	88 0f       	add	r24, r24
 f56:	91 1d       	adc	r25, r1
 f58:	96 95       	lsr	r25
 f5a:	87 95       	ror	r24
 f5c:	97 f9       	bld	r25, 7
 f5e:	08 95       	ret
 f60:	e1 e0       	ldi	r30, 0x01	; 1
 f62:	66 0f       	add	r22, r22
 f64:	77 1f       	adc	r23, r23
 f66:	88 1f       	adc	r24, r24
 f68:	bb 1f       	adc	r27, r27
 f6a:	62 17       	cp	r22, r18
 f6c:	73 07       	cpc	r23, r19
 f6e:	84 07       	cpc	r24, r20
 f70:	ba 07       	cpc	r27, r26
 f72:	20 f0       	brcs	.+8      	; 0xf7c <__divsf3_pse+0xae>
 f74:	62 1b       	sub	r22, r18
 f76:	73 0b       	sbc	r23, r19
 f78:	84 0b       	sbc	r24, r20
 f7a:	ba 0b       	sbc	r27, r26
 f7c:	ee 1f       	adc	r30, r30
 f7e:	88 f7       	brcc	.-30     	; 0xf62 <__divsf3_pse+0x94>
 f80:	e0 95       	com	r30
 f82:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000015d2 <__fixunssfsi>:
    15d2:	0e 94 8a 0b 	call	0x1714	; 0x1714 <__fp_splitA>
    15d6:	88 f0       	brcs	.+34     	; 0x15fa <__fixunssfsi+0x28>
    15d8:	9f 57       	subi	r25, 0x7F	; 127
    15da:	98 f0       	brcs	.+38     	; 0x1602 <__fixunssfsi+0x30>
    15dc:	b9 2f       	mov	r27, r25
    15de:	99 27       	eor	r25, r25
    15e0:	b7 51       	subi	r27, 0x17	; 23
    15e2:	b0 f0       	brcs	.+44     	; 0x1610 <__fixunssfsi+0x3e>
    15e4:	e1 f0       	breq	.+56     	; 0x161e <__fixunssfsi+0x4c>
    15e6:	66 0f       	add	r22, r22
    15e8:	77 1f       	adc	r23, r23
    15ea:	88 1f       	adc	r24, r24
    15ec:	99 1f       	adc	r25, r25
    15ee:	1a f0       	brmi	.+6      	; 0x15f6 <__fixunssfsi+0x24>
    15f0:	ba 95       	dec	r27
    15f2:	c9 f7       	brne	.-14     	; 0x15e6 <__fixunssfsi+0x14>
    15f4:	14 c0       	rjmp	.+40     	; 0x161e <__fixunssfsi+0x4c>
    15f6:	b1 30       	cpi	r27, 0x01	; 1
    15f8:	91 f0       	breq	.+36     	; 0x161e <__fixunssfsi+0x4c>
    15fa:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <__fp_zero>
    15fe:	b1 e0       	ldi	r27, 0x01	; 1
    1600:	08 95       	ret
    1602:	0c 94 2b 0d 	jmp	0x1a56	; 0x1a56 <__fp_zero>
    1606:	67 2f       	mov	r22, r23
    1608:	78 2f       	mov	r23, r24
    160a:	88 27       	eor	r24, r24
    160c:	b8 5f       	subi	r27, 0xF8	; 248
    160e:	39 f0       	breq	.+14     	; 0x161e <__fixunssfsi+0x4c>
    1610:	b9 3f       	cpi	r27, 0xF9	; 249
    1612:	cc f3       	brlt	.-14     	; 0x1606 <__fixunssfsi+0x34>
    1614:	86 95       	lsr	r24
    1616:	77 95       	ror	r23
    1618:	67 95       	ror	r22
    161a:	b3 95       	inc	r27
    161c:	d9 f7       	brne	.-10     	; 0x1614 <__fixunssfsi+0x42>
    161e:	3e f4       	brtc	.+14     	; 0x162e <__fixunssfsi+0x5c>
    1620:	90 95       	com	r25
    1622:	80 95       	com	r24
    1624:	70 95       	com	r23
    1626:	61 95       	neg	r22
    1628:	7f 4f       	sbci	r23, 0xFF	; 255
    162a:	8f 4f       	sbci	r24, 0xFF	; 255
    162c:	9f 4f       	sbci	r25, 0xFF	; 255
    162e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000146e <__floatunsisf>:
    146e:	e8 94       	clt
    1470:	09 c0       	rjmp	.+18     	; 0x1484 <__floatsisf+0x12>

00001472 <__floatsisf>:
    1472:	97 fb       	bst	r25, 7
    1474:	3e f4       	brtc	.+14     	; 0x1484 <__floatsisf+0x12>
    1476:	90 95       	com	r25
    1478:	80 95       	com	r24
    147a:	70 95       	com	r23
    147c:	61 95       	neg	r22
    147e:	7f 4f       	sbci	r23, 0xFF	; 255
    1480:	8f 4f       	sbci	r24, 0xFF	; 255
    1482:	9f 4f       	sbci	r25, 0xFF	; 255
    1484:	99 23       	and	r25, r25
    1486:	a9 f0       	breq	.+42     	; 0x14b2 <__floatsisf+0x40>
    1488:	f9 2f       	mov	r31, r25
    148a:	96 e9       	ldi	r25, 0x96	; 150
    148c:	bb 27       	eor	r27, r27
    148e:	93 95       	inc	r25
    1490:	f6 95       	lsr	r31
    1492:	87 95       	ror	r24
    1494:	77 95       	ror	r23
    1496:	67 95       	ror	r22
    1498:	b7 95       	ror	r27
    149a:	f1 11       	cpse	r31, r1
    149c:	f8 cf       	rjmp	.-16     	; 0x148e <__floatsisf+0x1c>
    149e:	fa f4       	brpl	.+62     	; 0x14de <__floatsisf+0x6c>
    14a0:	bb 0f       	add	r27, r27
    14a2:	11 f4       	brne	.+4      	; 0x14a8 <__floatsisf+0x36>
    14a4:	60 ff       	sbrs	r22, 0
    14a6:	1b c0       	rjmp	.+54     	; 0x14de <__floatsisf+0x6c>
    14a8:	6f 5f       	subi	r22, 0xFF	; 255
    14aa:	7f 4f       	sbci	r23, 0xFF	; 255
    14ac:	8f 4f       	sbci	r24, 0xFF	; 255
    14ae:	9f 4f       	sbci	r25, 0xFF	; 255
    14b0:	16 c0       	rjmp	.+44     	; 0x14de <__floatsisf+0x6c>
    14b2:	88 23       	and	r24, r24
    14b4:	11 f0       	breq	.+4      	; 0x14ba <__floatsisf+0x48>
    14b6:	96 e9       	ldi	r25, 0x96	; 150
    14b8:	11 c0       	rjmp	.+34     	; 0x14dc <__floatsisf+0x6a>
    14ba:	77 23       	and	r23, r23
    14bc:	21 f0       	breq	.+8      	; 0x14c6 <__floatsisf+0x54>
    14be:	9e e8       	ldi	r25, 0x8E	; 142
    14c0:	87 2f       	mov	r24, r23
    14c2:	76 2f       	mov	r23, r22
    14c4:	05 c0       	rjmp	.+10     	; 0x14d0 <__floatsisf+0x5e>
    14c6:	66 23       	and	r22, r22
    14c8:	71 f0       	breq	.+28     	; 0x14e6 <__floatsisf+0x74>
    14ca:	96 e8       	ldi	r25, 0x86	; 134
    14cc:	86 2f       	mov	r24, r22
    14ce:	70 e0       	ldi	r23, 0x00	; 0
    14d0:	60 e0       	ldi	r22, 0x00	; 0
    14d2:	2a f0       	brmi	.+10     	; 0x14de <__floatsisf+0x6c>
    14d4:	9a 95       	dec	r25
    14d6:	66 0f       	add	r22, r22
    14d8:	77 1f       	adc	r23, r23
    14da:	88 1f       	adc	r24, r24
    14dc:	da f7       	brpl	.-10     	; 0x14d4 <__floatsisf+0x62>
    14de:	88 0f       	add	r24, r24
    14e0:	96 95       	lsr	r25
    14e2:	87 95       	ror	r24
    14e4:	97 f9       	bld	r25, 7
    14e6:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001630 <__fp_cmp>:
    1630:	99 0f       	add	r25, r25
    1632:	00 08       	sbc	r0, r0
    1634:	55 0f       	add	r21, r21
    1636:	aa 0b       	sbc	r26, r26
    1638:	e0 e8       	ldi	r30, 0x80	; 128
    163a:	fe ef       	ldi	r31, 0xFE	; 254
    163c:	16 16       	cp	r1, r22
    163e:	17 06       	cpc	r1, r23
    1640:	e8 07       	cpc	r30, r24
    1642:	f9 07       	cpc	r31, r25
    1644:	c0 f0       	brcs	.+48     	; 0x1676 <__fp_cmp+0x46>
    1646:	12 16       	cp	r1, r18
    1648:	13 06       	cpc	r1, r19
    164a:	e4 07       	cpc	r30, r20
    164c:	f5 07       	cpc	r31, r21
    164e:	98 f0       	brcs	.+38     	; 0x1676 <__fp_cmp+0x46>
    1650:	62 1b       	sub	r22, r18
    1652:	73 0b       	sbc	r23, r19
    1654:	84 0b       	sbc	r24, r20
    1656:	95 0b       	sbc	r25, r21
    1658:	39 f4       	brne	.+14     	; 0x1668 <__fp_cmp+0x38>
    165a:	0a 26       	eor	r0, r26
    165c:	61 f0       	breq	.+24     	; 0x1676 <__fp_cmp+0x46>
    165e:	23 2b       	or	r18, r19
    1660:	24 2b       	or	r18, r20
    1662:	25 2b       	or	r18, r21
    1664:	21 f4       	brne	.+8      	; 0x166e <__fp_cmp+0x3e>
    1666:	08 95       	ret
    1668:	0a 26       	eor	r0, r26
    166a:	09 f4       	brne	.+2      	; 0x166e <__fp_cmp+0x3e>
    166c:	a1 40       	sbci	r26, 0x01	; 1
    166e:	a6 95       	lsr	r26
    1670:	8f ef       	ldi	r24, 0xFF	; 255
    1672:	81 1d       	adc	r24, r1
    1674:	81 1d       	adc	r24, r1
    1676:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001a72 <__fp_inf>:
    1a72:	97 f9       	bld	r25, 7
    1a74:	9f 67       	ori	r25, 0x7F	; 127
    1a76:	80 e8       	ldi	r24, 0x80	; 128
    1a78:	70 e0       	ldi	r23, 0x00	; 0
    1a7a:	60 e0       	ldi	r22, 0x00	; 0
    1a7c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001a98 <__fp_nan>:
    1a98:	9f ef       	ldi	r25, 0xFF	; 255
    1a9a:	80 ec       	ldi	r24, 0xC0	; 192
    1a9c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001a3a <__fp_pscA>:
    1a3a:	00 24       	eor	r0, r0
    1a3c:	0a 94       	dec	r0
    1a3e:	16 16       	cp	r1, r22
    1a40:	17 06       	cpc	r1, r23
    1a42:	18 06       	cpc	r1, r24
    1a44:	09 06       	cpc	r0, r25
    1a46:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001a48 <__fp_pscB>:
    1a48:	00 24       	eor	r0, r0
    1a4a:	0a 94       	dec	r0
    1a4c:	12 16       	cp	r1, r18
    1a4e:	13 06       	cpc	r1, r19
    1a50:	14 06       	cpc	r1, r20
    1a52:	05 06       	cpc	r0, r21
    1a54:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001978 <__fp_round>:
    1978:	09 2e       	mov	r0, r25
    197a:	03 94       	inc	r0
    197c:	00 0c       	add	r0, r0
    197e:	11 f4       	brne	.+4      	; 0x1984 <__fp_round+0xc>
    1980:	88 23       	and	r24, r24
    1982:	52 f0       	brmi	.+20     	; 0x1998 <__fp_round+0x20>
    1984:	bb 0f       	add	r27, r27
    1986:	40 f4       	brcc	.+16     	; 0x1998 <__fp_round+0x20>
    1988:	bf 2b       	or	r27, r31
    198a:	11 f4       	brne	.+4      	; 0x1990 <__fp_round+0x18>
    198c:	60 ff       	sbrs	r22, 0
    198e:	04 c0       	rjmp	.+8      	; 0x1998 <__fp_round+0x20>
    1990:	6f 5f       	subi	r22, 0xFF	; 255
    1992:	7f 4f       	sbci	r23, 0xFF	; 255
    1994:	8f 4f       	sbci	r24, 0xFF	; 255
    1996:	9f 4f       	sbci	r25, 0xFF	; 255
    1998:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001704 <__fp_split3>:
    1704:	57 fd       	sbrc	r21, 7
    1706:	90 58       	subi	r25, 0x80	; 128
    1708:	44 0f       	add	r20, r20
    170a:	55 1f       	adc	r21, r21
    170c:	59 f0       	breq	.+22     	; 0x1724 <__fp_splitA+0x10>
    170e:	5f 3f       	cpi	r21, 0xFF	; 255
    1710:	71 f0       	breq	.+28     	; 0x172e <__fp_splitA+0x1a>
    1712:	47 95       	ror	r20

00001714 <__fp_splitA>:
    1714:	88 0f       	add	r24, r24
    1716:	97 fb       	bst	r25, 7
    1718:	99 1f       	adc	r25, r25
    171a:	61 f0       	breq	.+24     	; 0x1734 <__fp_splitA+0x20>
    171c:	9f 3f       	cpi	r25, 0xFF	; 255
    171e:	79 f0       	breq	.+30     	; 0x173e <__fp_splitA+0x2a>
    1720:	87 95       	ror	r24
    1722:	08 95       	ret
    1724:	12 16       	cp	r1, r18
    1726:	13 06       	cpc	r1, r19
    1728:	14 06       	cpc	r1, r20
    172a:	55 1f       	adc	r21, r21
    172c:	f2 cf       	rjmp	.-28     	; 0x1712 <__fp_split3+0xe>
    172e:	46 95       	lsr	r20
    1730:	f1 df       	rcall	.-30     	; 0x1714 <__fp_splitA>
    1732:	08 c0       	rjmp	.+16     	; 0x1744 <__fp_splitA+0x30>
    1734:	16 16       	cp	r1, r22
    1736:	17 06       	cpc	r1, r23
    1738:	18 06       	cpc	r1, r24
    173a:	99 1f       	adc	r25, r25
    173c:	f1 cf       	rjmp	.-30     	; 0x1720 <__fp_splitA+0xc>
    173e:	86 95       	lsr	r24
    1740:	71 05       	cpc	r23, r1
    1742:	61 05       	cpc	r22, r1
    1744:	08 94       	sec
    1746:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001a56 <__fp_zero>:
    1a56:	e8 94       	clt

00001a58 <__fp_szero>:
    1a58:	bb 27       	eor	r27, r27
    1a5a:	66 27       	eor	r22, r22
    1a5c:	77 27       	eor	r23, r23
    1a5e:	cb 01       	movw	r24, r22
    1a60:	97 f9       	bld	r25, 7
    1a62:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001a90 <__mulsf3>:
    1a90:	0e 94 c2 07 	call	0xf84	; 0xf84 <__mulsf3x>
    1a94:	0c 94 bc 0c 	jmp	0x1978	; 0x1978 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000f84 <__mulsf3x>:
     f84:	0f c0       	rjmp	.+30     	; 0xfa4 <__mulsf3x+0x20>
     f86:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <__fp_pscA>
     f8a:	38 f0       	brcs	.+14     	; 0xf9a <__mulsf3x+0x16>
     f8c:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__fp_pscB>
     f90:	20 f0       	brcs	.+8      	; 0xf9a <__mulsf3x+0x16>
     f92:	95 23       	and	r25, r21
     f94:	11 f0       	breq	.+4      	; 0xf9a <__mulsf3x+0x16>
     f96:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__fp_inf>
     f9a:	0c 94 4c 0d 	jmp	0x1a98	; 0x1a98 <__fp_nan>
     f9e:	11 24       	eor	r1, r1
     fa0:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__fp_szero>
     fa4:	0e 94 82 0b 	call	0x1704	; 0x1704 <__fp_split3>
     fa8:	70 f3       	brcs	.-36     	; 0xf86 <__mulsf3x+0x2>

00000faa <__mulsf3_pse>:
     faa:	95 9f       	mul	r25, r21
     fac:	c1 f3       	breq	.-16     	; 0xf9e <__mulsf3x+0x1a>
     fae:	95 0f       	add	r25, r21
     fb0:	50 e0       	ldi	r21, 0x00	; 0
     fb2:	55 1f       	adc	r21, r21
     fb4:	62 9f       	mul	r22, r18
     fb6:	f0 01       	movw	r30, r0
     fb8:	72 9f       	mul	r23, r18
     fba:	bb 27       	eor	r27, r27
     fbc:	f0 0d       	add	r31, r0
     fbe:	b1 1d       	adc	r27, r1
     fc0:	63 9f       	mul	r22, r19
     fc2:	aa 27       	eor	r26, r26
     fc4:	f0 0d       	add	r31, r0
     fc6:	b1 1d       	adc	r27, r1
     fc8:	aa 1f       	adc	r26, r26
     fca:	64 9f       	mul	r22, r20
     fcc:	66 27       	eor	r22, r22
     fce:	b0 0d       	add	r27, r0
     fd0:	a1 1d       	adc	r26, r1
     fd2:	66 1f       	adc	r22, r22
     fd4:	82 9f       	mul	r24, r18
     fd6:	22 27       	eor	r18, r18
     fd8:	b0 0d       	add	r27, r0
     fda:	a1 1d       	adc	r26, r1
     fdc:	62 1f       	adc	r22, r18
     fde:	73 9f       	mul	r23, r19
     fe0:	b0 0d       	add	r27, r0
     fe2:	a1 1d       	adc	r26, r1
     fe4:	62 1f       	adc	r22, r18
     fe6:	83 9f       	mul	r24, r19
     fe8:	a0 0d       	add	r26, r0
     fea:	61 1d       	adc	r22, r1
     fec:	22 1f       	adc	r18, r18
     fee:	74 9f       	mul	r23, r20
     ff0:	33 27       	eor	r19, r19
     ff2:	a0 0d       	add	r26, r0
     ff4:	61 1d       	adc	r22, r1
     ff6:	23 1f       	adc	r18, r19
     ff8:	84 9f       	mul	r24, r20
     ffa:	60 0d       	add	r22, r0
     ffc:	21 1d       	adc	r18, r1
     ffe:	82 2f       	mov	r24, r18
    1000:	76 2f       	mov	r23, r22
    1002:	6a 2f       	mov	r22, r26
    1004:	11 24       	eor	r1, r1
    1006:	9f 57       	subi	r25, 0x7F	; 127
    1008:	50 40       	sbci	r21, 0x00	; 0
    100a:	9a f0       	brmi	.+38     	; 0x1032 <__mulsf3_pse+0x88>
    100c:	f1 f0       	breq	.+60     	; 0x104a <__mulsf3_pse+0xa0>
    100e:	88 23       	and	r24, r24
    1010:	4a f0       	brmi	.+18     	; 0x1024 <__mulsf3_pse+0x7a>
    1012:	ee 0f       	add	r30, r30
    1014:	ff 1f       	adc	r31, r31
    1016:	bb 1f       	adc	r27, r27
    1018:	66 1f       	adc	r22, r22
    101a:	77 1f       	adc	r23, r23
    101c:	88 1f       	adc	r24, r24
    101e:	91 50       	subi	r25, 0x01	; 1
    1020:	50 40       	sbci	r21, 0x00	; 0
    1022:	a9 f7       	brne	.-22     	; 0x100e <__mulsf3_pse+0x64>
    1024:	9e 3f       	cpi	r25, 0xFE	; 254
    1026:	51 05       	cpc	r21, r1
    1028:	80 f0       	brcs	.+32     	; 0x104a <__mulsf3_pse+0xa0>
    102a:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__fp_inf>
    102e:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__fp_szero>
    1032:	5f 3f       	cpi	r21, 0xFF	; 255
    1034:	e4 f3       	brlt	.-8      	; 0x102e <__mulsf3_pse+0x84>
    1036:	98 3e       	cpi	r25, 0xE8	; 232
    1038:	d4 f3       	brlt	.-12     	; 0x102e <__mulsf3_pse+0x84>
    103a:	86 95       	lsr	r24
    103c:	77 95       	ror	r23
    103e:	67 95       	ror	r22
    1040:	b7 95       	ror	r27
    1042:	f7 95       	ror	r31
    1044:	e7 95       	ror	r30
    1046:	9f 5f       	subi	r25, 0xFF	; 255
    1048:	c1 f7       	brne	.-16     	; 0x103a <__mulsf3_pse+0x90>
    104a:	fe 2b       	or	r31, r30
    104c:	88 0f       	add	r24, r24
    104e:	91 1d       	adc	r25, r1
    1050:	96 95       	lsr	r25
    1052:	87 95       	ror	r24
    1054:	97 f9       	bld	r25, 7
    1056:	08 95       	ret

Disassembly of section .text.avrlibc:

00000220 <vfprintf>:
 220:	a4 e1       	ldi	r26, 0x14	; 20
 222:	b0 e0       	ldi	r27, 0x00	; 0
 224:	e6 e1       	ldi	r30, 0x16	; 22
 226:	f1 e0       	ldi	r31, 0x01	; 1
 228:	0c 94 e1 0b 	jmp	0x17c2	; 0x17c2 <__prologue_saves__>
 22c:	6c 01       	movw	r12, r24
 22e:	1a 01       	movw	r2, r20
 230:	46 2e       	mov	r4, r22
 232:	59 01       	movw	r10, r18
 234:	fc 01       	movw	r30, r24
 236:	10 86       	std	Z+8, r1	; 0x08
 238:	17 82       	std	Z+7, r1	; 0x07
 23a:	84 81       	ldd	r24, Z+4	; 0x04
 23c:	81 ff       	sbrs	r24, 1
 23e:	62 c3       	rjmp	.+1732   	; 0x904 <__stack+0x5>
 240:	ce 01       	movw	r24, r28
 242:	01 96       	adiw	r24, 0x01	; 1
 244:	9d 87       	std	Y+13, r25	; 0x0d
 246:	8c 87       	std	Y+12, r24	; 0x0c
 248:	a0 e8       	ldi	r26, 0x80	; 128
 24a:	8a 8b       	std	Y+18, r24	; 0x12
 24c:	9b 8b       	std	Y+19, r25	; 0x13
 24e:	ac 8b       	std	Y+20, r26	; 0x14
 250:	f1 01       	movw	r30, r2
 252:	84 91       	lpm	r24, Z
 254:	47 fc       	sbrc	r4, 7
 256:	80 81       	ld	r24, Z
 258:	88 23       	and	r24, r24
 25a:	09 f4       	brne	.+2      	; 0x25e <vfprintf+0x3e>
 25c:	4f c3       	rjmp	.+1694   	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 25e:	44 2d       	mov	r20, r4
 260:	91 01       	movw	r18, r2
 262:	2f 5f       	subi	r18, 0xFF	; 255
 264:	3f 4f       	sbci	r19, 0xFF	; 255
 266:	4f 4f       	sbci	r20, 0xFF	; 255
 268:	85 32       	cpi	r24, 0x25	; 37
 26a:	19 f0       	breq	.+6      	; 0x272 <vfprintf+0x52>
 26c:	19 01       	movw	r2, r18
 26e:	44 2e       	mov	r4, r20
 270:	0a c0       	rjmp	.+20     	; 0x286 <vfprintf+0x66>
 272:	f9 01       	movw	r30, r18
 274:	84 91       	lpm	r24, Z
 276:	47 fd       	sbrc	r20, 7
 278:	80 81       	ld	r24, Z
 27a:	92 e0       	ldi	r25, 0x02	; 2
 27c:	29 0e       	add	r2, r25
 27e:	31 1c       	adc	r3, r1
 280:	41 1c       	adc	r4, r1
 282:	85 32       	cpi	r24, 0x25	; 37
 284:	49 f4       	brne	.+18     	; 0x298 <vfprintf+0x78>
 286:	b6 01       	movw	r22, r12
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 28e:	bf 86       	std	Y+15, r11	; 0x0f
 290:	ae 86       	std	Y+14, r10	; 0x0e
 292:	ae 84       	ldd	r10, Y+14	; 0x0e
 294:	bf 84       	ldd	r11, Y+15	; 0x0f
 296:	dc cf       	rjmp	.-72     	; 0x250 <vfprintf+0x30>
 298:	10 e0       	ldi	r17, 0x00	; 0
 29a:	f1 2c       	mov	r15, r1
 29c:	00 e0       	ldi	r16, 0x00	; 0
 29e:	00 32       	cpi	r16, 0x20	; 32
 2a0:	a0 f4       	brcc	.+40     	; 0x2ca <vfprintf+0xaa>
 2a2:	8b 32       	cpi	r24, 0x2B	; 43
 2a4:	69 f0       	breq	.+26     	; 0x2c0 <vfprintf+0xa0>
 2a6:	30 f4       	brcc	.+12     	; 0x2b4 <vfprintf+0x94>
 2a8:	80 32       	cpi	r24, 0x20	; 32
 2aa:	59 f0       	breq	.+22     	; 0x2c2 <vfprintf+0xa2>
 2ac:	83 32       	cpi	r24, 0x23	; 35
 2ae:	69 f4       	brne	.+26     	; 0x2ca <vfprintf+0xaa>
 2b0:	00 61       	ori	r16, 0x10	; 16
 2b2:	2c c0       	rjmp	.+88     	; 0x30c <vfprintf+0xec>
 2b4:	8d 32       	cpi	r24, 0x2D	; 45
 2b6:	39 f0       	breq	.+14     	; 0x2c6 <vfprintf+0xa6>
 2b8:	80 33       	cpi	r24, 0x30	; 48
 2ba:	39 f4       	brne	.+14     	; 0x2ca <vfprintf+0xaa>
 2bc:	01 60       	ori	r16, 0x01	; 1
 2be:	26 c0       	rjmp	.+76     	; 0x30c <vfprintf+0xec>
 2c0:	02 60       	ori	r16, 0x02	; 2
 2c2:	04 60       	ori	r16, 0x04	; 4
 2c4:	23 c0       	rjmp	.+70     	; 0x30c <vfprintf+0xec>
 2c6:	08 60       	ori	r16, 0x08	; 8
 2c8:	21 c0       	rjmp	.+66     	; 0x30c <vfprintf+0xec>
 2ca:	07 fd       	sbrc	r16, 7
 2cc:	29 c0       	rjmp	.+82     	; 0x320 <vfprintf+0x100>
 2ce:	90 ed       	ldi	r25, 0xD0	; 208
 2d0:	98 0f       	add	r25, r24
 2d2:	9a 30       	cpi	r25, 0x0A	; 10
 2d4:	78 f4       	brcc	.+30     	; 0x2f4 <vfprintf+0xd4>
 2d6:	06 ff       	sbrs	r16, 6
 2d8:	06 c0       	rjmp	.+12     	; 0x2e6 <vfprintf+0xc6>
 2da:	aa e0       	ldi	r26, 0x0A	; 10
 2dc:	1a 9f       	mul	r17, r26
 2de:	90 0d       	add	r25, r0
 2e0:	11 24       	eor	r1, r1
 2e2:	19 2f       	mov	r17, r25
 2e4:	13 c0       	rjmp	.+38     	; 0x30c <vfprintf+0xec>
 2e6:	ea e0       	ldi	r30, 0x0A	; 10
 2e8:	fe 9e       	mul	r15, r30
 2ea:	90 0d       	add	r25, r0
 2ec:	11 24       	eor	r1, r1
 2ee:	f9 2e       	mov	r15, r25
 2f0:	00 62       	ori	r16, 0x20	; 32
 2f2:	0c c0       	rjmp	.+24     	; 0x30c <vfprintf+0xec>
 2f4:	8e 32       	cpi	r24, 0x2E	; 46
 2f6:	21 f4       	brne	.+8      	; 0x300 <vfprintf+0xe0>
 2f8:	06 fd       	sbrc	r16, 6
 2fa:	00 c3       	rjmp	.+1536   	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 2fc:	00 64       	ori	r16, 0x40	; 64
 2fe:	06 c0       	rjmp	.+12     	; 0x30c <vfprintf+0xec>
 300:	8c 36       	cpi	r24, 0x6C	; 108
 302:	11 f4       	brne	.+4      	; 0x308 <vfprintf+0xe8>
 304:	00 68       	ori	r16, 0x80	; 128
 306:	02 c0       	rjmp	.+4      	; 0x30c <vfprintf+0xec>
 308:	88 36       	cpi	r24, 0x68	; 104
 30a:	51 f4       	brne	.+20     	; 0x320 <vfprintf+0x100>
 30c:	f1 01       	movw	r30, r2
 30e:	84 91       	lpm	r24, Z
 310:	47 fc       	sbrc	r4, 7
 312:	80 81       	ld	r24, Z
 314:	ff ef       	ldi	r31, 0xFF	; 255
 316:	2f 1a       	sub	r2, r31
 318:	3f 0a       	sbc	r3, r31
 31a:	4f 0a       	sbc	r4, r31
 31c:	81 11       	cpse	r24, r1
 31e:	bf cf       	rjmp	.-130    	; 0x29e <vfprintf+0x7e>
 320:	9b eb       	ldi	r25, 0xBB	; 187
 322:	98 0f       	add	r25, r24
 324:	93 30       	cpi	r25, 0x03	; 3
 326:	18 f4       	brcc	.+6      	; 0x32e <vfprintf+0x10e>
 328:	00 61       	ori	r16, 0x10	; 16
 32a:	80 5e       	subi	r24, 0xE0	; 224
 32c:	06 c0       	rjmp	.+12     	; 0x33a <vfprintf+0x11a>
 32e:	9b e9       	ldi	r25, 0x9B	; 155
 330:	98 0f       	add	r25, r24
 332:	93 30       	cpi	r25, 0x03	; 3
 334:	08 f0       	brcs	.+2      	; 0x338 <vfprintf+0x118>
 336:	66 c1       	rjmp	.+716    	; 0x604 <__EEPROM_REGION_LENGTH__+0x204>
 338:	0f 7e       	andi	r16, 0xEF	; 239
 33a:	06 ff       	sbrs	r16, 6
 33c:	16 e0       	ldi	r17, 0x06	; 6
 33e:	0f 73       	andi	r16, 0x3F	; 63
 340:	70 2e       	mov	r7, r16
 342:	85 36       	cpi	r24, 0x65	; 101
 344:	21 f4       	brne	.+8      	; 0x34e <vfprintf+0x12e>
 346:	20 2f       	mov	r18, r16
 348:	20 64       	ori	r18, 0x40	; 64
 34a:	72 2e       	mov	r7, r18
 34c:	08 c0       	rjmp	.+16     	; 0x35e <vfprintf+0x13e>
 34e:	86 36       	cpi	r24, 0x66	; 102
 350:	21 f4       	brne	.+8      	; 0x35a <vfprintf+0x13a>
 352:	80 2f       	mov	r24, r16
 354:	80 68       	ori	r24, 0x80	; 128
 356:	78 2e       	mov	r7, r24
 358:	02 c0       	rjmp	.+4      	; 0x35e <vfprintf+0x13e>
 35a:	11 11       	cpse	r17, r1
 35c:	11 50       	subi	r17, 0x01	; 1
 35e:	77 fe       	sbrs	r7, 7
 360:	07 c0       	rjmp	.+14     	; 0x370 <vfprintf+0x150>
 362:	1c 33       	cpi	r17, 0x3C	; 60
 364:	50 f4       	brcc	.+20     	; 0x37a <vfprintf+0x15a>
 366:	ee 24       	eor	r14, r14
 368:	e3 94       	inc	r14
 36a:	e1 0e       	add	r14, r17
 36c:	27 e0       	ldi	r18, 0x07	; 7
 36e:	0b c0       	rjmp	.+22     	; 0x386 <vfprintf+0x166>
 370:	18 30       	cpi	r17, 0x08	; 8
 372:	38 f0       	brcs	.+14     	; 0x382 <vfprintf+0x162>
 374:	27 e0       	ldi	r18, 0x07	; 7
 376:	17 e0       	ldi	r17, 0x07	; 7
 378:	05 c0       	rjmp	.+10     	; 0x384 <vfprintf+0x164>
 37a:	27 e0       	ldi	r18, 0x07	; 7
 37c:	6c e3       	ldi	r22, 0x3C	; 60
 37e:	e6 2e       	mov	r14, r22
 380:	02 c0       	rjmp	.+4      	; 0x386 <vfprintf+0x166>
 382:	21 2f       	mov	r18, r17
 384:	e1 2c       	mov	r14, r1
 386:	f5 01       	movw	r30, r10
 388:	34 96       	adiw	r30, 0x04	; 4
 38a:	ff 87       	std	Y+15, r31	; 0x0f
 38c:	ee 87       	std	Y+14, r30	; 0x0e
 38e:	f5 01       	movw	r30, r10
 390:	60 81       	ld	r22, Z
 392:	71 81       	ldd	r23, Z+1	; 0x01
 394:	82 81       	ldd	r24, Z+2	; 0x02
 396:	93 81       	ldd	r25, Z+3	; 0x03
 398:	0e 2d       	mov	r16, r14
 39a:	ae 01       	movw	r20, r28
 39c:	4f 5f       	subi	r20, 0xFF	; 255
 39e:	5f 4f       	sbci	r21, 0xFF	; 255
 3a0:	0e 94 d3 05 	call	0xba6	; 0xba6 <__ftoa_engine>
 3a4:	5c 01       	movw	r10, r24
 3a6:	59 80       	ldd	r5, Y+1	; 0x01
 3a8:	50 fe       	sbrs	r5, 0
 3aa:	02 c0       	rjmp	.+4      	; 0x3b0 <vfprintf+0x190>
 3ac:	53 fe       	sbrs	r5, 3
 3ae:	06 c0       	rjmp	.+12     	; 0x3bc <vfprintf+0x19c>
 3b0:	71 fc       	sbrc	r7, 1
 3b2:	06 c0       	rjmp	.+12     	; 0x3c0 <vfprintf+0x1a0>
 3b4:	72 fe       	sbrs	r7, 2
 3b6:	06 c0       	rjmp	.+12     	; 0x3c4 <vfprintf+0x1a4>
 3b8:	00 e2       	ldi	r16, 0x20	; 32
 3ba:	05 c0       	rjmp	.+10     	; 0x3c6 <vfprintf+0x1a6>
 3bc:	0d e2       	ldi	r16, 0x2D	; 45
 3be:	03 c0       	rjmp	.+6      	; 0x3c6 <vfprintf+0x1a6>
 3c0:	0b e2       	ldi	r16, 0x2B	; 43
 3c2:	01 c0       	rjmp	.+2      	; 0x3c6 <vfprintf+0x1a6>
 3c4:	00 e0       	ldi	r16, 0x00	; 0
 3c6:	85 2d       	mov	r24, r5
 3c8:	8c 70       	andi	r24, 0x0C	; 12
 3ca:	19 f0       	breq	.+6      	; 0x3d2 <vfprintf+0x1b2>
 3cc:	01 11       	cpse	r16, r1
 3ce:	73 c2       	rjmp	.+1254   	; 0x8b6 <__DATA_REGION_LENGTH__+0xb6>
 3d0:	be c2       	rjmp	.+1404   	; 0x94e <__stack+0x4f>
 3d2:	77 fe       	sbrs	r7, 7
 3d4:	0f c0       	rjmp	.+30     	; 0x3f4 <vfprintf+0x1d4>
 3d6:	ea 0c       	add	r14, r10
 3d8:	54 fe       	sbrs	r5, 4
 3da:	04 c0       	rjmp	.+8      	; 0x3e4 <vfprintf+0x1c4>
 3dc:	8a 81       	ldd	r24, Y+2	; 0x02
 3de:	81 33       	cpi	r24, 0x31	; 49
 3e0:	09 f4       	brne	.+2      	; 0x3e4 <vfprintf+0x1c4>
 3e2:	ea 94       	dec	r14
 3e4:	1e 14       	cp	r1, r14
 3e6:	74 f5       	brge	.+92     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 3e8:	28 e0       	ldi	r18, 0x08	; 8
 3ea:	2e 15       	cp	r18, r14
 3ec:	78 f5       	brcc	.+94     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 3ee:	38 e0       	ldi	r19, 0x08	; 8
 3f0:	e3 2e       	mov	r14, r19
 3f2:	2c c0       	rjmp	.+88     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 3f4:	76 fc       	sbrc	r7, 6
 3f6:	2a c0       	rjmp	.+84     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 3f8:	81 2f       	mov	r24, r17
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	8a 15       	cp	r24, r10
 3fe:	9b 05       	cpc	r25, r11
 400:	9c f0       	brlt	.+38     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 402:	8c ef       	ldi	r24, 0xFC	; 252
 404:	a8 16       	cp	r10, r24
 406:	8f ef       	ldi	r24, 0xFF	; 255
 408:	b8 06       	cpc	r11, r24
 40a:	74 f0       	brlt	.+28     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 40c:	97 2d       	mov	r25, r7
 40e:	90 68       	ori	r25, 0x80	; 128
 410:	79 2e       	mov	r7, r25
 412:	0a c0       	rjmp	.+20     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 414:	e2 e0       	ldi	r30, 0x02	; 2
 416:	f0 e0       	ldi	r31, 0x00	; 0
 418:	ec 0f       	add	r30, r28
 41a:	fd 1f       	adc	r31, r29
 41c:	e1 0f       	add	r30, r17
 41e:	f1 1d       	adc	r31, r1
 420:	80 81       	ld	r24, Z
 422:	80 33       	cpi	r24, 0x30	; 48
 424:	19 f4       	brne	.+6      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 426:	11 50       	subi	r17, 0x01	; 1
 428:	11 11       	cpse	r17, r1
 42a:	f4 cf       	rjmp	.-24     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 42c:	77 fe       	sbrs	r7, 7
 42e:	0e c0       	rjmp	.+28     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 430:	ee 24       	eor	r14, r14
 432:	e3 94       	inc	r14
 434:	e1 0e       	add	r14, r17
 436:	81 2f       	mov	r24, r17
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	a8 16       	cp	r10, r24
 43c:	b9 06       	cpc	r11, r25
 43e:	2c f4       	brge	.+10     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 440:	1a 19       	sub	r17, r10
 442:	04 c0       	rjmp	.+8      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 444:	ee 24       	eor	r14, r14
 446:	e3 94       	inc	r14
 448:	01 c0       	rjmp	.+2      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 44a:	10 e0       	ldi	r17, 0x00	; 0
 44c:	77 fe       	sbrs	r7, 7
 44e:	06 c0       	rjmp	.+12     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 450:	1a 14       	cp	r1, r10
 452:	1b 04       	cpc	r1, r11
 454:	34 f4       	brge	.+12     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 456:	c5 01       	movw	r24, r10
 458:	01 96       	adiw	r24, 0x01	; 1
 45a:	05 c0       	rjmp	.+10     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 45c:	85 e0       	ldi	r24, 0x05	; 5
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	02 c0       	rjmp	.+4      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	01 11       	cpse	r16, r1
 468:	01 96       	adiw	r24, 0x01	; 1
 46a:	11 23       	and	r17, r17
 46c:	31 f0       	breq	.+12     	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 46e:	21 2f       	mov	r18, r17
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	2f 5f       	subi	r18, 0xFF	; 255
 474:	3f 4f       	sbci	r19, 0xFF	; 255
 476:	82 0f       	add	r24, r18
 478:	93 1f       	adc	r25, r19
 47a:	2f 2d       	mov	r18, r15
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	82 17       	cp	r24, r18
 480:	93 07       	cpc	r25, r19
 482:	14 f4       	brge	.+4      	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 484:	f8 1a       	sub	r15, r24
 486:	01 c0       	rjmp	.+2      	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 488:	f1 2c       	mov	r15, r1
 48a:	87 2d       	mov	r24, r7
 48c:	89 70       	andi	r24, 0x09	; 9
 48e:	49 f4       	brne	.+18     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 490:	ff 20       	and	r15, r15
 492:	39 f0       	breq	.+14     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 494:	b6 01       	movw	r22, r12
 496:	80 e2       	ldi	r24, 0x20	; 32
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 49e:	fa 94       	dec	r15
 4a0:	f7 cf       	rjmp	.-18     	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 4a2:	00 23       	and	r16, r16
 4a4:	29 f0       	breq	.+10     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4a6:	b6 01       	movw	r22, r12
 4a8:	80 2f       	mov	r24, r16
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 4b0:	73 fc       	sbrc	r7, 3
 4b2:	09 c0       	rjmp	.+18     	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 4b4:	ff 20       	and	r15, r15
 4b6:	39 f0       	breq	.+14     	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 4b8:	b6 01       	movw	r22, r12
 4ba:	80 e3       	ldi	r24, 0x30	; 48
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 4c2:	fa 94       	dec	r15
 4c4:	f7 cf       	rjmp	.-18     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
 4c6:	77 fe       	sbrs	r7, 7
 4c8:	49 c0       	rjmp	.+146    	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
 4ca:	35 01       	movw	r6, r10
 4cc:	b7 fe       	sbrs	r11, 7
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
 4d0:	61 2c       	mov	r6, r1
 4d2:	71 2c       	mov	r7, r1
 4d4:	c5 01       	movw	r24, r10
 4d6:	86 19       	sub	r24, r6
 4d8:	97 09       	sbc	r25, r7
 4da:	88 24       	eor	r8, r8
 4dc:	83 94       	inc	r8
 4de:	91 2c       	mov	r9, r1
 4e0:	8c 0e       	add	r8, r28
 4e2:	9d 1e       	adc	r9, r29
 4e4:	88 0e       	add	r8, r24
 4e6:	99 1e       	adc	r9, r25
 4e8:	f5 01       	movw	r30, r10
 4ea:	ee 19       	sub	r30, r14
 4ec:	f1 09       	sbc	r31, r1
 4ee:	f9 8b       	std	Y+17, r31	; 0x11
 4f0:	e8 8b       	std	Y+16, r30	; 0x10
 4f2:	01 2f       	mov	r16, r17
 4f4:	10 e0       	ldi	r17, 0x00	; 0
 4f6:	11 95       	neg	r17
 4f8:	01 95       	neg	r16
 4fa:	11 09       	sbc	r17, r1
 4fc:	ff ef       	ldi	r31, 0xFF	; 255
 4fe:	6f 16       	cp	r6, r31
 500:	7f 06       	cpc	r7, r31
 502:	29 f4       	brne	.+10     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 504:	b6 01       	movw	r22, r12
 506:	8e e2       	ldi	r24, 0x2E	; 46
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 50e:	a6 14       	cp	r10, r6
 510:	b7 04       	cpc	r11, r7
 512:	44 f0       	brlt	.+16     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 514:	88 89       	ldd	r24, Y+16	; 0x10
 516:	99 89       	ldd	r25, Y+17	; 0x11
 518:	86 15       	cp	r24, r6
 51a:	97 05       	cpc	r25, r7
 51c:	1c f4       	brge	.+6      	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 51e:	f4 01       	movw	r30, r8
 520:	81 81       	ldd	r24, Z+1	; 0x01
 522:	01 c0       	rjmp	.+2      	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 524:	80 e3       	ldi	r24, 0x30	; 48
 526:	f1 e0       	ldi	r31, 0x01	; 1
 528:	6f 1a       	sub	r6, r31
 52a:	71 08       	sbc	r7, r1
 52c:	2f ef       	ldi	r18, 0xFF	; 255
 52e:	82 1a       	sub	r8, r18
 530:	92 0a       	sbc	r9, r18
 532:	60 16       	cp	r6, r16
 534:	71 06       	cpc	r7, r17
 536:	2c f0       	brlt	.+10     	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 538:	b6 01       	movw	r22, r12
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 540:	dd cf       	rjmp	.-70     	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
 542:	a6 14       	cp	r10, r6
 544:	b7 04       	cpc	r11, r7
 546:	39 f4       	brne	.+14     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 548:	9a 81       	ldd	r25, Y+2	; 0x02
 54a:	96 33       	cpi	r25, 0x36	; 54
 54c:	18 f4       	brcc	.+6      	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
 54e:	95 33       	cpi	r25, 0x35	; 53
 550:	11 f4       	brne	.+4      	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 552:	54 fe       	sbrs	r5, 4
 554:	81 e3       	ldi	r24, 0x31	; 49
 556:	b6 01       	movw	r22, r12
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	51 c0       	rjmp	.+162    	; 0x5fe <__EEPROM_REGION_LENGTH__+0x1fe>
 55c:	8a 81       	ldd	r24, Y+2	; 0x02
 55e:	81 33       	cpi	r24, 0x31	; 49
 560:	19 f0       	breq	.+6      	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 562:	95 2d       	mov	r25, r5
 564:	9f 7e       	andi	r25, 0xEF	; 239
 566:	59 2e       	mov	r5, r25
 568:	b6 01       	movw	r22, r12
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 570:	11 11       	cpse	r17, r1
 572:	05 c0       	rjmp	.+10     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 574:	74 fc       	sbrc	r7, 4
 576:	1c c0       	rjmp	.+56     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 578:	85 e6       	ldi	r24, 0x65	; 101
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	1b c0       	rjmp	.+54     	; 0x5b4 <__EEPROM_REGION_LENGTH__+0x1b4>
 57e:	b6 01       	movw	r22, r12
 580:	8e e2       	ldi	r24, 0x2E	; 46
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 588:	02 e0       	ldi	r16, 0x02	; 2
 58a:	01 0f       	add	r16, r17
 58c:	82 e0       	ldi	r24, 0x02	; 2
 58e:	11 e0       	ldi	r17, 0x01	; 1
 590:	18 0f       	add	r17, r24
 592:	e1 e0       	ldi	r30, 0x01	; 1
 594:	f0 e0       	ldi	r31, 0x00	; 0
 596:	ec 0f       	add	r30, r28
 598:	fd 1f       	adc	r31, r29
 59a:	e8 0f       	add	r30, r24
 59c:	f1 1d       	adc	r31, r1
 59e:	80 81       	ld	r24, Z
 5a0:	b6 01       	movw	r22, r12
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 5a8:	81 2f       	mov	r24, r17
 5aa:	10 13       	cpse	r17, r16
 5ac:	f0 cf       	rjmp	.-32     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 5ae:	e2 cf       	rjmp	.-60     	; 0x574 <__EEPROM_REGION_LENGTH__+0x174>
 5b0:	85 e4       	ldi	r24, 0x45	; 69
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	b6 01       	movw	r22, r12
 5b6:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 5ba:	b7 fc       	sbrc	r11, 7
 5bc:	05 c0       	rjmp	.+10     	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 5be:	a1 14       	cp	r10, r1
 5c0:	b1 04       	cpc	r11, r1
 5c2:	39 f4       	brne	.+14     	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 5c4:	54 fe       	sbrs	r5, 4
 5c6:	05 c0       	rjmp	.+10     	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 5c8:	b1 94       	neg	r11
 5ca:	a1 94       	neg	r10
 5cc:	b1 08       	sbc	r11, r1
 5ce:	8d e2       	ldi	r24, 0x2D	; 45
 5d0:	01 c0       	rjmp	.+2      	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5d2:	8b e2       	ldi	r24, 0x2B	; 43
 5d4:	b6 01       	movw	r22, r12
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 5dc:	80 e3       	ldi	r24, 0x30	; 48
 5de:	ea e0       	ldi	r30, 0x0A	; 10
 5e0:	ae 16       	cp	r10, r30
 5e2:	b1 04       	cpc	r11, r1
 5e4:	2c f0       	brlt	.+10     	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 5e6:	8f 5f       	subi	r24, 0xFF	; 255
 5e8:	aa e0       	ldi	r26, 0x0A	; 10
 5ea:	aa 1a       	sub	r10, r26
 5ec:	b1 08       	sbc	r11, r1
 5ee:	f7 cf       	rjmp	.-18     	; 0x5de <__EEPROM_REGION_LENGTH__+0x1de>
 5f0:	b6 01       	movw	r22, r12
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 5f8:	b6 01       	movw	r22, r12
 5fa:	c5 01       	movw	r24, r10
 5fc:	c0 96       	adiw	r24, 0x30	; 48
 5fe:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 602:	72 c1       	rjmp	.+740    	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
 604:	83 36       	cpi	r24, 0x63	; 99
 606:	31 f0       	breq	.+12     	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
 608:	83 37       	cpi	r24, 0x73	; 115
 60a:	91 f0       	breq	.+36     	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 60c:	83 35       	cpi	r24, 0x53	; 83
 60e:	09 f0       	breq	.+2      	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 610:	5d c0       	rjmp	.+186    	; 0x6cc <__EEPROM_REGION_LENGTH__+0x2cc>
 612:	24 c0       	rjmp	.+72     	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
 614:	c5 01       	movw	r24, r10
 616:	02 96       	adiw	r24, 0x02	; 2
 618:	9f 87       	std	Y+15, r25	; 0x0f
 61a:	8e 87       	std	Y+14, r24	; 0x0e
 61c:	f5 01       	movw	r30, r10
 61e:	80 81       	ld	r24, Z
 620:	89 83       	std	Y+1, r24	; 0x01
 622:	6a 88       	ldd	r6, Y+18	; 0x12
 624:	7b 88       	ldd	r7, Y+19	; 0x13
 626:	8c 88       	ldd	r8, Y+20	; 0x14
 628:	aa 24       	eor	r10, r10
 62a:	a3 94       	inc	r10
 62c:	b1 2c       	mov	r11, r1
 62e:	14 c0       	rjmp	.+40     	; 0x658 <__EEPROM_REGION_LENGTH__+0x258>
 630:	c5 01       	movw	r24, r10
 632:	03 96       	adiw	r24, 0x03	; 3
 634:	9f 87       	std	Y+15, r25	; 0x0f
 636:	8e 87       	std	Y+14, r24	; 0x0e
 638:	f5 01       	movw	r30, r10
 63a:	60 80       	ld	r6, Z
 63c:	71 80       	ldd	r7, Z+1	; 0x01
 63e:	82 80       	ldd	r8, Z+2	; 0x02
 640:	06 ff       	sbrs	r16, 6
 642:	03 c0       	rjmp	.+6      	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 644:	41 2f       	mov	r20, r17
 646:	50 e0       	ldi	r21, 0x00	; 0
 648:	02 c0       	rjmp	.+4      	; 0x64e <__EEPROM_REGION_LENGTH__+0x24e>
 64a:	4f ef       	ldi	r20, 0xFF	; 255
 64c:	5f ef       	ldi	r21, 0xFF	; 255
 64e:	88 2d       	mov	r24, r8
 650:	b3 01       	movw	r22, r6
 652:	0e 94 34 0c 	call	0x1868	; 0x1868 <strnlen>
 656:	5c 01       	movw	r10, r24
 658:	0f 77       	andi	r16, 0x7F	; 127
 65a:	15 c0       	rjmp	.+42     	; 0x686 <__EEPROM_REGION_LENGTH__+0x286>
 65c:	c5 01       	movw	r24, r10
 65e:	03 96       	adiw	r24, 0x03	; 3
 660:	9f 87       	std	Y+15, r25	; 0x0f
 662:	8e 87       	std	Y+14, r24	; 0x0e
 664:	f5 01       	movw	r30, r10
 666:	60 80       	ld	r6, Z
 668:	71 80       	ldd	r7, Z+1	; 0x01
 66a:	82 80       	ldd	r8, Z+2	; 0x02
 66c:	06 ff       	sbrs	r16, 6
 66e:	03 c0       	rjmp	.+6      	; 0x676 <__EEPROM_REGION_LENGTH__+0x276>
 670:	41 2f       	mov	r20, r17
 672:	50 e0       	ldi	r21, 0x00	; 0
 674:	02 c0       	rjmp	.+4      	; 0x67a <__EEPROM_REGION_LENGTH__+0x27a>
 676:	4f ef       	ldi	r20, 0xFF	; 255
 678:	5f ef       	ldi	r21, 0xFF	; 255
 67a:	88 2d       	mov	r24, r8
 67c:	b3 01       	movw	r22, r6
 67e:	0e 94 34 0c 	call	0x1868	; 0x1868 <strnlen>
 682:	5c 01       	movw	r10, r24
 684:	00 68       	ori	r16, 0x80	; 128
 686:	03 fd       	sbrc	r16, 3
 688:	1d c0       	rjmp	.+58     	; 0x6c4 <__EEPROM_REGION_LENGTH__+0x2c4>
 68a:	8f 2d       	mov	r24, r15
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	a8 16       	cp	r10, r24
 690:	b9 06       	cpc	r11, r25
 692:	c0 f4       	brcc	.+48     	; 0x6c4 <__EEPROM_REGION_LENGTH__+0x2c4>
 694:	b6 01       	movw	r22, r12
 696:	80 e2       	ldi	r24, 0x20	; 32
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 69e:	fa 94       	dec	r15
 6a0:	f4 cf       	rjmp	.-24     	; 0x68a <__EEPROM_REGION_LENGTH__+0x28a>
 6a2:	f3 01       	movw	r30, r6
 6a4:	84 91       	lpm	r24, Z
 6a6:	87 fc       	sbrc	r8, 7
 6a8:	80 81       	ld	r24, Z
 6aa:	ff ef       	ldi	r31, 0xFF	; 255
 6ac:	6f 1a       	sub	r6, r31
 6ae:	7f 0a       	sbc	r7, r31
 6b0:	8f 0a       	sbc	r8, r31
 6b2:	b6 01       	movw	r22, r12
 6b4:	90 e0       	ldi	r25, 0x00	; 0
 6b6:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 6ba:	f1 10       	cpse	r15, r1
 6bc:	fa 94       	dec	r15
 6be:	21 e0       	ldi	r18, 0x01	; 1
 6c0:	a2 1a       	sub	r10, r18
 6c2:	b1 08       	sbc	r11, r1
 6c4:	a1 14       	cp	r10, r1
 6c6:	b1 04       	cpc	r11, r1
 6c8:	61 f7       	brne	.-40     	; 0x6a2 <__EEPROM_REGION_LENGTH__+0x2a2>
 6ca:	0e c1       	rjmp	.+540    	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
 6cc:	84 36       	cpi	r24, 0x64	; 100
 6ce:	11 f0       	breq	.+4      	; 0x6d4 <__EEPROM_REGION_LENGTH__+0x2d4>
 6d0:	89 36       	cpi	r24, 0x69	; 105
 6d2:	79 f5       	brne	.+94     	; 0x732 <__EEPROM_REGION_LENGTH__+0x332>
 6d4:	c5 01       	movw	r24, r10
 6d6:	07 ff       	sbrs	r16, 7
 6d8:	09 c0       	rjmp	.+18     	; 0x6ec <__EEPROM_REGION_LENGTH__+0x2ec>
 6da:	04 96       	adiw	r24, 0x04	; 4
 6dc:	9f 87       	std	Y+15, r25	; 0x0f
 6de:	8e 87       	std	Y+14, r24	; 0x0e
 6e0:	f5 01       	movw	r30, r10
 6e2:	60 81       	ld	r22, Z
 6e4:	71 81       	ldd	r23, Z+1	; 0x01
 6e6:	82 81       	ldd	r24, Z+2	; 0x02
 6e8:	93 81       	ldd	r25, Z+3	; 0x03
 6ea:	0a c0       	rjmp	.+20     	; 0x700 <__EEPROM_REGION_LENGTH__+0x300>
 6ec:	02 96       	adiw	r24, 0x02	; 2
 6ee:	9f 87       	std	Y+15, r25	; 0x0f
 6f0:	8e 87       	std	Y+14, r24	; 0x0e
 6f2:	f5 01       	movw	r30, r10
 6f4:	60 81       	ld	r22, Z
 6f6:	71 81       	ldd	r23, Z+1	; 0x01
 6f8:	07 2e       	mov	r0, r23
 6fa:	00 0c       	add	r0, r0
 6fc:	88 0b       	sbc	r24, r24
 6fe:	99 0b       	sbc	r25, r25
 700:	0f 76       	andi	r16, 0x6F	; 111
 702:	e0 2e       	mov	r14, r16
 704:	97 ff       	sbrs	r25, 7
 706:	0a c0       	rjmp	.+20     	; 0x71c <__EEPROM_REGION_LENGTH__+0x31c>
 708:	90 95       	com	r25
 70a:	80 95       	com	r24
 70c:	70 95       	com	r23
 70e:	61 95       	neg	r22
 710:	7f 4f       	sbci	r23, 0xFF	; 255
 712:	8f 4f       	sbci	r24, 0xFF	; 255
 714:	9f 4f       	sbci	r25, 0xFF	; 255
 716:	f0 2f       	mov	r31, r16
 718:	f0 68       	ori	r31, 0x80	; 128
 71a:	ef 2e       	mov	r14, r31
 71c:	2a e0       	ldi	r18, 0x0A	; 10
 71e:	30 e0       	ldi	r19, 0x00	; 0
 720:	ae 01       	movw	r20, r28
 722:	4f 5f       	subi	r20, 0xFF	; 255
 724:	5f 4f       	sbci	r21, 0xFF	; 255
 726:	0e 94 93 08 	call	0x1126	; 0x1126 <__ultoa_invert>
 72a:	a8 2e       	mov	r10, r24
 72c:	2c 85       	ldd	r18, Y+12	; 0x0c
 72e:	a2 1a       	sub	r10, r18
 730:	4b c0       	rjmp	.+150    	; 0x7c8 <__EEPROM_REGION_LENGTH__+0x3c8>
 732:	85 37       	cpi	r24, 0x75	; 117
 734:	29 f4       	brne	.+10     	; 0x740 <__EEPROM_REGION_LENGTH__+0x340>
 736:	0f 7e       	andi	r16, 0xEF	; 239
 738:	e0 2e       	mov	r14, r16
 73a:	2a e0       	ldi	r18, 0x0A	; 10
 73c:	30 e0       	ldi	r19, 0x00	; 0
 73e:	25 c0       	rjmp	.+74     	; 0x78a <__EEPROM_REGION_LENGTH__+0x38a>
 740:	90 2f       	mov	r25, r16
 742:	99 7f       	andi	r25, 0xF9	; 249
 744:	e9 2e       	mov	r14, r25
 746:	8f 36       	cpi	r24, 0x6F	; 111
 748:	c1 f0       	breq	.+48     	; 0x77a <__EEPROM_REGION_LENGTH__+0x37a>
 74a:	18 f4       	brcc	.+6      	; 0x752 <__EEPROM_REGION_LENGTH__+0x352>
 74c:	88 35       	cpi	r24, 0x58	; 88
 74e:	79 f0       	breq	.+30     	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
 750:	d5 c0       	rjmp	.+426    	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 752:	80 37       	cpi	r24, 0x70	; 112
 754:	19 f0       	breq	.+6      	; 0x75c <__EEPROM_REGION_LENGTH__+0x35c>
 756:	88 37       	cpi	r24, 0x78	; 120
 758:	21 f0       	breq	.+8      	; 0x762 <__EEPROM_REGION_LENGTH__+0x362>
 75a:	d0 c0       	rjmp	.+416    	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 75c:	a9 2f       	mov	r26, r25
 75e:	a0 61       	ori	r26, 0x10	; 16
 760:	ea 2e       	mov	r14, r26
 762:	e4 fe       	sbrs	r14, 4
 764:	0d c0       	rjmp	.+26     	; 0x780 <__EEPROM_REGION_LENGTH__+0x380>
 766:	ee 2d       	mov	r30, r14
 768:	e4 60       	ori	r30, 0x04	; 4
 76a:	ee 2e       	mov	r14, r30
 76c:	09 c0       	rjmp	.+18     	; 0x780 <__EEPROM_REGION_LENGTH__+0x380>
 76e:	04 ff       	sbrs	r16, 4
 770:	0a c0       	rjmp	.+20     	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
 772:	f9 2f       	mov	r31, r25
 774:	f6 60       	ori	r31, 0x06	; 6
 776:	ef 2e       	mov	r14, r31
 778:	06 c0       	rjmp	.+12     	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
 77a:	28 e0       	ldi	r18, 0x08	; 8
 77c:	30 e0       	ldi	r19, 0x00	; 0
 77e:	05 c0       	rjmp	.+10     	; 0x78a <__EEPROM_REGION_LENGTH__+0x38a>
 780:	20 e1       	ldi	r18, 0x10	; 16
 782:	30 e0       	ldi	r19, 0x00	; 0
 784:	02 c0       	rjmp	.+4      	; 0x78a <__EEPROM_REGION_LENGTH__+0x38a>
 786:	20 e1       	ldi	r18, 0x10	; 16
 788:	32 e0       	ldi	r19, 0x02	; 2
 78a:	c5 01       	movw	r24, r10
 78c:	e7 fe       	sbrs	r14, 7
 78e:	09 c0       	rjmp	.+18     	; 0x7a2 <__EEPROM_REGION_LENGTH__+0x3a2>
 790:	04 96       	adiw	r24, 0x04	; 4
 792:	9f 87       	std	Y+15, r25	; 0x0f
 794:	8e 87       	std	Y+14, r24	; 0x0e
 796:	f5 01       	movw	r30, r10
 798:	60 81       	ld	r22, Z
 79a:	71 81       	ldd	r23, Z+1	; 0x01
 79c:	82 81       	ldd	r24, Z+2	; 0x02
 79e:	93 81       	ldd	r25, Z+3	; 0x03
 7a0:	08 c0       	rjmp	.+16     	; 0x7b2 <__EEPROM_REGION_LENGTH__+0x3b2>
 7a2:	02 96       	adiw	r24, 0x02	; 2
 7a4:	9f 87       	std	Y+15, r25	; 0x0f
 7a6:	8e 87       	std	Y+14, r24	; 0x0e
 7a8:	f5 01       	movw	r30, r10
 7aa:	60 81       	ld	r22, Z
 7ac:	71 81       	ldd	r23, Z+1	; 0x01
 7ae:	80 e0       	ldi	r24, 0x00	; 0
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	ae 01       	movw	r20, r28
 7b4:	4f 5f       	subi	r20, 0xFF	; 255
 7b6:	5f 4f       	sbci	r21, 0xFF	; 255
 7b8:	0e 94 93 08 	call	0x1126	; 0x1126 <__ultoa_invert>
 7bc:	a8 2e       	mov	r10, r24
 7be:	fc 85       	ldd	r31, Y+12	; 0x0c
 7c0:	af 1a       	sub	r10, r31
 7c2:	2e 2d       	mov	r18, r14
 7c4:	2f 77       	andi	r18, 0x7F	; 127
 7c6:	e2 2e       	mov	r14, r18
 7c8:	e6 fe       	sbrs	r14, 6
 7ca:	0b c0       	rjmp	.+22     	; 0x7e2 <__EEPROM_REGION_LENGTH__+0x3e2>
 7cc:	0e 2d       	mov	r16, r14
 7ce:	0e 7f       	andi	r16, 0xFE	; 254
 7d0:	a1 16       	cp	r10, r17
 7d2:	50 f4       	brcc	.+20     	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
 7d4:	e4 fe       	sbrs	r14, 4
 7d6:	0a c0       	rjmp	.+20     	; 0x7ec <__EEPROM_REGION_LENGTH__+0x3ec>
 7d8:	e2 fc       	sbrc	r14, 2
 7da:	08 c0       	rjmp	.+16     	; 0x7ec <__EEPROM_REGION_LENGTH__+0x3ec>
 7dc:	0e 2d       	mov	r16, r14
 7de:	0e 7e       	andi	r16, 0xEE	; 238
 7e0:	05 c0       	rjmp	.+10     	; 0x7ec <__EEPROM_REGION_LENGTH__+0x3ec>
 7e2:	ba 2c       	mov	r11, r10
 7e4:	0e 2d       	mov	r16, r14
 7e6:	03 c0       	rjmp	.+6      	; 0x7ee <__EEPROM_REGION_LENGTH__+0x3ee>
 7e8:	ba 2c       	mov	r11, r10
 7ea:	01 c0       	rjmp	.+2      	; 0x7ee <__EEPROM_REGION_LENGTH__+0x3ee>
 7ec:	b1 2e       	mov	r11, r17
 7ee:	04 ff       	sbrs	r16, 4
 7f0:	0d c0       	rjmp	.+26     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 7f2:	fe 01       	movw	r30, r28
 7f4:	ea 0d       	add	r30, r10
 7f6:	f1 1d       	adc	r31, r1
 7f8:	80 81       	ld	r24, Z
 7fa:	80 33       	cpi	r24, 0x30	; 48
 7fc:	11 f4       	brne	.+4      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 7fe:	09 7e       	andi	r16, 0xE9	; 233
 800:	09 c0       	rjmp	.+18     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 802:	02 ff       	sbrs	r16, 2
 804:	06 c0       	rjmp	.+12     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 806:	b3 94       	inc	r11
 808:	b3 94       	inc	r11
 80a:	04 c0       	rjmp	.+8      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 80c:	80 2f       	mov	r24, r16
 80e:	86 78       	andi	r24, 0x86	; 134
 810:	09 f0       	breq	.+2      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 812:	b3 94       	inc	r11
 814:	03 fd       	sbrc	r16, 3
 816:	11 c0       	rjmp	.+34     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 818:	00 ff       	sbrs	r16, 0
 81a:	06 c0       	rjmp	.+12     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 81c:	bf 14       	cp	r11, r15
 81e:	88 f4       	brcc	.+34     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 820:	fa 0c       	add	r15, r10
 822:	1f 2d       	mov	r17, r15
 824:	1b 19       	sub	r17, r11
 826:	0e c0       	rjmp	.+28     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 828:	bf 14       	cp	r11, r15
 82a:	60 f4       	brcc	.+24     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 82c:	b6 01       	movw	r22, r12
 82e:	80 e2       	ldi	r24, 0x20	; 32
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 836:	b3 94       	inc	r11
 838:	f7 cf       	rjmp	.-18     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 83a:	bf 14       	cp	r11, r15
 83c:	18 f4       	brcc	.+6      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 83e:	fb 18       	sub	r15, r11
 840:	02 c0       	rjmp	.+4      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 842:	1a 2d       	mov	r17, r10
 844:	f1 2c       	mov	r15, r1
 846:	04 ff       	sbrs	r16, 4
 848:	10 c0       	rjmp	.+32     	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 84a:	b6 01       	movw	r22, r12
 84c:	80 e3       	ldi	r24, 0x30	; 48
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 854:	02 ff       	sbrs	r16, 2
 856:	17 c0       	rjmp	.+46     	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 858:	01 fd       	sbrc	r16, 1
 85a:	03 c0       	rjmp	.+6      	; 0x862 <__DATA_REGION_LENGTH__+0x62>
 85c:	88 e7       	ldi	r24, 0x78	; 120
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	02 c0       	rjmp	.+4      	; 0x866 <__DATA_REGION_LENGTH__+0x66>
 862:	88 e5       	ldi	r24, 0x58	; 88
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	b6 01       	movw	r22, r12
 868:	0c c0       	rjmp	.+24     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 86a:	80 2f       	mov	r24, r16
 86c:	86 78       	andi	r24, 0x86	; 134
 86e:	59 f0       	breq	.+22     	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 870:	01 ff       	sbrs	r16, 1
 872:	02 c0       	rjmp	.+4      	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 874:	8b e2       	ldi	r24, 0x2B	; 43
 876:	01 c0       	rjmp	.+2      	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
 878:	80 e2       	ldi	r24, 0x20	; 32
 87a:	07 fd       	sbrc	r16, 7
 87c:	8d e2       	ldi	r24, 0x2D	; 45
 87e:	b6 01       	movw	r22, r12
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 886:	a1 16       	cp	r10, r17
 888:	38 f4       	brcc	.+14     	; 0x898 <__DATA_REGION_LENGTH__+0x98>
 88a:	b6 01       	movw	r22, r12
 88c:	80 e3       	ldi	r24, 0x30	; 48
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 894:	11 50       	subi	r17, 0x01	; 1
 896:	f7 cf       	rjmp	.-18     	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 898:	aa 94       	dec	r10
 89a:	e1 e0       	ldi	r30, 0x01	; 1
 89c:	f0 e0       	ldi	r31, 0x00	; 0
 89e:	ec 0f       	add	r30, r28
 8a0:	fd 1f       	adc	r31, r29
 8a2:	ea 0d       	add	r30, r10
 8a4:	f1 1d       	adc	r31, r1
 8a6:	80 81       	ld	r24, Z
 8a8:	b6 01       	movw	r22, r12
 8aa:	90 e0       	ldi	r25, 0x00	; 0
 8ac:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 8b0:	a1 10       	cpse	r10, r1
 8b2:	f2 cf       	rjmp	.-28     	; 0x898 <__DATA_REGION_LENGTH__+0x98>
 8b4:	19 c0       	rjmp	.+50     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
 8b6:	f4 e0       	ldi	r31, 0x04	; 4
 8b8:	ff 15       	cp	r31, r15
 8ba:	80 f5       	brcc	.+96     	; 0x91c <__stack+0x1d>
 8bc:	84 e0       	ldi	r24, 0x04	; 4
 8be:	f8 1a       	sub	r15, r24
 8c0:	73 fe       	sbrs	r7, 3
 8c2:	23 c0       	rjmp	.+70     	; 0x90a <__stack+0xb>
 8c4:	01 11       	cpse	r16, r1
 8c6:	2b c0       	rjmp	.+86     	; 0x91e <__stack+0x1f>
 8c8:	53 fe       	sbrs	r5, 3
 8ca:	2f c0       	rjmp	.+94     	; 0x92a <__stack+0x2b>
 8cc:	5b e1       	ldi	r21, 0x1B	; 27
 8ce:	85 2e       	mov	r8, r21
 8d0:	52 e0       	ldi	r21, 0x02	; 2
 8d2:	95 2e       	mov	r9, r21
 8d4:	50 e0       	ldi	r21, 0x00	; 0
 8d6:	a5 2e       	mov	r10, r21
 8d8:	07 2d       	mov	r16, r7
 8da:	00 71       	andi	r16, 0x10	; 16
 8dc:	f4 01       	movw	r30, r8
 8de:	84 91       	lpm	r24, Z
 8e0:	a7 fc       	sbrc	r10, 7
 8e2:	80 81       	ld	r24, Z
 8e4:	81 11       	cpse	r24, r1
 8e6:	28 c0       	rjmp	.+80     	; 0x938 <__stack+0x39>
 8e8:	ff 20       	and	r15, r15
 8ea:	09 f4       	brne	.+2      	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8ec:	d2 cc       	rjmp	.-1628   	; 0x292 <vfprintf+0x72>
 8ee:	b6 01       	movw	r22, r12
 8f0:	80 e2       	ldi	r24, 0x20	; 32
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 8f8:	fa 94       	dec	r15
 8fa:	f6 cf       	rjmp	.-20     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
 8fc:	f6 01       	movw	r30, r12
 8fe:	87 81       	ldd	r24, Z+7	; 0x07
 900:	90 85       	ldd	r25, Z+8	; 0x08
 902:	2c c0       	rjmp	.+88     	; 0x95c <__stack+0x5d>
 904:	8f ef       	ldi	r24, 0xFF	; 255
 906:	9f ef       	ldi	r25, 0xFF	; 255
 908:	29 c0       	rjmp	.+82     	; 0x95c <__stack+0x5d>
 90a:	b6 01       	movw	r22, r12
 90c:	80 e2       	ldi	r24, 0x20	; 32
 90e:	90 e0       	ldi	r25, 0x00	; 0
 910:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 914:	fa 94       	dec	r15
 916:	f1 10       	cpse	r15, r1
 918:	f8 cf       	rjmp	.-16     	; 0x90a <__stack+0xb>
 91a:	d4 cf       	rjmp	.-88     	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
 91c:	f1 2c       	mov	r15, r1
 91e:	b6 01       	movw	r22, r12
 920:	80 2f       	mov	r24, r16
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 928:	cf cf       	rjmp	.-98     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 92a:	47 e1       	ldi	r20, 0x17	; 23
 92c:	84 2e       	mov	r8, r20
 92e:	42 e0       	ldi	r20, 0x02	; 2
 930:	94 2e       	mov	r9, r20
 932:	40 e0       	ldi	r20, 0x00	; 0
 934:	a4 2e       	mov	r10, r20
 936:	d0 cf       	rjmp	.-96     	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
 938:	01 11       	cpse	r16, r1
 93a:	80 52       	subi	r24, 0x20	; 32
 93c:	b6 01       	movw	r22, r12
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <fputc>
 944:	ff ef       	ldi	r31, 0xFF	; 255
 946:	8f 1a       	sub	r8, r31
 948:	9f 0a       	sbc	r9, r31
 94a:	af 0a       	sbc	r10, r31
 94c:	c7 cf       	rjmp	.-114    	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
 94e:	23 e0       	ldi	r18, 0x03	; 3
 950:	2f 15       	cp	r18, r15
 952:	10 f4       	brcc	.+4      	; 0x958 <__stack+0x59>
 954:	83 e0       	ldi	r24, 0x03	; 3
 956:	b3 cf       	rjmp	.-154    	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
 958:	f1 2c       	mov	r15, r1
 95a:	b6 cf       	rjmp	.-148    	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 95c:	64 96       	adiw	r28, 0x14	; 20
 95e:	e2 e1       	ldi	r30, 0x12	; 18
 960:	0c 94 19 0c 	jmp	0x1832	; 0x1832 <__epilogue_restores__>

Disassembly of section .text.libgcc.prologue:

000017c2 <__prologue_saves__>:
    17c2:	2f 92       	push	r2
    17c4:	3f 92       	push	r3
    17c6:	4f 92       	push	r4
    17c8:	5f 92       	push	r5
    17ca:	6f 92       	push	r6
    17cc:	7f 92       	push	r7
    17ce:	8f 92       	push	r8
    17d0:	9f 92       	push	r9
    17d2:	af 92       	push	r10
    17d4:	bf 92       	push	r11
    17d6:	cf 92       	push	r12
    17d8:	df 92       	push	r13
    17da:	ef 92       	push	r14
    17dc:	ff 92       	push	r15
    17de:	0f 93       	push	r16
    17e0:	1f 93       	push	r17
    17e2:	cf 93       	push	r28
    17e4:	df 93       	push	r29
    17e6:	cd b7       	in	r28, 0x3d	; 61
    17e8:	de b7       	in	r29, 0x3e	; 62
    17ea:	ca 1b       	sub	r28, r26
    17ec:	db 0b       	sbc	r29, r27
    17ee:	0f b6       	in	r0, 0x3f	; 63
    17f0:	f8 94       	cli
    17f2:	de bf       	out	0x3e, r29	; 62
    17f4:	0f be       	out	0x3f, r0	; 63
    17f6:	cd bf       	out	0x3d, r28	; 61
    17f8:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00001832 <__epilogue_restores__>:
    1832:	2a 88       	ldd	r2, Y+18	; 0x12
    1834:	39 88       	ldd	r3, Y+17	; 0x11
    1836:	48 88       	ldd	r4, Y+16	; 0x10
    1838:	5f 84       	ldd	r5, Y+15	; 0x0f
    183a:	6e 84       	ldd	r6, Y+14	; 0x0e
    183c:	7d 84       	ldd	r7, Y+13	; 0x0d
    183e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1840:	9b 84       	ldd	r9, Y+11	; 0x0b
    1842:	aa 84       	ldd	r10, Y+10	; 0x0a
    1844:	b9 84       	ldd	r11, Y+9	; 0x09
    1846:	c8 84       	ldd	r12, Y+8	; 0x08
    1848:	df 80       	ldd	r13, Y+7	; 0x07
    184a:	ee 80       	ldd	r14, Y+6	; 0x06
    184c:	fd 80       	ldd	r15, Y+5	; 0x05
    184e:	0c 81       	ldd	r16, Y+4	; 0x04
    1850:	1b 81       	ldd	r17, Y+3	; 0x03
    1852:	aa 81       	ldd	r26, Y+2	; 0x02
    1854:	b9 81       	ldd	r27, Y+1	; 0x01
    1856:	ce 0f       	add	r28, r30
    1858:	d1 1d       	adc	r29, r1
    185a:	0f b6       	in	r0, 0x3f	; 63
    185c:	f8 94       	cli
    185e:	de bf       	out	0x3e, r29	; 62
    1860:	0f be       	out	0x3f, r0	; 63
    1862:	cd bf       	out	0x3d, r28	; 61
    1864:	ed 01       	movw	r28, r26
    1866:	08 95       	ret

Disassembly of section .text.avrlibc:

00000ba6 <__ftoa_engine>:
 ba6:	28 30       	cpi	r18, 0x08	; 8
 ba8:	08 f0       	brcs	.+2      	; 0xbac <__ftoa_engine+0x6>
 baa:	27 e0       	ldi	r18, 0x07	; 7
 bac:	33 27       	eor	r19, r19
 bae:	da 01       	movw	r26, r20
 bb0:	99 0f       	add	r25, r25
 bb2:	31 1d       	adc	r19, r1
 bb4:	87 fd       	sbrc	r24, 7
 bb6:	91 60       	ori	r25, 0x01	; 1
 bb8:	00 96       	adiw	r24, 0x00	; 0
 bba:	61 05       	cpc	r22, r1
 bbc:	71 05       	cpc	r23, r1
 bbe:	39 f4       	brne	.+14     	; 0xbce <__ftoa_engine+0x28>
 bc0:	32 60       	ori	r19, 0x02	; 2
 bc2:	2e 5f       	subi	r18, 0xFE	; 254
 bc4:	3d 93       	st	X+, r19
 bc6:	30 e3       	ldi	r19, 0x30	; 48
 bc8:	2a 95       	dec	r18
 bca:	e1 f7       	brne	.-8      	; 0xbc4 <__ftoa_engine+0x1e>
 bcc:	08 95       	ret
 bce:	9f 3f       	cpi	r25, 0xFF	; 255
 bd0:	30 f0       	brcs	.+12     	; 0xbde <__ftoa_engine+0x38>
 bd2:	80 38       	cpi	r24, 0x80	; 128
 bd4:	71 05       	cpc	r23, r1
 bd6:	61 05       	cpc	r22, r1
 bd8:	09 f0       	breq	.+2      	; 0xbdc <__ftoa_engine+0x36>
 bda:	3c 5f       	subi	r19, 0xFC	; 252
 bdc:	3c 5f       	subi	r19, 0xFC	; 252
 bde:	3d 93       	st	X+, r19
 be0:	91 30       	cpi	r25, 0x01	; 1
 be2:	08 f0       	brcs	.+2      	; 0xbe6 <__ftoa_engine+0x40>
 be4:	80 68       	ori	r24, 0x80	; 128
 be6:	91 1d       	adc	r25, r1
 be8:	df 93       	push	r29
 bea:	cf 93       	push	r28
 bec:	1f 93       	push	r17
 bee:	0f 93       	push	r16
 bf0:	ff 92       	push	r15
 bf2:	ef 92       	push	r14
 bf4:	19 2f       	mov	r17, r25
 bf6:	98 7f       	andi	r25, 0xF8	; 248
 bf8:	96 95       	lsr	r25
 bfa:	e9 2f       	mov	r30, r25
 bfc:	96 95       	lsr	r25
 bfe:	96 95       	lsr	r25
 c00:	e9 0f       	add	r30, r25
 c02:	ff 27       	eor	r31, r31
 c04:	ec 52       	subi	r30, 0x2C	; 44
 c06:	ff 4f       	sbci	r31, 0xFF	; 255
 c08:	99 27       	eor	r25, r25
 c0a:	33 27       	eor	r19, r19
 c0c:	ee 24       	eor	r14, r14
 c0e:	ff 24       	eor	r15, r15
 c10:	a7 01       	movw	r20, r14
 c12:	e7 01       	movw	r28, r14
 c14:	05 90       	lpm	r0, Z+
 c16:	08 94       	sec
 c18:	07 94       	ror	r0
 c1a:	28 f4       	brcc	.+10     	; 0xc26 <__ftoa_engine+0x80>
 c1c:	36 0f       	add	r19, r22
 c1e:	e7 1e       	adc	r14, r23
 c20:	f8 1e       	adc	r15, r24
 c22:	49 1f       	adc	r20, r25
 c24:	51 1d       	adc	r21, r1
 c26:	66 0f       	add	r22, r22
 c28:	77 1f       	adc	r23, r23
 c2a:	88 1f       	adc	r24, r24
 c2c:	99 1f       	adc	r25, r25
 c2e:	06 94       	lsr	r0
 c30:	a1 f7       	brne	.-24     	; 0xc1a <__ftoa_engine+0x74>
 c32:	05 90       	lpm	r0, Z+
 c34:	07 94       	ror	r0
 c36:	28 f4       	brcc	.+10     	; 0xc42 <__ftoa_engine+0x9c>
 c38:	e7 0e       	add	r14, r23
 c3a:	f8 1e       	adc	r15, r24
 c3c:	49 1f       	adc	r20, r25
 c3e:	56 1f       	adc	r21, r22
 c40:	c1 1d       	adc	r28, r1
 c42:	77 0f       	add	r23, r23
 c44:	88 1f       	adc	r24, r24
 c46:	99 1f       	adc	r25, r25
 c48:	66 1f       	adc	r22, r22
 c4a:	06 94       	lsr	r0
 c4c:	a1 f7       	brne	.-24     	; 0xc36 <__ftoa_engine+0x90>
 c4e:	05 90       	lpm	r0, Z+
 c50:	07 94       	ror	r0
 c52:	28 f4       	brcc	.+10     	; 0xc5e <__ftoa_engine+0xb8>
 c54:	f8 0e       	add	r15, r24
 c56:	49 1f       	adc	r20, r25
 c58:	56 1f       	adc	r21, r22
 c5a:	c7 1f       	adc	r28, r23
 c5c:	d1 1d       	adc	r29, r1
 c5e:	88 0f       	add	r24, r24
 c60:	99 1f       	adc	r25, r25
 c62:	66 1f       	adc	r22, r22
 c64:	77 1f       	adc	r23, r23
 c66:	06 94       	lsr	r0
 c68:	a1 f7       	brne	.-24     	; 0xc52 <__ftoa_engine+0xac>
 c6a:	05 90       	lpm	r0, Z+
 c6c:	07 94       	ror	r0
 c6e:	20 f4       	brcc	.+8      	; 0xc78 <__ftoa_engine+0xd2>
 c70:	49 0f       	add	r20, r25
 c72:	56 1f       	adc	r21, r22
 c74:	c7 1f       	adc	r28, r23
 c76:	d8 1f       	adc	r29, r24
 c78:	99 0f       	add	r25, r25
 c7a:	66 1f       	adc	r22, r22
 c7c:	77 1f       	adc	r23, r23
 c7e:	88 1f       	adc	r24, r24
 c80:	06 94       	lsr	r0
 c82:	a9 f7       	brne	.-22     	; 0xc6e <__ftoa_engine+0xc8>
 c84:	84 91       	lpm	r24, Z
 c86:	10 95       	com	r17
 c88:	17 70       	andi	r17, 0x07	; 7
 c8a:	41 f0       	breq	.+16     	; 0xc9c <__ftoa_engine+0xf6>
 c8c:	d6 95       	lsr	r29
 c8e:	c7 95       	ror	r28
 c90:	57 95       	ror	r21
 c92:	47 95       	ror	r20
 c94:	f7 94       	ror	r15
 c96:	e7 94       	ror	r14
 c98:	1a 95       	dec	r17
 c9a:	c1 f7       	brne	.-16     	; 0xc8c <__ftoa_engine+0xe6>
 c9c:	ea e7       	ldi	r30, 0x7A	; 122
 c9e:	f0 e0       	ldi	r31, 0x00	; 0
 ca0:	68 94       	set
 ca2:	15 90       	lpm	r1, Z+
 ca4:	15 91       	lpm	r17, Z+
 ca6:	35 91       	lpm	r19, Z+
 ca8:	65 91       	lpm	r22, Z+
 caa:	95 91       	lpm	r25, Z+
 cac:	05 90       	lpm	r0, Z+
 cae:	7f e2       	ldi	r23, 0x2F	; 47
 cb0:	73 95       	inc	r23
 cb2:	e1 18       	sub	r14, r1
 cb4:	f1 0a       	sbc	r15, r17
 cb6:	43 0b       	sbc	r20, r19
 cb8:	56 0b       	sbc	r21, r22
 cba:	c9 0b       	sbc	r28, r25
 cbc:	d0 09       	sbc	r29, r0
 cbe:	c0 f7       	brcc	.-16     	; 0xcb0 <__ftoa_engine+0x10a>
 cc0:	e1 0c       	add	r14, r1
 cc2:	f1 1e       	adc	r15, r17
 cc4:	43 1f       	adc	r20, r19
 cc6:	56 1f       	adc	r21, r22
 cc8:	c9 1f       	adc	r28, r25
 cca:	d0 1d       	adc	r29, r0
 ccc:	7e f4       	brtc	.+30     	; 0xcec <__ftoa_engine+0x146>
 cce:	70 33       	cpi	r23, 0x30	; 48
 cd0:	11 f4       	brne	.+4      	; 0xcd6 <__ftoa_engine+0x130>
 cd2:	8a 95       	dec	r24
 cd4:	e6 cf       	rjmp	.-52     	; 0xca2 <__ftoa_engine+0xfc>
 cd6:	e8 94       	clt
 cd8:	01 50       	subi	r16, 0x01	; 1
 cda:	30 f0       	brcs	.+12     	; 0xce8 <__ftoa_engine+0x142>
 cdc:	08 0f       	add	r16, r24
 cde:	0a f4       	brpl	.+2      	; 0xce2 <__ftoa_engine+0x13c>
 ce0:	00 27       	eor	r16, r16
 ce2:	02 17       	cp	r16, r18
 ce4:	08 f4       	brcc	.+2      	; 0xce8 <__ftoa_engine+0x142>
 ce6:	20 2f       	mov	r18, r16
 ce8:	23 95       	inc	r18
 cea:	02 2f       	mov	r16, r18
 cec:	7a 33       	cpi	r23, 0x3A	; 58
 cee:	28 f0       	brcs	.+10     	; 0xcfa <__ftoa_engine+0x154>
 cf0:	79 e3       	ldi	r23, 0x39	; 57
 cf2:	7d 93       	st	X+, r23
 cf4:	2a 95       	dec	r18
 cf6:	e9 f7       	brne	.-6      	; 0xcf2 <__ftoa_engine+0x14c>
 cf8:	10 c0       	rjmp	.+32     	; 0xd1a <__ftoa_engine+0x174>
 cfa:	7d 93       	st	X+, r23
 cfc:	2a 95       	dec	r18
 cfe:	89 f6       	brne	.-94     	; 0xca2 <__ftoa_engine+0xfc>
 d00:	06 94       	lsr	r0
 d02:	97 95       	ror	r25
 d04:	67 95       	ror	r22
 d06:	37 95       	ror	r19
 d08:	17 95       	ror	r17
 d0a:	17 94       	ror	r1
 d0c:	e1 18       	sub	r14, r1
 d0e:	f1 0a       	sbc	r15, r17
 d10:	43 0b       	sbc	r20, r19
 d12:	56 0b       	sbc	r21, r22
 d14:	c9 0b       	sbc	r28, r25
 d16:	d0 09       	sbc	r29, r0
 d18:	98 f0       	brcs	.+38     	; 0xd40 <__ftoa_engine+0x19a>
 d1a:	23 95       	inc	r18
 d1c:	7e 91       	ld	r23, -X
 d1e:	73 95       	inc	r23
 d20:	7a 33       	cpi	r23, 0x3A	; 58
 d22:	08 f0       	brcs	.+2      	; 0xd26 <__ftoa_engine+0x180>
 d24:	70 e3       	ldi	r23, 0x30	; 48
 d26:	7c 93       	st	X, r23
 d28:	20 13       	cpse	r18, r16
 d2a:	b8 f7       	brcc	.-18     	; 0xd1a <__ftoa_engine+0x174>
 d2c:	7e 91       	ld	r23, -X
 d2e:	70 61       	ori	r23, 0x10	; 16
 d30:	7d 93       	st	X+, r23
 d32:	30 f0       	brcs	.+12     	; 0xd40 <__ftoa_engine+0x19a>
 d34:	83 95       	inc	r24
 d36:	71 e3       	ldi	r23, 0x31	; 49
 d38:	7d 93       	st	X+, r23
 d3a:	70 e3       	ldi	r23, 0x30	; 48
 d3c:	2a 95       	dec	r18
 d3e:	e1 f7       	brne	.-8      	; 0xd38 <__ftoa_engine+0x192>
 d40:	11 24       	eor	r1, r1
 d42:	ef 90       	pop	r14
 d44:	ff 90       	pop	r15
 d46:	0f 91       	pop	r16
 d48:	1f 91       	pop	r17
 d4a:	cf 91       	pop	r28
 d4c:	df 91       	pop	r29
 d4e:	99 27       	eor	r25, r25
 d50:	87 fd       	sbrc	r24, 7
 d52:	90 95       	com	r25
 d54:	08 95       	ret

Disassembly of section .text.avrlibc:

00001868 <strnlen>:
    1868:	cf 92       	push	r12
    186a:	df 92       	push	r13
    186c:	ef 92       	push	r14
    186e:	6b 01       	movw	r12, r22
    1870:	e8 2e       	mov	r14, r24
    1872:	a8 2f       	mov	r26, r24
    1874:	cb 01       	movw	r24, r22
    1876:	41 15       	cp	r20, r1
    1878:	51 05       	cpc	r21, r1
    187a:	31 f4       	brne	.+12     	; 0x1888 <strnlen+0x20>
    187c:	8c 19       	sub	r24, r12
    187e:	9d 09       	sbc	r25, r13
    1880:	ef 90       	pop	r14
    1882:	df 90       	pop	r13
    1884:	cf 90       	pop	r12
    1886:	08 95       	ret
    1888:	fc 01       	movw	r30, r24
    188a:	24 91       	lpm	r18, Z
    188c:	a7 fd       	sbrc	r26, 7
    188e:	20 81       	ld	r18, Z
    1890:	22 23       	and	r18, r18
    1892:	a1 f3       	breq	.-24     	; 0x187c <strnlen+0x14>
    1894:	01 96       	adiw	r24, 0x01	; 1
    1896:	a1 1d       	adc	r26, r1
    1898:	41 50       	subi	r20, 0x01	; 1
    189a:	51 09       	sbc	r21, r1
    189c:	ec cf       	rjmp	.-40     	; 0x1876 <strnlen+0xe>

Disassembly of section .text.avrlibc:

000013d6 <fdevopen>:
    13d6:	0f 93       	push	r16
    13d8:	1f 93       	push	r17
    13da:	cf 93       	push	r28
    13dc:	df 93       	push	r29
    13de:	00 97       	sbiw	r24, 0x00	; 0
    13e0:	31 f4       	brne	.+12     	; 0x13ee <fdevopen+0x18>
    13e2:	61 15       	cp	r22, r1
    13e4:	71 05       	cpc	r23, r1
    13e6:	19 f4       	brne	.+6      	; 0x13ee <fdevopen+0x18>
    13e8:	80 e0       	ldi	r24, 0x00	; 0
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	3b c0       	rjmp	.+118    	; 0x1464 <fdevopen+0x8e>
    13ee:	8b 01       	movw	r16, r22
    13f0:	ec 01       	movw	r28, r24
    13f2:	6f e0       	ldi	r22, 0x0F	; 15
    13f4:	70 e0       	ldi	r23, 0x00	; 0
    13f6:	81 e0       	ldi	r24, 0x01	; 1
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	0e 94 fd 0b 	call	0x17fa	; 0x17fa <calloc>
    13fe:	fc 01       	movw	r30, r24
    1400:	89 2b       	or	r24, r25
    1402:	91 f3       	breq	.-28     	; 0x13e8 <fdevopen+0x12>
    1404:	80 e8       	ldi	r24, 0x80	; 128
    1406:	84 83       	std	Z+4, r24	; 0x04
    1408:	01 15       	cp	r16, r1
    140a:	11 05       	cpc	r17, r1
    140c:	69 f0       	breq	.+26     	; 0x1428 <fdevopen+0x52>
    140e:	14 87       	std	Z+12, r17	; 0x0c
    1410:	03 87       	std	Z+11, r16	; 0x0b
    1412:	81 e8       	ldi	r24, 0x81	; 129
    1414:	84 83       	std	Z+4, r24	; 0x04
    1416:	a0 e0       	ldi	r26, 0x00	; 0
    1418:	b1 e0       	ldi	r27, 0x01	; 1
    141a:	8d 91       	ld	r24, X+
    141c:	9c 91       	ld	r25, X
    141e:	11 97       	sbiw	r26, 0x01	; 1
    1420:	89 2b       	or	r24, r25
    1422:	11 f4       	brne	.+4      	; 0x1428 <fdevopen+0x52>
    1424:	ed 93       	st	X+, r30
    1426:	fc 93       	st	X, r31
    1428:	20 97       	sbiw	r28, 0x00	; 0
    142a:	d9 f0       	breq	.+54     	; 0x1462 <fdevopen+0x8c>
    142c:	d2 87       	std	Z+10, r29	; 0x0a
    142e:	c1 87       	std	Z+9, r28	; 0x09
    1430:	84 81       	ldd	r24, Z+4	; 0x04
    1432:	82 60       	ori	r24, 0x02	; 2
    1434:	84 83       	std	Z+4, r24	; 0x04
    1436:	a0 e0       	ldi	r26, 0x00	; 0
    1438:	b1 e0       	ldi	r27, 0x01	; 1
    143a:	12 96       	adiw	r26, 0x02	; 2
    143c:	8d 91       	ld	r24, X+
    143e:	9c 91       	ld	r25, X
    1440:	13 97       	sbiw	r26, 0x03	; 3
    1442:	89 2b       	or	r24, r25
    1444:	71 f4       	brne	.+28     	; 0x1462 <fdevopen+0x8c>
    1446:	13 96       	adiw	r26, 0x03	; 3
    1448:	fc 93       	st	X, r31
    144a:	ee 93       	st	-X, r30
    144c:	12 97       	sbiw	r26, 0x02	; 2
    144e:	14 96       	adiw	r26, 0x04	; 4
    1450:	8d 91       	ld	r24, X+
    1452:	9c 91       	ld	r25, X
    1454:	15 97       	sbiw	r26, 0x05	; 5
    1456:	89 2b       	or	r24, r25
    1458:	21 f4       	brne	.+8      	; 0x1462 <fdevopen+0x8c>
    145a:	15 96       	adiw	r26, 0x05	; 5
    145c:	fc 93       	st	X, r31
    145e:	ee 93       	st	-X, r30
    1460:	14 97       	sbiw	r26, 0x04	; 4
    1462:	cf 01       	movw	r24, r30
    1464:	df 91       	pop	r29
    1466:	cf 91       	pop	r28
    1468:	1f 91       	pop	r17
    146a:	0f 91       	pop	r16
    146c:	08 95       	ret

Disassembly of section .text.avrlibc:

000014e8 <fputc>:
    14e8:	0f 93       	push	r16
    14ea:	1f 93       	push	r17
    14ec:	cf 93       	push	r28
    14ee:	df 93       	push	r29
    14f0:	fb 01       	movw	r30, r22
    14f2:	24 81       	ldd	r18, Z+4	; 0x04
    14f4:	21 fd       	sbrc	r18, 1
    14f6:	03 c0       	rjmp	.+6      	; 0x14fe <fputc+0x16>
    14f8:	8f ef       	ldi	r24, 0xFF	; 255
    14fa:	9f ef       	ldi	r25, 0xFF	; 255
    14fc:	2c c0       	rjmp	.+88     	; 0x1556 <fputc+0x6e>
    14fe:	22 ff       	sbrs	r18, 2
    1500:	16 c0       	rjmp	.+44     	; 0x152e <fputc+0x46>
    1502:	47 81       	ldd	r20, Z+7	; 0x07
    1504:	50 85       	ldd	r21, Z+8	; 0x08
    1506:	25 81       	ldd	r18, Z+5	; 0x05
    1508:	36 81       	ldd	r19, Z+6	; 0x06
    150a:	42 17       	cp	r20, r18
    150c:	53 07       	cpc	r21, r19
    150e:	44 f4       	brge	.+16     	; 0x1520 <fputc+0x38>
    1510:	a0 81       	ld	r26, Z
    1512:	b1 81       	ldd	r27, Z+1	; 0x01
    1514:	9d 01       	movw	r18, r26
    1516:	2f 5f       	subi	r18, 0xFF	; 255
    1518:	3f 4f       	sbci	r19, 0xFF	; 255
    151a:	31 83       	std	Z+1, r19	; 0x01
    151c:	20 83       	st	Z, r18
    151e:	8c 93       	st	X, r24
    1520:	27 81       	ldd	r18, Z+7	; 0x07
    1522:	30 85       	ldd	r19, Z+8	; 0x08
    1524:	2f 5f       	subi	r18, 0xFF	; 255
    1526:	3f 4f       	sbci	r19, 0xFF	; 255
    1528:	30 87       	std	Z+8, r19	; 0x08
    152a:	27 83       	std	Z+7, r18	; 0x07
    152c:	14 c0       	rjmp	.+40     	; 0x1556 <fputc+0x6e>
    152e:	8b 01       	movw	r16, r22
    1530:	ec 01       	movw	r28, r24
    1532:	fb 01       	movw	r30, r22
    1534:	01 84       	ldd	r0, Z+9	; 0x09
    1536:	f2 85       	ldd	r31, Z+10	; 0x0a
    1538:	e0 2d       	mov	r30, r0
    153a:	09 95       	icall
    153c:	89 2b       	or	r24, r25
    153e:	e1 f6       	brne	.-72     	; 0x14f8 <fputc+0x10>
    1540:	d8 01       	movw	r26, r16
    1542:	17 96       	adiw	r26, 0x07	; 7
    1544:	8d 91       	ld	r24, X+
    1546:	9c 91       	ld	r25, X
    1548:	18 97       	sbiw	r26, 0x08	; 8
    154a:	01 96       	adiw	r24, 0x01	; 1
    154c:	18 96       	adiw	r26, 0x08	; 8
    154e:	9c 93       	st	X, r25
    1550:	8e 93       	st	-X, r24
    1552:	17 97       	sbiw	r26, 0x07	; 7
    1554:	ce 01       	movw	r24, r28
    1556:	df 91       	pop	r29
    1558:	cf 91       	pop	r28
    155a:	1f 91       	pop	r17
    155c:	0f 91       	pop	r16
    155e:	08 95       	ret

Disassembly of section .text.avrlibc:

000018fc <printf>:
    18fc:	a0 e0       	ldi	r26, 0x00	; 0
    18fe:	b0 e0       	ldi	r27, 0x00	; 0
    1900:	e4 e8       	ldi	r30, 0x84	; 132
    1902:	fc e0       	ldi	r31, 0x0C	; 12
    1904:	0c 94 f1 0b 	jmp	0x17e2	; 0x17e2 <__prologue_saves__+0x20>
    1908:	9e 01       	movw	r18, r28
    190a:	2b 5f       	subi	r18, 0xFB	; 251
    190c:	3f 4f       	sbci	r19, 0xFF	; 255
    190e:	f9 01       	movw	r30, r18
    1910:	41 91       	ld	r20, Z+
    1912:	51 91       	ld	r21, Z+
    1914:	61 91       	ld	r22, Z+
    1916:	9f 01       	movw	r18, r30
    1918:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
    191c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
    1920:	0e 94 10 01 	call	0x220	; 0x220 <vfprintf>
    1924:	e2 e0       	ldi	r30, 0x02	; 2
    1926:	0c 94 29 0c 	jmp	0x1852	; 0x1852 <__epilogue_restores__+0x20>

Disassembly of section .text.avrlibc:

00001126 <__ultoa_invert>:
    1126:	fa 01       	movw	r30, r20
    1128:	aa 27       	eor	r26, r26
    112a:	28 30       	cpi	r18, 0x08	; 8
    112c:	51 f1       	breq	.+84     	; 0x1182 <__ultoa_invert+0x5c>
    112e:	20 31       	cpi	r18, 0x10	; 16
    1130:	81 f1       	breq	.+96     	; 0x1192 <__ultoa_invert+0x6c>
    1132:	e8 94       	clt
    1134:	6f 93       	push	r22
    1136:	6e 7f       	andi	r22, 0xFE	; 254
    1138:	6e 5f       	subi	r22, 0xFE	; 254
    113a:	7f 4f       	sbci	r23, 0xFF	; 255
    113c:	8f 4f       	sbci	r24, 0xFF	; 255
    113e:	9f 4f       	sbci	r25, 0xFF	; 255
    1140:	af 4f       	sbci	r26, 0xFF	; 255
    1142:	b1 e0       	ldi	r27, 0x01	; 1
    1144:	3e d0       	rcall	.+124    	; 0x11c2 <__ultoa_invert+0x9c>
    1146:	b4 e0       	ldi	r27, 0x04	; 4
    1148:	3c d0       	rcall	.+120    	; 0x11c2 <__ultoa_invert+0x9c>
    114a:	67 0f       	add	r22, r23
    114c:	78 1f       	adc	r23, r24
    114e:	89 1f       	adc	r24, r25
    1150:	9a 1f       	adc	r25, r26
    1152:	a1 1d       	adc	r26, r1
    1154:	68 0f       	add	r22, r24
    1156:	79 1f       	adc	r23, r25
    1158:	8a 1f       	adc	r24, r26
    115a:	91 1d       	adc	r25, r1
    115c:	a1 1d       	adc	r26, r1
    115e:	6a 0f       	add	r22, r26
    1160:	71 1d       	adc	r23, r1
    1162:	81 1d       	adc	r24, r1
    1164:	91 1d       	adc	r25, r1
    1166:	a1 1d       	adc	r26, r1
    1168:	20 d0       	rcall	.+64     	; 0x11aa <__ultoa_invert+0x84>
    116a:	09 f4       	brne	.+2      	; 0x116e <__ultoa_invert+0x48>
    116c:	68 94       	set
    116e:	3f 91       	pop	r19
    1170:	2a e0       	ldi	r18, 0x0A	; 10
    1172:	26 9f       	mul	r18, r22
    1174:	11 24       	eor	r1, r1
    1176:	30 19       	sub	r19, r0
    1178:	30 5d       	subi	r19, 0xD0	; 208
    117a:	31 93       	st	Z+, r19
    117c:	de f6       	brtc	.-74     	; 0x1134 <__ultoa_invert+0xe>
    117e:	cf 01       	movw	r24, r30
    1180:	08 95       	ret
    1182:	46 2f       	mov	r20, r22
    1184:	47 70       	andi	r20, 0x07	; 7
    1186:	40 5d       	subi	r20, 0xD0	; 208
    1188:	41 93       	st	Z+, r20
    118a:	b3 e0       	ldi	r27, 0x03	; 3
    118c:	0f d0       	rcall	.+30     	; 0x11ac <__ultoa_invert+0x86>
    118e:	c9 f7       	brne	.-14     	; 0x1182 <__ultoa_invert+0x5c>
    1190:	f6 cf       	rjmp	.-20     	; 0x117e <__ultoa_invert+0x58>
    1192:	46 2f       	mov	r20, r22
    1194:	4f 70       	andi	r20, 0x0F	; 15
    1196:	40 5d       	subi	r20, 0xD0	; 208
    1198:	4a 33       	cpi	r20, 0x3A	; 58
    119a:	18 f0       	brcs	.+6      	; 0x11a2 <__ultoa_invert+0x7c>
    119c:	49 5d       	subi	r20, 0xD9	; 217
    119e:	31 fd       	sbrc	r19, 1
    11a0:	40 52       	subi	r20, 0x20	; 32
    11a2:	41 93       	st	Z+, r20
    11a4:	02 d0       	rcall	.+4      	; 0x11aa <__ultoa_invert+0x84>
    11a6:	a9 f7       	brne	.-22     	; 0x1192 <__ultoa_invert+0x6c>
    11a8:	ea cf       	rjmp	.-44     	; 0x117e <__ultoa_invert+0x58>
    11aa:	b4 e0       	ldi	r27, 0x04	; 4
    11ac:	a6 95       	lsr	r26
    11ae:	97 95       	ror	r25
    11b0:	87 95       	ror	r24
    11b2:	77 95       	ror	r23
    11b4:	67 95       	ror	r22
    11b6:	ba 95       	dec	r27
    11b8:	c9 f7       	brne	.-14     	; 0x11ac <__ultoa_invert+0x86>
    11ba:	00 97       	sbiw	r24, 0x00	; 0
    11bc:	61 05       	cpc	r22, r1
    11be:	71 05       	cpc	r23, r1
    11c0:	08 95       	ret
    11c2:	9b 01       	movw	r18, r22
    11c4:	ac 01       	movw	r20, r24
    11c6:	0a 2e       	mov	r0, r26
    11c8:	06 94       	lsr	r0
    11ca:	57 95       	ror	r21
    11cc:	47 95       	ror	r20
    11ce:	37 95       	ror	r19
    11d0:	27 95       	ror	r18
    11d2:	ba 95       	dec	r27
    11d4:	c9 f7       	brne	.-14     	; 0x11c8 <__ultoa_invert+0xa2>
    11d6:	62 0f       	add	r22, r18
    11d8:	73 1f       	adc	r23, r19
    11da:	84 1f       	adc	r24, r20
    11dc:	95 1f       	adc	r25, r21
    11de:	a0 1d       	adc	r26, r0
    11e0:	08 95       	ret

Disassembly of section .text.avrlibc:

000017fa <calloc>:
    17fa:	0f 93       	push	r16
    17fc:	1f 93       	push	r17
    17fe:	cf 93       	push	r28
    1800:	df 93       	push	r29
    1802:	86 9f       	mul	r24, r22
    1804:	80 01       	movw	r16, r0
    1806:	87 9f       	mul	r24, r23
    1808:	10 0d       	add	r17, r0
    180a:	96 9f       	mul	r25, r22
    180c:	10 0d       	add	r17, r0
    180e:	11 24       	eor	r1, r1
    1810:	c8 01       	movw	r24, r16
    1812:	0e 94 b2 04 	call	0x964	; 0x964 <malloc>
    1816:	ec 01       	movw	r28, r24
    1818:	00 97       	sbiw	r24, 0x00	; 0
    181a:	29 f0       	breq	.+10     	; 0x1826 <calloc+0x2c>
    181c:	a8 01       	movw	r20, r16
    181e:	60 e0       	ldi	r22, 0x00	; 0
    1820:	70 e0       	ldi	r23, 0x00	; 0
    1822:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <memset>
    1826:	ce 01       	movw	r24, r28
    1828:	df 91       	pop	r29
    182a:	cf 91       	pop	r28
    182c:	1f 91       	pop	r17
    182e:	0f 91       	pop	r16
    1830:	08 95       	ret

Disassembly of section .text.avrlibc:

00000964 <malloc>:
 964:	0f 93       	push	r16
 966:	1f 93       	push	r17
 968:	cf 93       	push	r28
 96a:	df 93       	push	r29
 96c:	82 30       	cpi	r24, 0x02	; 2
 96e:	91 05       	cpc	r25, r1
 970:	10 f4       	brcc	.+4      	; 0x976 <malloc+0x12>
 972:	82 e0       	ldi	r24, 0x02	; 2
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__flp>
 97a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__flp+0x1>
 97e:	20 e0       	ldi	r18, 0x00	; 0
 980:	30 e0       	ldi	r19, 0x00	; 0
 982:	a0 e0       	ldi	r26, 0x00	; 0
 984:	b0 e0       	ldi	r27, 0x00	; 0
 986:	30 97       	sbiw	r30, 0x00	; 0
 988:	19 f1       	breq	.+70     	; 0x9d0 <malloc+0x6c>
 98a:	40 81       	ld	r20, Z
 98c:	51 81       	ldd	r21, Z+1	; 0x01
 98e:	02 81       	ldd	r16, Z+2	; 0x02
 990:	13 81       	ldd	r17, Z+3	; 0x03
 992:	48 17       	cp	r20, r24
 994:	59 07       	cpc	r21, r25
 996:	c8 f0       	brcs	.+50     	; 0x9ca <malloc+0x66>
 998:	84 17       	cp	r24, r20
 99a:	95 07       	cpc	r25, r21
 99c:	69 f4       	brne	.+26     	; 0x9b8 <malloc+0x54>
 99e:	10 97       	sbiw	r26, 0x00	; 0
 9a0:	31 f0       	breq	.+12     	; 0x9ae <malloc+0x4a>
 9a2:	12 96       	adiw	r26, 0x02	; 2
 9a4:	0c 93       	st	X, r16
 9a6:	12 97       	sbiw	r26, 0x02	; 2
 9a8:	13 96       	adiw	r26, 0x03	; 3
 9aa:	1c 93       	st	X, r17
 9ac:	27 c0       	rjmp	.+78     	; 0x9fc <malloc+0x98>
 9ae:	00 93 08 01 	sts	0x0108, r16	; 0x800108 <__flp>
 9b2:	10 93 09 01 	sts	0x0109, r17	; 0x800109 <__flp+0x1>
 9b6:	22 c0       	rjmp	.+68     	; 0x9fc <malloc+0x98>
 9b8:	21 15       	cp	r18, r1
 9ba:	31 05       	cpc	r19, r1
 9bc:	19 f0       	breq	.+6      	; 0x9c4 <malloc+0x60>
 9be:	42 17       	cp	r20, r18
 9c0:	53 07       	cpc	r21, r19
 9c2:	18 f4       	brcc	.+6      	; 0x9ca <malloc+0x66>
 9c4:	9a 01       	movw	r18, r20
 9c6:	bd 01       	movw	r22, r26
 9c8:	ef 01       	movw	r28, r30
 9ca:	df 01       	movw	r26, r30
 9cc:	f8 01       	movw	r30, r16
 9ce:	db cf       	rjmp	.-74     	; 0x986 <malloc+0x22>
 9d0:	21 15       	cp	r18, r1
 9d2:	31 05       	cpc	r19, r1
 9d4:	f9 f0       	breq	.+62     	; 0xa14 <malloc+0xb0>
 9d6:	28 1b       	sub	r18, r24
 9d8:	39 0b       	sbc	r19, r25
 9da:	24 30       	cpi	r18, 0x04	; 4
 9dc:	31 05       	cpc	r19, r1
 9de:	80 f4       	brcc	.+32     	; 0xa00 <malloc+0x9c>
 9e0:	8a 81       	ldd	r24, Y+2	; 0x02
 9e2:	9b 81       	ldd	r25, Y+3	; 0x03
 9e4:	61 15       	cp	r22, r1
 9e6:	71 05       	cpc	r23, r1
 9e8:	21 f0       	breq	.+8      	; 0x9f2 <malloc+0x8e>
 9ea:	fb 01       	movw	r30, r22
 9ec:	93 83       	std	Z+3, r25	; 0x03
 9ee:	82 83       	std	Z+2, r24	; 0x02
 9f0:	04 c0       	rjmp	.+8      	; 0x9fa <malloc+0x96>
 9f2:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__flp+0x1>
 9f6:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__flp>
 9fa:	fe 01       	movw	r30, r28
 9fc:	32 96       	adiw	r30, 0x02	; 2
 9fe:	44 c0       	rjmp	.+136    	; 0xa88 <malloc+0x124>
 a00:	fe 01       	movw	r30, r28
 a02:	e2 0f       	add	r30, r18
 a04:	f3 1f       	adc	r31, r19
 a06:	81 93       	st	Z+, r24
 a08:	91 93       	st	Z+, r25
 a0a:	22 50       	subi	r18, 0x02	; 2
 a0c:	31 09       	sbc	r19, r1
 a0e:	39 83       	std	Y+1, r19	; 0x01
 a10:	28 83       	st	Y, r18
 a12:	3a c0       	rjmp	.+116    	; 0xa88 <malloc+0x124>
 a14:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__brkval>
 a18:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__brkval+0x1>
 a1c:	23 2b       	or	r18, r19
 a1e:	41 f4       	brne	.+16     	; 0xa30 <malloc+0xcc>
 a20:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__malloc_heap_start>
 a24:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__malloc_heap_start+0x1>
 a28:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <__brkval+0x1>
 a2c:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <__brkval>
 a30:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <_end>
 a34:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <_end+0x1>
 a38:	21 15       	cp	r18, r1
 a3a:	31 05       	cpc	r19, r1
 a3c:	41 f4       	brne	.+16     	; 0xa4e <malloc+0xea>
 a3e:	2d b7       	in	r18, 0x3d	; 61
 a40:	3e b7       	in	r19, 0x3e	; 62
 a42:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <__malloc_margin>
 a46:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <__malloc_margin+0x1>
 a4a:	24 1b       	sub	r18, r20
 a4c:	35 0b       	sbc	r19, r21
 a4e:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <__brkval>
 a52:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <__brkval+0x1>
 a56:	e2 17       	cp	r30, r18
 a58:	f3 07       	cpc	r31, r19
 a5a:	a0 f4       	brcc	.+40     	; 0xa84 <malloc+0x120>
 a5c:	2e 1b       	sub	r18, r30
 a5e:	3f 0b       	sbc	r19, r31
 a60:	28 17       	cp	r18, r24
 a62:	39 07       	cpc	r19, r25
 a64:	78 f0       	brcs	.+30     	; 0xa84 <malloc+0x120>
 a66:	ac 01       	movw	r20, r24
 a68:	4e 5f       	subi	r20, 0xFE	; 254
 a6a:	5f 4f       	sbci	r21, 0xFF	; 255
 a6c:	24 17       	cp	r18, r20
 a6e:	35 07       	cpc	r19, r21
 a70:	48 f0       	brcs	.+18     	; 0xa84 <malloc+0x120>
 a72:	4e 0f       	add	r20, r30
 a74:	5f 1f       	adc	r21, r31
 a76:	50 93 07 01 	sts	0x0107, r21	; 0x800107 <__brkval+0x1>
 a7a:	40 93 06 01 	sts	0x0106, r20	; 0x800106 <__brkval>
 a7e:	81 93       	st	Z+, r24
 a80:	91 93       	st	Z+, r25
 a82:	02 c0       	rjmp	.+4      	; 0xa88 <malloc+0x124>
 a84:	e0 e0       	ldi	r30, 0x00	; 0
 a86:	f0 e0       	ldi	r31, 0x00	; 0
 a88:	cf 01       	movw	r24, r30
 a8a:	df 91       	pop	r29
 a8c:	cf 91       	pop	r28
 a8e:	1f 91       	pop	r17
 a90:	0f 91       	pop	r16
 a92:	08 95       	ret

00000a94 <free>:
 a94:	cf 93       	push	r28
 a96:	df 93       	push	r29
 a98:	00 97       	sbiw	r24, 0x00	; 0
 a9a:	09 f4       	brne	.+2      	; 0xa9e <free+0xa>
 a9c:	81 c0       	rjmp	.+258    	; 0xba0 <free+0x10c>
 a9e:	fc 01       	movw	r30, r24
 aa0:	32 97       	sbiw	r30, 0x02	; 2
 aa2:	13 82       	std	Z+3, r1	; 0x03
 aa4:	12 82       	std	Z+2, r1	; 0x02
 aa6:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <__flp>
 aaa:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <__flp+0x1>
 aae:	10 97       	sbiw	r26, 0x00	; 0
 ab0:	81 f4       	brne	.+32     	; 0xad2 <free+0x3e>
 ab2:	20 81       	ld	r18, Z
 ab4:	31 81       	ldd	r19, Z+1	; 0x01
 ab6:	82 0f       	add	r24, r18
 ab8:	93 1f       	adc	r25, r19
 aba:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__brkval>
 abe:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__brkval+0x1>
 ac2:	28 17       	cp	r18, r24
 ac4:	39 07       	cpc	r19, r25
 ac6:	51 f5       	brne	.+84     	; 0xb1c <free+0x88>
 ac8:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <__brkval+0x1>
 acc:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <__brkval>
 ad0:	67 c0       	rjmp	.+206    	; 0xba0 <free+0x10c>
 ad2:	ed 01       	movw	r28, r26
 ad4:	20 e0       	ldi	r18, 0x00	; 0
 ad6:	30 e0       	ldi	r19, 0x00	; 0
 ad8:	ce 17       	cp	r28, r30
 ada:	df 07       	cpc	r29, r31
 adc:	40 f4       	brcc	.+16     	; 0xaee <free+0x5a>
 ade:	4a 81       	ldd	r20, Y+2	; 0x02
 ae0:	5b 81       	ldd	r21, Y+3	; 0x03
 ae2:	9e 01       	movw	r18, r28
 ae4:	41 15       	cp	r20, r1
 ae6:	51 05       	cpc	r21, r1
 ae8:	f1 f0       	breq	.+60     	; 0xb26 <free+0x92>
 aea:	ea 01       	movw	r28, r20
 aec:	f5 cf       	rjmp	.-22     	; 0xad8 <free+0x44>
 aee:	d3 83       	std	Z+3, r29	; 0x03
 af0:	c2 83       	std	Z+2, r28	; 0x02
 af2:	40 81       	ld	r20, Z
 af4:	51 81       	ldd	r21, Z+1	; 0x01
 af6:	84 0f       	add	r24, r20
 af8:	95 1f       	adc	r25, r21
 afa:	c8 17       	cp	r28, r24
 afc:	d9 07       	cpc	r29, r25
 afe:	59 f4       	brne	.+22     	; 0xb16 <free+0x82>
 b00:	88 81       	ld	r24, Y
 b02:	99 81       	ldd	r25, Y+1	; 0x01
 b04:	84 0f       	add	r24, r20
 b06:	95 1f       	adc	r25, r21
 b08:	02 96       	adiw	r24, 0x02	; 2
 b0a:	91 83       	std	Z+1, r25	; 0x01
 b0c:	80 83       	st	Z, r24
 b0e:	8a 81       	ldd	r24, Y+2	; 0x02
 b10:	9b 81       	ldd	r25, Y+3	; 0x03
 b12:	93 83       	std	Z+3, r25	; 0x03
 b14:	82 83       	std	Z+2, r24	; 0x02
 b16:	21 15       	cp	r18, r1
 b18:	31 05       	cpc	r19, r1
 b1a:	29 f4       	brne	.+10     	; 0xb26 <free+0x92>
 b1c:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__flp+0x1>
 b20:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__flp>
 b24:	3d c0       	rjmp	.+122    	; 0xba0 <free+0x10c>
 b26:	e9 01       	movw	r28, r18
 b28:	fb 83       	std	Y+3, r31	; 0x03
 b2a:	ea 83       	std	Y+2, r30	; 0x02
 b2c:	49 91       	ld	r20, Y+
 b2e:	59 91       	ld	r21, Y+
 b30:	c4 0f       	add	r28, r20
 b32:	d5 1f       	adc	r29, r21
 b34:	ec 17       	cp	r30, r28
 b36:	fd 07       	cpc	r31, r29
 b38:	61 f4       	brne	.+24     	; 0xb52 <free+0xbe>
 b3a:	80 81       	ld	r24, Z
 b3c:	91 81       	ldd	r25, Z+1	; 0x01
 b3e:	84 0f       	add	r24, r20
 b40:	95 1f       	adc	r25, r21
 b42:	02 96       	adiw	r24, 0x02	; 2
 b44:	e9 01       	movw	r28, r18
 b46:	99 83       	std	Y+1, r25	; 0x01
 b48:	88 83       	st	Y, r24
 b4a:	82 81       	ldd	r24, Z+2	; 0x02
 b4c:	93 81       	ldd	r25, Z+3	; 0x03
 b4e:	9b 83       	std	Y+3, r25	; 0x03
 b50:	8a 83       	std	Y+2, r24	; 0x02
 b52:	e0 e0       	ldi	r30, 0x00	; 0
 b54:	f0 e0       	ldi	r31, 0x00	; 0
 b56:	12 96       	adiw	r26, 0x02	; 2
 b58:	8d 91       	ld	r24, X+
 b5a:	9c 91       	ld	r25, X
 b5c:	13 97       	sbiw	r26, 0x03	; 3
 b5e:	00 97       	sbiw	r24, 0x00	; 0
 b60:	19 f0       	breq	.+6      	; 0xb68 <free+0xd4>
 b62:	fd 01       	movw	r30, r26
 b64:	dc 01       	movw	r26, r24
 b66:	f7 cf       	rjmp	.-18     	; 0xb56 <free+0xc2>
 b68:	8d 91       	ld	r24, X+
 b6a:	9c 91       	ld	r25, X
 b6c:	11 97       	sbiw	r26, 0x01	; 1
 b6e:	9d 01       	movw	r18, r26
 b70:	2e 5f       	subi	r18, 0xFE	; 254
 b72:	3f 4f       	sbci	r19, 0xFF	; 255
 b74:	82 0f       	add	r24, r18
 b76:	93 1f       	adc	r25, r19
 b78:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__brkval>
 b7c:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__brkval+0x1>
 b80:	28 17       	cp	r18, r24
 b82:	39 07       	cpc	r19, r25
 b84:	69 f4       	brne	.+26     	; 0xba0 <free+0x10c>
 b86:	30 97       	sbiw	r30, 0x00	; 0
 b88:	29 f4       	brne	.+10     	; 0xb94 <free+0x100>
 b8a:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <__flp+0x1>
 b8e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__flp>
 b92:	02 c0       	rjmp	.+4      	; 0xb98 <free+0x104>
 b94:	13 82       	std	Z+3, r1	; 0x03
 b96:	12 82       	std	Z+2, r1	; 0x02
 b98:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__brkval+0x1>
 b9c:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__brkval>
 ba0:	df 91       	pop	r29
 ba2:	cf 91       	pop	r28
 ba4:	08 95       	ret

Disassembly of section .text.avrlibc:

00001a64 <memset>:
    1a64:	dc 01       	movw	r26, r24
    1a66:	01 c0       	rjmp	.+2      	; 0x1a6a <memset+0x6>
    1a68:	6d 93       	st	X+, r22
    1a6a:	41 50       	subi	r20, 0x01	; 1
    1a6c:	50 40       	sbci	r21, 0x00	; 0
    1a6e:	e0 f7       	brcc	.-8      	; 0x1a68 <memset+0x4>
    1a70:	08 95       	ret
