
application.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000d02  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000ce  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800100  00800100  00000d02  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00000d02  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  00000d5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f33  00000000  00000000  00000df5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007a2  00000000  00000000  00001d28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003ea  00000000  00000000  000024ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000190  00000000  00000000  000028b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000211  00000000  00000000  00002a44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002e3  00000000  00000000  00002c55  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00002f38  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000c44  00000c44  00000cf8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002fa0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.encoder_init 0000002c  00000b9a  00000b9a  00000c4e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.encoder_read_tick 0000001e  00000be8  00000be8  00000c9c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.encoder_get_accumulated_ticks_left 0000000a  00000c30  00000c30  00000ce4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.encoder_get_accumulated_ticks_right 0000000a  00000c3a  00000c3a  00000cee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_1 00000076  0000094c  0000094c  00000a00  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_2 00000076  000009c2  000009c2  00000a76  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.encoder_ticks_right 00000002  00800110  00800110  00000d02  2**0
                  ALLOC
 21 .bss.encoder_ticks_left 00000002  00800112  00800112  00000d02  2**0
                  ALLOC
 22 .text.usart_tx 0000000e  00000c06  00000c06  00000cba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.usart_rx 0000000e  00000c14  00000c14  00000cc8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.usart_init 00000022  00000bc6  00000bc6  00000c7a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .progmemx.data 00000028  000000ce  000000ce  00000182  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 26 .text.main    00000058  00000a38  00000a38  00000aec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.avrlibc 00000098  0000083c  0000083c  000008f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.avrlibc 0000002e  00000b6c  00000b6c  00000c20  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.avrlibc 00000448  000000f6  000000f6  000001aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.avrlibc 00000038  00000a90  00000a90  00000b44  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .data         00000006  0080010a  00000c48  00000cfc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 32 .text.avrlibc 00000242  0000053e  0000053e  000005f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.avrlibc 00000036  00000b00  00000b00  00000bb4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.avrlibc 0000000e  00000c22  00000c22  00000cd6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.avrlibc 00000078  000008d4  000008d4  00000988  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.avrlibc 000000bc  00000780  00000780  00000834  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.libgcc.prologue 00000038  00000ac8  00000ac8  00000b7c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.libgcc.prologue 00000036  00000b36  00000b36  00000bea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
   4:	0c 94 a6 04 	jmp	0x94c	; 0x94c <__vector_1>
   8:	0c 94 e1 04 	jmp	0x9c2	; 0x9c2 <__vector_2>
   c:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  10:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  14:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  18:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  1c:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  20:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  24:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  28:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  2c:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  30:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  34:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  38:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  3c:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  40:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  44:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  48:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  4c:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  50:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  54:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  58:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  5c:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  60:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>
  64:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 0a       	sbc	r0, r17
  6c:	80 01       	movw	r16, r0
  6e:	0a 01       	movw	r0, r20
  70:	10 00       	.word	0x0010	; ????
  72:	0c 48       	sbci	r16, 0x8C	; 140
  74:	01 10       	cpse	r0, r1
  76:	01 14       	cp	r0, r1
  78:	80 00       	.word	0x0080	; ????

0000007a <__ctors_end>:
  7a:	11 24       	eor	r1, r1
  7c:	1f be       	out	0x3f, r1	; 63
  7e:	cf ef       	ldi	r28, 0xFF	; 255
  80:	d8 e0       	ldi	r29, 0x08	; 8
  82:	de bf       	out	0x3e, r29	; 62
  84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
  86:	e8 e6       	ldi	r30, 0x68	; 104
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	40 e0       	ldi	r20, 0x00	; 0
  8c:	17 c0       	rjmp	.+46     	; 0xbc <__do_clear_bss+0x8>
  8e:	b5 91       	lpm	r27, Z+
  90:	a5 91       	lpm	r26, Z+
  92:	35 91       	lpm	r19, Z+
  94:	25 91       	lpm	r18, Z+
  96:	05 91       	lpm	r16, Z+
  98:	07 fd       	sbrc	r16, 7
  9a:	0c c0       	rjmp	.+24     	; 0xb4 <__do_clear_bss>
  9c:	95 91       	lpm	r25, Z+
  9e:	85 91       	lpm	r24, Z+
  a0:	ef 01       	movw	r28, r30
  a2:	f9 2f       	mov	r31, r25
  a4:	e8 2f       	mov	r30, r24
  a6:	05 90       	lpm	r0, Z+
  a8:	0d 92       	st	X+, r0
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	d9 f7       	brne	.-10     	; 0xa6 <__do_copy_data+0x20>
  b0:	fe 01       	movw	r30, r28
  b2:	04 c0       	rjmp	.+8      	; 0xbc <__do_clear_bss+0x8>

000000b4 <__do_clear_bss>:
  b4:	1d 92       	st	X+, r1
  b6:	a2 17       	cp	r26, r18
  b8:	b3 07       	cpc	r27, r19
  ba:	e1 f7       	brne	.-8      	; 0xb4 <__do_clear_bss>
  bc:	e9 37       	cpi	r30, 0x79	; 121
  be:	f4 07       	cpc	r31, r20
  c0:	31 f7       	brne	.-52     	; 0x8e <__do_copy_data+0x8>
  c2:	0e 94 1c 05 	call	0xa38	; 0xa38 <main>
  c6:	0c 94 65 00 	jmp	0xca	; 0xca <_exit>

000000ca <_exit>:
  ca:	f8 94       	cli

000000cc <__stop_program>:
  cc:	ff cf       	rjmp	.-2      	; 0xcc <__stop_program>

Disassembly of section .text:

00000c44 <__bad_interrupt>:
 c44:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.encoder_init:

00000b9a <encoder_init>:
int encoder_ticks_right = 0;

void encoder_init(void) {
	
	// Set digital inputs with internal pull-up
	DDRD &= ~(1 << ENCA1);
 b9a:	8a b1       	in	r24, 0x0a	; 10
 b9c:	8b 7f       	andi	r24, 0xFB	; 251
 b9e:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA1);
 ba0:	8b b1       	in	r24, 0x0b	; 11
 ba2:	84 60       	ori	r24, 0x04	; 4
 ba4:	8b b9       	out	0x0b, r24	; 11
	
	DDRD &= ~(1 << ENCA2);
 ba6:	8a b1       	in	r24, 0x0a	; 10
 ba8:	87 7f       	andi	r24, 0xF7	; 247
 baa:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ENCA2);
 bac:	8b b1       	in	r24, 0x0b	; 11
 bae:	88 60       	ori	r24, 0x08	; 8
 bb0:	8b b9       	out	0x0b, r24	; 11
	
	// Rising edge of INT0 and INT1 will generate an interrupt request
	EICRA |= (1 << ISC00) | (1 << ISC01) | (1 << ISC10) | (1 << ISC11);
 bb2:	e9 e6       	ldi	r30, 0x69	; 105
 bb4:	f0 e0       	ldi	r31, 0x00	; 0
 bb6:	80 81       	ld	r24, Z
 bb8:	8f 60       	ori	r24, 0x0F	; 15
 bba:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0) | (1 << INT1);
 bbc:	8d b3       	in	r24, 0x1d	; 29
 bbe:	83 60       	ori	r24, 0x03	; 3
 bc0:	8d bb       	out	0x1d, r24	; 29
	
	// Enable global interrupts
	sei();
 bc2:	78 94       	sei
 bc4:	08 95       	ret

Disassembly of section .text.encoder_read_tick:

00000be8 <encoder_read_tick>:
	
	
}

int encoder_read_tick(int encoder_pin) {
	if (PIND & (1<<encoder_pin)) {
 be8:	29 b1       	in	r18, 0x09	; 9
 bea:	30 e0       	ldi	r19, 0x00	; 0
 bec:	02 c0       	rjmp	.+4      	; 0xbf2 <encoder_read_tick+0xa>
 bee:	35 95       	asr	r19
 bf0:	27 95       	ror	r18
 bf2:	8a 95       	dec	r24
 bf4:	e2 f7       	brpl	.-8      	; 0xbee <encoder_read_tick+0x6>
 bf6:	c9 01       	movw	r24, r18
 bf8:	81 70       	andi	r24, 0x01	; 1
 bfa:	99 27       	eor	r25, r25
 bfc:	20 ff       	sbrs	r18, 0
 bfe:	02 c0       	rjmp	.+4      	; 0xc04 <encoder_read_tick+0x1c>
		return 1;
 c00:	81 e0       	ldi	r24, 0x01	; 1
 c02:	90 e0       	ldi	r25, 0x00	; 0
	}
	return 0;
}
 c04:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_left:

00000c30 <encoder_get_accumulated_ticks_left>:

int encoder_get_accumulated_ticks_left(void) {
	return encoder_ticks_left;
}
 c30:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_left>
 c34:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_left+0x1>
 c38:	08 95       	ret

Disassembly of section .text.encoder_get_accumulated_ticks_right:

00000c3a <encoder_get_accumulated_ticks_right>:

int encoder_get_accumulated_ticks_right(void) {
	return encoder_ticks_right;
}
 c3a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <encoder_ticks_right>
 c3e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <encoder_ticks_right+0x1>
 c42:	08 95       	ret

Disassembly of section .text.__vector_1:

0000094c <__vector_1>:

// Interrupt service routine for INT0
// Triggered on rising edge of channel A encoder signal for left wheel
ISR(INT0_vect) {
 94c:	1f 92       	push	r1
 94e:	0f 92       	push	r0
 950:	0f b6       	in	r0, 0x3f	; 63
 952:	0f 92       	push	r0
 954:	11 24       	eor	r1, r1
 956:	2f 93       	push	r18
 958:	3f 93       	push	r19
 95a:	4f 93       	push	r20
 95c:	5f 93       	push	r21
 95e:	6f 93       	push	r22
 960:	7f 93       	push	r23
 962:	8f 93       	push	r24
 964:	9f 93       	push	r25
 966:	af 93       	push	r26
 968:	bf 93       	push	r27
 96a:	ef 93       	push	r30
 96c:	ff 93       	push	r31
	int encb1 = encoder_read_tick(ENCB1);
 96e:	86 e0       	ldi	r24, 0x06	; 6
 970:	90 e0       	ldi	r25, 0x00	; 0
 972:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <encoder_read_tick>
	if (encb1) {
 976:	89 2b       	or	r24, r25
 978:	51 f0       	breq	.+20     	; 0x98e <__vector_1+0x42>
		encoder_ticks_left++;
 97a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_left>
 97e:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_left+0x1>
 982:	01 96       	adiw	r24, 0x01	; 1
 984:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <encoder_ticks_left+0x1>
 988:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <encoder_ticks_left>
 98c:	09 c0       	rjmp	.+18     	; 0x9a0 <__vector_1+0x54>
	} else {
		encoder_ticks_left--;
 98e:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <encoder_ticks_left>
 992:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <encoder_ticks_left+0x1>
 996:	01 97       	sbiw	r24, 0x01	; 1
 998:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <encoder_ticks_left+0x1>
 99c:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <encoder_ticks_left>
	}
}
 9a0:	ff 91       	pop	r31
 9a2:	ef 91       	pop	r30
 9a4:	bf 91       	pop	r27
 9a6:	af 91       	pop	r26
 9a8:	9f 91       	pop	r25
 9aa:	8f 91       	pop	r24
 9ac:	7f 91       	pop	r23
 9ae:	6f 91       	pop	r22
 9b0:	5f 91       	pop	r21
 9b2:	4f 91       	pop	r20
 9b4:	3f 91       	pop	r19
 9b6:	2f 91       	pop	r18
 9b8:	0f 90       	pop	r0
 9ba:	0f be       	out	0x3f, r0	; 63
 9bc:	0f 90       	pop	r0
 9be:	1f 90       	pop	r1
 9c0:	18 95       	reti

Disassembly of section .text.__vector_2:

000009c2 <__vector_2>:

// Interrupt service routine for INT1
// Triggered on rising edge of channel A encoder signal for right wheel
ISR(INT1_vect) {
 9c2:	1f 92       	push	r1
 9c4:	0f 92       	push	r0
 9c6:	0f b6       	in	r0, 0x3f	; 63
 9c8:	0f 92       	push	r0
 9ca:	11 24       	eor	r1, r1
 9cc:	2f 93       	push	r18
 9ce:	3f 93       	push	r19
 9d0:	4f 93       	push	r20
 9d2:	5f 93       	push	r21
 9d4:	6f 93       	push	r22
 9d6:	7f 93       	push	r23
 9d8:	8f 93       	push	r24
 9da:	9f 93       	push	r25
 9dc:	af 93       	push	r26
 9de:	bf 93       	push	r27
 9e0:	ef 93       	push	r30
 9e2:	ff 93       	push	r31
	int encb2 = encoder_read_tick(ENCB2);
 9e4:	87 e0       	ldi	r24, 0x07	; 7
 9e6:	90 e0       	ldi	r25, 0x00	; 0
 9e8:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <encoder_read_tick>
	if (encb2) {
 9ec:	89 2b       	or	r24, r25
 9ee:	51 f0       	breq	.+20     	; 0xa04 <__vector_2+0x42>
		encoder_ticks_right++;
 9f0:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <encoder_ticks_right>
 9f4:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <encoder_ticks_right+0x1>
 9f8:	01 96       	adiw	r24, 0x01	; 1
 9fa:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <encoder_ticks_right+0x1>
 9fe:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <encoder_ticks_right>
 a02:	09 c0       	rjmp	.+18     	; 0xa16 <__vector_2+0x54>
		} 
	else {
		encoder_ticks_right--;
 a04:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <encoder_ticks_right>
 a08:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <encoder_ticks_right+0x1>
 a0c:	01 97       	sbiw	r24, 0x01	; 1
 a0e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <encoder_ticks_right+0x1>
 a12:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <encoder_ticks_right>
	}
 a16:	ff 91       	pop	r31
 a18:	ef 91       	pop	r30
 a1a:	bf 91       	pop	r27
 a1c:	af 91       	pop	r26
 a1e:	9f 91       	pop	r25
 a20:	8f 91       	pop	r24
 a22:	7f 91       	pop	r23
 a24:	6f 91       	pop	r22
 a26:	5f 91       	pop	r21
 a28:	4f 91       	pop	r20
 a2a:	3f 91       	pop	r19
 a2c:	2f 91       	pop	r18
 a2e:	0f 90       	pop	r0
 a30:	0f be       	out	0x3f, r0	; 63
 a32:	0f 90       	pop	r0
 a34:	1f 90       	pop	r1
 a36:	18 95       	reti

Disassembly of section .text.usart_tx:

00000c06 <usart_tx>:

#include <avr/io.h>
#include "usart.h"

void usart_tx(unsigned char data) {
	while (! (UCSR0A & (1 << UDRE0))) {
 c06:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 c0a:	95 ff       	sbrs	r25, 5
 c0c:	fc cf       	rjmp	.-8      	; 0xc06 <usart_tx>
		// wait for buffer to empty
	}
	// Place data in buffer
	UDR0 = data;
 c0e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 c12:	08 95       	ret

Disassembly of section .text.usart_rx:

00000c14 <usart_rx>:
}

unsigned char usart_rx(void) {
	while(!(UCSR0A & (1 << RXC0))) {
 c14:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 c18:	88 23       	and	r24, r24
 c1a:	e4 f7       	brge	.-8      	; 0xc14 <usart_rx>
		// Wait for data to be received
	}
	return UDR0;
 c1c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 c20:	08 95       	ret

Disassembly of section .text.usart_init:

00000bc6 <usart_init>:

void usart_init(unsigned int ubrr) {
	// Set baud rate
	UBRR0H = ubrr>>8;
 bc6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = ubrr;
 bca:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	// Enable rx and tx
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
 bce:	88 e1       	ldi	r24, 0x18	; 24
 bd0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	
	// Set frame format: 8data 2stop bit
	UCSR0C = (1 << USBS0) | (3 << UCSZ00);
 bd4:	8e e0       	ldi	r24, 0x0E	; 14
 bd6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	
	// Use printf for serial communication
	fdevopen(usart_tx, usart_rx);
 bda:	6a e0       	ldi	r22, 0x0A	; 10
 bdc:	76 e0       	ldi	r23, 0x06	; 6
 bde:	83 e0       	ldi	r24, 0x03	; 3
 be0:	96 e0       	ldi	r25, 0x06	; 6
 be2:	0e 94 1e 04 	call	0x83c	; 0x83c <fdevopen>
 be6:	08 95       	ret

Disassembly of section .text.main:

00000a38 <main>:
#include "drivers/encoder/encoder.h"


int main(void)
{
	usart_init(UBRR);
 a38:	87 e6       	ldi	r24, 0x67	; 103
 a3a:	90 e0       	ldi	r25, 0x00	; 0
 a3c:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <usart_init>
	encoder_init();
 a40:	0e 94 cd 05 	call	0xb9a	; 0xb9a <encoder_init>
	
	printf("Starting application\n\r");
 a44:	8e ec       	ldi	r24, 0xCE	; 206
 a46:	90 e0       	ldi	r25, 0x00	; 0
 a48:	a0 e0       	ldi	r26, 0x00	; 0
 a4a:	af 93       	push	r26
 a4c:	9f 93       	push	r25
 a4e:	8f 93       	push	r24
 a50:	0e 94 b6 05 	call	0xb6c	; 0xb6c <printf>
 a54:	0f 90       	pop	r0
 a56:	0f 90       	pop	r0
 a58:	0f 90       	pop	r0
		PORTB = ~(1<<BUILTIN_LED);
		_delay_ms(3000);
		printf("on\n\r");
		PORTB = (1<<BUILTIN_LED);
		*/
		int ticksL = encoder_get_accumulated_ticks_left();
 a5a:	0e 94 18 06 	call	0xc30	; 0xc30 <encoder_get_accumulated_ticks_left>
 a5e:	c8 2f       	mov	r28, r24
 a60:	d9 2f       	mov	r29, r25
		int ticksR = encoder_get_accumulated_ticks_right();
 a62:	0e 94 1d 06 	call	0xc3a	; 0xc3a <encoder_get_accumulated_ticks_right>
		printf("L = %d; R = %d\n\r", ticksL, ticksR);
 a66:	9f 93       	push	r25
 a68:	8f 93       	push	r24
 a6a:	df 93       	push	r29
 a6c:	cf 93       	push	r28
 a6e:	85 ee       	ldi	r24, 0xE5	; 229
 a70:	90 e0       	ldi	r25, 0x00	; 0
 a72:	a0 e0       	ldi	r26, 0x00	; 0
 a74:	af 93       	push	r26
 a76:	9f 93       	push	r25
 a78:	8f 93       	push	r24
 a7a:	0e 94 b6 05 	call	0xb6c	; 0xb6c <printf>
 a7e:	8d b7       	in	r24, 0x3d	; 61
 a80:	9e b7       	in	r25, 0x3e	; 62
 a82:	07 96       	adiw	r24, 0x07	; 7
 a84:	0f b6       	in	r0, 0x3f	; 63
 a86:	f8 94       	cli
 a88:	9e bf       	out	0x3e, r25	; 62
 a8a:	0f be       	out	0x3f, r0	; 63
 a8c:	8d bf       	out	0x3d, r24	; 61
 a8e:	e5 cf       	rjmp	.-54     	; 0xa5a <main+0x22>

Disassembly of section .text.avrlibc:

0000083c <fdevopen>:
 83c:	0f 93       	push	r16
 83e:	1f 93       	push	r17
 840:	cf 93       	push	r28
 842:	df 93       	push	r29
 844:	00 97       	sbiw	r24, 0x00	; 0
 846:	31 f4       	brne	.+12     	; 0x854 <fdevopen+0x18>
 848:	61 15       	cp	r22, r1
 84a:	71 05       	cpc	r23, r1
 84c:	19 f4       	brne	.+6      	; 0x854 <fdevopen+0x18>
 84e:	80 e0       	ldi	r24, 0x00	; 0
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	3b c0       	rjmp	.+118    	; 0x8ca <fdevopen+0x8e>
 854:	8b 01       	movw	r16, r22
 856:	ec 01       	movw	r28, r24
 858:	6f e0       	ldi	r22, 0x0F	; 15
 85a:	70 e0       	ldi	r23, 0x00	; 0
 85c:	81 e0       	ldi	r24, 0x01	; 1
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	0e 94 48 05 	call	0xa90	; 0xa90 <calloc>
 864:	fc 01       	movw	r30, r24
 866:	89 2b       	or	r24, r25
 868:	91 f3       	breq	.-28     	; 0x84e <fdevopen+0x12>
 86a:	80 e8       	ldi	r24, 0x80	; 128
 86c:	84 83       	std	Z+4, r24	; 0x04
 86e:	01 15       	cp	r16, r1
 870:	11 05       	cpc	r17, r1
 872:	69 f0       	breq	.+26     	; 0x88e <fdevopen+0x52>
 874:	14 87       	std	Z+12, r17	; 0x0c
 876:	03 87       	std	Z+11, r16	; 0x0b
 878:	81 e8       	ldi	r24, 0x81	; 129
 87a:	84 83       	std	Z+4, r24	; 0x04
 87c:	a0 e0       	ldi	r26, 0x00	; 0
 87e:	b1 e0       	ldi	r27, 0x01	; 1
 880:	8d 91       	ld	r24, X+
 882:	9c 91       	ld	r25, X
 884:	11 97       	sbiw	r26, 0x01	; 1
 886:	89 2b       	or	r24, r25
 888:	11 f4       	brne	.+4      	; 0x88e <fdevopen+0x52>
 88a:	ed 93       	st	X+, r30
 88c:	fc 93       	st	X, r31
 88e:	20 97       	sbiw	r28, 0x00	; 0
 890:	d9 f0       	breq	.+54     	; 0x8c8 <fdevopen+0x8c>
 892:	d2 87       	std	Z+10, r29	; 0x0a
 894:	c1 87       	std	Z+9, r28	; 0x09
 896:	84 81       	ldd	r24, Z+4	; 0x04
 898:	82 60       	ori	r24, 0x02	; 2
 89a:	84 83       	std	Z+4, r24	; 0x04
 89c:	a0 e0       	ldi	r26, 0x00	; 0
 89e:	b1 e0       	ldi	r27, 0x01	; 1
 8a0:	12 96       	adiw	r26, 0x02	; 2
 8a2:	8d 91       	ld	r24, X+
 8a4:	9c 91       	ld	r25, X
 8a6:	13 97       	sbiw	r26, 0x03	; 3
 8a8:	89 2b       	or	r24, r25
 8aa:	71 f4       	brne	.+28     	; 0x8c8 <fdevopen+0x8c>
 8ac:	13 96       	adiw	r26, 0x03	; 3
 8ae:	fc 93       	st	X, r31
 8b0:	ee 93       	st	-X, r30
 8b2:	12 97       	sbiw	r26, 0x02	; 2
 8b4:	14 96       	adiw	r26, 0x04	; 4
 8b6:	8d 91       	ld	r24, X+
 8b8:	9c 91       	ld	r25, X
 8ba:	15 97       	sbiw	r26, 0x05	; 5
 8bc:	89 2b       	or	r24, r25
 8be:	21 f4       	brne	.+8      	; 0x8c8 <fdevopen+0x8c>
 8c0:	15 96       	adiw	r26, 0x05	; 5
 8c2:	fc 93       	st	X, r31
 8c4:	ee 93       	st	-X, r30
 8c6:	14 97       	sbiw	r26, 0x04	; 4
 8c8:	cf 01       	movw	r24, r30
 8ca:	df 91       	pop	r29
 8cc:	cf 91       	pop	r28
 8ce:	1f 91       	pop	r17
 8d0:	0f 91       	pop	r16
 8d2:	08 95       	ret

Disassembly of section .text.avrlibc:

00000b6c <printf>:
 b6c:	a0 e0       	ldi	r26, 0x00	; 0
 b6e:	b0 e0       	ldi	r27, 0x00	; 0
 b70:	ec eb       	ldi	r30, 0xBC	; 188
 b72:	f5 e0       	ldi	r31, 0x05	; 5
 b74:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__prologue_saves__+0x20>
 b78:	9e 01       	movw	r18, r28
 b7a:	2b 5f       	subi	r18, 0xFB	; 251
 b7c:	3f 4f       	sbci	r19, 0xFF	; 255
 b7e:	f9 01       	movw	r30, r18
 b80:	41 91       	ld	r20, Z+
 b82:	51 91       	ld	r21, Z+
 b84:	61 91       	ld	r22, Z+
 b86:	9f 01       	movw	r18, r30
 b88:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 b8c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 b90:	0e 94 7b 00 	call	0xf6	; 0xf6 <vfprintf>
 b94:	e2 e0       	ldi	r30, 0x02	; 2
 b96:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__epilogue_restores__+0x20>

Disassembly of section .text.avrlibc:

000000f6 <vfprintf>:
  f6:	2f 92       	push	r2
  f8:	3f 92       	push	r3
  fa:	4f 92       	push	r4
  fc:	6f 92       	push	r6
  fe:	7f 92       	push	r7
 100:	8f 92       	push	r8
 102:	9f 92       	push	r9
 104:	af 92       	push	r10
 106:	bf 92       	push	r11
 108:	cf 92       	push	r12
 10a:	df 92       	push	r13
 10c:	ef 92       	push	r14
 10e:	ff 92       	push	r15
 110:	0f 93       	push	r16
 112:	1f 93       	push	r17
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	cd b7       	in	r28, 0x3d	; 61
 11a:	de b7       	in	r29, 0x3e	; 62
 11c:	62 97       	sbiw	r28, 0x12	; 18
 11e:	0f b6       	in	r0, 0x3f	; 63
 120:	f8 94       	cli
 122:	de bf       	out	0x3e, r29	; 62
 124:	0f be       	out	0x3f, r0	; 63
 126:	cd bf       	out	0x3d, r28	; 61
 128:	6c 01       	movw	r12, r24
 12a:	3a 01       	movw	r6, r20
 12c:	86 2e       	mov	r8, r22
 12e:	79 01       	movw	r14, r18
 130:	fc 01       	movw	r30, r24
 132:	10 86       	std	Z+8, r1	; 0x08
 134:	17 82       	std	Z+7, r1	; 0x07
 136:	84 81       	ldd	r24, Z+4	; 0x04
 138:	81 ff       	sbrs	r24, 1
 13a:	e7 c1       	rjmp	.+974    	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 13c:	9e 01       	movw	r18, r28
 13e:	2f 5f       	subi	r18, 0xFF	; 255
 140:	3f 4f       	sbci	r19, 0xFF	; 255
 142:	3d 87       	std	Y+13, r19	; 0x0d
 144:	2c 87       	std	Y+12, r18	; 0x0c
 146:	c9 01       	movw	r24, r18
 148:	a0 e8       	ldi	r26, 0x80	; 128
 14a:	88 8b       	std	Y+16, r24	; 0x10
 14c:	99 8b       	std	Y+17, r25	; 0x11
 14e:	aa 8b       	std	Y+18, r26	; 0x12
 150:	9f e3       	ldi	r25, 0x3F	; 63
 152:	99 2e       	mov	r9, r25
 154:	f3 01       	movw	r30, r6
 156:	84 91       	lpm	r24, Z
 158:	87 fc       	sbrc	r8, 7
 15a:	80 81       	ld	r24, Z
 15c:	88 23       	and	r24, r24
 15e:	09 f4       	brne	.+2      	; 0x162 <vfprintf+0x6c>
 160:	d0 c1       	rjmp	.+928    	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
 162:	48 2d       	mov	r20, r8
 164:	93 01       	movw	r18, r6
 166:	2f 5f       	subi	r18, 0xFF	; 255
 168:	3f 4f       	sbci	r19, 0xFF	; 255
 16a:	4f 4f       	sbci	r20, 0xFF	; 255
 16c:	85 32       	cpi	r24, 0x25	; 37
 16e:	19 f0       	breq	.+6      	; 0x176 <vfprintf+0x80>
 170:	39 01       	movw	r6, r18
 172:	84 2e       	mov	r8, r20
 174:	0a c0       	rjmp	.+20     	; 0x18a <vfprintf+0x94>
 176:	f9 01       	movw	r30, r18
 178:	84 91       	lpm	r24, Z
 17a:	47 fd       	sbrc	r20, 7
 17c:	80 81       	ld	r24, Z
 17e:	92 e0       	ldi	r25, 0x02	; 2
 180:	69 0e       	add	r6, r25
 182:	71 1c       	adc	r7, r1
 184:	81 1c       	adc	r8, r1
 186:	85 32       	cpi	r24, 0x25	; 37
 188:	29 f4       	brne	.+10     	; 0x194 <vfprintf+0x9e>
 18a:	b6 01       	movw	r22, r12
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <fputc>
 192:	e0 cf       	rjmp	.-64     	; 0x154 <vfprintf+0x5e>
 194:	b1 2c       	mov	r11, r1
 196:	00 e0       	ldi	r16, 0x00	; 0
 198:	10 e0       	ldi	r17, 0x00	; 0
 19a:	10 32       	cpi	r17, 0x20	; 32
 19c:	a0 f4       	brcc	.+40     	; 0x1c6 <vfprintf+0xd0>
 19e:	8b 32       	cpi	r24, 0x2B	; 43
 1a0:	69 f0       	breq	.+26     	; 0x1bc <vfprintf+0xc6>
 1a2:	30 f4       	brcc	.+12     	; 0x1b0 <vfprintf+0xba>
 1a4:	80 32       	cpi	r24, 0x20	; 32
 1a6:	59 f0       	breq	.+22     	; 0x1be <vfprintf+0xc8>
 1a8:	83 32       	cpi	r24, 0x23	; 35
 1aa:	69 f4       	brne	.+26     	; 0x1c6 <vfprintf+0xd0>
 1ac:	10 61       	ori	r17, 0x10	; 16
 1ae:	2c c0       	rjmp	.+88     	; 0x208 <vfprintf+0x112>
 1b0:	8d 32       	cpi	r24, 0x2D	; 45
 1b2:	39 f0       	breq	.+14     	; 0x1c2 <vfprintf+0xcc>
 1b4:	80 33       	cpi	r24, 0x30	; 48
 1b6:	39 f4       	brne	.+14     	; 0x1c6 <vfprintf+0xd0>
 1b8:	11 60       	ori	r17, 0x01	; 1
 1ba:	26 c0       	rjmp	.+76     	; 0x208 <vfprintf+0x112>
 1bc:	12 60       	ori	r17, 0x02	; 2
 1be:	14 60       	ori	r17, 0x04	; 4
 1c0:	23 c0       	rjmp	.+70     	; 0x208 <vfprintf+0x112>
 1c2:	18 60       	ori	r17, 0x08	; 8
 1c4:	21 c0       	rjmp	.+66     	; 0x208 <vfprintf+0x112>
 1c6:	17 fd       	sbrc	r17, 7
 1c8:	29 c0       	rjmp	.+82     	; 0x21c <vfprintf+0x126>
 1ca:	90 ed       	ldi	r25, 0xD0	; 208
 1cc:	98 0f       	add	r25, r24
 1ce:	9a 30       	cpi	r25, 0x0A	; 10
 1d0:	78 f4       	brcc	.+30     	; 0x1f0 <vfprintf+0xfa>
 1d2:	16 ff       	sbrs	r17, 6
 1d4:	06 c0       	rjmp	.+12     	; 0x1e2 <vfprintf+0xec>
 1d6:	aa e0       	ldi	r26, 0x0A	; 10
 1d8:	ba 9e       	mul	r11, r26
 1da:	90 0d       	add	r25, r0
 1dc:	11 24       	eor	r1, r1
 1de:	b9 2e       	mov	r11, r25
 1e0:	13 c0       	rjmp	.+38     	; 0x208 <vfprintf+0x112>
 1e2:	ea e0       	ldi	r30, 0x0A	; 10
 1e4:	0e 9f       	mul	r16, r30
 1e6:	90 0d       	add	r25, r0
 1e8:	11 24       	eor	r1, r1
 1ea:	09 2f       	mov	r16, r25
 1ec:	10 62       	ori	r17, 0x20	; 32
 1ee:	0c c0       	rjmp	.+24     	; 0x208 <vfprintf+0x112>
 1f0:	8e 32       	cpi	r24, 0x2E	; 46
 1f2:	21 f4       	brne	.+8      	; 0x1fc <vfprintf+0x106>
 1f4:	16 fd       	sbrc	r17, 6
 1f6:	85 c1       	rjmp	.+778    	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
 1f8:	10 64       	ori	r17, 0x40	; 64
 1fa:	06 c0       	rjmp	.+12     	; 0x208 <vfprintf+0x112>
 1fc:	8c 36       	cpi	r24, 0x6C	; 108
 1fe:	11 f4       	brne	.+4      	; 0x204 <vfprintf+0x10e>
 200:	10 68       	ori	r17, 0x80	; 128
 202:	02 c0       	rjmp	.+4      	; 0x208 <vfprintf+0x112>
 204:	88 36       	cpi	r24, 0x68	; 104
 206:	51 f4       	brne	.+20     	; 0x21c <vfprintf+0x126>
 208:	f3 01       	movw	r30, r6
 20a:	84 91       	lpm	r24, Z
 20c:	87 fc       	sbrc	r8, 7
 20e:	80 81       	ld	r24, Z
 210:	ff ef       	ldi	r31, 0xFF	; 255
 212:	6f 1a       	sub	r6, r31
 214:	7f 0a       	sbc	r7, r31
 216:	8f 0a       	sbc	r8, r31
 218:	81 11       	cpse	r24, r1
 21a:	bf cf       	rjmp	.-130    	; 0x19a <vfprintf+0xa4>
 21c:	98 2f       	mov	r25, r24
 21e:	9f 7d       	andi	r25, 0xDF	; 223
 220:	95 54       	subi	r25, 0x45	; 69
 222:	93 30       	cpi	r25, 0x03	; 3
 224:	28 f4       	brcc	.+10     	; 0x230 <vfprintf+0x13a>
 226:	24 e0       	ldi	r18, 0x04	; 4
 228:	e2 0e       	add	r14, r18
 22a:	f1 1c       	adc	r15, r1
 22c:	99 82       	std	Y+1, r9	; 0x01
 22e:	0f c0       	rjmp	.+30     	; 0x24e <vfprintf+0x158>
 230:	83 36       	cpi	r24, 0x63	; 99
 232:	31 f0       	breq	.+12     	; 0x240 <vfprintf+0x14a>
 234:	83 37       	cpi	r24, 0x73	; 115
 236:	91 f0       	breq	.+36     	; 0x25c <vfprintf+0x166>
 238:	83 35       	cpi	r24, 0x53	; 83
 23a:	09 f0       	breq	.+2      	; 0x23e <vfprintf+0x148>
 23c:	63 c0       	rjmp	.+198    	; 0x304 <vfprintf+0x20e>
 23e:	27 c0       	rjmp	.+78     	; 0x28e <vfprintf+0x198>
 240:	f7 01       	movw	r30, r14
 242:	80 81       	ld	r24, Z
 244:	89 83       	std	Y+1, r24	; 0x01
 246:	97 01       	movw	r18, r14
 248:	2e 5f       	subi	r18, 0xFE	; 254
 24a:	3f 4f       	sbci	r19, 0xFF	; 255
 24c:	79 01       	movw	r14, r18
 24e:	28 88       	ldd	r2, Y+16	; 0x10
 250:	39 88       	ldd	r3, Y+17	; 0x11
 252:	4a 88       	ldd	r4, Y+18	; 0x12
 254:	aa 24       	eor	r10, r10
 256:	a3 94       	inc	r10
 258:	b1 2c       	mov	r11, r1
 25a:	17 c0       	rjmp	.+46     	; 0x28a <vfprintf+0x194>
 25c:	a7 01       	movw	r20, r14
 25e:	4d 5f       	subi	r20, 0xFD	; 253
 260:	5f 4f       	sbci	r21, 0xFF	; 255
 262:	5f 87       	std	Y+15, r21	; 0x0f
 264:	4e 87       	std	Y+14, r20	; 0x0e
 266:	f7 01       	movw	r30, r14
 268:	20 80       	ld	r2, Z
 26a:	31 80       	ldd	r3, Z+1	; 0x01
 26c:	42 80       	ldd	r4, Z+2	; 0x02
 26e:	16 ff       	sbrs	r17, 6
 270:	03 c0       	rjmp	.+6      	; 0x278 <vfprintf+0x182>
 272:	4b 2d       	mov	r20, r11
 274:	50 e0       	ldi	r21, 0x00	; 0
 276:	02 c0       	rjmp	.+4      	; 0x27c <vfprintf+0x186>
 278:	4f ef       	ldi	r20, 0xFF	; 255
 27a:	5f ef       	ldi	r21, 0xFF	; 255
 27c:	84 2d       	mov	r24, r4
 27e:	b1 01       	movw	r22, r2
 280:	0e 94 80 05 	call	0xb00	; 0xb00 <strnlen>
 284:	5c 01       	movw	r10, r24
 286:	ee 84       	ldd	r14, Y+14	; 0x0e
 288:	ff 84       	ldd	r15, Y+15	; 0x0f
 28a:	1f 77       	andi	r17, 0x7F	; 127
 28c:	18 c0       	rjmp	.+48     	; 0x2be <vfprintf+0x1c8>
 28e:	97 01       	movw	r18, r14
 290:	2d 5f       	subi	r18, 0xFD	; 253
 292:	3f 4f       	sbci	r19, 0xFF	; 255
 294:	3f 87       	std	Y+15, r19	; 0x0f
 296:	2e 87       	std	Y+14, r18	; 0x0e
 298:	f7 01       	movw	r30, r14
 29a:	20 80       	ld	r2, Z
 29c:	31 80       	ldd	r3, Z+1	; 0x01
 29e:	42 80       	ldd	r4, Z+2	; 0x02
 2a0:	16 ff       	sbrs	r17, 6
 2a2:	03 c0       	rjmp	.+6      	; 0x2aa <vfprintf+0x1b4>
 2a4:	4b 2d       	mov	r20, r11
 2a6:	50 e0       	ldi	r21, 0x00	; 0
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <vfprintf+0x1b8>
 2aa:	4f ef       	ldi	r20, 0xFF	; 255
 2ac:	5f ef       	ldi	r21, 0xFF	; 255
 2ae:	84 2d       	mov	r24, r4
 2b0:	b1 01       	movw	r22, r2
 2b2:	0e 94 80 05 	call	0xb00	; 0xb00 <strnlen>
 2b6:	5c 01       	movw	r10, r24
 2b8:	10 68       	ori	r17, 0x80	; 128
 2ba:	ee 84       	ldd	r14, Y+14	; 0x0e
 2bc:	ff 84       	ldd	r15, Y+15	; 0x0f
 2be:	13 fd       	sbrc	r17, 3
 2c0:	1d c0       	rjmp	.+58     	; 0x2fc <vfprintf+0x206>
 2c2:	80 2f       	mov	r24, r16
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	a8 16       	cp	r10, r24
 2c8:	b9 06       	cpc	r11, r25
 2ca:	c0 f4       	brcc	.+48     	; 0x2fc <vfprintf+0x206>
 2cc:	b6 01       	movw	r22, r12
 2ce:	80 e2       	ldi	r24, 0x20	; 32
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <fputc>
 2d6:	01 50       	subi	r16, 0x01	; 1
 2d8:	f4 cf       	rjmp	.-24     	; 0x2c2 <vfprintf+0x1cc>
 2da:	f1 01       	movw	r30, r2
 2dc:	84 91       	lpm	r24, Z
 2de:	47 fc       	sbrc	r4, 7
 2e0:	80 81       	ld	r24, Z
 2e2:	ff ef       	ldi	r31, 0xFF	; 255
 2e4:	2f 1a       	sub	r2, r31
 2e6:	3f 0a       	sbc	r3, r31
 2e8:	4f 0a       	sbc	r4, r31
 2ea:	b6 01       	movw	r22, r12
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <fputc>
 2f2:	01 11       	cpse	r16, r1
 2f4:	01 50       	subi	r16, 0x01	; 1
 2f6:	21 e0       	ldi	r18, 0x01	; 1
 2f8:	a2 1a       	sub	r10, r18
 2fa:	b1 08       	sbc	r11, r1
 2fc:	a1 14       	cp	r10, r1
 2fe:	b1 04       	cpc	r11, r1
 300:	61 f7       	brne	.-40     	; 0x2da <vfprintf+0x1e4>
 302:	f5 c0       	rjmp	.+490    	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 304:	84 36       	cpi	r24, 0x64	; 100
 306:	11 f0       	breq	.+4      	; 0x30c <vfprintf+0x216>
 308:	89 36       	cpi	r24, 0x69	; 105
 30a:	71 f5       	brne	.+92     	; 0x368 <vfprintf+0x272>
 30c:	f7 01       	movw	r30, r14
 30e:	17 ff       	sbrs	r17, 7
 310:	08 c0       	rjmp	.+16     	; 0x322 <vfprintf+0x22c>
 312:	60 81       	ld	r22, Z
 314:	71 81       	ldd	r23, Z+1	; 0x01
 316:	82 81       	ldd	r24, Z+2	; 0x02
 318:	93 81       	ldd	r25, Z+3	; 0x03
 31a:	97 01       	movw	r18, r14
 31c:	2c 5f       	subi	r18, 0xFC	; 252
 31e:	3f 4f       	sbci	r19, 0xFF	; 255
 320:	09 c0       	rjmp	.+18     	; 0x334 <vfprintf+0x23e>
 322:	60 81       	ld	r22, Z
 324:	71 81       	ldd	r23, Z+1	; 0x01
 326:	07 2e       	mov	r0, r23
 328:	00 0c       	add	r0, r0
 32a:	88 0b       	sbc	r24, r24
 32c:	99 0b       	sbc	r25, r25
 32e:	97 01       	movw	r18, r14
 330:	2e 5f       	subi	r18, 0xFE	; 254
 332:	3f 4f       	sbci	r19, 0xFF	; 255
 334:	79 01       	movw	r14, r18
 336:	1f 76       	andi	r17, 0x6F	; 111
 338:	31 2e       	mov	r3, r17
 33a:	97 ff       	sbrs	r25, 7
 33c:	0a c0       	rjmp	.+20     	; 0x352 <vfprintf+0x25c>
 33e:	90 95       	com	r25
 340:	80 95       	com	r24
 342:	70 95       	com	r23
 344:	61 95       	neg	r22
 346:	7f 4f       	sbci	r23, 0xFF	; 255
 348:	8f 4f       	sbci	r24, 0xFF	; 255
 34a:	9f 4f       	sbci	r25, 0xFF	; 255
 34c:	31 2f       	mov	r19, r17
 34e:	30 68       	ori	r19, 0x80	; 128
 350:	33 2e       	mov	r3, r19
 352:	2a e0       	ldi	r18, 0x0A	; 10
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	ae 01       	movw	r20, r28
 358:	4f 5f       	subi	r20, 0xFF	; 255
 35a:	5f 4f       	sbci	r21, 0xFF	; 255
 35c:	0e 94 c0 03 	call	0x780	; 0x780 <__ultoa_invert>
 360:	48 2e       	mov	r4, r24
 362:	4c 85       	ldd	r20, Y+12	; 0x0c
 364:	44 1a       	sub	r4, r20
 366:	4a c0       	rjmp	.+148    	; 0x3fc <vfprintf+0x306>
 368:	85 37       	cpi	r24, 0x75	; 117
 36a:	29 f4       	brne	.+10     	; 0x376 <vfprintf+0x280>
 36c:	1f 7e       	andi	r17, 0xEF	; 239
 36e:	a1 2e       	mov	r10, r17
 370:	2a e0       	ldi	r18, 0x0A	; 10
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	25 c0       	rjmp	.+74     	; 0x3c0 <vfprintf+0x2ca>
 376:	51 2f       	mov	r21, r17
 378:	59 7f       	andi	r21, 0xF9	; 249
 37a:	a5 2e       	mov	r10, r21
 37c:	8f 36       	cpi	r24, 0x6F	; 111
 37e:	c1 f0       	breq	.+48     	; 0x3b0 <vfprintf+0x2ba>
 380:	18 f4       	brcc	.+6      	; 0x388 <vfprintf+0x292>
 382:	88 35       	cpi	r24, 0x58	; 88
 384:	79 f0       	breq	.+30     	; 0x3a4 <vfprintf+0x2ae>
 386:	bd c0       	rjmp	.+378    	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
 388:	80 37       	cpi	r24, 0x70	; 112
 38a:	19 f0       	breq	.+6      	; 0x392 <vfprintf+0x29c>
 38c:	88 37       	cpi	r24, 0x78	; 120
 38e:	21 f0       	breq	.+8      	; 0x398 <vfprintf+0x2a2>
 390:	b8 c0       	rjmp	.+368    	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
 392:	85 2f       	mov	r24, r21
 394:	80 61       	ori	r24, 0x10	; 16
 396:	a8 2e       	mov	r10, r24
 398:	a4 fe       	sbrs	r10, 4
 39a:	0d c0       	rjmp	.+26     	; 0x3b6 <vfprintf+0x2c0>
 39c:	9a 2d       	mov	r25, r10
 39e:	94 60       	ori	r25, 0x04	; 4
 3a0:	a9 2e       	mov	r10, r25
 3a2:	09 c0       	rjmp	.+18     	; 0x3b6 <vfprintf+0x2c0>
 3a4:	14 ff       	sbrs	r17, 4
 3a6:	0a c0       	rjmp	.+20     	; 0x3bc <vfprintf+0x2c6>
 3a8:	a5 2f       	mov	r26, r21
 3aa:	a6 60       	ori	r26, 0x06	; 6
 3ac:	aa 2e       	mov	r10, r26
 3ae:	06 c0       	rjmp	.+12     	; 0x3bc <vfprintf+0x2c6>
 3b0:	28 e0       	ldi	r18, 0x08	; 8
 3b2:	30 e0       	ldi	r19, 0x00	; 0
 3b4:	05 c0       	rjmp	.+10     	; 0x3c0 <vfprintf+0x2ca>
 3b6:	20 e1       	ldi	r18, 0x10	; 16
 3b8:	30 e0       	ldi	r19, 0x00	; 0
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <vfprintf+0x2ca>
 3bc:	20 e1       	ldi	r18, 0x10	; 16
 3be:	32 e0       	ldi	r19, 0x02	; 2
 3c0:	f7 01       	movw	r30, r14
 3c2:	a7 fe       	sbrs	r10, 7
 3c4:	08 c0       	rjmp	.+16     	; 0x3d6 <vfprintf+0x2e0>
 3c6:	60 81       	ld	r22, Z
 3c8:	71 81       	ldd	r23, Z+1	; 0x01
 3ca:	82 81       	ldd	r24, Z+2	; 0x02
 3cc:	93 81       	ldd	r25, Z+3	; 0x03
 3ce:	a7 01       	movw	r20, r14
 3d0:	4c 5f       	subi	r20, 0xFC	; 252
 3d2:	5f 4f       	sbci	r21, 0xFF	; 255
 3d4:	07 c0       	rjmp	.+14     	; 0x3e4 <vfprintf+0x2ee>
 3d6:	60 81       	ld	r22, Z
 3d8:	71 81       	ldd	r23, Z+1	; 0x01
 3da:	80 e0       	ldi	r24, 0x00	; 0
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	a7 01       	movw	r20, r14
 3e0:	4e 5f       	subi	r20, 0xFE	; 254
 3e2:	5f 4f       	sbci	r21, 0xFF	; 255
 3e4:	7a 01       	movw	r14, r20
 3e6:	ae 01       	movw	r20, r28
 3e8:	4f 5f       	subi	r20, 0xFF	; 255
 3ea:	5f 4f       	sbci	r21, 0xFF	; 255
 3ec:	0e 94 c0 03 	call	0x780	; 0x780 <__ultoa_invert>
 3f0:	48 2e       	mov	r4, r24
 3f2:	5c 85       	ldd	r21, Y+12	; 0x0c
 3f4:	45 1a       	sub	r4, r21
 3f6:	8a 2d       	mov	r24, r10
 3f8:	8f 77       	andi	r24, 0x7F	; 127
 3fa:	38 2e       	mov	r3, r24
 3fc:	36 fe       	sbrs	r3, 6
 3fe:	0d c0       	rjmp	.+26     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 400:	93 2d       	mov	r25, r3
 402:	9e 7f       	andi	r25, 0xFE	; 254
 404:	a9 2e       	mov	r10, r25
 406:	4b 14       	cp	r4, r11
 408:	58 f4       	brcc	.+22     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 40a:	34 fe       	sbrs	r3, 4
 40c:	0b c0       	rjmp	.+22     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 40e:	32 fc       	sbrc	r3, 2
 410:	09 c0       	rjmp	.+18     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 412:	a3 2d       	mov	r26, r3
 414:	ae 7e       	andi	r26, 0xEE	; 238
 416:	aa 2e       	mov	r10, r26
 418:	05 c0       	rjmp	.+10     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 41a:	14 2d       	mov	r17, r4
 41c:	a3 2c       	mov	r10, r3
 41e:	03 c0       	rjmp	.+6      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 420:	14 2d       	mov	r17, r4
 422:	01 c0       	rjmp	.+2      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 424:	1b 2d       	mov	r17, r11
 426:	a4 fe       	sbrs	r10, 4
 428:	0e c0       	rjmp	.+28     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 42a:	fe 01       	movw	r30, r28
 42c:	e4 0d       	add	r30, r4
 42e:	f1 1d       	adc	r31, r1
 430:	80 81       	ld	r24, Z
 432:	80 33       	cpi	r24, 0x30	; 48
 434:	21 f4       	brne	.+8      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 436:	ea 2d       	mov	r30, r10
 438:	e9 7e       	andi	r30, 0xE9	; 233
 43a:	ae 2e       	mov	r10, r30
 43c:	08 c0       	rjmp	.+16     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 43e:	a2 fe       	sbrs	r10, 2
 440:	05 c0       	rjmp	.+10     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 442:	1e 5f       	subi	r17, 0xFE	; 254
 444:	04 c0       	rjmp	.+8      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 446:	8a 2d       	mov	r24, r10
 448:	86 78       	andi	r24, 0x86	; 134
 44a:	09 f0       	breq	.+2      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 44c:	1f 5f       	subi	r17, 0xFF	; 255
 44e:	a3 fc       	sbrc	r10, 3
 450:	11 c0       	rjmp	.+34     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 452:	a0 fe       	sbrs	r10, 0
 454:	06 c0       	rjmp	.+12     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 456:	10 17       	cp	r17, r16
 458:	88 f4       	brcc	.+34     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 45a:	04 0d       	add	r16, r4
 45c:	b0 2e       	mov	r11, r16
 45e:	b1 1a       	sub	r11, r17
 460:	0e c0       	rjmp	.+28     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 462:	10 17       	cp	r17, r16
 464:	60 f4       	brcc	.+24     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 466:	b6 01       	movw	r22, r12
 468:	80 e2       	ldi	r24, 0x20	; 32
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <fputc>
 470:	1f 5f       	subi	r17, 0xFF	; 255
 472:	f7 cf       	rjmp	.-18     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 474:	10 17       	cp	r17, r16
 476:	18 f4       	brcc	.+6      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 478:	01 1b       	sub	r16, r17
 47a:	02 c0       	rjmp	.+4      	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 47c:	b4 2c       	mov	r11, r4
 47e:	00 e0       	ldi	r16, 0x00	; 0
 480:	a4 fe       	sbrs	r10, 4
 482:	10 c0       	rjmp	.+32     	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 484:	b6 01       	movw	r22, r12
 486:	80 e3       	ldi	r24, 0x30	; 48
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <fputc>
 48e:	a2 fe       	sbrs	r10, 2
 490:	17 c0       	rjmp	.+46     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 492:	a1 fc       	sbrc	r10, 1
 494:	03 c0       	rjmp	.+6      	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 496:	88 e7       	ldi	r24, 0x78	; 120
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 49c:	88 e5       	ldi	r24, 0x58	; 88
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	b6 01       	movw	r22, r12
 4a2:	0c c0       	rjmp	.+24     	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
 4a4:	8a 2d       	mov	r24, r10
 4a6:	86 78       	andi	r24, 0x86	; 134
 4a8:	59 f0       	breq	.+22     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 4aa:	a1 fe       	sbrs	r10, 1
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
 4ae:	8b e2       	ldi	r24, 0x2B	; 43
 4b0:	01 c0       	rjmp	.+2      	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
 4b2:	80 e2       	ldi	r24, 0x20	; 32
 4b4:	a7 fc       	sbrc	r10, 7
 4b6:	8d e2       	ldi	r24, 0x2D	; 45
 4b8:	b6 01       	movw	r22, r12
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <fputc>
 4c0:	4b 14       	cp	r4, r11
 4c2:	38 f4       	brcc	.+14     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4c4:	b6 01       	movw	r22, r12
 4c6:	80 e3       	ldi	r24, 0x30	; 48
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <fputc>
 4ce:	ba 94       	dec	r11
 4d0:	f7 cf       	rjmp	.-18     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 4d2:	4a 94       	dec	r4
 4d4:	e1 e0       	ldi	r30, 0x01	; 1
 4d6:	f0 e0       	ldi	r31, 0x00	; 0
 4d8:	ec 0f       	add	r30, r28
 4da:	fd 1f       	adc	r31, r29
 4dc:	e4 0d       	add	r30, r4
 4de:	f1 1d       	adc	r31, r1
 4e0:	80 81       	ld	r24, Z
 4e2:	b6 01       	movw	r22, r12
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <fputc>
 4ea:	41 10       	cpse	r4, r1
 4ec:	f2 cf       	rjmp	.-28     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4ee:	00 23       	and	r16, r16
 4f0:	09 f4       	brne	.+2      	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 4f2:	30 ce       	rjmp	.-928    	; 0x154 <vfprintf+0x5e>
 4f4:	b6 01       	movw	r22, r12
 4f6:	80 e2       	ldi	r24, 0x20	; 32
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <fputc>
 4fe:	01 50       	subi	r16, 0x01	; 1
 500:	f6 cf       	rjmp	.-20     	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 502:	f6 01       	movw	r30, r12
 504:	87 81       	ldd	r24, Z+7	; 0x07
 506:	90 85       	ldd	r25, Z+8	; 0x08
 508:	02 c0       	rjmp	.+4      	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 50a:	8f ef       	ldi	r24, 0xFF	; 255
 50c:	9f ef       	ldi	r25, 0xFF	; 255
 50e:	62 96       	adiw	r28, 0x12	; 18
 510:	0f b6       	in	r0, 0x3f	; 63
 512:	f8 94       	cli
 514:	de bf       	out	0x3e, r29	; 62
 516:	0f be       	out	0x3f, r0	; 63
 518:	cd bf       	out	0x3d, r28	; 61
 51a:	df 91       	pop	r29
 51c:	cf 91       	pop	r28
 51e:	1f 91       	pop	r17
 520:	0f 91       	pop	r16
 522:	ff 90       	pop	r15
 524:	ef 90       	pop	r14
 526:	df 90       	pop	r13
 528:	cf 90       	pop	r12
 52a:	bf 90       	pop	r11
 52c:	af 90       	pop	r10
 52e:	9f 90       	pop	r9
 530:	8f 90       	pop	r8
 532:	7f 90       	pop	r7
 534:	6f 90       	pop	r6
 536:	4f 90       	pop	r4
 538:	3f 90       	pop	r3
 53a:	2f 90       	pop	r2
 53c:	08 95       	ret

Disassembly of section .text.avrlibc:

00000a90 <calloc>:
 a90:	0f 93       	push	r16
 a92:	1f 93       	push	r17
 a94:	cf 93       	push	r28
 a96:	df 93       	push	r29
 a98:	86 9f       	mul	r24, r22
 a9a:	80 01       	movw	r16, r0
 a9c:	87 9f       	mul	r24, r23
 a9e:	10 0d       	add	r17, r0
 aa0:	96 9f       	mul	r25, r22
 aa2:	10 0d       	add	r17, r0
 aa4:	11 24       	eor	r1, r1
 aa6:	c8 01       	movw	r24, r16
 aa8:	0e 94 9f 02 	call	0x53e	; 0x53e <malloc>
 aac:	ec 01       	movw	r28, r24
 aae:	00 97       	sbiw	r24, 0x00	; 0
 ab0:	29 f0       	breq	.+10     	; 0xabc <calloc+0x2c>
 ab2:	a8 01       	movw	r20, r16
 ab4:	60 e0       	ldi	r22, 0x00	; 0
 ab6:	70 e0       	ldi	r23, 0x00	; 0
 ab8:	0e 94 11 06 	call	0xc22	; 0xc22 <memset>
 abc:	ce 01       	movw	r24, r28
 abe:	df 91       	pop	r29
 ac0:	cf 91       	pop	r28
 ac2:	1f 91       	pop	r17
 ac4:	0f 91       	pop	r16
 ac6:	08 95       	ret

Disassembly of section .text.avrlibc:

0000053e <malloc>:
 53e:	0f 93       	push	r16
 540:	1f 93       	push	r17
 542:	cf 93       	push	r28
 544:	df 93       	push	r29
 546:	82 30       	cpi	r24, 0x02	; 2
 548:	91 05       	cpc	r25, r1
 54a:	10 f4       	brcc	.+4      	; 0x550 <malloc+0x12>
 54c:	82 e0       	ldi	r24, 0x02	; 2
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__flp>
 554:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__flp+0x1>
 558:	20 e0       	ldi	r18, 0x00	; 0
 55a:	30 e0       	ldi	r19, 0x00	; 0
 55c:	a0 e0       	ldi	r26, 0x00	; 0
 55e:	b0 e0       	ldi	r27, 0x00	; 0
 560:	30 97       	sbiw	r30, 0x00	; 0
 562:	19 f1       	breq	.+70     	; 0x5aa <malloc+0x6c>
 564:	40 81       	ld	r20, Z
 566:	51 81       	ldd	r21, Z+1	; 0x01
 568:	02 81       	ldd	r16, Z+2	; 0x02
 56a:	13 81       	ldd	r17, Z+3	; 0x03
 56c:	48 17       	cp	r20, r24
 56e:	59 07       	cpc	r21, r25
 570:	c8 f0       	brcs	.+50     	; 0x5a4 <malloc+0x66>
 572:	84 17       	cp	r24, r20
 574:	95 07       	cpc	r25, r21
 576:	69 f4       	brne	.+26     	; 0x592 <malloc+0x54>
 578:	10 97       	sbiw	r26, 0x00	; 0
 57a:	31 f0       	breq	.+12     	; 0x588 <malloc+0x4a>
 57c:	12 96       	adiw	r26, 0x02	; 2
 57e:	0c 93       	st	X, r16
 580:	12 97       	sbiw	r26, 0x02	; 2
 582:	13 96       	adiw	r26, 0x03	; 3
 584:	1c 93       	st	X, r17
 586:	27 c0       	rjmp	.+78     	; 0x5d6 <malloc+0x98>
 588:	00 93 08 01 	sts	0x0108, r16	; 0x800108 <__flp>
 58c:	10 93 09 01 	sts	0x0109, r17	; 0x800109 <__flp+0x1>
 590:	22 c0       	rjmp	.+68     	; 0x5d6 <malloc+0x98>
 592:	21 15       	cp	r18, r1
 594:	31 05       	cpc	r19, r1
 596:	19 f0       	breq	.+6      	; 0x59e <malloc+0x60>
 598:	42 17       	cp	r20, r18
 59a:	53 07       	cpc	r21, r19
 59c:	18 f4       	brcc	.+6      	; 0x5a4 <malloc+0x66>
 59e:	9a 01       	movw	r18, r20
 5a0:	bd 01       	movw	r22, r26
 5a2:	ef 01       	movw	r28, r30
 5a4:	df 01       	movw	r26, r30
 5a6:	f8 01       	movw	r30, r16
 5a8:	db cf       	rjmp	.-74     	; 0x560 <malloc+0x22>
 5aa:	21 15       	cp	r18, r1
 5ac:	31 05       	cpc	r19, r1
 5ae:	f9 f0       	breq	.+62     	; 0x5ee <malloc+0xb0>
 5b0:	28 1b       	sub	r18, r24
 5b2:	39 0b       	sbc	r19, r25
 5b4:	24 30       	cpi	r18, 0x04	; 4
 5b6:	31 05       	cpc	r19, r1
 5b8:	80 f4       	brcc	.+32     	; 0x5da <malloc+0x9c>
 5ba:	8a 81       	ldd	r24, Y+2	; 0x02
 5bc:	9b 81       	ldd	r25, Y+3	; 0x03
 5be:	61 15       	cp	r22, r1
 5c0:	71 05       	cpc	r23, r1
 5c2:	21 f0       	breq	.+8      	; 0x5cc <malloc+0x8e>
 5c4:	fb 01       	movw	r30, r22
 5c6:	93 83       	std	Z+3, r25	; 0x03
 5c8:	82 83       	std	Z+2, r24	; 0x02
 5ca:	04 c0       	rjmp	.+8      	; 0x5d4 <malloc+0x96>
 5cc:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__flp+0x1>
 5d0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__flp>
 5d4:	fe 01       	movw	r30, r28
 5d6:	32 96       	adiw	r30, 0x02	; 2
 5d8:	44 c0       	rjmp	.+136    	; 0x662 <malloc+0x124>
 5da:	fe 01       	movw	r30, r28
 5dc:	e2 0f       	add	r30, r18
 5de:	f3 1f       	adc	r31, r19
 5e0:	81 93       	st	Z+, r24
 5e2:	91 93       	st	Z+, r25
 5e4:	22 50       	subi	r18, 0x02	; 2
 5e6:	31 09       	sbc	r19, r1
 5e8:	39 83       	std	Y+1, r19	; 0x01
 5ea:	28 83       	st	Y, r18
 5ec:	3a c0       	rjmp	.+116    	; 0x662 <malloc+0x124>
 5ee:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__brkval>
 5f2:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__brkval+0x1>
 5f6:	23 2b       	or	r18, r19
 5f8:	41 f4       	brne	.+16     	; 0x60a <malloc+0xcc>
 5fa:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__malloc_heap_start>
 5fe:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__malloc_heap_start+0x1>
 602:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <__brkval+0x1>
 606:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <__brkval>
 60a:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <_end>
 60e:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <_end+0x1>
 612:	21 15       	cp	r18, r1
 614:	31 05       	cpc	r19, r1
 616:	41 f4       	brne	.+16     	; 0x628 <malloc+0xea>
 618:	2d b7       	in	r18, 0x3d	; 61
 61a:	3e b7       	in	r19, 0x3e	; 62
 61c:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <__malloc_margin>
 620:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <__malloc_margin+0x1>
 624:	24 1b       	sub	r18, r20
 626:	35 0b       	sbc	r19, r21
 628:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <__brkval>
 62c:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <__brkval+0x1>
 630:	e2 17       	cp	r30, r18
 632:	f3 07       	cpc	r31, r19
 634:	a0 f4       	brcc	.+40     	; 0x65e <malloc+0x120>
 636:	2e 1b       	sub	r18, r30
 638:	3f 0b       	sbc	r19, r31
 63a:	28 17       	cp	r18, r24
 63c:	39 07       	cpc	r19, r25
 63e:	78 f0       	brcs	.+30     	; 0x65e <malloc+0x120>
 640:	ac 01       	movw	r20, r24
 642:	4e 5f       	subi	r20, 0xFE	; 254
 644:	5f 4f       	sbci	r21, 0xFF	; 255
 646:	24 17       	cp	r18, r20
 648:	35 07       	cpc	r19, r21
 64a:	48 f0       	brcs	.+18     	; 0x65e <malloc+0x120>
 64c:	4e 0f       	add	r20, r30
 64e:	5f 1f       	adc	r21, r31
 650:	50 93 07 01 	sts	0x0107, r21	; 0x800107 <__brkval+0x1>
 654:	40 93 06 01 	sts	0x0106, r20	; 0x800106 <__brkval>
 658:	81 93       	st	Z+, r24
 65a:	91 93       	st	Z+, r25
 65c:	02 c0       	rjmp	.+4      	; 0x662 <malloc+0x124>
 65e:	e0 e0       	ldi	r30, 0x00	; 0
 660:	f0 e0       	ldi	r31, 0x00	; 0
 662:	cf 01       	movw	r24, r30
 664:	df 91       	pop	r29
 666:	cf 91       	pop	r28
 668:	1f 91       	pop	r17
 66a:	0f 91       	pop	r16
 66c:	08 95       	ret

0000066e <free>:
 66e:	cf 93       	push	r28
 670:	df 93       	push	r29
 672:	00 97       	sbiw	r24, 0x00	; 0
 674:	09 f4       	brne	.+2      	; 0x678 <free+0xa>
 676:	81 c0       	rjmp	.+258    	; 0x77a <free+0x10c>
 678:	fc 01       	movw	r30, r24
 67a:	32 97       	sbiw	r30, 0x02	; 2
 67c:	13 82       	std	Z+3, r1	; 0x03
 67e:	12 82       	std	Z+2, r1	; 0x02
 680:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <__flp>
 684:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <__flp+0x1>
 688:	10 97       	sbiw	r26, 0x00	; 0
 68a:	81 f4       	brne	.+32     	; 0x6ac <free+0x3e>
 68c:	20 81       	ld	r18, Z
 68e:	31 81       	ldd	r19, Z+1	; 0x01
 690:	82 0f       	add	r24, r18
 692:	93 1f       	adc	r25, r19
 694:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__brkval>
 698:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__brkval+0x1>
 69c:	28 17       	cp	r18, r24
 69e:	39 07       	cpc	r19, r25
 6a0:	51 f5       	brne	.+84     	; 0x6f6 <free+0x88>
 6a2:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <__brkval+0x1>
 6a6:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <__brkval>
 6aa:	67 c0       	rjmp	.+206    	; 0x77a <free+0x10c>
 6ac:	ed 01       	movw	r28, r26
 6ae:	20 e0       	ldi	r18, 0x00	; 0
 6b0:	30 e0       	ldi	r19, 0x00	; 0
 6b2:	ce 17       	cp	r28, r30
 6b4:	df 07       	cpc	r29, r31
 6b6:	40 f4       	brcc	.+16     	; 0x6c8 <free+0x5a>
 6b8:	4a 81       	ldd	r20, Y+2	; 0x02
 6ba:	5b 81       	ldd	r21, Y+3	; 0x03
 6bc:	9e 01       	movw	r18, r28
 6be:	41 15       	cp	r20, r1
 6c0:	51 05       	cpc	r21, r1
 6c2:	f1 f0       	breq	.+60     	; 0x700 <free+0x92>
 6c4:	ea 01       	movw	r28, r20
 6c6:	f5 cf       	rjmp	.-22     	; 0x6b2 <free+0x44>
 6c8:	d3 83       	std	Z+3, r29	; 0x03
 6ca:	c2 83       	std	Z+2, r28	; 0x02
 6cc:	40 81       	ld	r20, Z
 6ce:	51 81       	ldd	r21, Z+1	; 0x01
 6d0:	84 0f       	add	r24, r20
 6d2:	95 1f       	adc	r25, r21
 6d4:	c8 17       	cp	r28, r24
 6d6:	d9 07       	cpc	r29, r25
 6d8:	59 f4       	brne	.+22     	; 0x6f0 <free+0x82>
 6da:	88 81       	ld	r24, Y
 6dc:	99 81       	ldd	r25, Y+1	; 0x01
 6de:	84 0f       	add	r24, r20
 6e0:	95 1f       	adc	r25, r21
 6e2:	02 96       	adiw	r24, 0x02	; 2
 6e4:	91 83       	std	Z+1, r25	; 0x01
 6e6:	80 83       	st	Z, r24
 6e8:	8a 81       	ldd	r24, Y+2	; 0x02
 6ea:	9b 81       	ldd	r25, Y+3	; 0x03
 6ec:	93 83       	std	Z+3, r25	; 0x03
 6ee:	82 83       	std	Z+2, r24	; 0x02
 6f0:	21 15       	cp	r18, r1
 6f2:	31 05       	cpc	r19, r1
 6f4:	29 f4       	brne	.+10     	; 0x700 <free+0x92>
 6f6:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__flp+0x1>
 6fa:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__flp>
 6fe:	3d c0       	rjmp	.+122    	; 0x77a <free+0x10c>
 700:	e9 01       	movw	r28, r18
 702:	fb 83       	std	Y+3, r31	; 0x03
 704:	ea 83       	std	Y+2, r30	; 0x02
 706:	49 91       	ld	r20, Y+
 708:	59 91       	ld	r21, Y+
 70a:	c4 0f       	add	r28, r20
 70c:	d5 1f       	adc	r29, r21
 70e:	ec 17       	cp	r30, r28
 710:	fd 07       	cpc	r31, r29
 712:	61 f4       	brne	.+24     	; 0x72c <free+0xbe>
 714:	80 81       	ld	r24, Z
 716:	91 81       	ldd	r25, Z+1	; 0x01
 718:	84 0f       	add	r24, r20
 71a:	95 1f       	adc	r25, r21
 71c:	02 96       	adiw	r24, 0x02	; 2
 71e:	e9 01       	movw	r28, r18
 720:	99 83       	std	Y+1, r25	; 0x01
 722:	88 83       	st	Y, r24
 724:	82 81       	ldd	r24, Z+2	; 0x02
 726:	93 81       	ldd	r25, Z+3	; 0x03
 728:	9b 83       	std	Y+3, r25	; 0x03
 72a:	8a 83       	std	Y+2, r24	; 0x02
 72c:	e0 e0       	ldi	r30, 0x00	; 0
 72e:	f0 e0       	ldi	r31, 0x00	; 0
 730:	12 96       	adiw	r26, 0x02	; 2
 732:	8d 91       	ld	r24, X+
 734:	9c 91       	ld	r25, X
 736:	13 97       	sbiw	r26, 0x03	; 3
 738:	00 97       	sbiw	r24, 0x00	; 0
 73a:	19 f0       	breq	.+6      	; 0x742 <free+0xd4>
 73c:	fd 01       	movw	r30, r26
 73e:	dc 01       	movw	r26, r24
 740:	f7 cf       	rjmp	.-18     	; 0x730 <free+0xc2>
 742:	8d 91       	ld	r24, X+
 744:	9c 91       	ld	r25, X
 746:	11 97       	sbiw	r26, 0x01	; 1
 748:	9d 01       	movw	r18, r26
 74a:	2e 5f       	subi	r18, 0xFE	; 254
 74c:	3f 4f       	sbci	r19, 0xFF	; 255
 74e:	82 0f       	add	r24, r18
 750:	93 1f       	adc	r25, r19
 752:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__brkval>
 756:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__brkval+0x1>
 75a:	28 17       	cp	r18, r24
 75c:	39 07       	cpc	r19, r25
 75e:	69 f4       	brne	.+26     	; 0x77a <free+0x10c>
 760:	30 97       	sbiw	r30, 0x00	; 0
 762:	29 f4       	brne	.+10     	; 0x76e <free+0x100>
 764:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <__flp+0x1>
 768:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__flp>
 76c:	02 c0       	rjmp	.+4      	; 0x772 <free+0x104>
 76e:	13 82       	std	Z+3, r1	; 0x03
 770:	12 82       	std	Z+2, r1	; 0x02
 772:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__brkval+0x1>
 776:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__brkval>
 77a:	df 91       	pop	r29
 77c:	cf 91       	pop	r28
 77e:	08 95       	ret

Disassembly of section .text.avrlibc:

00000b00 <strnlen>:
 b00:	cf 92       	push	r12
 b02:	df 92       	push	r13
 b04:	ef 92       	push	r14
 b06:	6b 01       	movw	r12, r22
 b08:	e8 2e       	mov	r14, r24
 b0a:	a8 2f       	mov	r26, r24
 b0c:	cb 01       	movw	r24, r22
 b0e:	41 15       	cp	r20, r1
 b10:	51 05       	cpc	r21, r1
 b12:	31 f4       	brne	.+12     	; 0xb20 <strnlen+0x20>
 b14:	8c 19       	sub	r24, r12
 b16:	9d 09       	sbc	r25, r13
 b18:	ef 90       	pop	r14
 b1a:	df 90       	pop	r13
 b1c:	cf 90       	pop	r12
 b1e:	08 95       	ret
 b20:	fc 01       	movw	r30, r24
 b22:	24 91       	lpm	r18, Z
 b24:	a7 fd       	sbrc	r26, 7
 b26:	20 81       	ld	r18, Z
 b28:	22 23       	and	r18, r18
 b2a:	a1 f3       	breq	.-24     	; 0xb14 <strnlen+0x14>
 b2c:	01 96       	adiw	r24, 0x01	; 1
 b2e:	a1 1d       	adc	r26, r1
 b30:	41 50       	subi	r20, 0x01	; 1
 b32:	51 09       	sbc	r21, r1
 b34:	ec cf       	rjmp	.-40     	; 0xb0e <strnlen+0xe>

Disassembly of section .text.avrlibc:

00000c22 <memset>:
 c22:	dc 01       	movw	r26, r24
 c24:	01 c0       	rjmp	.+2      	; 0xc28 <memset+0x6>
 c26:	6d 93       	st	X+, r22
 c28:	41 50       	subi	r20, 0x01	; 1
 c2a:	50 40       	sbci	r21, 0x00	; 0
 c2c:	e0 f7       	brcc	.-8      	; 0xc26 <memset+0x4>
 c2e:	08 95       	ret

Disassembly of section .text.avrlibc:

000008d4 <fputc>:
 8d4:	0f 93       	push	r16
 8d6:	1f 93       	push	r17
 8d8:	cf 93       	push	r28
 8da:	df 93       	push	r29
 8dc:	fb 01       	movw	r30, r22
 8de:	24 81       	ldd	r18, Z+4	; 0x04
 8e0:	21 fd       	sbrc	r18, 1
 8e2:	03 c0       	rjmp	.+6      	; 0x8ea <fputc+0x16>
 8e4:	8f ef       	ldi	r24, 0xFF	; 255
 8e6:	9f ef       	ldi	r25, 0xFF	; 255
 8e8:	2c c0       	rjmp	.+88     	; 0x942 <__stack+0x43>
 8ea:	22 ff       	sbrs	r18, 2
 8ec:	16 c0       	rjmp	.+44     	; 0x91a <__stack+0x1b>
 8ee:	47 81       	ldd	r20, Z+7	; 0x07
 8f0:	50 85       	ldd	r21, Z+8	; 0x08
 8f2:	25 81       	ldd	r18, Z+5	; 0x05
 8f4:	36 81       	ldd	r19, Z+6	; 0x06
 8f6:	42 17       	cp	r20, r18
 8f8:	53 07       	cpc	r21, r19
 8fa:	44 f4       	brge	.+16     	; 0x90c <__stack+0xd>
 8fc:	a0 81       	ld	r26, Z
 8fe:	b1 81       	ldd	r27, Z+1	; 0x01
 900:	9d 01       	movw	r18, r26
 902:	2f 5f       	subi	r18, 0xFF	; 255
 904:	3f 4f       	sbci	r19, 0xFF	; 255
 906:	31 83       	std	Z+1, r19	; 0x01
 908:	20 83       	st	Z, r18
 90a:	8c 93       	st	X, r24
 90c:	27 81       	ldd	r18, Z+7	; 0x07
 90e:	30 85       	ldd	r19, Z+8	; 0x08
 910:	2f 5f       	subi	r18, 0xFF	; 255
 912:	3f 4f       	sbci	r19, 0xFF	; 255
 914:	30 87       	std	Z+8, r19	; 0x08
 916:	27 83       	std	Z+7, r18	; 0x07
 918:	14 c0       	rjmp	.+40     	; 0x942 <__stack+0x43>
 91a:	8b 01       	movw	r16, r22
 91c:	ec 01       	movw	r28, r24
 91e:	fb 01       	movw	r30, r22
 920:	01 84       	ldd	r0, Z+9	; 0x09
 922:	f2 85       	ldd	r31, Z+10	; 0x0a
 924:	e0 2d       	mov	r30, r0
 926:	09 95       	icall
 928:	89 2b       	or	r24, r25
 92a:	e1 f6       	brne	.-72     	; 0x8e4 <fputc+0x10>
 92c:	d8 01       	movw	r26, r16
 92e:	17 96       	adiw	r26, 0x07	; 7
 930:	8d 91       	ld	r24, X+
 932:	9c 91       	ld	r25, X
 934:	18 97       	sbiw	r26, 0x08	; 8
 936:	01 96       	adiw	r24, 0x01	; 1
 938:	18 96       	adiw	r26, 0x08	; 8
 93a:	9c 93       	st	X, r25
 93c:	8e 93       	st	-X, r24
 93e:	17 97       	sbiw	r26, 0x07	; 7
 940:	ce 01       	movw	r24, r28
 942:	df 91       	pop	r29
 944:	cf 91       	pop	r28
 946:	1f 91       	pop	r17
 948:	0f 91       	pop	r16
 94a:	08 95       	ret

Disassembly of section .text.avrlibc:

00000780 <__ultoa_invert>:
 780:	fa 01       	movw	r30, r20
 782:	aa 27       	eor	r26, r26
 784:	28 30       	cpi	r18, 0x08	; 8
 786:	51 f1       	breq	.+84     	; 0x7dc <__ultoa_invert+0x5c>
 788:	20 31       	cpi	r18, 0x10	; 16
 78a:	81 f1       	breq	.+96     	; 0x7ec <__ultoa_invert+0x6c>
 78c:	e8 94       	clt
 78e:	6f 93       	push	r22
 790:	6e 7f       	andi	r22, 0xFE	; 254
 792:	6e 5f       	subi	r22, 0xFE	; 254
 794:	7f 4f       	sbci	r23, 0xFF	; 255
 796:	8f 4f       	sbci	r24, 0xFF	; 255
 798:	9f 4f       	sbci	r25, 0xFF	; 255
 79a:	af 4f       	sbci	r26, 0xFF	; 255
 79c:	b1 e0       	ldi	r27, 0x01	; 1
 79e:	3e d0       	rcall	.+124    	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 7a0:	b4 e0       	ldi	r27, 0x04	; 4
 7a2:	3c d0       	rcall	.+120    	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 7a4:	67 0f       	add	r22, r23
 7a6:	78 1f       	adc	r23, r24
 7a8:	89 1f       	adc	r24, r25
 7aa:	9a 1f       	adc	r25, r26
 7ac:	a1 1d       	adc	r26, r1
 7ae:	68 0f       	add	r22, r24
 7b0:	79 1f       	adc	r23, r25
 7b2:	8a 1f       	adc	r24, r26
 7b4:	91 1d       	adc	r25, r1
 7b6:	a1 1d       	adc	r26, r1
 7b8:	6a 0f       	add	r22, r26
 7ba:	71 1d       	adc	r23, r1
 7bc:	81 1d       	adc	r24, r1
 7be:	91 1d       	adc	r25, r1
 7c0:	a1 1d       	adc	r26, r1
 7c2:	20 d0       	rcall	.+64     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7c4:	09 f4       	brne	.+2      	; 0x7c8 <__ultoa_invert+0x48>
 7c6:	68 94       	set
 7c8:	3f 91       	pop	r19
 7ca:	2a e0       	ldi	r18, 0x0A	; 10
 7cc:	26 9f       	mul	r18, r22
 7ce:	11 24       	eor	r1, r1
 7d0:	30 19       	sub	r19, r0
 7d2:	30 5d       	subi	r19, 0xD0	; 208
 7d4:	31 93       	st	Z+, r19
 7d6:	de f6       	brtc	.-74     	; 0x78e <__ultoa_invert+0xe>
 7d8:	cf 01       	movw	r24, r30
 7da:	08 95       	ret
 7dc:	46 2f       	mov	r20, r22
 7de:	47 70       	andi	r20, 0x07	; 7
 7e0:	40 5d       	subi	r20, 0xD0	; 208
 7e2:	41 93       	st	Z+, r20
 7e4:	b3 e0       	ldi	r27, 0x03	; 3
 7e6:	0f d0       	rcall	.+30     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7e8:	c9 f7       	brne	.-14     	; 0x7dc <__ultoa_invert+0x5c>
 7ea:	f6 cf       	rjmp	.-20     	; 0x7d8 <__ultoa_invert+0x58>
 7ec:	46 2f       	mov	r20, r22
 7ee:	4f 70       	andi	r20, 0x0F	; 15
 7f0:	40 5d       	subi	r20, 0xD0	; 208
 7f2:	4a 33       	cpi	r20, 0x3A	; 58
 7f4:	18 f0       	brcs	.+6      	; 0x7fc <__ultoa_invert+0x7c>
 7f6:	49 5d       	subi	r20, 0xD9	; 217
 7f8:	31 fd       	sbrc	r19, 1
 7fa:	40 52       	subi	r20, 0x20	; 32
 7fc:	41 93       	st	Z+, r20
 7fe:	02 d0       	rcall	.+4      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 800:	a9 f7       	brne	.-22     	; 0x7ec <__ultoa_invert+0x6c>
 802:	ea cf       	rjmp	.-44     	; 0x7d8 <__ultoa_invert+0x58>
 804:	b4 e0       	ldi	r27, 0x04	; 4
 806:	a6 95       	lsr	r26
 808:	97 95       	ror	r25
 80a:	87 95       	ror	r24
 80c:	77 95       	ror	r23
 80e:	67 95       	ror	r22
 810:	ba 95       	dec	r27
 812:	c9 f7       	brne	.-14     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 814:	00 97       	sbiw	r24, 0x00	; 0
 816:	61 05       	cpc	r22, r1
 818:	71 05       	cpc	r23, r1
 81a:	08 95       	ret
 81c:	9b 01       	movw	r18, r22
 81e:	ac 01       	movw	r20, r24
 820:	0a 2e       	mov	r0, r26
 822:	06 94       	lsr	r0
 824:	57 95       	ror	r21
 826:	47 95       	ror	r20
 828:	37 95       	ror	r19
 82a:	27 95       	ror	r18
 82c:	ba 95       	dec	r27
 82e:	c9 f7       	brne	.-14     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 830:	62 0f       	add	r22, r18
 832:	73 1f       	adc	r23, r19
 834:	84 1f       	adc	r24, r20
 836:	95 1f       	adc	r25, r21
 838:	a0 1d       	adc	r26, r0
 83a:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

00000ac8 <__prologue_saves__>:
 ac8:	2f 92       	push	r2
 aca:	3f 92       	push	r3
 acc:	4f 92       	push	r4
 ace:	5f 92       	push	r5
 ad0:	6f 92       	push	r6
 ad2:	7f 92       	push	r7
 ad4:	8f 92       	push	r8
 ad6:	9f 92       	push	r9
 ad8:	af 92       	push	r10
 ada:	bf 92       	push	r11
 adc:	cf 92       	push	r12
 ade:	df 92       	push	r13
 ae0:	ef 92       	push	r14
 ae2:	ff 92       	push	r15
 ae4:	0f 93       	push	r16
 ae6:	1f 93       	push	r17
 ae8:	cf 93       	push	r28
 aea:	df 93       	push	r29
 aec:	cd b7       	in	r28, 0x3d	; 61
 aee:	de b7       	in	r29, 0x3e	; 62
 af0:	ca 1b       	sub	r28, r26
 af2:	db 0b       	sbc	r29, r27
 af4:	0f b6       	in	r0, 0x3f	; 63
 af6:	f8 94       	cli
 af8:	de bf       	out	0x3e, r29	; 62
 afa:	0f be       	out	0x3f, r0	; 63
 afc:	cd bf       	out	0x3d, r28	; 61
 afe:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00000b36 <__epilogue_restores__>:
 b36:	2a 88       	ldd	r2, Y+18	; 0x12
 b38:	39 88       	ldd	r3, Y+17	; 0x11
 b3a:	48 88       	ldd	r4, Y+16	; 0x10
 b3c:	5f 84       	ldd	r5, Y+15	; 0x0f
 b3e:	6e 84       	ldd	r6, Y+14	; 0x0e
 b40:	7d 84       	ldd	r7, Y+13	; 0x0d
 b42:	8c 84       	ldd	r8, Y+12	; 0x0c
 b44:	9b 84       	ldd	r9, Y+11	; 0x0b
 b46:	aa 84       	ldd	r10, Y+10	; 0x0a
 b48:	b9 84       	ldd	r11, Y+9	; 0x09
 b4a:	c8 84       	ldd	r12, Y+8	; 0x08
 b4c:	df 80       	ldd	r13, Y+7	; 0x07
 b4e:	ee 80       	ldd	r14, Y+6	; 0x06
 b50:	fd 80       	ldd	r15, Y+5	; 0x05
 b52:	0c 81       	ldd	r16, Y+4	; 0x04
 b54:	1b 81       	ldd	r17, Y+3	; 0x03
 b56:	aa 81       	ldd	r26, Y+2	; 0x02
 b58:	b9 81       	ldd	r27, Y+1	; 0x01
 b5a:	ce 0f       	add	r28, r30
 b5c:	d1 1d       	adc	r29, r1
 b5e:	0f b6       	in	r0, 0x3f	; 63
 b60:	f8 94       	cli
 b62:	de bf       	out	0x3e, r29	; 62
 b64:	0f be       	out	0x3f, r0	; 63
 b66:	cd bf       	out	0x3d, r28	; 61
 b68:	ed 01       	movw	r28, r26
 b6a:	08 95       	ret
